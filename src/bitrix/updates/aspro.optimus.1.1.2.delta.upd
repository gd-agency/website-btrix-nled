BITRIX42   9639|/aspro.optimus/functions.php|56aec0fa<?
CModule::IncludeModule("main");
CModule::IncludeModule("iblock");

set_time_limit(0);

if(!function_exists("ClearAllSitesCacheComponents")){
	function ClearAllSitesCacheComponents($arComponentsNames){
		if($arComponentsNames && is_array($arComponentsNames)){
			global $CACHE_MANAGER;
			$arSites = array();
			$rsSites = CSite::GetList($by = "sort", $order = "desc", array("ACTIVE" => "Y"));
			while($arSite = $rsSites->Fetch()){
			  $arSites[] = $arSite;
			}
			foreach($arComponentsNames as $componentName){
				foreach($arSites as $arSite){
					CBitrixComponent::clearComponentCache($componentName, $arSite["ID"]);
				}
			}
		}
	}
}

if(!function_exists("ClearAllSitesCacheDirs")){
	function ClearAllSitesCacheDirs($arDirs){
		if($arDirs && is_array($arDirs)){
			foreach($arDirs as $dir){
				$obCache = new CPHPCache();
				$obCache->CleanDir("", $dir);
			}
		}
	}
}

if(!function_exists("GetIBlocks")){
	function GetIBlocks(){
		$arRes = array();
		$dbRes = CIBlock::GetList(array(), array("ACTIVE" => "Y"));
		while($item = $dbRes->Fetch()){
			$arRes[$item["LID"]][$item["IBLOCK_TYPE_ID"]][$item["CODE"]][] = $item["ID"];
		}
		return $arRes;
	}
}

if(!function_exists("GetSites")){
	function GetSites(){
		$arRes = array();
		$dbRes = CSite::GetList($by="sort", $order="desc", array("ACTIVE" => "Y"));
		while($item = $dbRes->Fetch()){
			$arRes[$item["LID"]] = $item;
		}
		return $arRes;
	}
}

if(!function_exists("GetCurVersion")){
	function GetCurVersion($versionFile){
		$ver = false;
		if(file_exists($versionFile)){
			$arModuleVersion = array();
			include($versionFile);
			$ver = trim($arModuleVersion["VERSION"]);
		}
		return $ver;
	}
}

if(!function_exists("CreateBakFile")){
	function CreateBakFile($file, $curVersion = CURRENT_VERSION){
		$file = trim($file);
		if(file_exists($file)){
			$arPath = pathinfo($file);
			$backFile = $arPath['dirname'].'/_'.$arPath['basename'].'.back'.$curVersion;
			if(!file_exists($backFile)){
				@copy($file, $backFile);
			}
		}
	}
}

if(!function_exists("RemoveFileFromModuleWizard")){
	function RemoveFileFromModuleWizard($file){
		@unlink($_SERVER['DOCUMENT_ROOT'].'/bitrix/modules/'.MODULE_NAME.'/install/wizards/'.PARTNER_NAME.'/'.MODULE_NAME_SHORT.$file);
		@unlink($_SERVER['DOCUMENT_ROOT'].'/bitrix/wizards/'.PARTNER_NAME.'/'.MODULE_NAME_SHORT.$file);
	}
}

if(!function_exists("RemoveFileFromTemplate")){
	function RemoveFileFromTemplate($file, $bModule = true){
		@unlink($_SERVER['DOCUMENT_ROOT'].TEMPLATE_PATH.$file);
		if($bModule){
			RemoveFileFromModuleWizard('/site/templates/'.TEMPLATE_NAME.$file);
		}
	}
}

if(!function_exists('SearchFilesInPublicRecursive')){
	function SearchFilesInPublicRecursive($dir, $pattern, $flags = 0){
		$arDirExclude = array('bitrix', 'upload');
		$pattern = str_replace('//', '/', str_replace('//', '/', $dir.'/').$pattern);
		$files = glob($pattern, $flags);
		foreach(glob(dirname($pattern).'/*', GLOB_ONLYDIR|GLOB_NOSORT) as $dir){
			if(!in_array(basename($dir), $arDirExclude)){
				$files = array_merge($files, SearchFilesInPublicRecursive($dir, basename($pattern), $flags));
			}
		}
		return $files;
	}
}

if(!function_exists('RemoveOldBakFiles')){
	function RemoveOldBakFiles(){
		$arDirs = $arFiles = array();
		$arDirExclude = array($_SERVER["DOCUMENT_ROOT"].'/bitrix', $_SERVER["DOCUMENT_ROOT"].'/upload');

		if(file_exists($_SERVER["DOCUMENT_ROOT"].'/bitrix/templates/')){
			if($arTemplates = glob($_SERVER["DOCUMENT_ROOT"].'/bitrix/templates/'.PARTNER_NAME.'*', 0)){
				foreach($arTemplates as $templatePath){
					$arDirs[] = str_replace('//', '/', $templatePath.'/');
				}
			}
		}

		if(file_exists($_SERVER["DOCUMENT_ROOT"].'/local/templates/')){
			if($arTemplates = glob($_SERVER["DOCUMENT_ROOT"].'/local/templates/'.PARTNER_NAME.'*', 0)){
				foreach($arTemplates as $templatePath){
					$arDirs[] = str_replace('//', '/', $templatePath.'/');
				}
			}
		}

		if(file_exists($_SERVER["DOCUMENT_ROOT"].'/bitrix/modules/')){
			if($arModules = glob($_SERVER["DOCUMENT_ROOT"].'/bitrix/modules/'.PARTNER_NAME.'*', 0)){
				foreach($arModules as $modulePath){
					$arDirs[] = str_replace('//', '/', $modulePath.'/');
				}
			}
		}

		/*if($arSites = GetSites()){
			foreach($arSites as $siteID => $arSite){
				$arSite['DIR'] = str_replace('//', '/', '/'.$arSite['DIR']);
				if(!strlen($arSite['DOC_ROOT'])){
					$arSite['DOC_ROOT'] = $_SERVER["DOCUMENT_ROOT"];
				}
				$arSite['DOC_ROOT'] = str_replace('//', '/', $arSite['DOC_ROOT'].'/');
				$arDirs[] = str_replace('//', '/', $arSite['DOC_ROOT'].$arSite['DIR']);
			}
		}*/

		$i = 0;

		while($arDirs && ++$i < 10000){
			$dir = array_pop($arDirs);
			$arFiles = array_merge($arFiles, (array)glob($dir.'_*.back*', GLOB_NOSORT));
			foreach((array)glob($dir.'*', GLOB_ONLYDIR|GLOB_NOSORT) as $dir){
				if(strlen($dir) && !in_array($dir, $arDirExclude) && strpos($dir, PARTNER_NAME) !== false){
					$arDirs[] = str_replace('//', '/', $dir.'/');
				}
			}
		}

		if($arFiles){
			foreach($arFiles as $file){
				if(file_exists($file) && !is_dir($file)){
					if(time() - filemtime($file) >= 1209600){ // 14 days
						@unlink($file);
					}
				}
			}
		}
	}
}

if(!function_exists("GetDBcharset")){
	function GetDBcharset(){
		$sql='SHOW VARIABLES LIKE "character_set_database";';
		if(method_exists('\Bitrix\Main\Application', 'getConnection')){
			$db=\Bitrix\Main\Application::getConnection();
			$arResult = $db->query($sql)->fetch();
			return $arResult['Value'];
		}elseif(defined("BX_USE_MYSQLI") && BX_USE_MYSQLI == true){
			if($result = @mysqli_query($sql)){
				$arResult = mysql_fetch_row($result);
				return $arResult[1];
			}
		}elseif($result = @mysql_query($sql)){
			$arResult = mysql_fetch_row($result);
			return $arResult[1];
		}
		return false;
	}
}

if(!function_exists("GetMes")){
	function GetMes($str){
		static $isUTF8;
		if($isUTF8 === NULL){
			$isUTF8 = GetDBcharset() == 'utf8';
		}
		return ($isUTF8 ? iconv('CP1251', 'UTF-8', $str) : $str);
	}
}

if(!function_exists("UpdaterLog")){
	function UpdaterLog($str){
		static $fLOG;
		if($bFirst = !$fLOG){
			$fLOG = $_SERVER['DOCUMENT_ROOT'].'/bitrix/modules/'.MODULE_NAME.'/updaterlog.txt';
		}
		if(is_array($str)){
			$str = print_r($str, 1);
		}
		@file_put_contents($fLOG, ($bFirst ? PHP_EOL : '').date("d.m.Y H:i:s", time()).' '.$str.PHP_EOL, FILE_APPEND);
	}
}

if(!function_exists("InitComposite")){
	function InitComposite($arSites){
		if(class_exists("CHTMLPagesCache")){
			if(method_exists("CHTMLPagesCache", "GetOptions")){
				if($arHTMLCacheOptions = CHTMLPagesCache::GetOptions()){
					if($arHTMLCacheOptions["COMPOSITE"] !== "Y"){
						$arDomains = array();
						if($arSites){
							foreach($arSites as $arSite){
								if(strlen($serverName = trim($arSite["SERVER_NAME"], " \t\n\r"))){
									$arDomains[$serverName] = $serverName;
								}
								if(strlen($arSite["DOMAINS"])){
									foreach(explode("\n", $arSite["DOMAINS"]) as $domain){
										if(strlen($domain = trim($domain, " \t\n\r"))){
											$arDomains[$domain] = $domain;
										}
									}
								}
							}
						}

						if(!$arDomains){
							$arDomains[$_SERVER["SERVER_NAME"]] = $_SERVER["SERVER_NAME"];
						}

						if(!$arHTMLCacheOptions["GROUPS"]){
							$arHTMLCacheOptions["GROUPS"] = array();
						}
						$rsGroups = CGroup::GetList(($by="id"), ($order="asc"), array());
						while($arGroup = $rsGroups->Fetch()){
							if($arGroup["ID"] > 2){
								if(in_array($arGroup["STRING_ID"], array("RATING_VOTE_AUTHORITY", "RATING_VOTE")) && !in_array($arGroup["ID"], $arHTMLCacheOptions["GROUPS"])){
									$arHTMLCacheOptions["GROUPS"][] = $arGroup["ID"];
								}
							}
						}

						$arHTMLCacheOptions["COMPOSITE"] = "Y";
						$arHTMLCacheOptions["DOMAINS"] = array_merge((array)$arHTMLCacheOptions["DOMAINS"], (array)$arDomains);
						CHTMLPagesCache::SetEnabled(true);
						CHTMLPagesCache::SetOptions($arHTMLCacheOptions);
						bx_accelerator_reset();
					}
				}
			}
		}
	}
}

if(!function_exists('IsCompositeEnabled')){
	function IsCompositeEnabled(){
		if(class_exists('CHTMLPagesCache')){
			if(method_exists('CHTMLPagesCache', 'GetOptions')){
				if($arHTMLCacheOptions = CHTMLPagesCache::GetOptions()){
					if(method_exists('CHTMLPagesCache', 'isOn')){
						if (CHTMLPagesCache::isOn()){
							if(isset($arHTMLCacheOptions['AUTO_COMPOSITE']) && $arHTMLCacheOptions['AUTO_COMPOSITE'] === 'Y'){
								return 'AUTO_COMPOSITE';
							}
							else{
								return 'COMPOSITE';
							}
						}
					}
					else{
						if($arHTMLCacheOptions['COMPOSITE'] === 'Y'){
							return 'COMPOSITE';
						}
					}
				}
			}
		}

		return false;
	}
}

if(!function_exists('EnableComposite')){
	function EnableComposite($auto = false){
		if(class_exists('CHTMLPagesCache')){
			if(method_exists('CHTMLPagesCache', 'GetOptions')){
				if($arHTMLCacheOptions = CHTMLPagesCache::GetOptions()){
					$arHTMLCacheOptions['COMPOSITE'] = 'Y';
					$arHTMLCacheOptions['AUTO_UPDATE'] = 'Y'; // standart mode
					$arHTMLCacheOptions['AUTO_UPDATE_TTL'] = '0'; // no ttl delay
					$arHTMLCacheOptions['AUTO_COMPOSITE'] = ($auto ? 'Y' : 'N'); // auto composite mode
					CHTMLPagesCache::SetEnabled(true);
					CHTMLPagesCache::SetOptions($arHTMLCacheOptions);
					bx_accelerator_reset();
				}
			}
		}
	}
}
?>45   5161|/aspro.optimus/updater1.1.2.php|b0d5de1b<?
// aspro.optimus 1.1.2 updater
// changed files

// module:
// /classes/general/COptimus.php - update
// /admin/options.php - update

// components:

// wizard:

// template:
// /js/main.js - update
// /js/main.min.js - update
// /components/bitrix/form.result.new/inline/template.php - update
// /components/bitrix/form.result.new/popup/template.php - update

// public:

require_once __DIR__ .'/functions.php';

define('PARTNER_NAME', 'aspro');
define('MODULE_NAME', 'aspro.optimus');
define('MODULE_NAME_SHORT', 'optimus');
define('TEMPLATE_NAME', 'aspro_optimus');
define('TEMPLATE_PATH', '/bitrix/templates/'.TEMPLATE_NAME);
define('UPDATER_SELF_TEMPLATE_PATH', 'install/wizards/'.PARTNER_NAME.'/'.MODULE_NAME_SHORT.'/site/templates/'.TEMPLATE_NAME);
define('UPDATER_SITE_TEMPLATE_PATH', 'templates/'.TEMPLATE_NAME);
define('CURRENT_VERSION', GetCurVersion($_SERVER['DOCUMENT_ROOT'].'/bitrix/modules/'.MODULE_NAME.'/install/version.php'));
define('NEW_VERSION', GetCurVersion(__DIR__.'/install/version.php'));

UpdaterLog('START UPDATE '.CURRENT_VERSION.' -> '.NEW_VERSION.PHP_EOL);

// remove old bak files
RemoveOldBakFiles();

// create bak files
CreateBakFile($_SERVER['DOCUMENT_ROOT'].'/bitrix/modules/'.MODULE_NAME.'/classes/general/COptimus.php');
CreateBakFile($_SERVER['DOCUMENT_ROOT'].'/bitrix/modules/'.MODULE_NAME.'/admin/options.php');
CreateBakFile($_SERVER['DOCUMENT_ROOT'].TEMPLATE_PATH.'/js/main.js');
CreateBakFile($_SERVER['DOCUMENT_ROOT'].TEMPLATE_PATH.'/js/main.min.js');
CreateBakFile($_SERVER['DOCUMENT_ROOT'].TEMPLATE_PATH.'/components/bitrix/form.result.new/inline/template.php');
CreateBakFile($_SERVER['DOCUMENT_ROOT'].TEMPLATE_PATH.'/components/bitrix/form.result.new/popup/template.php');

// update module
$updater->CopyFiles('install', 'modules/'.MODULE_NAME.'/install');

// update admin section images
//$updater->CopyFiles('install/images', 'images/'.MODULE_NAME);

// update admin section gadget
//$updater->CopyFiles('install/gadgets', 'gadgets');

// update wizard
$updater->CopyFiles('install/wizards', 'wizards');

if(file_exists($_SERVER['DOCUMENT_ROOT'].'/bitrix/components/aspro/')){
	// update components
	//$updater->CopyFiles('install/components', 'components');
}

//update mail templates
if(file_exists($_SERVER['DOCUMENT_ROOT'].'/bitrix/templates/.default/')){
	//$updater->CopyFiles('install/wizards/'.PARTNER_NAME.'/'.MODULE_NAME_SHORT.'/site/templates/.default/components', 'templates/.default/components');
}
if(file_exists($_SERVER['DOCUMENT_ROOT'].'/bitrix/templates/aspro_mail/')){
	//$updater->CopyFiles('install/wizards/'.PARTNER_NAME.'/'.MODULE_NAME_SHORT.'/site/templates/aspro_mail/', 'templates/aspro_mail');
}

if(file_exists($_SERVER['DOCUMENT_ROOT'].'/bitrix/templates/'.TEMPLATE_NAME)){
	// update js
	$updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/js', UPDATER_SITE_TEMPLATE_PATH.'/js');

	// rewrite css
	// $updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/css', UPDATER_SITE_TEMPLATE_PATH.'/css');
	// $updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/ajax', UPDATER_SITE_TEMPLATE_PATH.'/ajax');
	// $updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/template_styles.css', UPDATER_SITE_TEMPLATE_PATH.'/template_styles.css');
	// $updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/template_styles.min.css', UPDATER_SITE_TEMPLATE_PATH.'/template_styles.min.css');

	// update images
	// $updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/images', UPDATER_SITE_TEMPLATE_PATH.'/images');

	// update lang
	// $updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/lang', UPDATER_SITE_TEMPLATE_PATH.'/lang');

	// update bgcolor
	// $updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/bg_color', UPDATER_SITE_TEMPLATE_PATH.'/bg_color');

	// rewrite components templates
	$updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/components', UPDATER_SITE_TEMPLATE_PATH.'/components');

	// rewrite themes
	// $updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/themes', UPDATER_SITE_TEMPLATE_PATH.'/themes');
}

// current SITEs
// $arSites = GetSites();

// current IBLOCK_IDs
// $arIblocks = GetIBlocks();

// update /include/
if($arSites){
	foreach($arSites as $arSite){
		$arSite['DIR'] = str_replace('//', '/', '/'.$arSite['DIR']);
		if(!strlen($arSite['DOC_ROOT'])){
			$arSite['DOC_ROOT'] = $_SERVER["DOCUMENT_ROOT"];
		}
		$arSite['DOC_ROOT'] = str_replace('//', '/', $arSite['DOC_ROOT'].'/');
		$siteDir = str_replace('//', '/', $arSite['DOC_ROOT'].$arSite['DIR']);
		$fileCheckSolution = str_replace('//', '/', $siteDir.'/ajax/form.php');
		if(file_exists($fileCheckSolution)){
			$content = @file_get_contents($fileCheckSolution);
			if(strpos($content, 'COptimus') !== false){

			}
		}
	}
}

// is composite enabled
$compositeMode = IsCompositeEnabled();

// clear all sites cache in some components and dirs (include composite cache)
ClearAllSitesCacheDirs(array('html_pages'));
ClearAllSitesCacheComponents(
	array(
		"bitrix:form.result.new",
		"bitrix:system.pagenavigation",
	)
);

if($compositeMode){
	EnableComposite($compositeMode === 'AUTO_COMPOSITE');
}
?>47   25869|/aspro.optimus/admin/options.php|dbb62472<?
require_once($_SERVER['DOCUMENT_ROOT'].'/bitrix/modules/main/include/prolog_admin_before.php');
require($_SERVER['DOCUMENT_ROOT'].'/bitrix/modules/main/include/prolog_admin_after.php');

global $APPLICATION;
IncludeModuleLangFile(__FILE__);
$RIGHT = $APPLICATION->GetGroupRight(COptimus::moduleID);

if($RIGHT >= "R"){
	$res = COptimus::getModuleOptionsList();
	$arTabs = $res["TABS"];
	$tabControl = new CAdminTabControl("tabControl", $arTabs);

	if($REQUEST_METHOD == "POST" && strlen($Update.$Apply.$RestoreDefaults) > 0 && $RIGHT >= "W" && check_bitrix_sessid()){
		global $APPLICATION, $CACHE_MANAGER;

		if(strlen($RestoreDefaults) > 0){
			COption::RemoveOption(COptimus::moduleID);
			COption::RemoveOption(COptimus::moduleID, "NeedGenerateCustomTheme");
			COption::RemoveOption(COptimus::moduleID, "NeedGenerateCustomThemeBG");
			$APPLICATION->DelGroupRight(COptimus::moduleID);
		}
		else{
			COption::RemoveOption(COptimus::moduleID, "sid");
			foreach($arTabs as $key => $arTab){
				foreach($arTab["OPTIONS"] as $arOption){
					if($arOption[0] == "COLOR_THEME" && $_REQUEST[$arOption[0]."_".$arTab["SITE_ID"]] === 'CUSTOM'){
						COption::SetOptionString(COptimus::moduleID, "NeedGenerateCustomTheme", 'Y', '', $arTab["SITE_ID"]);
					}
					if($arOption[0] == "BGCOLOR_THEME" && $_REQUEST[$arOption[0]."_".$arTab["SITE_ID"]] === 'CUSTOM'){
						COption::SetOptionString(COptimus::moduleID, "NeedGenerateCustomThemeBG", 'Y', '', $arTab["SITE_ID"]);
					}
					$arOption[0] = $arOption[0]."_".$arTab["SITE_ID"];
					COptimus::__AdmSettingsSaveOption_EX(COptimus::moduleID, $arOption);
				}

				CBitrixComponent::clearComponentCache('bitrix:form.result.new', $arTab["SITE_ID"]);
				CBitrixComponent::clearComponentCache('aspro:oneclickbuy.optimus', $arTab["SITE_ID"]);
				CBitrixComponent::clearComponentCache('bitrix:catalog.element', $arTab["SITE_ID"]);
				CBitrixComponent::clearComponentCache('bitrix:catalog.section', $arTab["SITE_ID"]);
				CBitrixComponent::clearComponentCache('bitrix:catalog.store.amount', $arTab["SITE_ID"]);
				CBitrixComponent::clearComponentCache('bitrix:menu', $arTab["SITE_ID"]);
			}
		}

		UnRegisterModuleDependences("main", "OnEndBufferContent", COptimus::moduleID, "COptimus", "InsertCounters");
		RegisterModuleDependences("main", "OnEndBufferContent", COptimus::moduleID, "COptimus", "InsertCounters");

		// clear composite cache
		$compositeMode = COptimus::IsCompositeEnabled();
		$obCache = new CPHPCache();
		$obCache->CleanDir("", "html_pages");
		if($compositeMode){
			COptimus::EnableComposite($compositeMode === 'AUTO_COMPOSITE');
		}

		$APPLICATION->RestartBuffer();
	}

	CJSCore::Init(array("jquery"));
	CAjax::Init();
	?>
	<?if(!count($arTabs)):?>
		<div class="adm-info-message-wrap adm-info-message-red">
			<div class="adm-info-message">
				<div class="adm-info-message-title"><?=GetMessage("NO_SITE_INSTALLED", array("#SESSION_ID#"=>bitrix_sessid_get()))?></div>
				<div class="adm-info-message-icon"></div>
			</div>
		</div>
	<?else:?>
		<?$tabControl->Begin();?>
		<style type="text/css">
		*[id^=wait_window_div],.waitwindow{display:none;}
		</style>
		<form method="post" action="<?=$APPLICATION->GetCurPage()?>?mid=<?=urlencode($mid)?>&amp;lang=<?=LANGUAGE_ID?>" class="optimus_options" ENCTYPE="multipart/form-data">
			<?=bitrix_sessid_post();?>
			<?
			CModule:: IncludeModule('sale');
			$arPersonTypes = $arDeliveryServices = $arPaySystems = $arCurrency = $arOrderPropertiesByPerson = $arS = $arC = $arN = array();
			$dbRes = CSalePersonType::GetList(array('SORT' => 'ASC'), array('ACTIVE' => 'Y'), false, false, array());
			while($arItem = $dbRes->Fetch()){
				if($arItem['LIDS'] && is_array($arItem['LIDS'])){
					foreach($arItem['LIDS'] as $site_id){
						$arPersonTypes[$site_id][$arItem['ID']] = '['.$arItem['ID'].'] '.$arItem['NAME'].' ('.$site_id.')';
					}
				}
				$arS[$arItem['ID']] = array('FIO', 'PHONE', 'EMAIL');
				$arN[$arItem['ID']] = array(
					'FIO' => GetMessage('ONECLICKBUY_PROPERTIES_FIO'),
					'PHONE' => GetMessage('ONECLICKBUY_PROPERTIES_PHONE'),
					'EMAIL' => GetMessage('ONECLICKBUY_PROPERTIES_EMAIL'),
				);
			}

			foreach($arTabs as $key => $arTab){
				if($arTab["SITE_ID"]){
					$dbRes = CSaleDelivery::GetList(array('SORT' => 'ASC'), array('ACTIVE' => 'Y', 'LID' => $arTab["SITE_ID"]), false, false, array());
					while($arItem = $dbRes->Fetch()){
						$arDeliveryServices[$arTab["SITE_ID"]][$arItem['ID']] = '['.$arItem['ID'].'] '.$arItem['NAME'].' ('.$arTab["SITE_ID"].')';
					}
				}
			}

			$dbRes = CSalePaySystem::GetList(array('SORT' => 'ASC'), array('ACTIVE' => 'Y'), false, false, array());
			while($arItem = $dbRes->Fetch()){
				$arPaySystems[$arItem['ID']] = '['.$arItem['ID'].'] '.$arItem['NAME'];
			}

			$dbRes = CCurrency::GetList(($by = "sort"), ($order = "asc"), LANGUAGE_ID);
			while($arItem = $dbRes->Fetch()){
				$arCurrency[$arItem['CURRENCY']] = $arItem['FULL_NAME'].' ('.$arItem['CURRENCY'].')';
			}

			$dbRes = CSaleOrderProps::GetList(array('SORT' => 'ASC'), array('ACTIVE' => 'Y'), false, false, array('ID', 'CODE', 'NAME', 'PERSON_TYPE_ID', 'TYPE', 'IS_PHONE', 'IS_EMAIL', 'IS_PAYER'));
			while($arItem = $dbRes->Fetch()){
				if($arItem['TYPE'] === 'TEXT' && strlen($arItem['CODE'])){
					$arN[$arItem['PERSON_TYPE_ID']][$arItem['CODE']] = $arItem['NAME'];
					if($arItem['IS_PAYER'] === 'Y'){
						$arS[$arItem['PERSON_TYPE_ID']][0] = $arItem['CODE'];
					}
					elseif($arItem['IS_PHONE'] === 'Y'){
						$arS[$arItem['PERSON_TYPE_ID']][1] = $arItem['CODE'];
					}
					elseif($arItem['IS_EMAIL'] === 'Y'){
						$arS[$arItem['PERSON_TYPE_ID']][2] = $arItem['CODE'];
					}
					else{
						$arS[$arItem['PERSON_TYPE_ID']][] = $arItem['CODE'];
					}
				}
			}
			if($arS && $arN){
				foreach($arS as $PERSON_TYPE_ID => $arCodes){
					if($arCodes){
						foreach($arCodes as $CODE){
							$arOrderPropertiesByPerson[$PERSON_TYPE_ID][$CODE] = $arN[$PERSON_TYPE_ID][$CODE];
						}
						$arOrderPropertiesByPerson[$PERSON_TYPE_ID]['COMMENT'] = GetMessage('ONECLICKBUY_PROPERTIES_COMMENT');
					}
				}
			}

			foreach($arTabs as $key => $arTab){
				$tabControl->BeginNextTab();
				if($arTab["SITE_ID"]){
					foreach($arTab["OPTIONS"] as $arOption){
						if($arOption[0] === "ONECLICKBUY_PERSON_TYPE"){
							$arOption[3][1] = $arPersonTypes[$arTab["SITE_ID"]];
						}
						elseif($arOption[0] === "ONECLICKBUY_DELIVERY"){
							$arOption[3][1] = $arDeliveryServices[$arTab["SITE_ID"]];
						}
						elseif($arOption[0] === "ONECLICKBUY_PAYMENT"){
							$arOption[3][1] = $arPaySystems;
						}
						elseif($arOption[0] === "ONECLICKBUY_CURRENCY"){
							$arOption[3][1] = $arCurrency;
						}
						elseif($arOption[0] === "ONECLICKBUY_PROPERTIES" || $arOption[0] === "ONECLICKBUY_REQUIRED_PROPERTIES"){
							$arOption[3][1] = $arOrderPropertiesByPerson[COption::GetOptionString('aspro.optimus', 'ONECLIKBUY_PERSON_TYPE', ($arPersonTypes ? key($arPersonTypes[$arTab["SITE_ID"]]) : ''), $arTab["SITE_ID"])];
						}
						$arOption[0] = $arOption[0]."_".$arTab["SITE_ID"];
						COptimus::__AdmSettingsDrawRow_EX(COptimus::moduleID, $arOption, $arTab["SITE_ID"], $arTab["SITE_DIR"]);
					}
				}
			}
			if($REQUEST_METHOD == "POST" && strlen($Update.$Apply.$RestoreDefaults) > 0 && check_bitrix_sessid()){
				if(strlen($Update)>0 && strlen($_REQUEST["back_url_settings"]) > 0) LocalRedirect($_REQUEST["back_url_settings"]);
				else LocalRedirect($APPLICATION->GetCurPage()."?mid=".urlencode($mid)."&lang=".urlencode(LANGUAGE_ID)."&back_url_settings=".urlencode($_REQUEST["back_url_settings"])."&".$tabControl->ActiveTabParam());
			}
			?>
			<script>
			var arOrderPropertiesByPerson = <?=CUtil::PhpToJSObject($arOrderPropertiesByPerson, false)?>;

			function CheckActive(){
				$('input[name^="USE_WORD_EXPRESSION"]').each(function() {
					var input = this;
					var isActiveUseExpressions = $(input).attr('checked') == 'checked';
					var tab = $(input).parents('.adm-detail-content-item-block');
					if(!isActiveUseExpressions){
						tab.find('input[name^="MAX_AMOUNT"]').attr('disabled', 'disabled');
						tab.find('input[name^="MIN_AMOUNT"]').attr('disabled', 'disabled');
						tab.find('input[name^="EXPRESSION_FOR_MIN"]').attr('disabled', 'disabled');
						tab.find('input[name^="EXPRESSION_FOR_MAX"]').attr('disabled', 'disabled');
						tab.find('input[name^="EXPRESSION_FOR_MID"]').attr('disabled', 'disabled');
					}
					else{
						tab.find('input[name^="MAX_AMOUNT"]').removeAttr('disabled');
						tab.find('input[name^="MIN_AMOUNT"]').removeAttr('disabled');
						tab.find('input[name^="EXPRESSION_FOR_MIN"]').removeAttr('disabled');
						tab.find('input[name^="EXPRESSION_FOR_MAX"]').removeAttr('disabled');
						tab.find('input[name^="EXPRESSION_FOR_MID"]').removeAttr('disabled');
					}
				});

				$('select[name^="BUYMISSINGGOODS"]').each(function() {
					var select = this;
					var BuyMissingGoodsVal = $(select).val();
					var tab = $(select).parents('.adm-detail-content-item-block');
					tab.find('input[name^="EXPRESSION_SUBSCRIBE_BUTTON"]').attr('disabled', 'disabled');
					tab.find('input[name^="EXPRESSION_SUBSCRIBED_BUTTON"]').attr('disabled', 'disabled');
					tab.find('input[name^="EXPRESSION_ORDER_BUTTON"]').attr('disabled', 'disabled');
					if(BuyMissingGoodsVal == 'SUBSCRIBE'){
						tab.find('input[name^="EXPRESSION_SUBSCRIBE_BUTTON"]').removeAttr('disabled');
						tab.find('input[name^="EXPRESSION_SUBSCRIBED_BUTTON"]').removeAttr('disabled');
					}
					else if(BuyMissingGoodsVal == 'ORDER'){
						tab.find('input[name^="EXPRESSION_ORDER_BUTTON"]').removeAttr('disabled');
					}
				});
			}

			function checkGoalsNote(){
				var inUAC = $('.adm-detail-content-table:visible').first().find('tr[data-optioncode=USE_YA_COUNTER] input');
				var itrYACID = $('.adm-detail-content-table:visible').first().find('tr[data-optioncode=YA_COUNTER_ID]');
				var itrGNote = $('.adm-detail-content-table:visible').first().find('tr[data-optioncode=GOALS_NOTE]');
				var itrUFG = $('.adm-detail-content-table:visible').first().find('tr[data-optioncode=USE_FORMS_GOALS]');
				var itrUBG = $('.adm-detail-content-table:visible').first().find('tr[data-optioncode=USE_BASKET_GOALS]');
				var itrU1CG = $('.adm-detail-content-table:visible').first().find('tr[data-optioncode=USE_1CLICK_GOALS]');
				var itrUQOG = $('.adm-detail-content-table:visible').first().find('tr[data-optioncode=USE_FASTORDER_GOALS]');
				var itrUFOG = $('.adm-detail-content-table:visible').first().find('tr[data-optioncode=USE_FULLORDER_GOALS]');
				var itrUDG = $('.adm-detail-content-table:visible').first().find('tr[data-optioncode=USE_DEBUG_GOALS]');

				if(inUAC.length && inUAC.attr('checked')){
					var bShowNote = 6;

					if(itrUFG.find('select').val().indexOf('NONE') == -1){
						itrGNote.find('[data-goal=form]').show();
					}
					else{
						itrGNote.find('[data-goal=form]').hide();
						--bShowNote;
					}

					if(itrUBG.find('input').attr('checked')){
						itrGNote.find('[data-goal=basket]').show();
					}
					else{
						itrGNote.find('[data-goal=basket]').hide();
						--bShowNote;
					}

					if(itrU1CG.find('input').attr('checked')){
						itrGNote.find('[data-goal=1click]').show();
					}
					else{
						itrGNote.find('[data-goal=1click]').hide();
						--bShowNote;
					}

					if(itrUQOG.find('input').attr('checked')){
						itrGNote.find('[data-goal=fastorder]').show();
					}
					else{
						itrGNote.find('[data-goal=fastorder]').hide();
						--bShowNote;
					}

					if(itrUFOG.find('input').attr('checked')){
						itrGNote.find('[data-goal=fullorder]').show();
					}
					else{
						itrGNote.find('[data-goal=fullorder]').hide();
						--bShowNote;
					}

					if(itrUDG.find('input').attr('checked')){
						itrGNote.find('[data-goal=debug]').show();
					}
					else{
						itrGNote.find('[data-goal=debug]').hide();
						--bShowNote;
					}

					if(bShowNote){
						itrGNote.fadeIn();
					}
					else{
						itrGNote.fadeOut();
					}
				}
				else{
					itrGNote.fadeOut();
				}
			}

			$(document).ready(function() {
				CheckActive();

				$('form.optimus_options').submit(function(e) {
					$(this).attr('id', 'optimus_options');
					jsAjaxUtil.ShowLocalWaitWindow('id', 'optimus_options', true);
					$(this).find('input').removeAttr('disabled');
				});

				$('input[name^="USE_WORD_EXPRESSION"], select[name^="BUYMISSINGGOODS"]').change(function() {
					CheckActive();
				});

				$('select[name^="SHOW_SECTION_DESCRIPTION"]').change(function(){
					console.log($('select[name^="SECTION_DESCRIPTION"]'));
					if($(this).val() != 'BOTH')
						$('select[name*="SECTION_DESCRIPTION_POSITION"]').closest('tr').css('display','none');
					else
						$('select[name*="SECTION_DESCRIPTION_POSITION"]').closest('tr').css('display','');
				});

				$('select[name^="SHOW_QUANTITY_FOR_GROUPS"]').change(function() {
					var val = $(this).val();
					var tab = $(this).parents('.adm-detail-content-item-block');
					var sqcg = tab.find('select[name^="SHOW_QUANTITY_COUNT_FOR_GROUPS"]');

					var isAll = false;
					if(val){
						isAll = val.indexOf('2') !== -1;
					}

					if(!isAll){
						$(this).find('option').each(function() {
							if($(this).attr('selected') != 'selected'){
								sqcg.find('option[value="' + $(this).attr('value') + '"]').removeAttr('selected');
							}
						});
					}
				});

				$('select[name^="SHOW_QUANTITY_COUNT_FOR_GROUPS"]').change(function(e) {
					e.stopPropagation();
					var val = $(this).val();
					var tab = $(this).parents('.adm-detail-content-item-block');
					var sqg_val = tab.find('select[name^="SHOW_QUANTITY_FOR_GROUPS"]').val();

					if(!sqg_val){
						$(this).find('option').removeAttr('selected');
						return;
					}

					var isAll = false;
					if(sqg_val){
						isAll = sqg_val.indexOf('2') !== -1;
					}

					if(!isAll && val){
						for(i in val){
							var g = val[i];
							if(sqg_val.indexOf(g) === -1){
								$(this).find('option[value="' + g + '"]').removeAttr('selected');
							}
						}
					}
				});

				$('select[name^="ONECLICKBUY_PERSON_TYPE"]').change(function() {
					if(typeof arOrderPropertiesByPerson !== 'undefined'){
						var table = $(this).parents('table').first();
						var value = $(this).val();
						if(typeof value !== 'undefined' && typeof arOrderPropertiesByPerson[value] !== 'undefined'){
							var arSelects = [table.find('select[name^=ONECLICKBUY_PROPERTIES]'), table.find('select[name^=ONECLICKBUY_REQUIRED_PROPERTIES]')];
							for(var i in arSelects){
								var $fields = arSelects[i];
								if($fields.length){
									var fields = $fields.val();
									$fields.find('option').remove();
									for(var j in arOrderPropertiesByPerson[value]){
										var selected = fields.indexOf(j) !== -1 ? ' selected="selected"' : '';
										$fields.append('<option value="' + j + '"' + selected + '>' + arOrderPropertiesByPerson[value][j] + '</option>');
									}
									$fields.find('option').eq(0).attr('selected', 'selected');
									$fields.find('option').eq(1).attr('selected', 'selected');
								}
							}
						}
					}
				});

				$('select[name^="ONECLICKBUY_PROPERTIES"]').change(function() {
					var table = $(this).parents('table').first();
					$(this).find('option').eq(0).attr('selected', 'selected');
					$(this).find('option').eq(1).attr('selected', 'selected');
					var fiedsValue = $(this).val();
					var $requiredFields = table.find('select[name^=ONECLICKBUY_REQUIRED_PROPERTIES]');
					var requiredFieldsValue = $requiredFields.val();
					for(var i in requiredFieldsValue){
						if(fiedsValue === null || fiedsValue.indexOf(requiredFieldsValue[i]) === -1){
							$requiredFields.find('option[value=' + requiredFieldsValue[i] + ']').removeAttr('selected');
						}
					}
				});

				$('select[name^="ONECLICKBUY_REQUIRED_PROPERTIES"]').change(function() {
					var table = $(this).parents('table').first();
					$(this).find('option').eq(0).attr('selected', 'selected');
					$(this).find('option').eq(1).attr('selected', 'selected');
					var requiredFieldsValue = $(this).val();
					var $fieds = table.find('select[name^=ONECLICKBUY_PROPERTIES]');
					var fiedsValue = $fieds.val();
					var $FIO = $(this).find('option[value^=FIO]');
					var $PHONE = $(this).find('option[value^=PHONE]');
					for(var i in requiredFieldsValue){
						if(fiedsValue === null || fiedsValue.indexOf(requiredFieldsValue[i]) === -1){
							$(this).find('option[value=' + requiredFieldsValue[i] + ']').removeAttr('selected');
						}
					}
				});

				$('select[name^="SCROLLTOTOP_TYPE"]').change(function() {
					var posSelect = $(this).parents('table').first().find('select[name^="SCROLLTOTOP_POSITION"]');
					if(posSelect){
						var posSelectTr = posSelect.parents('tr').first();
						var isNone = $(this).val().indexOf('NONE') != -1;
						if(isNone){
							if(posSelectTr.is(':visible')){
								posSelectTr.fadeOut();
							}
						}
						else{
							if(!posSelectTr.is(':visible')){
								posSelectTr.fadeIn();
							}
							var isRound = $(this).val().indexOf('ROUND') != -1;
							var isTouch = posSelect.val().indexOf('TOUCH') != -1;
							if(isRound && !!posSelect){
								posSelect.find('option[value^="TOUCH"]').attr('disabled', 'disabled');
								if(isTouch){
									posSelect.val(posSelect.find('option[value^="PADDING"]').first().attr('value'));
								}
							}
							else{
								posSelect.find('option[value^="TOUCH"]').removeAttr('disabled');
							}
						}
					}
				});

				$('input[name^="USE_YA_COUNTER"]').change(function() {
					var itrYCC = $(this).parents('table').first().find('tr[data-optioncode=YANDEX_COUNTER]');
					var itrYACID = $(this).parents('table').first().find('tr[data-optioncode=YA_COUNTER_ID]');
					var itrYE = $(this).parents('table').first().find('tr[data-optioncode=YANDEX_ECOMERCE]');
					var itrUFG = $(this).parents('table').first().find('tr[data-optioncode=USE_FORMS_GOALS]');
					var itrUBG = $(this).parents('table').first().find('tr[data-optioncode=USE_BASKET_GOALS]');
					var itrU1CG = $(this).parents('table').first().find('tr[data-optioncode=USE_1CLICK_GOALS]');
					var itrUQOG = $(this).parents('table').first().find('tr[data-optioncode=USE_FASTORDER_GOALS]');
					var itrUFOG = $(this).parents('table').first().find('tr[data-optioncode=USE_FULLORDER_GOALS]');
					var itrUDG = $(this).parents('table').first().find('tr[data-optioncode=USE_DEBUG_GOALS]');
					var itrGNote = $(this).parents('table').first().find('tr[data-optioncode=GOALS_NOTE]');
					var ischecked = $(this).attr('checked');
					if(typeof(ischecked) != 'undefined'){
						itrYCC.fadeIn();
						itrYACID.fadeIn();
						itrYE.fadeIn();
						itrUFG.fadeIn();
						var valUFG = itrUFG.find('select').val();
						if(valUFG.indexOf('NONE') == -1){
							var isCommon = valUFG.indexOf('COMMON') != -1;
							if(isCommon){
								itrGNote.find('[data-value=common]').show();
								itrGNote.find('[data-value=single]').hide();
							}
							else{
								itrGNote.find('[data-value=common]').hide();
								itrGNote.find('[data-value=single]').show();
							}
						}
						itrUBG.fadeIn();
						itrU1CG.fadeIn();
						itrUQOG.fadeIn();
						itrUFOG.fadeIn();
						itrUDG.fadeIn();
					}
					else{
						itrYCC.fadeOut();
						itrYACID.fadeOut();
						itrYE.fadeOut();
						itrUFG.fadeOut();
						itrUBG.fadeOut();
						itrU1CG.fadeOut();
						itrUQOG.fadeOut();
						itrUFOG.fadeOut();
						itrUDG.fadeOut();
						itrGNote.fadeOut();
					}

					checkGoalsNote();
				});

				$('select[name^="USE_FORMS_GOALS"]').change(function() {
					var inUAC = $(this).parents('table').first().find('tr[data-optioncode=USE_YA_COUNTER] input');
					if(inUAC.length && inUAC.attr('checked')){
						var isNone = $(this).val().indexOf('NONE') != -1;
						var isCommon = $(this).val().indexOf('COMMON') != -1;
						var itrGNote = $(this).parents('table').first().find('tr[data-optioncode=GOALS_NOTE]');
						if(!isNone){
							if(isCommon){
								itrGNote.find('[data-value=common]').show();
								itrGNote.find('[data-value=single]').hide();
							}
							else{
								itrGNote.find('[data-value=common]').hide();
								itrGNote.find('[data-value=single]').show();
							}
							itrGNote.find('[data-goal=form]').show();
						}
						else{
							itrGNote.find('[data-goal=form]').hide();
						}
					}

					checkGoalsNote();
				});

				$('input[name^="USE_BASKET_GOALS"]').change(function() {
					var inUAC = $(this).parents('table').first().find('tr[data-optioncode=USE_YA_COUNTER] input');
					if(inUAC.length && inUAC.attr('checked')){
						var itrGNote = $(this).parents('table').first().find('tr[data-optioncode=GOALS_NOTE]');
						var ischecked = $(this).attr('checked');
						if(typeof(ischecked) != 'undefined'){
							itrGNote.find('[data-goal=basket]').show();
						}
						else{
							itrGNote.find('[data-goal=basket]').hide();
						}
					}

					checkGoalsNote();
				});

				$('input[name^="USE_1CLICK_GOALS"]').change(function() {
					var inUAC = $(this).parents('table').first().find('tr[data-optioncode=USE_YA_COUNTER] input');
					if(inUAC.length && inUAC.attr('checked')){
						var itrGNote = $(this).parents('table').first().find('tr[data-optioncode=GOALS_NOTE]');
						var ischecked = $(this).attr('checked');
						if(typeof(ischecked) != 'undefined'){
							itrGNote.find('[data-goal=1click]').show();
						}
						else{
							itrGNote.find('[data-goal=1click]').hide();
						}
					}

					checkGoalsNote();
				});

				$('input[name^="USE_FASTORDER_GOALS"]').change(function() {
					var inUAC = $(this).parents('table').first().find('tr[data-optioncode=USE_YA_COUNTER] input');
					if(inUAC.length && inUAC.attr('checked')){
						var itrGNote = $(this).parents('table').first().find('tr[data-optioncode=GOALS_NOTE]');
						var ischecked = $(this).attr('checked');
						if(typeof(ischecked) != 'undefined'){
							itrGNote.find('[data-goal=fastorder]').show();
						}
						else{
							itrGNote.find('[data-goal=fastorder]').hide();
						}
					}

					checkGoalsNote();
				});

				$('input[name^="USE_FULLORDER_GOALS"]').change(function() {
					var inUAC = $(this).parents('table').first().find('tr[data-optioncode=USE_YA_COUNTER] input');
					if(inUAC.length && inUAC.attr('checked')){
						var itrGNote = $(this).parents('table').first().find('tr[data-optioncode=GOALS_NOTE]');
						var ischecked = $(this).attr('checked');
						if(typeof(ischecked) != 'undefined'){
							itrGNote.find('[data-goal=fullorder]').show();
						}
						else{
							itrGNote.find('[data-goal=fullorder]').hide();
						}
					}

					checkGoalsNote();
				});

				$('input[name^="USE_DEBUG_GOALS"]').change(function() {
					var inUAC = $(this).parents('table').first().find('tr[data-optioncode=USE_YA_COUNTER] input');
					if(inUAC.length && inUAC.attr('checked')){
						var itrGNote = $(this).parents('table').first().find('tr[data-optioncode=GOALS_NOTE]');
						var ischecked = $(this).attr('checked');
						if(typeof(ischecked) != 'undefined'){
							itrGNote.find('[data-goal=debug]').show();
						}
						else{
							itrGNote.find('[data-goal=debug]').hide();
						}
					}

					checkGoalsNote();
				});

				$('select[name^="SCROLLTOTOP_TYPE"]').change();
				$('select[name^="ONECLICKBUY_PERSON_TYPE"]').change();
				$('input[name^="USE_YA_COUNTER"]').change();
				$('select[name^="USE_FORMS_GOALS"]').change();
				$('input[name^="USE_BASKET_GOALS"]').change();
				$('input[name^="USE_1CLICK_GOALS"]').change();
				$('input[name^="USE_FASTORDER_GOALS"]').change();
				$('input[name^="USE_FULLORDER_GOALS"]').change();
				$('input[name^="USE_DEBUG_GOALS"]').change();
			});
			</script>
			<?$tabControl->Buttons();?>
			<input <?if($RIGHT < "W") echo "disabled"?> type="submit" name="Apply" class="submit-btn" value="<?=GetMessage("MAIN_OPT_APPLY")?>" title="<?=GetMessage("MAIN_OPT_APPLY_TITLE")?>">
			<?if(strlen($_REQUEST["back_url_settings"]) > 0): ?>
				<input type="button" name="Cancel" value="<?=GetMessage("MAIN_OPT_CANCEL")?>" title="<?=GetMessage("MAIN_OPT_CANCEL_TITLE")?>" onclick="window.location='<?=htmlspecialcharsbx(CUtil::addslashes($_REQUEST["back_url_settings"]))?>'">
				<input type="hidden" name="back_url_settings" value="<?=htmlspecialcharsbx($_REQUEST["back_url_settings"])?>">
			<?endif;?>
			<?if(COptimus::IsCompositeEnabled()):?>
				<div class="adm-info-message"><?=GetMessage("WILL_CLEAR_HTML_CACHE_NOTE")?></div><div style="clear:both;"></div>
				<script type="text/javascript">
				$(document).ready(function() {
					$('input[name^="THEME_SWITCHER"]').change(function() {
						var ischecked = $(this).attr('checked');
						if(typeof(ischecked) != 'undefined'){
							if(!confirm("<?=GetMessage("NO_COMPOSITE_NOTE")?>")){
								$(this).removeAttr('checked');
							}
						}
					});
				});
				</script>
			<?endif;?>
		</form>
		<?$tabControl->End();?>
	<?endif;?>
	<?
}
else{
	echo CAdminMessage::ShowMessage(GetMessage('NO_RIGHTS_FOR_VIEWING'));
}
?>
<?require($_SERVER['DOCUMENT_ROOT'].'/bitrix/modules/main/include/epilog_admin.php');?>59   205010|/aspro.optimus/classes/general/COptimus.php|c0084cd8<?
/**
 * Optimus module
 * @copyright 2016 Aspro
 */

if(!defined('OPTIMUS_MODULE_ID')){
	define('OPTIMUS_MODULE_ID', 'aspro.optimus');
}

IncludeModuleLangFile(__FILE__);
use \Bitrix\Main\Type\Collection;

class COptimus{
    const partnerName	= "aspro";
    const solutionName	= "optimus";
	const moduleID		= OPTIMUS_MODULE_ID;
    const wizardID		= "aspro:optimus";
	const devMode 		= false;

	private static $arMetaParams = array();

    function ShowPanel(){
        if($GLOBALS["USER"]->IsAdmin() && COption::GetOptionString("main", "wizard_solution", "", SITE_ID) == self::solutionName){
            $GLOBALS["APPLICATION"]->SetAdditionalCSS("/bitrix/wizards/".self::partnerName."/".self::solutionName."/css/panel.css");
            $arMenu = array(
                array(
                    "ACTION" => "jsUtils.Redirect([], '".CUtil::JSEscape("/bitrix/admin/wizard_install.php?lang=".LANGUAGE_ID."&wizardSiteID=".SITE_ID."&wizardName=".self::wizardID."&".bitrix_sessid_get())."')",
                    "ICON" => "bx-popup-item-wizard-icon",
                    "TITLE" => GetMessage("STOM_BUTTON_TITLE_W1"),
                    "TEXT" => GetMessage("STOM_BUTTON_NAME_W1"),
                ),
            );
            $GLOBALS["APPLICATION"]->AddPanelButton(array(
                "HREF" => "/bitrix/admin/wizard_install.php?lang=".LANGUAGE_ID."&wizardName=".self::wizardID."&wizardSiteID=".SITE_ID."&".bitrix_sessid_get(),
                "ID" => self::solutionName."_wizard",
                "ICON" => "bx-panel-site-wizard-icon",
                "MAIN_SORT" => 2500,
                "TYPE" => "BIG",
                "SORT" => 10,
                "ALT" => GetMessage("SCOM_BUTTON_DESCRIPTION"),
                "TEXT" => GetMessage("SCOM_BUTTON_NAME"),
                "MENU" => $arMenu,
            ));
        }
    }

    function BeforeSendEvent(\Bitrix\Main\Event $event){
		if(isset($_REQUEST["ONE_CLICK_BUY"]) && method_exists('\Bitrix\Sale\Compatible\EventCompatibility', 'setDisableMailSend')){
			\Bitrix\Sale\Compatible\EventCompatibility::setDisableMailSend(true);
			if(method_exists('\Bitrix\Sale\Notify', 'setNotifyDisable'))
				\Bitrix\Sale\Notify::setNotifyDisable(true);
		}
	}

	function Check(){
	}

	function Start($siteID){
		global  $APPLICATION, $SITE_THEME, $TEMPLATE_OPTIONS, $THEME_SWITCHER, $STARTTIME;
		$STARTTIME = time() * 1000;
		$SITE_THEME = COption::GetOptionString(self::moduleID, "COLOR_THEME", 'BLUE', $siteID);
		$SITE_THEMEBG = COption::GetOptionString(self::moduleID, "BGCOLOR_THEME", 'LIGHT', $siteID);
		$TEMPLATE_OPTIONS = self::GetTemplateOptions($siteID);
		$THEME_SWITCHER = COption::GetOptionString(self::moduleID, 'THEME_SWITCHER', 'N', $siteID);

		if($TEMPLATE_OPTIONS && is_array($TEMPLATE_OPTIONS)){
			// reset theme
			if($_REQUEST["theme"] == "default"){
				foreach($TEMPLATE_OPTIONS as $templateOptionKey => $templateOptionValue){
					if(isset($templateOptionValue["DEFAULT"])){
						$default = $templateOptionValue["DEFAULT"];
						$TEMPLATE_OPTIONS[$templateOptionKey]["CURRENT_VALUE"] = strToUpper($default);
						$_SESSION[SITE_ID][strToUpper($templateOptionKey)] = strToUpper($default);
					}
				}
				COption::SetOptionString(self::moduleID, "NeedGenerateCustomTheme", 'Y', '', $siteID);
				COption::SetOptionString(self::moduleID, "NeedGenerateCustomThemeBG", 'Y', '', $siteID);
			}
			else{
				foreach($TEMPLATE_OPTIONS as $templateOptionKey => $templateOptionValue){
					// read theme from $_SESSION if $THEME_SWITCHER == Y
					$arOptionValues = array();
					if($templateOptionValue["VALUES"] && is_array($templateOptionValue["VALUES"])){
						foreach($templateOptionValue["VALUES"] as  $i => $j){
							$arOptionValues[] = $j["VALUE"];
						}
					}
					if(($THEME_SWITCHER == "Y") && $_SESSION[$siteID] && is_array($_SESSION[$siteID])){
						foreach($_SESSION[SITE_ID] as $sessionKey => $sessionValue){
							if($sessionKey == $templateOptionValue["ID"] && (($templateOptionValue["ID"] == "CUSTOM_COLOR_THEME" || $templateOptionValue["ID"] == "CUSTOM_BGCOLOR_THEME") || in_array($sessionValue, $arOptionValues))){
								$TEMPLATE_OPTIONS[$templateOptionKey]["CURRENT_VALUE"] = $sessionValue;
							}
						}
					}

					// save theme changes in $_SESSION if $THEME_SWITCHER == Y
					if($_REQUEST && is_array($_REQUEST)){
						foreach($_REQUEST as $requestKey => $requestValue){
							if(strToUpper($requestKey) == $templateOptionValue["ID"] && (($templateOptionValue["ID"] == "CUSTOM_COLOR_THEME" || $templateOptionValue["ID"] == "CUSTOM_BGCOLOR_THEME") || in_array(strToUpper($requestValue), $arOptionValues))){
								if(($templateOptionValue["ID"] == "CUSTOM_COLOR_THEME") || ($templateOptionValue["ID"] == "CUSTOM_BGCOLOR_THEME")){
									$requestValue = str_replace('#', '', $requestValue);
									$requestValue = (strlen($requestValue) ? $requestValue : $templateOptionValue['DEFAULT']);
								}

								if($templateOptionValue["ID"] == "COLOR_THEME" && $requestValue == 'CUSTOM'){
									COption::SetOptionString(self::moduleID, "NeedGenerateCustomTheme", 'Y', '', $siteID);
								}
								if($templateOptionValue["ID"] == "BGCOLOR_THEME" && $requestValue == 'CUSTOM'){
									COption::SetOptionString(self::moduleID, "NeedGenerateCustomThemeBG", 'Y', '', $siteID);
								}

								if($THEME_SWITCHER == "Y"){
									$_SESSION[$siteID][strToUpper($requestKey)] = strToUpper($requestValue);
									$TEMPLATE_OPTIONS[$templateOptionKey]["CURRENT_VALUE"] = strToUpper($requestValue);
								}
							}
						}
					}
				}
			}
		}
		if(isset($_REQUEST["color_theme"]) && $_REQUEST["color_theme"]){
			LocalRedirect($_SERVER["HTTP_REFERER"]);
		}

		$SITE_THEME = $TEMPLATE_OPTIONS["COLOR_THEME"]["CURRENT_VALUE"];
		$SITE_THEMEBG = $TEMPLATE_OPTIONS["BGCOLOR_THEME"]["CURRENT_VALUE"];
		$SITE_TYPE_HOVER_IMG = $TEMPLATE_OPTIONS["DETAIL_PICTURE_MODE"]["CURRENT_VALUE"];

		$SITE_THEME_PATH = SITE_TEMPLATE_PATH.'/themes/'.strToLower($SITE_THEME.($SITE_THEME !== 'CUSTOM' ? '' : '_'.$siteID));
		$SITE_THEMEBG_PATH = SITE_TEMPLATE_PATH.'/bg_color/'.strToLower($SITE_THEMEBG.($SITE_THEMEBG !== 'CUSTOM' ? '' : '_'.$siteID));
		$APPLICATION->SetAdditionalCSS($SITE_THEME_PATH.'/theme.css', true);
		$APPLICATION->SetAdditionalCSS($SITE_THEMEBG_PATH.'/bgcolors.css', true);
		COptimus::GenerateThemes($siteID);

		if(CModule::IncludeModuleEx(self::moduleID) == 1){
			$APPLICATION->SetPageProperty("viewport", "user-scalable=no, initial-scale=1.0, maximum-scale=1.0, width=device-width");
			$APPLICATION->SetPageProperty("HandheldFriendly", "true");
			$APPLICATION->SetPageProperty("apple-mobile-web-app-capable", "yes");
			$APPLICATION->SetPageProperty("apple-mobile-web-app-status-bar-style", "black");
			$APPLICATION->SetPageProperty("SKYPE_TOOLBAR", "SKYPE_TOOLBAR_PARSER_COMPATIBLE");
			$APPLICATION->SetAdditionalCSS(SITE_TEMPLATE_PATH.'/css/jquery.fancybox.css');
			$APPLICATION->SetAdditionalCSS(SITE_TEMPLATE_PATH.'/css/styles.css');
			if($SITE_TYPE_HOVER_IMG == 'MAGNIFIER')
				$APPLICATION->SetAdditionalCSS(SITE_TEMPLATE_PATH.'/css/xzoom.css');
			if($_REQUEST && isset($_REQUEST['print'])){
				$APPLICATION->SetAdditionalCSS(SITE_TEMPLATE_PATH.'/css/print.css', true);
			}else{
				$APPLICATION->SetAdditionalCSS(((COption::GetOptionString('main', 'use_minified_assets', 'N', $siteID) === 'Y') && file_exists($_SERVER['DOCUMENT_ROOT'].SITE_TEMPLATE_PATH.'/css/media.min.css')) ? SITE_TEMPLATE_PATH.'/css/media.min.css' : SITE_TEMPLATE_PATH.'/css/media.css', true);
			}
			$APPLICATION->SetAdditionalCSS(SITE_TEMPLATE_PATH.'/css/fonts/font-awesome/css/font-awesome.min.css', true);
			$APPLICATION->SetAdditionalCSS(SITE_TEMPLATE_PATH.'/css/print.css', true);
			$APPLICATION->SetAdditionalCSS(SITE_TEMPLATE_PATH.'/css/custom.css', true);
			$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.actual.min.js');
			$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jqModal.js');
			$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.fancybox.js');
			$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.history.js');
			$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.flexslider.js');
			$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.validate.min.js');
			$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.inputmask.bundle.min.js');
			$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.easing.1.3.js');
			$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/equalize.min.js');
			$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.alphanumeric.js');
			$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.cookie.js');
			$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.plugin.min.js');
			$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.countdown.min.js');
			$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.countdown-ru.js');
			$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.ikSelect.js');
			$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/sly.js');
			$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/equalize_ext.js');
			$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.dotdotdot.js');
			// $APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/zoomsl-3.0.js');
			if($SITE_TYPE_HOVER_IMG == 'MAGNIFIER')
				$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/xzoom.js');
			$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/main.js');
			$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/custom.js', true);

			if(strlen($TEMPLATE_OPTIONS['FAVICON_IMAGE']['CURRENT_IMG'])){
				$APPLICATION->AddHeadString('<link rel="shortcut icon" href="'.$TEMPLATE_OPTIONS['FAVICON_IMAGE']['CURRENT_IMG'].'" type="image/x-icon" />', true);
			}
			if(strlen($TEMPLATE_OPTIONS['APPLE_TOUCH_ICON_IMAGE']['CURRENT_IMG'])){
				$APPLICATION->AddHeadString('<link rel="apple-touch-icon" sizes="180x180" href="'.$TEMPLATE_OPTIONS['APPLE_TOUCH_ICON_IMAGE']['CURRENT_IMG'].'" />', true);
			}

			CJSCore::Init(array("jquery"));
			CAjax::Init();
			\Bitrix\Main\Loader::includeModule('iblock');
			\Bitrix\Main\Loader::includeModule('sale');
			\Bitrix\Main\Loader::includeModule('catalog');

			self::showBgImage($siteID);

			return true;
		}
		else{
			$APPLICATION->SetAdditionalCSS(SITE_TEMPLATE_PATH.'/css/styles.css');
			$APPLICATION->SetTitle(GetMessage("ERROR_INCLUDE_MODULE"));
			$APPLICATION->IncludeFile(SITE_DIR."include/error_include_module.php", Array(), Array()); die();
		}
	}

	static function checkBgImage($siteID){
		global $APPLICATION;
		static $arBanner;
		if($arBanner===NULL){
			$arItems = COptimusCache::CIBLockElement_GetList(array("SORT" => "ASC", 'CACHE' => array('TAG' => COptimusCache::GetIBlockCacheTag(COptimusCache::$arIBlocks[$siteID]["aspro_optimus_adv"]["aspro_optimus_bg_images"][0]))), array('IBLOCK_ID' => COptimusCache::$arIBlocks[$siteID]["aspro_optimus_adv"]["aspro_optimus_bg_images"][0], "ACTIVE"=>"Y"), false, false, array("ID", "NAME", "PREVIEW_PICTURE", "PROPERTY_URL", "PROPERTY_FIXED_BANNER", "PROPERTY_URL_NOT_SHOW"));
			$arBanner=array();
			if($arItems){
				$curPage=$APPLICATION->GetCurPage();
				foreach($arItems as $arItem){
					if(isset($arItem["PROPERTY_URL_VALUE"]) && $arItem["PREVIEW_PICTURE"]){
						if(!is_array($arItem["PROPERTY_URL_VALUE"]))
							$arItem["PROPERTY_URL_VALUE"]=array($arItem["PROPERTY_URL_VALUE"]);
						if($arItem["PROPERTY_URL_VALUE"]){
							foreach($arItem["PROPERTY_URL_VALUE"] as $url){
								$url=str_replace("SITE_DIR", SITE_DIR, $url);
								if($arItem["PROPERTY_URL_NOT_SHOW_VALUE"]){
									if(!is_array($arItem["PROPERTY_URL_NOT_SHOW_VALUE"]))
										$arItem["PROPERTY_URL_NOT_SHOW_VALUE"]=array($arItem["PROPERTY_URL_NOT_SHOW_VALUE"]);
									foreach($arItem["PROPERTY_URL_NOT_SHOW_VALUE"] as $url_not_show){
										$url_not_show=str_replace("SITE_DIR", SITE_DIR, $url_not_show);
										if(CSite::InDir($url_not_show)){
											break 2;
										}
									}
									foreach($arItem["PROPERTY_URL_NOT_SHOW_VALUE"] as $url_not_show){
										$url_not_show=str_replace("SITE_DIR", SITE_DIR, $url_not_show);
										if(CSite::InDir($url_not_show)){
											// continue;
											break 2;
										}else{
											if(CSite::InDir($url)){
												$arBanner=$arItem;
												break;
											}
										}
									}
								}else{
									if(CSite::InDir($url)){
										$arBanner=$arItem;
										break;
									}
								}
							}
						}
					}
				}
			}
		}
		return $arBanner;
	}

	function showBgImage($siteID){
		global $APPLICATION;
		$arBanner=self::checkBgImage($siteID);
		if($arBanner){
			$image=CFile::GetFileArray($arBanner["PREVIEW_PICTURE"]);
			$class="bg_image_site";
			if($arBanner["PROPERTY_FIXED_BANNER_VALUE"]=="Y")
				$class.=" fixed";
			if(self::IsMainPage())
				$class.=" opacity";
			$APPLICATION->AddHeadString('<script>$(document).ready(function(){$(\'body\').append("<span class=\''.$class.'\' style=\'background-image:url('.$image["SRC"].');\'></span>");})</script>');
		}
		return true;
	}

	function ShowLogo(){
		global $arSite, $TEMPLATE_OPTIONS;
		$image=($TEMPLATE_OPTIONS["LOGO_IMAGE"]["CURRENT_IMG"] ? $TEMPLATE_OPTIONS["LOGO_IMAGE"]["CURRENT_IMG"] : SITE_DIR."include/logo.png");?>
		<a href="<?=SITE_DIR?>"><img src="<?=$image?>" alt="<?=$arSite["SITE_NAME"]?>" title="<?=$arSite["SITE_NAME"]?>" /></a>
	<?}

	static function getCurrentPageClass(){
		static $result;
		global $TEMPLATE_OPTIONS;
		$arHidePage = array("front_page", "catalog_page");

		if(!isset($result)){
			if(self::IsMainPage())
				$result = 'front';
			if(self::IsAuthSection())
				$result = 'auth';
			if(self::IsBasketPage())
				$result = 'basket';
			if(self::IsCatalogPage())
				$result = 'catalog';
			if(self::IsPersonalPage())
				$result = 'personal';
			if(self::IsOrderPage())
				$result = 'order';
			if($result)
				$result.='_page';

			if($TEMPLATE_OPTIONS['MENU_POSITION_MAIN']['CURRENT_VALUE'] == 'HIDE' && in_array($result, $arHidePage))
				$result = 'hide_catalog';
		}
		return $result;
	}

	static function IsMainPage(){
		static $result;

		if(!isset($result)){
			$result = CSite::InDir(SITE_DIR.'index.php');
		}

		return $result;
	}

	static function IsAuthSection(){
		static $result;

		if(!isset($result)){
			$result = CSite::InDir(SITE_DIR.'auth/');
		}

		return $result;
	}

	static function IsBasketPage(){
		static $result;

		if(!isset($result)){
			$result = CSite::InDir(SITE_DIR.'basket/');
		}

		return $result;
	}

	static function IsCatalogPage(){
		static $result;

		if(!isset($result)){
			$result = CSite::InDir(SITE_DIR.'catalog/');
		}

		return $result;
	}

	static function IsOrderPage(){
		static $result;

		if(!isset($result)){
			$result = CSite::InDir(SITE_DIR.'order/');
		}

		return $result;
	}

	static function IsPersonalPage(){
		static $result;

		if(!isset($result)){
			$result = CSite::InDir(SITE_DIR.'personal/');
		}

		return $result;
	}

	function GenerateMinCss($file){
		if(file_exists($file)){
			$content = @file_get_contents($file);
			if($content !== false){
				$content = preg_replace('!/\*[^*]*\*+([^/][^*]*\*+)*/!', '', $content);
				$content = str_replace(array("\r\n", "\r", "\n", "\t"), '', $content);
				$content = preg_replace('/ {2,}/', ' ', $content);
				$content = str_replace(array(' : ', ': ', ' :',), ':', $content);
				$content = str_replace(array(' ; ', '; ', ' ;'), ';', $content);
				$content = str_replace(array(' > ', '> ', ' >'), '>', $content);
				$content = str_replace(array(' + ', '+ ', ' +'), '+', $content);
				$content = str_replace(array(' { ', '{ ', ' {'), '{', $content);
				$content = str_replace(array(' } ', '} ', ' }'), '}', $content);
				$content = str_replace(array(' ( ', '( ', ' ('), '(', $content);
				$content = str_replace(array(' ) ', ') ', ' )'), ')', $content);
				$content = str_replace('and(', 'and (', $content);
				$content = str_replace(')li', ') li', $content);
				$content = str_replace(').', ') .', $content);
				@file_put_contents(dirname($file).'/'.basename($file, '.css').'.min.css', $content);
			}
		}

		return false;
	}

	function GenerateThemes($siteID){
		global $SITE_THEME, $TEMPLATE_OPTIONS, $THEME_SWITCHER;
		$arBaseColors = $TEMPLATE_OPTIONS['COLOR_THEME']['VALUES'];
		$arBaseBgColors = $TEMPLATE_OPTIONS['BGCOLOR_THEME']['VALUES'];
		$isCustomTheme = $TEMPLATE_OPTIONS['COLOR_THEME']['CURRENT_VALUE'] === 'CUSTOM';
		$isCustomThemeBG = $TEMPLATE_OPTIONS['BGCOLOR_THEME']['CURRENT_VALUE'] === 'CUSTOM';

		$bNeedGenerateAllThemes = COption::GetOptionString(self::moduleID, 'NeedGenerateThemes', 'N', $siteID) === 'Y';
		$bNeedGenerateCustomTheme = COption::GetOptionString(self::moduleID, 'NeedGenerateCustomTheme', 'N', $siteID) === 'Y';
		$bNeedGenerateCustomThemeBG = COption::GetOptionString(self::moduleID, 'NeedGenerateCustomThemeBG', 'N', $siteID) === 'Y';

		$baseColorCustom = $baseColorBGCustom = '';
		$lastGeneratedBaseColorCustom = COption::GetOptionString(self::moduleID, 'LastGeneratedBaseColorCustom', '', $siteID);
		if(isset($TEMPLATE_OPTIONS['CUSTOM_COLOR_THEME'])){
			$baseColorCustom = str_replace('#', '', $TEMPLATE_OPTIONS['CUSTOM_COLOR_THEME']['CURRENT_VALUE']);
			$baseColorCustom = '#'.(strlen($baseColorCustom) ? $baseColorCustom : $TEMPLATE_OPTIONS['CUSTOM_COLOR_THEME']['DEFAULT']);
		}
		$lastGeneratedBaseColorBGCustom = COption::GetOptionString(self::moduleID, 'LastGeneratedBaseColorBGCustom', '', $siteID);
		if(isset($TEMPLATE_OPTIONS['CUSTOM_BGCOLOR_THEME'])){
			$baseColorBGCustom = str_replace('#', '', $TEMPLATE_OPTIONS['CUSTOM_BGCOLOR_THEME']['CURRENT_VALUE']);
			$baseColorBGCustom = (strlen($baseColorBGCustom) ? $baseColorBGCustom : $TEMPLATE_OPTIONS['CUSTOM_BGCOLOR_THEME']['DEFAULT']);
		}

		$bGenerateAll = self::devMode || $bNeedGenerateAllThemes;
		$bGenerateCustom = $bGenerateAll || $bNeedGenerateCustomTheme || ($THEME_SWITCHER === 'Y' && $isCustomTheme && strlen($baseColorCustom) && $baseColorCustom != $lastGeneratedBaseColorCustom);
		$bGenerateCustomBG = $bGenerateAll || $bNeedGenerateCustomThemeBG || ($THEME_SWITCHER === 'Y' && $isCustomThemeBG && strlen($baseColorBGCustom) && $baseColorBGCustom != $lastGeneratedBaseColorBGCustom);
		if($arBaseColors && is_array($arBaseColors) && ($bGenerateAll || $bGenerateCustom || $isCustomThemeBG)){
			if(!class_exists('lessc')){
				include_once 'lessc.inc.php';
			}
			$less = new lessc;
			try{
				foreach($arBaseColors as $arColor){
					if(($bCustom = ($arColor['VALUE'] == 'CUSTOM')) && $bGenerateCustom){
						if(strlen($baseColorCustom)){
							$less->setVariables(array('bcolor' => $baseColorCustom));
						}
					}
					elseif($bGenerateAll){
						$less->setVariables(array('bcolor' => $arColor['COMPONENT_VALUE']));
					}

					if($bGenerateAll || ($bCustom && $bGenerateCustom)){
						if(defined('SITE_TEMPLATE_PATH')){
							$themeDirPath = $_SERVER['DOCUMENT_ROOT'].SITE_TEMPLATE_PATH.'/themes/'.strToLower($arColor['VALUE'].($arColor['VALUE'] !== 'CUSTOM' ? '' : '_'.$siteID)).'/';
							if(!is_dir($themeDirPath)) mkdir($themeDirPath, 0755, true);
							$output = $less->compileFile(__DIR__.'/../../css/theme.less', $themeDirPath.'theme.css');
							if($output){
								if($bCustom){
									COption::SetOptionString(self::moduleID, 'LastGeneratedBaseColorCustom', $baseColorCustom, '', $siteID);
								}
								self::GenerateMinCss($themeDirPath.'theme.css');
							}
						}
					}
				}
				foreach($arBaseBgColors as $arColor){
					if(($bCustom = ($arColor['VALUE'] == 'CUSTOM')) && $bGenerateCustomBG){
						if(strlen($baseColorBGCustom)){
							$footerBgColor = $baseColorBGCustom === "FFFFFF" ? "F6F6F7" : $baseColorBGCustom;
							$less->setVariables(array('bcolor' => '#'.$baseColorBGCustom, 'fcolor' => '#'.$footerBgColor));
						}
					}
					elseif($bGenerateAll){
						$less->setVariables(array('bcolor' => $arColor['COMPONENT_VALUE'], 'fcolor' => $arColor['COMPONENT_VALUE']));
					}

					if($bGenerateAll || ($bCustom && $bGenerateCustomBG)){
						if(defined('SITE_TEMPLATE_PATH')){
							$themeDirPath = $_SERVER['DOCUMENT_ROOT'].SITE_TEMPLATE_PATH.'/bg_color/'.strToLower($arColor['VALUE'].($arColor['VALUE'] !== 'CUSTOM' ? '' : '_'.$siteID)).'/';
							if(!is_dir($themeDirPath)) mkdir($themeDirPath, 0755, true);
							$output = $less->compileFile(__DIR__.'/../../css/bgtheme.less', $themeDirPath.'bgcolors.css');
							if($output){
								if($bCustom){
									COption::SetOptionString(self::moduleID, 'LastGeneratedBaseColorBGCustom', $baseColorBGCustom, '', $siteID);
								}
								self::GenerateMinCss($themeDirPath.'bgcolors.css');
							}
						}
					}
				}
			}
			catch(exception $e){
				echo 'Fatal error: '.$e->getMessage();
				die();
			}

			if($bNeedGenerateAllThemes){
				COption::SetOptionString(self::moduleID, "NeedGenerateThemes", 'N', '', $siteID);
			}
			if($bNeedGenerateCustomTheme){
				COption::SetOptionString(self::moduleID, "NeedGenerateCustomTheme", 'N', '', $siteID);
			}
			if($bNeedGenerateCustomThemeBG){
				COption::SetOptionString(self::moduleID, "NeedGenerateCustomThemeBG", 'N', '', $siteID);
			}
		}
	}

	function getChilds($input, &$start = 0, $level = 0){
		$childs = array();

		if(!$level){
			$lastDepthLevel = 1;
			if(is_array($input)){
				foreach($input as $i => $arItem){
					if($arItem["DEPTH_LEVEL"] > $lastDepthLevel){
						if($i > 0){
							$input[$i - 1]["IS_PARENT"] = 1;
						}
					}
					$lastDepthLevel = $arItem["DEPTH_LEVEL"];
				}
			}
		}

		for($i = $start, $count = count($input); $i < $count; ++$i){
			$item = $input[$i];
			if($level > $item['DEPTH_LEVEL'] - 1){
				break;
			}
			elseif(!empty($item['IS_PARENT'])){
				++$i;
				$item['CHILD'] = self::getChilds($input, $i, $level + 1);
				--$i;
			}
			$childs[] = $item;
		}

		$start = $i;
		return $childs;
	}

	function unique_multidim_array($array, $key) {
	    $temp_array = array();
	    $i = 0;
	    $key_array = array();

	    foreach($array as $val) {
	        if (!in_array($val[$key], $key_array)) {
	            $key_array[$i] = $val[$key];
	            $temp_array[$i] = $val;
	        }
	        $i++;
	    }
	    return $temp_array;
	}

	function convertArray($array, $charset){
		global $APPLICATION;
	    if(is_array($array) && $array){
		    foreach($array as $key=>$arVal) {
		    	foreach($arVal as $key2=>$value){
					$array[$key][$key2]=$APPLICATION->ConvertCharset($value, 'UTF-8', $charset);
		    	}
		    }
		}else{
			$array=array();
		}
	    return $array;
	}

	function getChilds2($input, &$start = 0, $level = 0){
		static $arIblockItemsMD5 = array();

		if(!$level){
			$lastDepthLevel = 1;
			if($input && is_array($input)){
				foreach($input as $i => $arItem){
					if($arItem['DEPTH_LEVEL'] > $lastDepthLevel){
						if($i > 0){
							$input[$i - 1]['IS_PARENT'] = 1;
						}
					}
					$lastDepthLevel = $arItem['DEPTH_LEVEL'];
				}
			}
		}

		$childs = array();
		$count = count($input);
		for($i = $start; $i < $count; ++$i){
			$item = $input[$i];
			if(!isset($item)){
				continue;
			}
			if($level > $item['DEPTH_LEVEL'] - 1){
				break;
			}
			else{
				if(!empty($item['IS_PARENT'])){
					$i++;
					$item['CHILD'] = self::getChilds($input, $i, $level+1);
					$i--;
				}

				$childs[] = $item;
			}
		}
		$start = $i;

		if(is_array($childs)){
			foreach($childs as $j => $item){
				if($item['PARAMS']){
					$md5 = md5($item['TEXT'].$item['LINK'].$item['SELECTED'].$item['PERMISSION'].$item['ITEM_TYPE'].$item['IS_PARENT'].serialize($item['ADDITIONAL_LINKS']).serialize($item['PARAMS']));
					if(isset($arIblockItemsMD5[$md5][$item['PARAMS']['DEPTH_LEVEL']])){
						if(isset($arIblockItemsMD5[$md5][$item['PARAMS']['DEPTH_LEVEL']][$level]) || ($item['DEPTH_LEVEL'] === 1 && !$level)){
							unset($childs[$j]);
							continue;
						}
					}
					if(!isset($arIblockItemsMD5[$md5])){
						$arIblockItemsMD5[$md5] = array($item['PARAMS']['DEPTH_LEVEL'] => array($level => true));
					}
					else{
						$arIblockItemsMD5[$md5][$item['PARAMS']['DEPTH_LEVEL']][$level] = true;
					}
				}
			}
		}

		if(!$level){
			$arIblockItemsMD5 = array();
		}

		return $childs;
	}

	function getSectionChilds($PSID, &$arSections, &$arSectionsByParentSectionID, &$arItemsBySectionID, &$aMenuLinksExt){
		if($arSections && is_array($arSections)){
			foreach($arSections as $arSection){
				if($arSection['IBLOCK_SECTION_ID'] == $PSID){
					$arItem = array($arSection['NAME'], $arSection['SECTION_PAGE_URL'], array(), array('FROM_IBLOCK' => 1, 'DEPTH_LEVEL' => $arSection['DEPTH_LEVEL']));
					$arItem[3]['IS_PARENT'] = (isset($arItemsBySectionID[$arSection['ID']]) || isset($arSectionsByParentSectionID[$arSection['ID']]) ? 1 : 0);
					if($arSection["PICTURE"])
						$arItem[3]["PICTURE"]=$arSection["PICTURE"];
					$aMenuLinksExt[] = $arItem;
					if($arItem[3]['IS_PARENT']){
						// subsections
						self::getSectionChilds($arSection['ID'], $arSections, $arSectionsByParentSectionID, $arItemsBySectionID, $aMenuLinksExt);
						// section elements
						if($arItemsBySectionID[$arSection['ID']] && is_array($arItemsBySectionID[$arSection['ID']])){
							foreach($arItemsBySectionID[$arSection['ID']] as $arItem){
								if(is_array($arItem['DETAIL_PAGE_URL'])){
									if(isset($arItem['CANONICAL_PAGE_URL'])){
										$arItem['DETAIL_PAGE_URL'] = $arItem['CANONICAL_PAGE_URL'];
									}
									else{
										$arItem['DETAIL_PAGE_URL'] = $arItem['DETAIL_PAGE_URL'][key($arItem['DETAIL_PAGE_URL'])];
									}
								}
								$aMenuLinksExt[] = array($arItem['NAME'], $arItem['DETAIL_PAGE_URL'], array(), array('FROM_IBLOCK' => 1, 'DEPTH_LEVEL' => ($arSection['DEPTH_LEVEL'] + 1), 'IS_ITEM' => 1));
							}
						}
					}
				}
			}
		}
	}

	function GetDirMenuParametrs($dir){
		if(strlen($dir)){
			$file = str_replace('//', '/', $dir.'/.section.php');
			if(file_exists($file)){
				@include($file);
				return $arDirProperties;
			}
		}

		return false;
	}


	static function cmpByID($a, $b){
		return ($b['ID'] - $a['ID']);
	}

	static function cmpBySort($a, $b){
		return ($a['SORT'] - $b['SORT']);
	}

	static function cmpByIDFilter($a, $b){
		global $IDFilter;
		$ak = array_search($a['ID'], $IDFilter);
		$bk = array_search($b['ID'], $IDFilter);
		if($ak === $bk){
			return 0;
		}
		else{
			return ($ak > $bk ? 1 : -1);
		}
	}

	function getChainNeighbors($curSectionID, $chainPath){
		static $arSections, $arSectionsIDs, $arSubSections;
		$arResult = array();

		if($arSections === NULL){
			$arSections = $arSectionsIDs = $arSubSections = array();
			$IBLOCK_ID = false;
			$nav = CIBlockSection::GetNavChain(false, $curSectionID, array("ID", "IBLOCK_ID", "IBLOCK_SECTION_ID", "SECTION_PAGE_URL"));
			while($ar = $nav->GetNext()){
				$arSections[] = $ar;
				$arSectionsIDs[] = ($ar["IBLOCK_SECTION_ID"] ? $ar["IBLOCK_SECTION_ID"] : 0);
				$IBLOCK_ID = $ar["IBLOCK_ID"];
			}

			if($arSectionsIDs){
				$resSubSection = CIBlockSection::GetList(array('SORT' => 'ASC'), array("ACTIVE" => "Y", "GLOBAL_ACTIVE" => "Y", "IBLOCK_ID" => $IBLOCK_ID, "SECTION_ID" => $arSectionsIDs), false, array("ID", "NAME", "IBLOCK_SECTION_ID", "SECTION_PAGE_URL"));
				while($arSubSection = $resSubSection->GetNext()){
					$arSubSection["IBLOCK_SECTION_ID"] = ($arSubSection["IBLOCK_SECTION_ID"] ? $arSubSection["IBLOCK_SECTION_ID"] : 0);
					$arSubSections[$arSubSection["IBLOCK_SECTION_ID"]][] = $arSubSection;
				}

				if(in_array(0, $arSectionsIDs)){
					$resSubSection = CIBlockSection::GetList(array('SORT' => 'ASC'), array("ACTIVE" => "Y", "GLOBAL_ACTIVE" => "Y", "IBLOCK_ID" => $IBLOCK_ID, "SECTION_ID" => false), false, array("ID", "NAME", "IBLOCK_SECTION_ID", "SECTION_PAGE_URL"));
					while($arSubSection = $resSubSection->GetNext()){
						$arSubSections[$arSubSection["IBLOCK_SECTION_ID"]][] = $arSubSection;
					}
				}
			}
		}

		if($arSections && strlen($chainPath)){
			foreach($arSections as $arSection){
				if($arSection["SECTION_PAGE_URL"] == $chainPath){
					if($arSubSections[$arSection["IBLOCK_SECTION_ID"]]){
						foreach($arSubSections[$arSection["IBLOCK_SECTION_ID"]] as $arSubSection){
							if($curSectionID !== $arSubSection["ID"]){
								$arResult[] = array("NAME" => $arSubSection["NAME"], "LINK" => $arSubSection["SECTION_PAGE_URL"]);
							}
						}
					}
					break;
				}
			}
		}

		return $arResult;
	}

	function drawFormField($FIELD_SID, $arQuestion){
		?>
		<?$arQuestion["HTML_CODE"] = str_replace('name=', 'data-sid="'.$FIELD_SID.'" name=', $arQuestion["HTML_CODE"]);?>
		<?$arQuestion["HTML_CODE"] = str_replace('left', '', $arQuestion["HTML_CODE"]);?>
		<?$arQuestion["HTML_CODE"] = str_replace('size="0"', '', $arQuestion["HTML_CODE"]);?>
		<?if($arQuestion['STRUCTURE'][0]['FIELD_TYPE'] == 'hidden'):?>
			<?=$arQuestion["HTML_CODE"];?>
		<?else:?>
			<div class="form-control">
				<label><span><?=$arQuestion["CAPTION"]?><?=($arQuestion["REQUIRED"] == "Y" ? '&nbsp;<span class="star">*</span>' : '')?></span></label>
				<?
				if(is_array($arResult["FORM_ERRORS"]) && array_key_exists($FIELD_SID, $arResult['FORM_ERRORS'])){
					$arQuestion["HTML_CODE"] = str_replace('class="', 'class="error ', $arQuestion["HTML_CODE"]);
				}
				if($arQuestion["REQUIRED"] == "Y"){
					$arQuestion["HTML_CODE"] = str_replace('name=', 'required name=', $arQuestion["HTML_CODE"]);
				}
				if($arQuestion["STRUCTURE"][0]["FIELD_TYPE"] == "email"){
					$arQuestion["HTML_CODE"] = str_replace('type="text"', 'type="email" placeholder="mail@domen.com"', $arQuestion["HTML_CODE"]);
				}
				?>
				<?=$arQuestion["HTML_CODE"]?>
			</div>
		<?endif;?>
		<?
	}

	function GetValidFormIDForSite(&$form_id){
		if(!is_numeric($form_id) && !in_array($form_id, array('auth', 'one_click_buy'))){
			CModule::IncludeModule('form');
			$rsForm = CForm::GetList($by = "id", $order = "asc", array("ACTIVE" => "Y", "SID" => $form_id, "SITE" => array(SITE_ID)), $is_filtered);
			if($item = $rsForm->Fetch()){
				$form_id = $item["ID"];
			}
		}

		return $form_id;
	}

	function CheckTypeCount($totalCount){
		if(is_float($totalCount)){
			return floatval($totalCount);
		}
		else{
			return intval($totalCount);
		}
	}

	function GetTotalCount(&$arItem){
		$totalCount = 0;
		if($arItem["OFFERS"]){
			foreach($arItem["OFFERS"] as $arOffer){
				$totalCount += $arOffer["CATALOG_QUANTITY"];
			}
		}elseif($arItem["PRICES"]){
			$totalCount = ( $arItem["~CATALOG_QUANTITY"] != $arItem["CATALOG_QUANTITY"] ? $arItem["~CATALOG_QUANTITY"] : $arItem["CATALOG_QUANTITY"] );
		}else{
			$totalCount = ( $arItem["~CATALOG_QUANTITY"] != $arItem["CATALOG_QUANTITY"] ? $arItem["~CATALOG_QUANTITY"] : $arItem["CATALOG_QUANTITY"] );
		}
		return self::CheckTypeCount($totalCount);
	}

	function GetQuantityArray($totalCount, $arItemIDs = array(), $useStoreClick="N"){
		static $arQuantityOptions, $arQuantityRights;
		if($arQuantityOptions === NULL){
			$arQuantityOptions = array(
				"USE_WORD_EXPRESSION" => COption::GetOptionString("aspro.optimus", "USE_WORD_EXPRESSION", "Y", SITE_ID),
				"MAX_AMOUNT" => COption::GetOptionString("aspro.optimus", "MAX_AMOUNT", "10", SITE_ID),
				"MIN_AMOUNT" => COption::GetOptionString("aspro.optimus", "MIN_AMOUNT", "2", SITE_ID),
				"EXPRESSION_FOR_MIN" => COption::GetOptionString("aspro.optimus", "EXPRESSION_FOR_MIN", GetMessage("EXPRESSION_FOR_MIN_DEFAULT"), SITE_ID),
				"EXPRESSION_FOR_MID" => COption::GetOptionString("aspro.optimus", "EXPRESSION_FOR_MID", GetMessage("EXPRESSION_FOR_MID_DEFAULT"), SITE_ID),
				"EXPRESSION_FOR_MAX" => COption::GetOptionString("aspro.optimus", "EXPRESSION_FOR_MAX", GetMessage("EXPRESSION_FOR_MAX_DEFAULT"), SITE_ID),
				"EXPRESSION_FOR_EXISTS" => COption::GetOptionString("aspro.optimus", "EXPRESSION_FOR_EXISTS", GetMessage("EXPRESSION_FOR_EXISTS_DEFAULT"), SITE_ID),
				"EXPRESSION_FOR_NOTEXISTS" => COption::GetOptionString("aspro.optimus", "EXPRESSION_FOR_NOTEXISTS", GetMessage("EXPRESSION_FOR_NOTEXISTS_DEFAULT"), SITE_ID),
				"SHOW_QUANTITY_FOR_GROUPS" => (($tmp = COption::GetOptionString("aspro.optimus", "SHOW_QUANTITY_FOR_GROUPS", "", SITE_ID)) ? explode(",", $tmp) : array()),
				"SHOW_QUANTITY_COUNT_FOR_GROUPS" => (($tmp = COption::GetOptionString("aspro.optimus", "SHOW_QUANTITY_COUNT_FOR_GROUPS", "", SITE_ID)) ? explode(",", $tmp) : array()),
			);

			$arQuantityRights = array(
				"SHOW_QUANTITY" => false,
				"SHOW_QUANTITY_COUNT" => false,
			);

			global $USER;
			$res = CUser::GetUserGroupList($USER->GetID());
			while ($arGroup = $res->Fetch()){
				if(in_array($arGroup["GROUP_ID"], $arQuantityOptions["SHOW_QUANTITY_FOR_GROUPS"])){
					$arQuantityRights["SHOW_QUANTITY"] = true;
				}
				if(in_array($arGroup["GROUP_ID"], $arQuantityOptions["SHOW_QUANTITY_COUNT_FOR_GROUPS"])){
					$arQuantityRights["SHOW_QUANTITY_COUNT"] = true;
				}
			}
		}

		$indicators = 0;
		$totalAmount = $totalText = $totalHTML = $totalHTMLs = '';

		if($arQuantityRights["SHOW_QUANTITY"]){
			if($totalCount > $arQuantityOptions["MAX_AMOUNT"]){
				$indicators = 3;
				$totalAmount = $arQuantityOptions["EXPRESSION_FOR_MAX"];
			}
			elseif($totalCount < $arQuantityOptions["MIN_AMOUNT"] && $totalCount > 0){
				$indicators = 1;
				$totalAmount = $arQuantityOptions["EXPRESSION_FOR_MIN"];
			}
			else{
				$indicators = 2;
				$totalAmount = $arQuantityOptions["EXPRESSION_FOR_MID"];
			}

			if($totalCount > 0){
				if($arQuantityRights["SHOW_QUANTITY_COUNT"]){
					$totalHTML = '<span class="first'.($indicators >= 1 ? ' r' : '').'"></span><span class="'.($indicators >= 2 ? ' r' : '').'"></span><span class="last'.($indicators >= 3 ? ' r' : '').'"></span>';
				}
				else{
					$totalHTML = '<span class="first r"></span>';
				}
			}
			else{
				$totalHTML = '<span class="null"></span>';
			}

			//$totalText = ($totalCount > 0 ? $arQuantityOptions["EXPRESSION_FOR_EXISTS"] : $arQuantityOptions["EXPRESSION_FOR_NOTEXISTS"]);
			if($totalCount > 0){
				$totalText = $arQuantityOptions["EXPRESSION_FOR_EXISTS"];
			}else{
				if($useStoreClick=="Y"){
					$totalText = "<span class='store_view'>".$arQuantityOptions["EXPRESSION_FOR_NOTEXISTS"]."</span>";
				}else{
					$totalText = $arQuantityOptions["EXPRESSION_FOR_NOTEXISTS"];
				}
			}

			if($arQuantityRights["SHOW_QUANTITY_COUNT"] && $totalCount > 0){
				if($arQuantityOptions["USE_WORD_EXPRESSION"] == "Y"){
					if(strlen($totalAmount)){
						if($useStoreClick=="Y"){
							$totalText = "<span class='store_view'>".$totalAmount."</span>";
						}else{
							$totalText = $totalAmount;
						}
					}
				}
				else{
					if($useStoreClick=="Y"){
						$totalText .= (strlen($totalText) ? " <span class='store_view'>(".$totalCount.")</span>" : "<span class='store_view'>".$totalCount."</span>");
					}else{
						$totalText .= (strlen($totalText) ? " (".$totalCount.")" : $totalCount);
					}
				}
			}
			$totalHTMLs ='<div class="item-stock" '.($arItemIDs["STORE_QUANTITY"] ? "id=".$arItemIDs["STORE_QUANTITY"] : "").'>';
			$totalHTMLs .= '<span class="icon '.$arClass[1].($totalCount > 0 ? 'stock' : ' order').'"></span><span class="value">'.$totalText.'</span>';
			$totalHTMLs .='</div>';
		}
		return array("OPTIONS" => $arQuantityOptions, "RIGHTS" => $arQuantityRights, "TEXT" => $totalText, "HTML" => $totalHTMLs);
	}

	function GetAvailiableStore($totalCount = 0, $arItemIDs=array(), $detail=false){
		static $arQuantityOptions;
		if($arQuantityOptions === NULL){
			$arQuantityOptions = array(
				"EXPRESSION_FOR_EXISTS" => COption::GetOptionString("aspro.optimus", "EXPRESSION_FOR_EXISTS", GetMessage("EXPRESSION_FOR_EXISTS_DEFAULT"), SITE_ID),
				"EXPRESSION_FOR_NOTEXISTS" => COption::GetOptionString("aspro.optimus", "EXPRESSION_FOR_NOTEXISTS", GetMessage("EXPRESSION_FOR_NOTEXISTS_DEFAULT"), SITE_ID),
			);
		}
		$totalHTML='<div class="item-stock" '.($arItemIDs["STORE_QUANTITY"] ? "id=".$arItemIDs["STORE_QUANTITY"] : "").'>';
		if($totalCount){
			$totalHTML.='<span class="icon stock"></span><span>'.$arQuantityOptions["EXPRESSION_FOR_EXISTS"];
			if($detail=="Y"){
				$totalHTML.='<span class="store_link"> ('.$totalCount.')</span>';
			}else{
				$totalHTML.=' ('.$totalCount.')';
			}
			$totalHTML.='</span>';
		}else{
			$totalHTML.='<span class="icon order"></span><span>'.$arQuantityOptions["EXPRESSION_FOR_NOTEXISTS"].'</span>';
		}
		$totalHTML.='</div>';

		return array( "OPTIONS" => $arQuantityOptions, "HTML" => $totalHTML );
	}

	function GetPropertyViewType($IBLOCK_ID){
		global $DB;
		$IBLOCK_ID = intval($IBLOCK_ID);
		$SECTION_ID=64;
		// $IBLOCK_ID = 15;
        $result = array();
		/*$rs = $DB->Query($s = "
			SELECT
				B.SECTION_PROPERTY,
				BP.ID PROPERTY_ID,
				BSP.SECTION_ID LINK_ID,
				BSP.SMART_FILTER,
				BSP.DISPLAY_TYPE,
				BSP.DISPLAY_EXPANDED,
				BSP.FILTER_HINT,
				BP.SORT,
				BP.PROPERTY_TYPE,
				BP.USER_TYPE
			FROM
				b_iblock B
				INNER JOIN b_iblock_property BP ON BP.IBLOCK_ID = B.ID
				INNER JOIN b_iblock_section_property BSP ON  BSP.PROPERTY_ID = BP.ID
			WHERE
				B.ID = ".$IBLOCK_ID."
			ORDER BY
				BP.SORT ASC, BP.ID ASC
		");*/
		$rs = $DB->Query($s = "
			SELECT
                    B.SECTION_PROPERTY,
                    BP.ID PROPERTY_ID,
                    BSP.SECTION_ID LINK_ID,
                    BSP.SMART_FILTER,
                    BSP.DISPLAY_TYPE,
                    BSP.DISPLAY_EXPANDED,
                    BSP.FILTER_HINT,
                    BP.SORT,
                    BS.LEFT_MARGIN,
                    BS.NAME LINK_TITLE,
                    BP.PROPERTY_TYPE,
                    BP.USER_TYPE
                FROM
                    b_iblock B
                    INNER JOIN b_iblock_property BP ON BP.IBLOCK_ID = B.ID
                    INNER JOIN b_iblock_section M ON M.ID = ".$SECTION_ID."
                    INNER JOIN b_iblock_section BS ON BS.IBLOCK_ID = M.IBLOCK_ID
                        AND M.LEFT_MARGIN >= BS.LEFT_MARGIN
                        AND M.RIGHT_MARGIN <= BS.RIGHT_MARGIN
                    INNER JOIN b_iblock_section_property BSP ON BSP.IBLOCK_ID = BS.IBLOCK_ID AND BSP.SECTION_ID = BS.ID AND BSP.PROPERTY_ID = BP.ID
                WHERE
                    B.ID = ".$IBLOCK_ID."
                ORDER BY
                    BP.SORT ASC, BP.ID ASC, BS.LEFT_MARGIN DESC
		");
		while ($ar = $rs->Fetch()){
			$result[$ar["PROPERTY_ID"]] = array(
				"PROPERTY_ID" => $ar["PROPERTY_ID"],
				"SMART_FILTER" => $ar["SMART_FILTER"],
				"DISPLAY_TYPE" => $ar["DISPLAY_TYPE"],
				"DISPLAY_EXPANDED" => $ar["DISPLAY_EXPANDED"],
				"FILTER_HINT" => $ar["FILTER_HINT"],
				"INHERITED_FROM" => $ar["LINK_ID"],
				"SORT" => $ar["SORT"],
				"PROPERTY_TYPE" => $ar["PROPERTY_TYPE"],
			);
		}
		return $result;
	}

	function GetSKUPropsArray(&$arSkuProps, $iblock_id=0, $type_view="list", $hide_title_props="N", $group_iblock_id="N"){
		$arSkuTemplate = array();
		$class_title=($hide_title_props=="Y" ? "hide_class" : "show_class");
		$class_title.=' bx_item_section_name';
		if($iblock_id){
			//$arPropsSku=COptimus::GetPropertyViewType($iblock_id);
			$arPropsSku=CIBlockSectionPropertyLink::GetArray($iblock_id, 64);
			if($arPropsSku){
				foreach ($arSkuProps as $key=>$arProp){
					if($arPropsSku[$arProp["ID"]]){
						$arSkuProps[$key]["DISPLAY_TYPE"]=$arPropsSku[$arProp["ID"]]["DISPLAY_TYPE"];
					}
				}
			}
		}?>

		<?

		if($group_iblock_id=="Y"){
			foreach ($arSkuProps as $iblockId => $skuProps){
				$arSkuTemplate[$iblockId] = array();
				foreach ($skuProps as $key=>&$arProp){
					$templateRow = '';
					if(($arProp["DISPLAY_TYPE"]=="P" || $arProp["DISPLAY_TYPE"]=="R" ) && $type_view!= 'block' ){
						$templateRow .= '<div class="bx_item_detail_size" id="#ITEM#_prop_'.$arProp['ID'].'_cont">'.
		'<span class="'.$class_title.'">'.htmlspecialcharsex($arProp['NAME']).'</span>'.
		'<div class="bx_size_scroller_container form-control bg"><div class="bx_size"><select id="#ITEM#_prop_'.$arProp['ID'].'_list">';
						foreach ($arProp['VALUES'] as $arOneValue){
							//if($arOneValue['ID']>0){
								$arOneValue['NAME'] = htmlspecialcharsbx($arOneValue['NAME']);
								$templateRow .= '<option data-treevalue="'.$arProp['ID'].'_'.$arOneValue['ID'].'" data-showtype="select" data-onevalue="'.$arOneValue['ID'].'" ';
								if($arProp["DISPLAY_TYPE"]=="R"){
									$templateRow .= 'data-img_src="'.$arOneValue["PICT"]["SRC"].'" ';
								}
								$templateRow .= 'title="'.$arProp['NAME'].': '.$arOneValue['NAME'].'">';
								$templateRow .= '<span class="cnt">'.$arOneValue['NAME'].'</span>';
								$templateRow .= '</option>';
							//}
						}
						$templateRow .= '</select></div>'.
		'</div></div>';
					}elseif ('TEXT' == $arProp['SHOW_MODE']){
						$templateRow .= '<div class="bx_item_detail_size" id="#ITEM#_prop_'.$arProp['ID'].'_cont">'.
		'<span class="'.$class_title.'">'.htmlspecialcharsex($arProp['NAME']).'</span>'.
		'<div class="bx_size_scroller_container"><div class="bx_size"><ul id="#ITEM#_prop_'.$arProp['ID'].'_list">';
						foreach ($arProp['VALUES'] as $arOneValue){
							//if($arOneValue['ID']>0){
								$arOneValue['NAME'] = htmlspecialcharsbx($arOneValue['NAME']);
								$templateRow .= '<li data-treevalue="'.$arProp['ID'].'_'.$arOneValue['ID'].'" data-showtype="li" data-onevalue="'.$arOneValue['ID'].'" title="'.$arProp['NAME'].': '.$arOneValue['NAME'].'"><i></i><span class="cnt">'.$arOneValue['NAME'].'</span></li>';
							//}
						}
						$templateRow .= '</ul></div>'.
		'</div></div>';
					}elseif ('PICT' == $arProp['SHOW_MODE']){
						$isHasPicture = true;
						foreach ($arProp['VALUES'] as $arOneValue){
							if($arOneValue['ID']>0){
								if(!isset($arOneValue['PICT']['SRC']) || !$arOneValue['PICT']['SRC'])
									$isHasPicture = false;
							}
						}
						if($isHasPicture)
						{
							$templateRow .= '<div class="bx_item_detail_scu" id="#ITEM#_prop_'.$arProp['ID'].'_cont">'.
		'<span class="'.$class_title.'">'.htmlspecialcharsex($arProp['NAME']).'</span>'.
		'<div class="bx_scu_scroller_container"><div class="bx_scu"><ul id="#ITEM#_prop_'.$arProp['ID'].'_list">';
						}
						else
						{
							$templateRow .= '<div class="bx_item_detail_size" id="#ITEM#_prop_'.$arProp['ID'].'_cont">'.
		'<span class="'.$class_title.'">'.htmlspecialcharsex($arProp['NAME']).'</span>'.
		'<div class="bx_size_scroller_container"><div class="bx_size"><ul id="#ITEM#_prop_'.$arProp['ID'].'_list">';
						}
						foreach ($arProp['VALUES'] as $arOneValue){
							//if($arOneValue['ID']>0){
								$arOneValue['NAME'] = htmlspecialcharsbx($arOneValue['NAME']);
								if(isset($arOneValue['PICT']['SRC']) && $arOneValue['PICT']['SRC'] && $isHasPicture)
								{
									$templateRow .= '<li data-treevalue="'.$arProp['ID'].'_'.$arOneValue['ID'].'" data-showtype="li" data-onevalue="'.$arOneValue['ID'].'"><i title="'.$arProp['NAME'].': '.$arOneValue['NAME'].'"></i>'.
			'<span class="cnt1"><span class="cnt_item" style="background-image:url(\''.$arOneValue['PICT']['SRC'].'\');" title="'.$arProp['NAME'].': '.$arOneValue['NAME'].'"></span></span></li>';
								}
								else
								{
									$templateRow .= '<li data-treevalue="'.$arProp['ID'].'_'.$arOneValue['ID'].'" data-showtype="li" data-onevalue="'.$arOneValue['ID'].'" title="'.$arProp['NAME'].': '.$arOneValue['NAME'].'"><i></i><span class="cnt1"><span class="cnt_item">'.$arOneValue['NAME'].'</span></span></li>';
								}
							//}
						}
						$templateRow .= '</ul></div>'.
		'</div></div>';
					}
					$arSkuTemplate[$iblockId][$arProp['CODE']] = $templateRow;
				}
			}
		}else{

			foreach ($arSkuProps as $key=>&$arProp){
				$templateRow = '';
				if(($arProp["DISPLAY_TYPE"]=="P" || $arProp["DISPLAY_TYPE"]=="R" ) && $type_view!= 'block' ){
					$templateRow .= '<div class="bx_item_detail_size" id="#ITEM#_prop_'.$arProp['ID'].'_cont">'.
	'<span class="'.$class_title.'">'.htmlspecialcharsex($arProp['NAME']).'</span>'.
	'<div class="bx_size_scroller_container form-control bg"><div class="bx_size"><select id="#ITEM#_prop_'.$arProp['ID'].'_list">';
					foreach ($arProp['VALUES'] as $arOneValue){
						//if($arOneValue['ID']>0){
							$arOneValue['NAME'] = htmlspecialcharsbx($arOneValue['NAME']);
							$templateRow .= '<option data-treevalue="'.$arProp['ID'].'_'.$arOneValue['ID'].'" data-showtype="select" data-onevalue="'.$arOneValue['ID'].'" ';
							if($arProp["DISPLAY_TYPE"]=="R"){
								$templateRow .= 'data-img_src="'.$arOneValue["PICT"]["SRC"].'" ';
							}
							$templateRow .= 'title="'.$arProp['NAME'].': '.$arOneValue['NAME'].'">';
							$templateRow .= '<span class="cnt">'.$arOneValue['NAME'].'</span>';
							$templateRow .= '</option>';
						//}
					}
					$templateRow .= '</select></div>'.
	'</div></div>';
				}elseif ('TEXT' == $arProp['SHOW_MODE']){
					$templateRow .= '<div class="bx_item_detail_size" id="#ITEM#_prop_'.$arProp['ID'].'_cont">'.
	'<span class="'.$class_title.'">'.htmlspecialcharsex($arProp['NAME']).'</span>'.
	'<div class="bx_size_scroller_container"><div class="bx_size"><ul id="#ITEM#_prop_'.$arProp['ID'].'_list">';
					foreach ($arProp['VALUES'] as $arOneValue){
						//if($arOneValue['ID']>0){
							$arOneValue['NAME'] = htmlspecialcharsbx($arOneValue['NAME']);
							$templateRow .= '<li data-treevalue="'.$arProp['ID'].'_'.$arOneValue['ID'].'" data-showtype="li" data-onevalue="'.$arOneValue['ID'].'" title="'.$arProp['NAME'].': '.$arOneValue['NAME'].'"><i></i><span class="cnt">'.$arOneValue['NAME'].'</span></li>';
						//}
					}
					$templateRow .= '</ul></div>'.
	'</div></div>';
				}elseif ('PICT' == $arProp['SHOW_MODE']){
					$isHasPicture = true;
					foreach ($arProp['VALUES'] as $arOneValue){
						if($arOneValue['ID']>0){
							if(!isset($arOneValue['PICT']['SRC']) || !$arOneValue['PICT']['SRC'])
								$isHasPicture = false;
						}
					}
					if($isHasPicture)
					{
						$templateRow .= '<div class="bx_item_detail_scu" id="#ITEM#_prop_'.$arProp['ID'].'_cont">'.
	'<span class="'.$class_title.'">'.htmlspecialcharsex($arProp['NAME']).'</span>'.
	'<div class="bx_scu_scroller_container"><div class="bx_scu"><ul id="#ITEM#_prop_'.$arProp['ID'].'_list">';
					}
					else
					{
						$templateRow .= '<div class="bx_item_detail_size" id="#ITEM#_prop_'.$arProp['ID'].'_cont">'.
	'<span class="'.$class_title.'">'.htmlspecialcharsex($arProp['NAME']).'</span>'.
	'<div class="bx_size_scroller_container"><div class="bx_size"><ul id="#ITEM#_prop_'.$arProp['ID'].'_list">';

					}
					foreach ($arProp['VALUES'] as $arOneValue){
						//if($arOneValue['ID']>0){
							$arOneValue['NAME'] = htmlspecialcharsbx($arOneValue['NAME']);
							if(isset($arOneValue['PICT']['SRC']) && $arOneValue['PICT']['SRC'] && $isHasPicture)
							{
								$templateRow .= '<li data-treevalue="'.$arProp['ID'].'_'.$arOneValue['ID'].'" data-showtype="li" data-onevalue="'.$arOneValue['ID'].'"><i title="'.$arProp['NAME'].': '.$arOneValue['NAME'].'"></i>'.
		'<span class="cnt1"><span class="cnt_item" style="background-image:url(\''.$arOneValue['PICT']['SRC'].'\');" title="'.$arProp['NAME'].': '.$arOneValue['NAME'].'"></span></span></li>';
							}
							else
							{
								$templateRow .= '<li data-treevalue="'.$arProp['ID'].'_'.$arOneValue['ID'].'" data-showtype="li" data-onevalue="'.$arOneValue['ID'].'" title="'.$arProp['NAME'].': '.$arOneValue['NAME'].'"><i></i><span class="cnt1"><span class="cnt_item">'.$arOneValue['NAME'].'</span></span></li>';
							}
						//}
					}
					$templateRow .= '</ul></div>'.
	'</div></div>';
				}
				$arSkuTemplate[$arProp['CODE']] = $templateRow;
			}
		}
		unset($templateRow, $arProp);
		return $arSkuTemplate;
	}

	function GetItemsIDs($arItem, $detail="N"){
		$arAllIDs=array();
		$arAllIDs["strMainID"] = $arItem['strMainID'];
		$arAllIDs["strObName"] = 'ob'.preg_replace("/[^a-zA-Z0-9_]/", "x", $arAllIDs["strMainID"]);

		if($detail=="Y"){
			$arAllIDs["ALL_ITEM_IDS"] = array(
				'ID' => $arAllIDs["strMainID"],
				'PICT' => $arAllIDs["strMainID"].'_pict',
				'DISCOUNT_PICT_ID' => $arAllIDs["strMainID"].'_dsc_pict',
				'STICKER_ID' => $arAllIDs["strMainID"].'_sticker',
				'BIG_SLIDER_ID' => $arAllIDs["strMainID"].'_big_slider',
				'BIG_IMG_CONT_ID' => $arAllIDs["strMainID"].'_bigimg_cont',
				'SLIDER_CONT_ID' => $arAllIDs["strMainID"].'_slider_cont',
				'SLIDER_LIST' => $arAllIDs["strMainID"].'_slider_list',
				'SLIDER_LEFT' => $arAllIDs["strMainID"].'_slider_left',
				'SLIDER_RIGHT' => $arAllIDs["strMainID"].'_slider_right',
				'OLD_PRICE' => $arAllIDs["strMainID"].'_old_price',
				'PRICE' => $arAllIDs["strMainID"].'_price',
				'DISCOUNT_PRICE' => $arAllIDs["strMainID"].'_price_discount',
				'SLIDER_CONT_OF_ID' => $arAllIDs["strMainID"].'_slider_cont_',
				'SLIDER_LIST_OF_ID' => $arAllIDs["strMainID"].'_slider_list_',
				'SLIDER_LEFT_OF_ID' => $arAllIDs["strMainID"].'_slider_left_',
				'SLIDER_RIGHT_OF_ID' => $arAllIDs["strMainID"].'_slider_right_',
				'SLIDER_CONT_OFM_ID' => $arAllIDs["strMainID"].'_sliderm_cont_',
				'SLIDER_LIST_OFM_ID' => $arAllIDs["strMainID"].'_sliderm_list_',
				'SLIDER_LEFT_OFM_ID' => $arAllIDs["strMainID"].'_sliderm_left_',
				'SLIDER_RIGHT_OFM_ID' => $arAllIDs["strMainID"].'_sliderm_right_',
				'QUANTITY' => $arAllIDs["strMainID"].'_quantity',
				'QUANTITY_DOWN' => $arAllIDs["strMainID"].'_quant_down',
				'QUANTITY_UP' => $arAllIDs["strMainID"].'_quant_up',
				'QUANTITY_MEASURE' => $arAllIDs["strMainID"].'_quant_measure',
				'QUANTITY_LIMIT' => $arAllIDs["strMainID"].'_quant_limit',
				'BASIS_PRICE' => $arAllIDs["strMainID"].'_basis_price',
				'BUY_LINK' => $arAllIDs["strMainID"].'_buy_link',
				'BASKET_LINK' => $arAllIDs["strMainID"].'_basket_link',
				'ADD_BASKET_LINK' => $arAllIDs["strMainID"].'_add_basket_link',
				'BASKET_ACTIONS' => $arAllIDs["strMainID"].'_basket_actions',
				'NOT_AVAILABLE_MESS' => $arAllIDs["strMainID"].'_not_avail',
				'COMPARE_LINK' => $arAllIDs["strMainID"].'_compare_link',
				'PROP' => $arAllIDs["strMainID"].'_prop_',
				'PROP_DIV' => $arAllIDs["strMainID"].'_skudiv',
				'DISPLAY_PROP_DIV' => $arAllIDs["strMainID"].'_sku_prop',
				'DISPLAY_PROP_ARTICLE_DIV' => $arAllIDs["strMainID"].'_sku_article_prop',
				'OFFER_GROUP' => $arAllIDs["strMainID"].'_set_group_',
				'BASKET_PROP_DIV' => $arAllIDs["strMainID"].'_basket_prop',
				'SUBSCRIBE_DIV' => $arAllIDs["strMainID"].'_subscribe_div',
				'SUBSCRIBED_DIV' => $arAllIDs["strMainID"].'_subscribed_div',
				'STORE_QUANTITY' => $arAllIDs["strMainID"].'_store_quantity',
			);
		}else{
			$arAllIDs["ALL_ITEM_IDS"] = array(
				'ID' => $arAllIDs["strMainID"],
				'PICT' => $arAllIDs["strMainID"].'_pict',
				'SECOND_PICT' => $arAllIDs["strMainID"].'_secondpict',
				'STICKER_ID' => $arAllIDs["strMainID"].'_sticker',
				'SECOND_STICKER_ID' => $arAllIDs["strMainID"].'_secondsticker',
				'QUANTITY' => $arAllIDs["strMainID"].'_quantity',
				'QUANTITY_DOWN' => $arAllIDs["strMainID"].'_quant_down',
				'QUANTITY_UP' => $arAllIDs["strMainID"].'_quant_up',
				'QUANTITY_MEASURE' => $arAllIDs["strMainID"].'_quant_measure',
				'BUY_LINK' => $arAllIDs["strMainID"].'_buy_link',
				'BASKET_LINK' => $arAllIDs["strMainID"].'_basket_link',
				'BASKET_ACTIONS' => $arAllIDs["strMainID"].'_basket_actions',
				'NOT_AVAILABLE_MESS' => $arAllIDs["strMainID"].'_not_avail',
				'SUBSCRIBE_LINK' => $arAllIDs["strMainID"].'_subscribe',
				'COMPARE_LINK' => $arAllIDs["strMainID"].'_compare_link',
				'STORE_QUANTITY' => $arAllIDs["strMainID"].'_store_quantity',
				'PRICE' => $arAllIDs["strMainID"].'_price',
				'PRICE_OLD' => $arAllIDs["strMainID"].'_price_old',
				'DSC_PERC' => $arAllIDs["strMainID"].'_dsc_perc',
				'SECOND_DSC_PERC' => $arAllIDs["strMainID"].'_second_dsc_perc',
				'PROP_DIV' => $arAllIDs["strMainID"].'_sku_tree',
				'PROP' => $arAllIDs["strMainID"].'_prop_',
				'DISPLAY_PROP_DIV' => $arAllIDs["strMainID"].'_sku_prop',
				'BASKET_PROP_DIV' => $arAllIDs["strMainID"].'_basket_prop',
				'SUBSCRIBE_DIV' => $arAllIDs["strMainID"].'subscribe_div',
				'SUBSCRIBED_DIV' => $arAllIDs["strMainID"].'subscribed_div',
			);
		}

		$arAllIDs["TITLE_ITEM"] = (
			isset($arItem['IPROPERTY_VALUES']['ELEMENT_PAGE_TITLE'])&& $arItem['IPROPERTY_VALUES']['ELEMENT_PAGE_TITLE'] != ''
			? $arItem['IPROPERTY_VALUES']['ELEMENT_PAGE_TITLE']
			: $arItem['NAME']
		);
		return $arAllIDs;
	}

	function GetSKUJSParams($arResult, $arParams, $arItem, $detail="N", $group_iblock_id="N"){
		$arSkuProps = array();

		if($group_iblock_id=="Y"){
			$arResult['SKU_PROPS']=reset($arResult['SKU_PROPS']);
		}

		foreach ($arResult['SKU_PROPS'] as $arOneProp){
			if (!isset($arItem['OFFERS_PROP'][$arOneProp['CODE']]))
				continue;
			$arSkuProps[] = array(
				'ID' => $arOneProp['ID'],
				'SHOW_MODE' => $arOneProp['SHOW_MODE'],
				'VALUES_COUNT' => $arOneProp['VALUES_COUNT'],
				'DISPLAY_TYPE' => ((($arOneProp['DISPLAY_TYPE'] == "P" || $arOneProp['DISPLAY_TYPE'] == "R") && $arParams["DISPLAY_TYPE"] != 'block' ) ? "SELECT" : "LI" ),
			);
		}

		foreach ($arItem['JS_OFFERS'] as &$arOneJs){
			if (0 < $arOneJs['PRICE']['DISCOUNT_DIFF_PERCENT'])
			{
				$arOneJs['PRICE']['DISCOUNT_DIFF_PERCENT'] = '-'.$arOneJs['PRICE']['DISCOUNT_DIFF_PERCENT'].'%';
				$arOneJs['BASIS_PRICE']['DISCOUNT_DIFF_PERCENT'] = '-'.$arOneJs['BASIS_PRICE']['DISCOUNT_DIFF_PERCENT'].'%';
			}
		}
		unset($arOneJs);
		if ($arItem['OFFERS_PROPS_DISPLAY']){
			foreach ($arItem['JS_OFFERS'] as $keyOffer => $arJSOffer){
				$strProps = '';
				$arArticle=array();
				if (!empty($arJSOffer['DISPLAY_PROPERTIES'])){
					foreach ($arJSOffer['DISPLAY_PROPERTIES'] as $arOneProp){
						if($arOneProp['CODE']=='ARTICLE'){
							$arArticle=$arOneProp;
							continue;
						}
						$strProps .= '<tr itemprop="additionalProperty" itemscope itemtype="http://schema.org/PropertyValue"><td><span itemprop="name">'.$arOneProp['NAME'].'</span></td><td><span itemprop="value">'.(
							is_array($arOneProp['VALUE'])
							? implode(' / ', $arOneProp['VALUE'])
							: $arOneProp['VALUE']
						).'</span></td></tr>';

					}
				}
				if($arArticle){
					$strArticle = '';
					$strArticle .= $arArticle['NAME'].': '.(
							is_array($arArticle['VALUE'])
							? implode(' / ', $arArticle['VALUE'])
							: $arArticle['VALUE']
						);

					$arItem['JS_OFFERS'][$keyOffer]['ARTICLE'] = $strArticle;
				}

				$arItem['JS_OFFERS'][$keyOffer]['DISPLAY_PROPERTIES'] = $strProps;

			}
		}
		if ($arItem['SHOW_OFFERS_PROPS']){
			foreach ($arItem['JS_OFFERS'] as $keyOffer => $arJSOffer){
				$strProps = '';
				if (!empty($arJSOffer['DISPLAY_PROPERTIES'])){
					foreach ($arJSOffer['DISPLAY_PROPERTIES'] as $arOneProp){
						if($arOneProp['VALUE']){
							$arOneProp['VALUE_FORMAT']='<span class="block_title" itemprop="name">'.$arOneProp['NAME'].': </span><span class="value" itemprop="value">'.$arOneProp['VALUE'].'</span>';
							if($arOneProp['CODE']!='ARTICLE'){
								$strProps .='<tr itemprop="additionalProperty" itemscope itemtype="http://schema.org/PropertyValue"><td class="char_name"><span itemprop="name">'.$arOneProp['NAME'].'</span></td><td class="char_value"><span itemprop="value">'.$arOneProp['VALUE'].'</span></td></tr>';
							}
						}
						$arItem['JS_OFFERS'][$keyOffer]['DISPLAY_PROPERTIES_CODE'][$arOneProp["CODE"]] = $arOneProp;
					}
				}
				$arItem['JS_OFFERS'][$keyOffer]['TABLE_PROP']=$strProps;
			}
			foreach ($arItem['JS_OFFERS'] as $keyOffer => $arJSOffer){
				if (!empty($arJSOffer['DISPLAY_PROPERTIES'])){
					foreach ($arJSOffer['DISPLAY_PROPERTIES'] as $keyProp => $arOneProp){
						if($arOneProp['VALUE']){
							if($arOneProp['CODE']=='ARTICLE')
								unset($arItem['JS_OFFERS'][$keyOffer]['DISPLAY_PROPERTIES'][$keyProp]);
						}
					}
				}
			}
		}

		$arItemIDs=self::GetItemsIDs($arItem);
		if($detail=="Y"){
			$arJSParams = array(
				'CONFIG' => array(
					'USE_CATALOG' => $arResult['CATALOG'],
					'SHOW_QUANTITY' => $arParams['USE_PRODUCT_QUANTITY'],
					'SHOW_PRICE' => true,
					'SHOW_DISCOUNT_PERCENT' => ($arParams['SHOW_DISCOUNT_PERCENT'] == 'Y'),
					'SHOW_OLD_PRICE' => ($arParams['SHOW_OLD_PRICE'] == 'Y'),
					'DISPLAY_COMPARE' => $arParams['DISPLAY_COMPARE'],
					'SHOW_SKU_PROPS' => $arItem['SHOW_OFFERS_PROPS'],
					'OFFER_GROUP' => $arItem['OFFER_GROUP'],
					'MAIN_PICTURE_MODE' => $arParams['DETAIL_PICTURE_MODE'],
					'SHOW_BASIS_PRICE' => ($arParams['SHOW_BASIS_PRICE'] == 'Y'),
					'ADD_TO_BASKET_ACTION' => $arParams['ADD_TO_BASKET_ACTION'],
					'SHOW_CLOSE_POPUP' => ($arParams['SHOW_CLOSE_POPUP'] == 'Y')
				),
				'SHOW_UNABLE_SKU_PROPS' => $arParams['SHOW_UNABLE_SKU_PROPS'],
				'PRODUCT_TYPE' => $arResult['CATALOG_TYPE'],
				'VISUAL' => array(
					'ID' => $arItemIDs["ALL_ITEM_IDS"]['ID'],
				),
				'DEFAULT_COUNT' => $arParams['DEFAULT_COUNT'],
				'DEFAULT_PICTURE' => array(
					'PREVIEW_PICTURE' => $arResult['DEFAULT_PICTURE'],
					'DETAIL_PICTURE' => $arResult['DEFAULT_PICTURE']
				),
				'STORE_QUANTITY' => $arItemIDs["ALL_ITEM_IDS"]['STORE_QUANTITY'],
				'PRODUCT' => array(
					'ID' => $arResult['ID'],
					'NAME' => $arResult['~NAME']
				),
				'BASKET' => array(
					'QUANTITY' => $arParams['PRODUCT_QUANTITY_VARIABLE'],
					'BASKET_URL' => $arParams['BASKET_URL'],
					'SKU_PROPS' => $arItem['OFFERS_PROP_CODES'],
					'ADD_URL_TEMPLATE' => $arResult['~ADD_URL_TEMPLATE'],
					'BUY_URL_TEMPLATE' => $arResult['~BUY_URL_TEMPLATE']
				),
				'OFFERS' => $arItem['JS_OFFERS'],
				'OFFER_SELECTED' => $arItem['OFFERS_SELECTED'],
				'SKU_DETAIL_ID' => $arParams['SKU_DETAIL_ID'],
				'TREE_PROPS' => $arSkuProps
			);
		}else{
			$arJSParams = array(
				'SHOW_UNABLE_SKU_PROPS' => $arParams['SHOW_UNABLE_SKU_PROPS'],
				'PRODUCT_TYPE' => $arItem['CATALOG_TYPE'],
				'SHOW_QUANTITY' => ($arParams['USE_PRODUCT_QUANTITY'] == 'Y'),
				'DEFAULT_COUNT' => $arParams['DEFAULT_COUNT'],
				'SHOW_ADD_BASKET_BTN' => false,
				'SHOW_BUY_BTN' => true,
				'SHOW_ABSENT' => true,
				'SHOW_SKU_PROPS' => $arItem['OFFERS_PROPS_DISPLAY'],
				'SECOND_PICT' => $arItem['SECOND_PICT'],
				'SHOW_OLD_PRICE' => ('Y' == $arParams['SHOW_OLD_PRICE']),
				'SHOW_DISCOUNT_PERCENT' => ('Y' == $arParams['SHOW_DISCOUNT_PERCENT']),
				'ADD_TO_BASKET_ACTION' => $arParams['ADD_TO_BASKET_ACTION'],
				'SHOW_CLOSE_POPUP' => ($arParams['SHOW_CLOSE_POPUP'] == 'Y'),
				'DISPLAY_COMPARE' => $arParams['DISPLAY_COMPARE'],
				'BASKET_URL' => $arParams['BASKET_URL'],
				'DEFAULT_PICTURE' => array(
					'PICTURE' => $arItem['PRODUCT_PREVIEW'],
					'PICTURE_SECOND' => $arItem['PRODUCT_PREVIEW_SECOND']
				),
				'VISUAL' => array(
					'ID' => $arItemIDs["ALL_ITEM_IDS"]['ID'],
					'PICT_ID' => $arItemIDs["ALL_ITEM_IDS"]['PICT'],
					'SECOND_PICT_ID' => $arItemIDs["ALL_ITEM_IDS"]['SECOND_PICT'],
					'QUANTITY_ID' => $arItemIDs["ALL_ITEM_IDS"]['QUANTITY'],
					'QUANTITY_UP_ID' => $arItemIDs["ALL_ITEM_IDS"]['QUANTITY_UP'],
					'QUANTITY_DOWN_ID' => $arItemIDs["ALL_ITEM_IDS"]['QUANTITY_DOWN'],
					'QUANTITY_MEASURE' => $arItemIDs["ALL_ITEM_IDS"]['QUANTITY_MEASURE'],
					'STORE_QUANTITY' => $arItemIDs["ALL_ITEM_IDS"]['STORE_QUANTITY'],
					'PRICE_ID' => $arItemIDs["ALL_ITEM_IDS"]['PRICE'],
					'PRICE_OLD_ID' => $arItemIDs["ALL_ITEM_IDS"]['PRICE_OLD'],
					'TREE_ID' => $arItemIDs["ALL_ITEM_IDS"]['PROP_DIV'],
					'TREE_ITEM_ID' => $arItemIDs["ALL_ITEM_IDS"]['PROP'],
					'BUY_ID' => $arItemIDs["ALL_ITEM_IDS"]['BUY_LINK'],
					'BASKET_LINK' => $arItemIDs["ALL_ITEM_IDS"]['BASKET_LINK'],
					'ADD_BASKET_ID' => $arItemIDs["ALL_ITEM_IDS"]['ADD_BASKET_ID'],
					'DSC_PERC' => $arItemIDs["ALL_ITEM_IDS"]['DSC_PERC'],
					'SECOND_DSC_PERC' => $arItemIDs["ALL_ITEM_IDS"]['SECOND_DSC_PERC'],
					'DISPLAY_PROP_DIV' => $arItemIDs["ALL_ITEM_IDS"]['DISPLAY_PROP_DIV'],
					'BASKET_ACTIONS_ID' => $arItemIDs["ALL_ITEM_IDS"]['BASKET_ACTIONS'],
					'NOT_AVAILABLE_MESS' => $arItemIDs["ALL_ITEM_IDS"]['NOT_AVAILABLE_MESS'],
					'COMPARE_LINK_ID' => $arItemIDs["ALL_ITEM_IDS"]['COMPARE_LINK'],
					'SUBSCRIBE_ID' => $arItemIDs["ALL_ITEM_IDS"]['SUBSCRIBE_DIV'],
					'SUBSCRIBED_ID' => $arItemIDs["ALL_ITEM_IDS"]['SUBSCRIBED_DIV'],
				),
				'BASKET' => array(
					'QUANTITY' => $arParams['PRODUCT_QUANTITY_VARIABLE'],
					'PROPS' => $arParams['PRODUCT_PROPS_VARIABLE'],
					'SKU_PROPS' => $arItem['OFFERS_PROP_CODES'],
					'ADD_URL_TEMPLATE' => $arResult['~ADD_URL_TEMPLATE'],
					'BUY_URL_TEMPLATE' => $arResult['~BUY_URL_TEMPLATE']
				),
				'PRODUCT' => array(
					'ID' => $arItem['ID'],
					'NAME' => $arItemIDs["TITLE_ITEM"]
				),
				'OFFERS' => $arItem['JS_OFFERS'],
				'OFFER_SELECTED' => $arItem['OFFERS_SELECTED'],
				'TREE_PROPS' => $arSkuProps,
				'LAST_ELEMENT' => $arItem['LAST_ELEMENT']
			);
		}
		if ($arParams['DISPLAY_COMPARE']){
			$arJSParams['COMPARE'] = array(
				'COMPARE_URL_TEMPLATE' => $arResult['~COMPARE_URL_TEMPLATE'],
				'COMPARE_URL_TEMPLATE_DEL' => str_replace("ADD_TO_COMPARE_LIST", "DELETE_FROM_COMPARE_LIST", $arResult['~COMPARE_URL_TEMPLATE']),
				'COMPARE_PATH' => $arParams['COMPARE_PATH']
			);
		}
		return $arJSParams;
	}

	function GetAddToBasketArray(&$arItem, $totalCount = 0, $defaultCount = 1, $basketUrl = '', $bDetail = false, $arItemIDs = array(), $class_btn = "small", $arParams=array()){
		static $arAddToBasketOptions, $bUserAuthorized;
		if($arAddToBasketOptions === NULL){
			$arAddToBasketOptions = array(
				"SHOW_BASKET_ONADDTOCART" => COption::GetOptionString("aspro.optimus", "SHOW_BASKET_ONADDTOCART", "Y", SITE_ID) == "Y",
				"USE_PRODUCT_QUANTITY_LIST" => COption::GetOptionString("aspro.optimus", "USE_PRODUCT_QUANTITY_LIST", "Y", SITE_ID) == "Y",
				"USE_PRODUCT_QUANTITY_DETAIL" => COption::GetOptionString("aspro.optimus", "USE_PRODUCT_QUANTITY_DETAIL", "Y", SITE_ID) == "Y",
				"BUYNOPRICEGGOODS" => COption::GetOptionString("aspro.optimus", "BUYNOPRICEGGOODS", "NOTHING", SITE_ID),
				"BUYMISSINGGOODS" => COption::GetOptionString("aspro.optimus", "BUYMISSINGGOODS", "ADD", SITE_ID),
				"EXPRESSION_ORDER_BUTTON" => COption::GetOptionString("aspro.optimus", "EXPRESSION_ORDER_BUTTON", GetMessage("EXPRESSION_ORDER_BUTTON_DEFAULT"), SITE_ID),
				"EXPRESSION_ORDER_TEXT" => COption::GetOptionString("aspro.optimus", "EXPRESSION_ORDER_TEXT", GetMessage("EXPRESSION_ORDER_TEXT_DEFAULT"), SITE_ID),
				"EXPRESSION_SUBSCRIBE_BUTTON" => COption::GetOptionString("aspro.optimus", "EXPRESSION_SUBSCRIBE_BUTTON", GetMessage("EXPRESSION_SUBSCRIBE_BUTTON_DEFAULT"), SITE_ID),
				"EXPRESSION_SUBSCRIBED_BUTTON" => COption::GetOptionString("aspro.optimus", "EXPRESSION_SUBSCRIBED_BUTTON", GetMessage("EXPRESSION_SUBSCRIBED_BUTTON_DEFAULT"), SITE_ID),
			);

			global $USER;
			$bUserAuthorized = $USER->IsAuthorized();
		}

		$buttonText = $buttonHTML = $buttonACTION = '';
		$quantity=$ratio=1;
		$max_quantity=0;
		$float_ratio=is_double($arItem["CATALOG_MEASURE_RATIO"]);

		if($arItem["CATALOG_MEASURE_RATIO"]){
			$quantity=$arItem["CATALOG_MEASURE_RATIO"];
			$ratio=$arItem["CATALOG_MEASURE_RATIO"];
		}else{
			$quantity=$defaultCount;
		}
		if($arItem["CATALOG_QUANTITY_TRACE"]=="Y"){
			if($totalCount < $quantity){
				$quantity=($totalCount>$arItem["CATALOG_MEASURE_RATIO"] ? $totalCount : $arItem["CATALOG_MEASURE_RATIO"] );
			}
			$max_quantity=$totalCount;
		}

		$arItemProps = (($arParams['PRODUCT_PROPERTIES']) ? implode(';', $arParams['PRODUCT_PROPERTIES']) : "");
		$partProp=($arParams["PARTIAL_PRODUCT_PROPERTIES"] ? $arParams["PARTIAL_PRODUCT_PROPERTIES"] : "" );
		$addProp=($arParams["ADD_PROPERTIES_TO_BASKET"] ? $arParams["ADD_PROPERTIES_TO_BASKET"] : "" );
		$emptyProp=$arItem["EMPTY_PROPS_JS"];

		global $TEMPLATE_OPTIONS;
		if($arItem["OFFERS"]){
			if(!$bDetail && $arItem["OFFERS_MORE"] != "Y" && $TEMPLATE_OPTIONS["TYPE_SKU"]["CURRENT_VALUE"] != "TYPE_2"){
				$buttonACTION = 'ADD';
				$buttonText = array(GetMessage('EXPRESSION_ADDTOBASKET_BUTTON_DEFAULT'), GetMessage('EXPRESSION_ADDEDTOBASKET_BUTTON_DEFAULT'));
				$buttonHTML = '<span class="button transition_bg '.$class_btn.' read_more1 to-cart" id="'.$arItemIDs['BUY_LINK'].'" data-offers="N" data-iblockID="'.$arItem["IBLOCK_ID"].'" data-item="'.$arItem["ID"].'"><i></i><span>'.$buttonText[0].'</span></span><a rel="nofollow" href="'.$basketUrl.'" id="'.$arItemIDs['BASKET_LINK'].'" class="'.$class_btn.' in-cart button transition_bg" data-item="'.$arItem["ID"].'"  style="display:none;"><i></i><span>'.$buttonText[1].'</span></a>';
			}
			elseif(($bDetail && $arItem["FRONT_CATALOG"] == "Y") || $arItem["OFFERS_MORE"]=="Y" || $TEMPLATE_OPTIONS["TYPE_SKU"]["CURRENT_VALUE"] == "TYPE_2"){
				$buttonACTION = 'MORE';
				$buttonText = array(GetMessage('EXPRESSION_READ_MORE_OFFERS_DEFAULT'));
				$buttonHTML = '<a class="button transition_bg basket read_more" rel="nofollow" href="'.$arItem["DETAIL_PAGE_URL"].'" data-item="'.$arItem["ID"].'">'.$buttonText[0].'</a>';
			}
		}
		else{
			if($bPriceExists = isset($arItem["MIN_PRICE"]) && $arItem["MIN_PRICE"]["VALUE"] > 0){
				// price exists
				if($totalCount > 0){
					// rest exists
					if((isset($arItem["CAN_BUY"]) && $arItem["CAN_BUY"]) || (isset($arItem["MIN_PRICE"]) && $arItem["MIN_PRICE"]["CAN_BUY"] == "Y")){
						if($bDetail && $arItem["FRONT_CATALOG"] == "Y"){
							$buttonACTION = 'MORE';
							$buttonText = array(GetMessage('EXPRESSION_READ_MORE_OFFERS_DEFAULT'));
							$rid=($arItem["RID"] ? "?RID=".$arItem["RID"] : "");
							$buttonHTML = '<a class="button transition_bg basket read_more" rel="nofollow" href="'.$arItem["DETAIL_PAGE_URL"].$rid.'" data-item="'.$arItem["ID"].'">'.$buttonText[0].'</a>';
						}
						else{

							$arItem["CAN_BUY"] = 1;
							$buttonACTION = 'ADD';
							$buttonText = array(GetMessage('EXPRESSION_ADDTOBASKET_BUTTON_DEFAULT'), GetMessage('EXPRESSION_ADDEDTOBASKET_BUTTON_DEFAULT'));
							$buttonHTML = '<span class="'.$class_btn.' to-cart button transition_bg" data-item="'.$arItem["ID"].'" data-float_ratio="'.$float_ratio.'" data-ratio="'.$ratio.'" data-bakset_div="bx_basket_div_'.$arItem["ID"].'" data-props="'.$arItemProps.'" data-part_props="'.$partProp.'" data-add_props="'.$addProp.'"  data-empty_props="'.$emptyProp.'" data-offers="'.$arItem["IS_OFFER"].'" data-iblockID="'.$arItem["IBLOCK_ID"].'"  data-quantity="'.$quantity.'"><i></i><span>'.$buttonText[0].'</span></span><a rel="nofollow" href="'.$basketUrl.'" class="'.$class_btn.' in-cart button transition_bg" data-item="'.$arItem["ID"].'"  style="display:none;"><i></i><span>'.$buttonText[1].'</span></a>';
						}
					}
					elseif($arItem["CATALOG_SUBSCRIBE"] == "Y"){
						$buttonACTION = 'SUBSCRIBE';
						$buttonText = array($arAddToBasketOptions['EXPRESSION_SUBSCRIBE_BUTTON'], $arAddToBasketOptions['EXPRESSION_SUBSCRIBED_BUTTON']);
						$buttonHTML = '<span class="'.$class_btn.' ss to-subscribe'.(!$bUserAuthorized ? ' auth' : '').' button transition_bg" rel="nofollow" data-item="'.$arItem["ID"].'"><i></i><span>'.$buttonText[0].'</span></span><span class="'.$class_btn.' ss in-subscribe button transition_bg" rel="nofollow" style="display:none;" data-item="'.$arItem["ID"].'"><i></i><span>'.$buttonText[1].'</span></span>';
					}
				}
				else{
					if(!strlen($arAddToBasketOptions['EXPRESSION_ORDER_BUTTON'])){
						$arAddToBasketOptions['EXPRESSION_ORDER_BUTTON']=GetMessage("EXPRESSION_ORDER_BUTTON_DEFAULT");
					}
					// no rest
					if($bDetail && $arItem["FRONT_CATALOG"] == "Y"){
						$buttonACTION = 'MORE';
						$buttonText = array(GetMessage('EXPRESSION_READ_MORE_OFFERS_DEFAULT'));
						$rid=($arItem["RID"] ? "?RID=".$arItem["RID"] : "");
						$buttonHTML = '<a class="button transition_bg basket read_more" rel="nofollow" href="'.$arItem["DETAIL_PAGE_URL"].$rid.'" data-item="'.$arItem["ID"].'">'.$buttonText[0].'</a>';
					}
					else{
						$buttonACTION = $arAddToBasketOptions["BUYMISSINGGOODS"];
						if($arAddToBasketOptions["BUYMISSINGGOODS"] == "ADD" /*|| $arItem["CAN_BUY"]*/){
							if($arItem["CAN_BUY"]){
								$buttonText = array(GetMessage('EXPRESSION_ADDTOBASKET_BUTTON_DEFAULT'), GetMessage('EXPRESSION_ADDEDTOBASKET_BUTTON_DEFAULT'));
								$buttonHTML = '<span class="'.$class_btn.' to-cart button transition_bg" data-item="'.$arItem["ID"].'" data-float_ratio="'.$float_ratio.'" data-ratio="'.$ratio.'" data-bakset_div="bx_basket_div_'.$arItem["ID"].'" data-props="'.$arItemProps.'" data-part_props="'.$partProp.'" data-add_props="'.$addProp.'"  data-empty_props="'.$emptyProp.'" data-offers="'.$arItem["IS_OFFER"].'" data-iblockID="'.$arItem["IBLOCK_ID"].'" data-quantity="'.$quantity.'"><i></i><span>'.$buttonText[0].'</span></span><a rel="nofollow" href="'.$basketUrl.'" class="'.$class_btn.' in-cart button transition_bg" data-item="'.$arItem["ID"].'"  style="display:none;"><i></i><span>'.$buttonText[1].'</span></a>';
							}else{
								if($arAddToBasketOptions["BUYMISSINGGOODS"] == "SUBSCRIBE" && $arItem["CATALOG_SUBSCRIBE"] == "Y"){
									$buttonText = array($arAddToBasketOptions['EXPRESSION_SUBSCRIBE_BUTTON'], $arAddToBasketOptions['EXPRESSION_SUBSCRIBED_BUTTON']);
									$buttonHTML = '<span class="'.$class_btn.' ss to-subscribe'.(!$bUserAuthorized ? ' auth' : '').' button transition_bg" rel="nofollow" data-item="'.$arItem["ID"].'"><i></i><span>'.$buttonText[0].'</span></span><span class="'.$class_btn.' ss in-subscribe button transition_bg" rel="nofollow" style="display:none;" data-item="'.$arItem["ID"].'"><i></i><span>'.$buttonText[1].'</span></span>';
								}else{
									$buttonText = array($arAddToBasketOptions['EXPRESSION_ORDER_BUTTON']);
									$buttonHTML = '<span class="'.$class_btn.' to-order button transition_bg transparent" data-name="'.$arItem["NAME"].'" data-item="'.$arItem["ID"].'"><i></i><span>'.$buttonText[0].'</span></span>';
									if($arAddToBasketOptions['EXPRESSION_ORDER_TEXT']){
										$buttonHTML .='<div class="more_text">'.$arAddToBasketOptions['EXPRESSION_ORDER_TEXT'].'</div>';
									}
								}
							}

						}
						elseif($arAddToBasketOptions["BUYMISSINGGOODS"] == "SUBSCRIBE" && $arItem["CATALOG_SUBSCRIBE"] == "Y"){
							$buttonText = array($arAddToBasketOptions['EXPRESSION_SUBSCRIBE_BUTTON'], $arAddToBasketOptions['EXPRESSION_SUBSCRIBED_BUTTON']);
							$buttonHTML = '<span class="'.$class_btn.' ss to-subscribe'.(!$bUserAuthorized ? ' auth' : '').' button transition_bg" rel="nofollow" data-item="'.$arItem["ID"].'"><i></i><span>'.$buttonText[0].'</span></span><span class="'.$class_btn.' ss in-subscribe button transition_bg" rel="nofollow" style="display:none;" data-item="'.$arItem["ID"].'"><i></i><span>'.$buttonText[1].'</span></span>';
						}
						elseif($arAddToBasketOptions["BUYMISSINGGOODS"] == "ORDER"){
							$buttonText = array($arAddToBasketOptions['EXPRESSION_ORDER_BUTTON']);
							$buttonHTML = '<span class="'.$class_btn.' to-order button transition_bg transparent" data-name="'.$arItem["NAME"].'" data-item="'.$arItem["ID"].'"><i></i><span>'.$buttonText[0].'</span></span>';
							if($arAddToBasketOptions['EXPRESSION_ORDER_TEXT']){
								$buttonHTML .='<div class="more_text">'.$arAddToBasketOptions['EXPRESSION_ORDER_TEXT'].'</div>';
							}
						}
					}
				}
			}
			else{
				// no price or price <= 0
				if($bDetail && $arItem["FRONT_CATALOG"] == "Y"){
					$buttonACTION = 'MORE';
					$buttonText = array(GetMessage('EXPRESSION_READ_MORE_OFFERS_DEFAULT'));
					$buttonHTML = '<a class="button transition_bg basket read_more" rel="nofollow" href="'.$arItem["DETAIL_PAGE_URL"].'" data-item="'.$arItem["ID"].'">'.$buttonText[0].'</a>';
				}
				else{
					$buttonACTION = $arAddToBasketOptions["BUYNOPRICEGGOODS"];
					if($arAddToBasketOptions["BUYNOPRICEGGOODS"] == "ORDER"){
						$buttonText = array($arAddToBasketOptions['EXPRESSION_ORDER_BUTTON']);
						$buttonHTML = '<span class="'.$class_btn.' to-order button transition_bg transparent" data-name="'.$arItem["NAME"].'" data-item="'.$arItem["ID"].'"><i></i><span>'.$buttonText[0].'</span></span>';
						if($arAddToBasketOptions['EXPRESSION_ORDER_TEXT']){
							$buttonHTML .='<div class="more_text">'.$arAddToBasketOptions['EXPRESSION_ORDER_TEXT'].'</div>';
						}
					}
				}
			}
		}

		return array("OPTIONS" => $arAddToBasketOptions, "TEXT" => $buttonText, "HTML" => $buttonHTML, "ACTION" => $buttonACTION, "RATIO_ITEM" => $ratio, "MIN_QUANTITY_BUY" => $quantity, "MAX_QUANTITY_BUY" => $max_quantity);
	}

	function checkVersionExt($template="main", $module="catalog"){
		if($info = CModule::CreateModuleObject($module)){
			$testVersion = '16.0.14';
			if(CheckVersion($testVersion, $info->MODULE_VERSION)){
				$templateInclude=$template;
			}
			else{
				$templateInclude=$template."_new";
			}
		}
		return $templateInclude;
	}

	static function CurrencyFormatHandler($price, $currency){
		if(!defined('ADMIN_SECTION') && !CSite::inDir(SITE_DIR.'personal/orders'))
		{
			$arCurFormat = CCurrencyLang::GetFormatDescription($currency);

			$intDecimals = $arCurFormat['DECIMALS'];
		    if (CCurrencyLang::isAllowUseHideZero() && $arCurFormat['HIDE_ZERO'] == 'Y')
		    {
		        if (round($price, $arCurFormat["DECIMALS"]) == round($price, 0))
		            $intDecimals = 0;
		    }
		    $price = number_format($price, $intDecimals, $arCurFormat['DEC_POINT'], $arCurFormat['THOUSANDS_SEP']);
		    if ($arCurFormat['THOUSANDS_VARIANT'] == CCurrencyLang::SEP_NBSPACE)
		        $price = str_replace(' ', '&nbsp;', $price);
		    $arFormatString = explode('#', $arCurFormat['FORMAT_STRING']);
		    $arFormatString[1] = '<span class=\'price_currency\'>'.$arFormatString[1].'</span>';
			$arCurFormat['FORMAT_STRING'] = '#'.$arFormatString[1];

		    return preg_replace('/(^|[^&])#/', '${1}'.'<span class=\'price_value\'>'.$price.'</span>', $arCurFormat['FORMAT_STRING']);
		}
	}

	function GetFileInfo($arItem){
		$arTmpItem = CFile::GetFileArray($arItem);
		switch($arTmpItem["CONTENT_TYPE"]){
			case 'application/pdf': $type="pdf"; break;
			case 'application/vnd.ms-excel': $type="excel"; break;
			case 'application/xls': $type="excel"; break;
			case 'application/octet-stream': $type="word"; break;
			case 'application/msword': $type="word"; break;
			case 'image/jpeg': $type="jpg"; break;
			case 'image/tiff': $type="tiff"; break;
			//case 'image/png': $type="png"; break;
			default: $type="default"; break;
		}
		$filesize = $arTmpItem["FILE_SIZE"];
		if($filesize > 1024){
			$filesize = ($filesize / 1024);
			if($filesize > 1024){
				$filesize = ($filesize / 1024);
				if($filesize > 1024){
					$filesize = ($filesize / 1024);
					$filesize = round($filesize, 1);
					$filesize_format=str_replace(".", ",", $filesize).GetMessage('CT_NAME_GB');
				}
				else{
					$filesize = round($filesize, 1);
					$filesize_format=str_replace(".", ",", $filesize).GetMessage('CT_NAME_MB');
				}
			}
			else{
				$filesize = round($filesize, 1);
				$filesize_format=str_replace(".", ",", $filesize).GetMessage('CT_NAME_KB');
			}
		}
		else{
			$filesize = round($filesize, 1);
			$filesize_format=str_replace(".", ",", $filesize).GetMessage('CT_NAME_b');
		}
		$fileName = substr($arTmpItem["ORIGINAL_NAME"], 0, strrpos($arTmpItem["ORIGINAL_NAME"], '.'));
		return array("TYPE" => $type, "FILE_SIZE" => $filesize, "FILE_SIZE_FORMAT" => $filesize_format, "DESCRIPTION" => ( $arTmpItem["DESCRIPTION"] ? $arTmpItem["DESCRIPTION"] : $fileName), "SRC" => $arTmpItem["SRC"]);
	}

	function getMinPriceFromOffersExt(&$offers, $currency, $replaceMinPrice = true){
		$replaceMinPrice = ($replaceMinPrice === true);
		$result = false;
		$minPrice = 0;
		if (!empty($offers) && is_array($offers))
		{
			$doubles = array();
			foreach ($offers as $oneOffer)
			{
				if(!$oneOffer["MIN_PRICE"])
					continue;
				$oneOffer['ID'] = (int)$oneOffer['ID'];
				if (isset($doubles[$oneOffer['ID']]))
					continue;
				/*if (!$oneOffer['CAN_BUY'])
					continue;*/

				CIBlockPriceTools::setRatioMinPrice($oneOffer, $replaceMinPrice);

				$oneOffer['MIN_PRICE']['CATALOG_MEASURE_RATIO'] = $oneOffer['CATALOG_MEASURE_RATIO'];
				$oneOffer['MIN_PRICE']['CATALOG_MEASURE'] = $oneOffer['CATALOG_MEASURE'];
				$oneOffer['MIN_PRICE']['CATALOG_MEASURE_NAME'] = $oneOffer['CATALOG_MEASURE_NAME'];
				$oneOffer['MIN_PRICE']['~CATALOG_MEASURE_NAME'] = $oneOffer['~CATALOG_MEASURE_NAME'];

				if (empty($result))
				{
					$minPrice = ($oneOffer['MIN_PRICE']['CURRENCY'] == $currency
						? $oneOffer['MIN_PRICE']['DISCOUNT_VALUE']
						: CCurrencyRates::ConvertCurrency($oneOffer['MIN_PRICE']['DISCOUNT_VALUE'], $oneOffer['MIN_PRICE']['CURRENCY'], $currency)
					);
					$result = $oneOffer['MIN_PRICE'];
				}
				else
				{
					$comparePrice = ($oneOffer['MIN_PRICE']['CURRENCY'] == $currency
						? $oneOffer['MIN_PRICE']['DISCOUNT_VALUE']
						: CCurrencyRates::ConvertCurrency($oneOffer['MIN_PRICE']['DISCOUNT_VALUE'], $oneOffer['MIN_PRICE']['CURRENCY'], $currency)
					);
					if ($minPrice > $comparePrice)
					{
						$minPrice = $comparePrice;
						$result = $oneOffer['MIN_PRICE'];
					}
				}
				$doubles[$oneOffer['ID']] = true;
			}
		}
		return $result;
	}

	function getSliderForItemExt(&$item, $propertyCode, $addDetailToSlider, $encode = true)
    {
        $encode = ($encode === true);
        $result = array();

        if (!empty($item) && is_array($item))
        {
            if (
                '' != $propertyCode &&
                isset($item['PROPERTIES'][$propertyCode]) &&
                'F' == $item['PROPERTIES'][$propertyCode]['PROPERTY_TYPE']
            )
            {
                if ('MORE_PHOTO' == $propertyCode && isset($item['MORE_PHOTO']) && !empty($item['MORE_PHOTO']))
                {

                    foreach ($item['MORE_PHOTO'] as &$onePhoto)
                    {
                        $result[] = array(
                            'ID' => (int)$onePhoto['ID'],
                            'SRC' => ($encode ? CHTTP::urnEncode($onePhoto['SRC'], 'utf-8') : $onePhoto['SRC']),
                            'WIDTH' => (int)$onePhoto['WIDTH'],
                            'HEIGHT' => (int)$onePhoto['HEIGHT'],
                            'ALT' => ($onePhoto["DESCRIPTION"] ? $onePhoto["DESCRIPTION"] : ($item['IPROPERTY_VALUES']['ELEMENT_DETAIL_PICTURE_FILE_ALT'] ? $item['IPROPERTY_VALUES']['ELEMENT_DETAIL_PICTURE_FILE_ALT'] : $item["NAME"])),
                            'TITLE' => ($onePhoto["DESCRIPTION"] ? $onePhoto["DESCRIPTION"] : ($item['IPROPERTY_VALUES']['ELEMENT_DETAIL_PICTURE_FILE_TITLE'] ? $item['IPROPERTY_VALUES']['ELEMENT_DETAIL_PICTURE_FILE_TITLE'] : $item["NAME"]))
                        );
                    }
                    unset($onePhoto);
                }
                else
                {
                    if (
                        isset($item['DISPLAY_PROPERTIES'][$propertyCode]['FILE_VALUE']) &&
                        !empty($item['DISPLAY_PROPERTIES'][$propertyCode]['FILE_VALUE'])
                    )
                    {
                        $fileValues = (
                        isset($item['DISPLAY_PROPERTIES'][$propertyCode]['FILE_VALUE']['ID']) ?
                            array(0 => $item['DISPLAY_PROPERTIES'][$propertyCode]['FILE_VALUE']) :
                            $item['DISPLAY_PROPERTIES'][$propertyCode]['FILE_VALUE']
                        );
                        foreach ($fileValues as &$oneFileValue)
                        {
                            $result[] = array(
                                'ID' => (int)$oneFileValue['ID'],
                                'SRC' => ($encode ? CHTTP::urnEncode($oneFileValue['SRC'], 'utf-8') : $oneFileValue['SRC']),
                                'WIDTH' => (int)$oneFileValue['WIDTH'],
                                'HEIGHT' => (int)$oneFileValue['HEIGHT'],
                                'ALT' => ($oneFileValue["DESCRIPTION"] ? $oneFileValue["DESCRIPTION"] : ($item['IPROPERTY_VALUES']['ELEMENT_DETAIL_PICTURE_FILE_ALT'] ? $item['IPROPERTY_VALUES']['ELEMENT_DETAIL_PICTURE_FILE_ALT'] : $item["NAME"])),
                          		'TITLE' => ($oneFileValue["DESCRIPTION"] ? $oneFileValue["DESCRIPTION"] : ($item['IPROPERTY_VALUES']['ELEMENT_DETAIL_PICTURE_FILE_TITLE'] ? $item['IPROPERTY_VALUES']['ELEMENT_DETAIL_PICTURE_FILE_TITLE'] : $item["NAME"]))
                            );
                        }
                        if (isset($oneFileValue))
                            unset($oneFileValue);
                    }
                    else
                    {
                        $propValues = $item['PROPERTIES'][$propertyCode]['VALUE'];
                        if (!is_array($propValues))
                            $propValues = array($propValues);
                        foreach ($propValues as &$oneValue)
                        {
                            $oneFileValue = CFile::GetFileArray($oneValue);
                            if (isset($oneFileValue['ID']))
                            {
                                $result[] = array(
                                    'ID' => (int)$oneFileValue['ID'],
                                    'SRC' => ($encode ? CHTTP::urnEncode($oneFileValue['SRC'], 'utf-8') : $oneFileValue['SRC']),
                                    'WIDTH' => (int)$oneFileValue['WIDTH'],
                                    'HEIGHT' => (int)$oneFileValue['HEIGHT'],
                                    'ALT' => ($oneFileValue["DESCRIPTION"] ? $oneFileValue["DESCRIPTION"] : ($item['IPROPERTY_VALUES']['ELEMENT_DETAIL_PICTURE_FILE_ALT'] ? $item['IPROPERTY_VALUES']['ELEMENT_DETAIL_PICTURE_FILE_ALT'] : $item["NAME"])),
                          			'TITLE' => ($oneFileValue["DESCRIPTION"] ? $oneFileValue["DESCRIPTION"] : ($item['IPROPERTY_VALUES']['ELEMENT_DETAIL_PICTURE_FILE_TITLE'] ? $item['IPROPERTY_VALUES']['ELEMENT_DETAIL_PICTURE_FILE_TITLE'] : $item["NAME"]))
                                );
                            }
                        }
                        if (isset($oneValue))
                            unset($oneValue);
                    }
                }
            }
            if(isset($item['OFFERS']) && $item['OFFERS'] && !$addDetailToSlider){
            	if(empty($result))
            		unset($item['DETAIL_PICTURE']);
            }

            if ($addDetailToSlider || empty($result))
            {
                if (!empty($item['DETAIL_PICTURE']))
                {
                    if (!is_array($item['DETAIL_PICTURE']))
                        $item['DETAIL_PICTURE'] = CFile::GetFileArray($item['DETAIL_PICTURE']);
                    if (isset($item['DETAIL_PICTURE']['ID']))
                    {
                        array_unshift(
                            $result,
                            array(
                                'ID' => (int)$item['DETAIL_PICTURE']['ID'],
                                'SRC' => ($encode ? CHTTP::urnEncode($item['DETAIL_PICTURE']['SRC'], 'utf-8') : $item['DETAIL_PICTURE']['SRC']),
                                'WIDTH' => (int)$item['DETAIL_PICTURE']['WIDTH'],
                                'HEIGHT' => (int)$item['DETAIL_PICTURE']['HEIGHT'],
                                'ALT' => ($item['DETAIL_PICTURE']['DESCRIPTION'] ? $item['DETAIL_PICTURE']['DESCRIPTION'] : ($item['DETAIL_PICTURE']['ALT'] ? $item['DETAIL_PICTURE']['ALT'] : $item['NAME'] )),
                                'TITLE' => ($item['DETAIL_PICTURE']['DESCRIPTION'] ? $item['DETAIL_PICTURE']['DESCRIPTION'] : ($item['DETAIL_PICTURE']['TITLE'] ? $item['DETAIL_PICTURE']['TITLE'] : $item['NAME'] ))
                            )
                        );
                    }
                }
            }
        }
        return $result;
    }

	function GetTemplateOptions($siteID){
		// check stores
		static $bStores;
		if ($bStores === null){
			$bStores = false;
			if(CModule::IncludeModule('catalog')){
				if(class_exists('CCatalogStore')){
					$dbRes = CCatalogStore::GetList(array(), array(), false, false, array());
					if($c = $dbRes->SelectedRowsCount()){
						$bStores = true;
					}
				}
			}
		}

		$res = self::getModuleOptionsList();
		$arComponentOptions = $res["TEMPLATE_OPTIONS"];
		$arTemplateOptions = array();
		foreach($arComponentOptions as $value){
			$arTemplateOptions[$value["ID"]] = $value;
			if ($value['ID'] === 'STORES_SOURCE' && !$bStores) {
				$arTemplateOptions[$value["ID"]]["CURRENT_VALUE"] = 'IBLOCK';
			}
			elseif($value['ID'] === 'LOGO_IMAGE' || $value['ID'] === 'FAVICON_IMAGE' || $value['ID'] === 'APPLE_TOUCH_ICON_IMAGE'){
				$arTemplateOptions[$value["ID"]]["CURRENT_VALUE"] = COption::GetOptionString(self::moduleID, $value["ID"], $value["DEFAULT"], $siteID);
				$arValue = unserialize($arTemplateOptions[$value["ID"]]["CURRENT_VALUE"]);
				$arValue = (array)$arValue;
				$fileID = $arValue ? current($arValue) : false;
				if($fileID){
					if($value['ID'] === 'FAVICON_IMAGE'){
						$arTemplateOptions[$value["ID"]]["CURRENT_IMG"] = str_replace('//', '/', SITE_DIR.'/favicon.ico');
					}else{
						$arTemplateOptions[$value["ID"]]["CURRENT_IMG"] = CFIle::GetPath($fileID);
					}
				}
				else{
					if($value['ID'] === 'LOGO_IMAGE'){

					}
					elseif($value['ID'] === 'FAVICON_IMAGE'){
						$arTemplateOptions[$value["ID"]]["CURRENT_IMG"] = str_replace('//', '/', SITE_DIR.'/include/favicon.ico');
					}
					elseif($value['ID'] === 'APPLE_TOUCH_ICON_IMAGE'){
						$arTemplateOptions[$value["ID"]]["CURRENT_IMG"] = str_replace('//', '/', SITE_DIR.'/include/apple-touch-icon.png');
					}
				}

				if(!file_exists(str_replace('//', '/', $_SERVER['DOCUMENT_ROOT'].$arTemplateOptions[$value["ID"]]["CURRENT_IMG"]))){
					$arTemplateOptions[$value["ID"]]["CURRENT_IMG"] = '';
				}
				else{
					if($value['ID'] === 'FAVICON_IMAGE'){
						$arTemplateOptions[$value["ID"]]["CURRENT_IMG"] .= '?'.filemtime(str_replace('//', '/', $_SERVER['DOCUMENT_ROOT'].$arTemplateOptions[$value["ID"]]["CURRENT_IMG"]));
					}
				}
			}
			else{
				$arTemplateOptions[$value["ID"]]["CURRENT_VALUE"] = COption::GetOptionString(self::moduleID, $value["ID"], $value["DEFAULT"], $siteID);
				if($value['ID'] === 'HEAD'){
					if($value["VALUES"] && is_array($value["VALUES"])){
						foreach($value["VALUES"] as $arValue){
							if($arValue["VALUE"] === $arTemplateOptions['HEAD']["CURRENT_VALUE"]){
								$arTemplateOptions["LOGO_IMAGE"]["CURRENT_IMG"] = ($arTemplateOptions["LOGO_IMAGE"]["CURRENT_VALUE"] !== serialize(array())) ? $arTemplateOptions["LOGO_IMAGE"]["CURRENT_IMG"] : str_replace('//', '/', SITE_DIR.$arValue["IMG"]);
								$arTemplateOptions["HEAD"]["CURRENT_MENU"] = $arValue["MENU_TYPE"];
								$arTemplateOptions["HEAD"]["CURRENT_HEAD_COLOR"] = $arValue["HEAD_COLOR"];
								$arTemplateOptions["HEAD"]["CURRENT_MENU_COLOR"] = ($arValue["MENU_COLOR"] ? $arValue["MENU_COLOR"] : "none");
								break;
							}
						}
					}
				}
			}
		}

		return $arTemplateOptions;
	}

	static function checkBreadcrumbsChain(&$arParams, $arSection = array(), $arElement = array()){
		global $APPLICATION;

		if(COption::GetOptionString("aspro.optimus", "SHOW_BREADCRUMBS_CATALOG_CHAIN", "H1", SITE_ID) == "NAME"){
			$APPLICATION->arAdditionalChain = false;
			if($arParams['INCLUDE_IBLOCK_INTO_CHAIN'] == 'Y' && isset(COptimusCache::$arIBlocksInfo[$arParams['IBLOCK_ID']]['NAME'])){
				$APPLICATION->AddChainItem(COptimusCache::$arIBlocksInfo[$arParams['IBLOCK_ID']]['NAME'], $arElement['~LIST_PAGE_URL']);
			}
			if($arParams['ADD_SECTIONS_CHAIN'] == 'Y' && $arSection){
				$rsPath = CIBlockSection::GetNavChain($arParams['IBLOCK_ID'], $arSection['ID']);
				$rsPath->SetUrlTemplates('', $arParams['SECTION_URL']);
				while($arPath = $rsPath->GetNext()){
					$APPLICATION->AddChainItem($arPath['NAME'], $arPath['~SECTION_PAGE_URL']);
				}
			}
			if($arParams['ADD_ELEMENT_CHAIN'] == 'Y' && $arElement){
				$APPLICATION->AddChainItem($arElement['NAME']);
			}
		}
	}

	static function getModuleOptionsList($onlyTemplate = false){
		// check stores
		static $arIsSiteWithStores;
		$by = "id"; $sort = "asc"; $arSites = array();
		$db_res = CSite::GetList($by , $sort ,array("ACTIVE"=>"Y"));
		while($res = $db_res->GetNext()){
			$arSites[] = $res;
		}
		foreach($arSites as $key => $arSite){
			if(COption::GetOptionString(self::moduleID, "SITE_INSTALLED", false, $arSite["ID"]) != "Y"){
				unset($arSites[$key]);
			}
			else{
				if ($arIsSiteWithStores[$arSite["ID"]] === null){
					$arIsSiteWithStores[$arSite["ID"]] = false;
					if(CModule::IncludeModule('catalog')){
						if(class_exists('CCatalogStore')){
							$dbRes = CCatalogStore::GetList(array(), array('ACTIVE' => 'Y', 'SITE_ID' => $arSite["ID"]), false, false, array());
							if($c = $dbRes->SelectedRowsCount()){
								$arIsSiteWithStores[$arSite["ID"]] = true;
							}
						}
					}
				}
			}
		}

		// template options
		$arTemplateOptions = array(
			array(
				"ID" => "COLOR_THEME",
				"NAME" => GetMessage("COLOR_THEME"),
				"TYPES" => array("COMPONENT"=>"COLOR", "MODULE" => "SELECTBOX"),
				"VALUES" => array(
					array("VALUE" => "YELLOW", "COMPONENT_VALUE" => "#ffad00", "NAME" => GetMessage("COLOR_THEME_YELLOW")),
					array("VALUE" => "ORANGE", "COMPONENT_VALUE" => "#ff6d00", "NAME" => GetMessage("COLOR_THEME_ORANGE")),
					array("VALUE" => "RED", "COMPONENT_VALUE" => "#de002b", "NAME" => GetMessage("COLOR_THEME_RED")),
					array("VALUE" => "MAGENTA", "COMPONENT_VALUE" => "#b82945", "NAME" => GetMessage("COLOR_THEME_MAGENTA")),
					array("VALUE" => "ORCHID", "COMPONENT_VALUE" => "#d75cb6", "NAME" => GetMessage("COLOR_THEME_ORCHID")),
					array("VALUE" => "NAVY", "COMPONENT_VALUE" => "#006dca", "NAME" => GetMessage("COLOR_THEME_NAVY")),
					array("VALUE" => "BLUE", "COMPONENT_VALUE" => "#01aae3", "NAME" => GetMessage("COLOR_THEME_BLUE")), //#00aed7
					array("VALUE" => "GREEN_SEA", "COMPONENT_VALUE" => "#01b1af", "NAME" => GetMessage("COLOR_THEME_GREEN_SEA")),
					array("VALUE" => "GREEN", "COMPONENT_VALUE" => "#009f4f", "NAME" => GetMessage("COLOR_THEME_GREEN")),
					array("VALUE" => "IRISH_GREEN", "COMPONENT_VALUE" => "#6db900", "NAME" => GetMessage("COLOR_THEME_IRISH_GREEN")),
					array("VALUE" => "CUSTOM", "COMPONENT_VALUE" => "", "NAME" => GetMessage("COLOR_THEME_CUSTOM")),
				),
				"DEFAULT" => "NAVY",
			),
			array(
				"ID" => "CUSTOM_COLOR_THEME",
				"NAME" => GetMessage("CUSTOM_COLOR_THEME"),
				"TYPES" => array("COMPONENT"=>"COLOR", "MODULE" => "text"),
				"DEFAULT" => "01aae3",
			),
			array(
				"ID" => "BGCOLOR_THEME",
				"NAME" => GetMessage("BGCOLOR_THEME"),
				"TYPES" => array("COMPONENT"=>"COLOR", "MODULE" => "SELECTBOX"),
				"VALUES" => array(
					array("VALUE" => "LIGHT", "COMPONENT_VALUE" => "#f6f6f7", "NAME" => GetMessage("BGCOLOR_THEME_LIGHT")),
					array("VALUE" => "DARK", "COMPONENT_VALUE" => "#272a39", "NAME" => GetMessage("BGCOLOR_THEME_DARK")),
					array("VALUE" => "CUSTOM", "COMPONENT_VALUE" => "", "NAME" => GetMessage("COLOR_THEME_CUSTOM")),
				),
				"DEFAULT" => "LIGHT",
			),
			array(
				"ID" => "BGCOLOR_THEME_FOOTER_SIDE",
				"NAME" => GetMessage("BGCOLOR_THEME_FOOTER_SIDE"),
				"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
				"VALUES" => array(
					array("VALUE" => "FILL", "COMPONENT_VALUE" => "", "NAME" => GetMessage("YES_OPTION")),
					array("VALUE" => "NO_FILL", "COMPONENT_VALUE" => "", "NAME" => GetMessage("NO_OPTION")),
				),
				"DEFAULT" => "NO_FILL",
			),
			array(
				"ID" => "CUSTOM_BGCOLOR_THEME",
				"NAME" => GetMessage("CUSTOM_BGCOLOR_THEME"),
				"TYPES" => array("COMPONENT"=>"COLOR", "MODULE" => "text"),
				"DEFAULT" => "f6f6f7",
			),
			array(
				"ID" => "MENU_COLOR",
				"NAME" => GetMessage("MENU_COLOR"),
				"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
				"VALUES" => array(
					array("VALUE" => "COLORED", "COMPONENT_VALUE" => "", "NAME" => GetMessage("MENU_COLOR_COLORED")),
					array("VALUE" => "LIGHT", "COMPONENT_VALUE" => "", "NAME" => GetMessage("MENU_COLOR_LIGHT")),
					array("VALUE" => "DARK", "COMPONENT_VALUE" => "", "NAME" => GetMessage("MENU_COLOR_DARK")),
				),
				"DEFAULT" => "COLORED",
			),
		);

		if(!$onlyTemplate){
			$arTemplateOptions[] = array(
				"ID" => "LOGO_IMAGE",
				"NAME" => GetMessage("LOGO_IMAGE"),
				"TYPES" => array("COMPONENT" => "TEXT", "MODULE" => "file"),
				"DEFAULT" => serialize(array()),
			);
			$arTemplateOptions[] = array(
				"ID" => "FAVICON_IMAGE",
				"NAME" => GetMessage("FAVICON_IMAGE"),
				"TYPES" => array("COMPONENT" => "TEXT", "MODULE" => "file"),
				"DEFAULT" => serialize(array()),
			);
			$arTemplateOptions[] = array(
				"ID" => "APPLE_TOUCH_ICON_IMAGE",
				"NAME" => GetMessage("APPLE_TOUCH_ICON_IMAGE"),
				"TYPES" => array("COMPONENT" => "TEXT", "MODULE" => "file"),
				"DEFAULT" => serialize(array()),
			);
		}

		$arTemplateOptions = array_merge($arTemplateOptions, array(
				array(
					"ID" => "BASKET",
					"NAME" => GetMessage("BASKET"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "NORMAL", "COMPONENT_VALUE" => "", "NAME" => GetMessage("BASKET_NORMAL")),
						array("VALUE" => "FLY", "COMPONENT_VALUE" => "", "NAME" => GetMessage("BASKET_FLY")),
					),
					"DEFAULT" => "FLY",
				)
			)
		);

		$arTemplateOptions = array_merge($arTemplateOptions, array(
				array(
					"ID" => "TYPE_SKU",
					"NAME" => GetMessage("TYPE_SKU"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "TYPE_1", "COMPONENT_VALUE" => "", "NAME" => GetMessage("TYPE_1")),
						array("VALUE" => "TYPE_2", "COMPONENT_VALUE" => "", "NAME" => GetMessage("TYPE_2")),
					),
					"DEFAULT" => "TYPE_1",
				),
				array(
					"ID" => "DETAIL_PICTURE_MODE",
					"NAME" => GetMessage("DETAIL_PICTURE_MODE"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "IMG", "COMPONENT_VALUE" => "", "NAME" => GetMessage("DETAIL_PICTURE_MODE_IMG")),
						array("VALUE" => "POPUP", "COMPONENT_VALUE" => "", "NAME" => GetMessage("DETAIL_PICTURE_MODE_POPUP")),
						array("VALUE" => "MAGNIFIER", "COMPONENT_VALUE" => "", "NAME" => GetMessage("DETAIL_PICTURE_MODE_MAGNIFIER")),
					),
					"DEFAULT" => "POPUP",
				),
				array(
					"ID" => "TYPE_VIEW_FILTER",
					"NAME" => GetMessage("TYPE_VIEW_FILTER"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "VERTICAL", "COMPONENT_VALUE" => "", "NAME" => GetMessage("VERTICAL")),
						array("VALUE" => "HORIZONTAL", "COMPONENT_VALUE" => "", "NAME" => GetMessage("HORIZONTAL")),
					),
					"DEFAULT" => "HORIZONTAL",
				),
				array(
					"ID" => "MENU_POSITION_MAIN",
					"NAME" => GetMessage("MENU_POSITION_MAIN"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "SHOW", "COMPONENT_VALUE" => "", "NAME" => GetMessage("YES")),
						array("VALUE" => "HIDE", "COMPONENT_VALUE" => "", "NAME" => GetMessage("NO")),
					),
					"DEFAULT" => "SHOW",
				),
				array(
					"ID" => "MENU_POSITION",
					"NAME" => GetMessage("MENU_POSITION"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "TOP", "COMPONENT_VALUE" => "", "NAME" => GetMessage("TOP_MENU_HOVER")),
						array("VALUE" => "LINE", "COMPONENT_VALUE" => "", "NAME" => GetMessage("LINE_MENU_HOVER")),
					),
					"DEFAULT" => "LINE",
				),
				array(
					"ID" => "VIEWED_TYPE",
					"NAME" => GetMessage("VIEWED_TYPE"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "LOCAL", "COMPONENT_VALUE" => "", "NAME" => GetMessage("VIEWED_TYPE_LOGIC_COOKIE")),
						array("VALUE" => "COMPONENT", "COMPONENT_VALUE" => "", "NAME" => GetMessage("VIEWED_TYPE_LOGIC_COMPONENT")),
					),
					"DEFAULT" => "COMPONENT",
				),
				array(
					"ID" => "STORES_SOURCE",
					"NAME" => GetMessage("STORES_SOURCE"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => (
						$arIsSiteWithStores[$arSite["ID"]] ?
							array(
								array("VALUE" => "STORES", "COMPONENT_VALUE" => "", "NAME" => GetMessage("STORES_SOURCE_STORES")),
								array("VALUE" => "IBLOCK", "COMPONENT_VALUE" => "", "NAME" => GetMessage("STORES_SOURCE_STORES_IBLOCK")),
							) :
							array(
								array("VALUE" => "IBLOCK", "COMPONENT_VALUE" => "", "NAME" => GetMessage("STORES_SOURCE_STORES_IBLOCK")),
							)
						),
					"DEFAULT" => "IBLOCK",
				),
			)
		);

		$arComponentOptions = array();
		$arModuleOptions = array(GetMessage("TEMPLATE_OPTIONS"));
		$arModuleOptions[] = array("THEME_SWITCHER", GetMessage("THEME_SWITCHER"), 'N', array('checkbox'));

		foreach($arTemplateOptions as $key => $arTemplateOption){
			$arModuleValues = array(strToLower($arTemplateOption["TYPES"]["MODULE"]), array());
			if($arTemplateOption["VALUES"] && is_array($arTemplateOption["VALUES"])){
				foreach($arTemplateOption["VALUES"] as $key => $value){
					$arModuleValues[1][$value["VALUE"]] = $value["NAME"];
				}
			}
			$arComponentValues = array();
			if($arTemplateOption["VALUES"] && is_array($arTemplateOption["VALUES"])){
				$arComponentValues = $arTemplateOption["VALUES"];
			}
			if($arTemplateOption["ID"] !== 'BANNER_WIDTH' && $arTemplateOption["ID"] !== 'STORES'){
				$arModuleOptions[] = array($arTemplateOption["ID"], $arTemplateOption["NAME"], $arTemplateOption["DEFAULT"], $arModuleValues);
			}
			$arComponentOptions[] = array("ID" => $arTemplateOption["ID"], "NAME" => $arTemplateOption["NAME"], "TYPE" => $arTemplateOption["TYPES"]["COMPONENT"], "VALUES" => $arComponentValues, "DEFAULT" => $arTemplateOption["DEFAULT"]);
		}
		$arModuleOptions[] = array("NO_LOGO_BG", GetMessage("NO_LOGO_BG"), "N", array("checkbox"));
		$arModuleOptions[] = array("PHONE_MASK", GetMessage("PHONE_MASK"), "+7 (999) 999-99-99", array("text", 15));
		$arModuleOptions[] = array("VALIDATE_PHONE_MASK", GetMessage("VALIDATE_PHONE_MASK"), "^[+][7] [(][0-9]{3}[)] [0-9]{3}[-][0-9]{2}[-][0-9]{2}$", array("text", 50));
		$arModuleOptions[] = array("SHOW_LICENCE", GetMessage("SHOW_LICENCE_TITLE"), "N", array("checkbox"));
		$arModuleOptions[] = array("LICENCE_TEXT", GetMessage("LICENCE_TEXT_TITLE"), "", array("includefile", array("INCLUDEFILE" => "#SITE_DIR#include/licenses_text.php")));
		$arModuleOptions[] = array("SHOW_BREADCRUMBS_CATALOG_SUBSECTIONS", GetMessage("SHOW_BREADCRUMBS_CATALOG_SUBSECTIONS"), "Y", array("checkbox"));
		$arModuleOptions[] = array("SHOW_BREADCRUMBS_CATALOG_CHAIN", GetMessage("SHOW_BREADCRUMBS_CATALOG_CHAIN"), "H1", array("selectbox", array('H1' => GetMessage('SHOW_BREADCRUMBS_CATALOG_CHAIN_H1'), 'NAME' => GetMessage('SHOW_BREADCRUMBS_CATALOG_CHAIN_NAME'))));
		$arModuleOptions[] = array("SHOW_BASKET_PRINT", GetMessage("SHOW_BASKET_PRINT"), "Y", array("checkbox"));
		$arModuleOptions[] = array("SHOW_SECTION_DESCRIPTION", GetMessage("SHOW_SECTION_DESCRIPTION"), "BOTTOM", array("selectbox", array('TOP' => GetMessage('TOP_SECTION'), 'BOTTOM' => GetMessage('BOTTOM_SECTION'), 'BOTH' => GetMessage('BOTH_SECTION'))));

		$arFielDescription = array(
			"DESCRIPTION" => GetMessage("DESCRIPTION_SECTION")."(DESCRIPTION)",
			"UF_SECTION_DESCR" => GetMessage("SEO_DESCRIPTION_SECTION")."(UF_SECTION_DESCR)",

		);

		$arModuleOptions[] = array("TOP_SECTION_DESCRIPTION_POSITION", GetMessage("TOP_SECTION_DESCRIPTION"), "UF_SECTION_DESCR", array("selectbox", $arFielDescription));
		$arModuleOptions[] = array("BOTTOM_SECTION_DESCRIPTION_POSITION", GetMessage("BOTTOM_SECTION_DESCRIPTION"), "DESCRIPTION", array("selectbox", $arFielDescription));

		$arModuleOptions[] = array("MAX_DEPTH_MENU", GetMessage("MAX_DEPTH_MENU"), "4", array("selectbox", array(2=>2,3=>3,4=>4)));
		$arModuleOptions[] = array("CATALOG_IBLOCK_ID", GetMessage("CATALOG_IBLOCK_ID"), "", array("selectbox_iblock"));

		$arModuleOptions[] = array("HIDE_SITE_NAME_TITLE", GetMessage("HIDE_SITE_NAME_TITLE"), "N", array("checkbox"));

		if(!$onlyTemplate){
			// scroll to top button options
			$arModuleOptions[] = GetMessage("SCROLLTOTOP_OPTIONS");
			$arModuleOptions[] = array(
				"SCROLLTOTOP_TYPE",
				GetMessage("SCROLLTOTOP_TYPE"),
				"ROUND_COLOR",
				array(
					"selectbox",
					array(
						'NONE' => GetMessage('SCROLLTOTOP_TYPE_NONE'),
						'ROUND_COLOR' => GetMessage('SCROLLTOTOP_TYPE_ROUND_COLOR'),
						'ROUND_GREY' => GetMessage('SCROLLTOTOP_TYPE_ROUND_GREY'),
						'ROUND_WHITE' => GetMessage('SCROLLTOTOP_TYPE_ROUND_WHITE'),
						'RECT_COLOR' => GetMessage('SCROLLTOTOP_TYPE_RECT_COLOR'),
						'RECT_GREY' => GetMessage('SCROLLTOTOP_TYPE_RECT_GREY'),
						'RECT_WHITE' => GetMessage('SCROLLTOTOP_TYPE_RECT_WHITE'),
					),
				),
			);
			$arModuleOptions[] = array(
				"SCROLLTOTOP_POSITION",
				GetMessage("SCROLLTOTOP_POSITION"),
				"PADDING",
				array(
					"selectbox",
					array(
						'TOUCH' => GetMessage('SCROLLTOTOP_POSITION_TOUCH'),
						'PADDING' => GetMessage('SCROLLTOTOP_POSITION_PADDING'),
					),
				),
			);

			// oneClick Buy
			$arModuleOptions[] = GetMessage("ONECLICKBUY_OPTIONS");
			$arModuleOptions[] = array("SHOW_ONECLICKBUY_ON_BASKET_PAGE", GetMessage("SHOW_ONECLICKBUY_ON_BASKET_PAGE_TITLE"), "Y", array("checkbox"));
			$arModuleOptions[] = array("ONECLICKBUY_SHOW_DELIVERY_NOTE", GetMessage("ONECLICKBUY_SHOW_DELIVERY_NOTE"), "N", array("checkbox"));
			$arModuleOptions[] = array("ONECLICKBUY_PERSON_TYPE", GetMessage("ONECLICKBUY_PERSON_TYPE"), "1", array("selectbox", array()));
			$arModuleOptions[] = array("ONECLICKBUY_DELIVERY", GetMessage("ONECLICKBUY_DELIVERY"), "2", array("selectbox", array()));
			$arModuleOptions[] = array("ONECLICKBUY_PAYMENT", GetMessage("ONECLICKBUY_PAYMENT"), "1", array("selectbox", array()));
			// $arModuleOptions[] = array("ONECLICKBUY_CURRENCY", GetMessage("ONECLICKBUY_CURRENCY"), "RUB", array("selectbox", array()));
			$arModuleOptions[] = array("ONECLICKBUY_PROPERTIES", GetMessage("ONECLICKBUY_PROPERTIES"),
				$arOneClickPropertiesList = "FIO,PHONE,EMAIL,COMMENT",
				array("multiselectbox",
					$arOneClickPropertiesList = array(
						"FIO" => GetMessage('ONECLICKBUY_PROPERTIES_FIO'),
						"PHONE" => GetMessage('ONECLICKBUY_PROPERTIES_PHONE'),
						"EMAIL" => GetMessage('ONECLICKBUY_PROPERTIES_EMAIL'),
						"COMMENT" => GetMessage('ONECLICKBUY_PROPERTIES_COMMENT'),
					),
				)
			);
			$arModuleOptions[] = array("ONECLICKBUY_REQUIRED_PROPERTIES", GetMessage("ONECLICKBUY_REQUIRED_PROPERTIES"), "FIO,PHONE", array("multiselectbox", $arOneClickPropertiesList));

			// main index page options
			$arModuleOptions[] = GetMessage("INDEXPAGE_OPTIONS");

			$arModuleOptions[] = array(
				"BANNER_ANIMATIONTYPE",
				GetMessage("BANNER_ANIMATIONTYPE"),
				"SLIDE_HORIZONTAL",
				array(
					"selectbox",
					array(
						"SLIDE_HORIZONTAL" => GetMessage("ANIMATION_SLIDE_HORIZONTAL"),
						"SLIDE_VERTICAL" => GetMessage("ANIMATION_SLIDE_VERTICAL"),
						"FADE" => GetMessage("ANIMATION_FADE"),
					),
				),
			);
			$arModuleOptions[] = array("BANNER_SLIDESSHOWSPEED", GetMessage("BANNER_SLIDESSHOWSPEED"), "5000", array("text", "5"));
			$arModuleOptions[] = array("BANNER_ANIMATIONSPEED", GetMessage("BANNER_ANIMATIONSPEED"), "600", array("text", "5"));

			// add to basket options
			$arModuleOptions[] = GetMessage("ADDTOBASKET_OPTIONS");
			$arModuleOptions[] = array("SHOW_BASKET_ONADDTOCART", GetMessage("SHOW_BASKET_ONADDTOCART"), "Y", array("checkbox"));
			$arModuleOptions[] = array("USE_PRODUCT_QUANTITY_LIST", GetMessage("USE_PRODUCT_QUANTITY_LIST"), "Y", array("checkbox"));
			$arModuleOptions[] = array("USE_PRODUCT_QUANTITY_DETAIL", GetMessage("USE_PRODUCT_QUANTITY_DETAIL"), "Y", array("checkbox"));
			$arModuleOptions[] = array(
				"BUYNOPRICEGGOODS",
				GetMessage("BUYNOPRICEGGOODS"),
				"NOTHING",
				array(
					"selectbox",
					array(
						"ORDER" => GetMessage("BUYNOPRICEGGOODS_ORDER"),
						"NOTHING" => GetMessage("BUYNOPRICEGGOODS_NOTHING"),
					),
				),
			);
			$arModuleOptions[] = array(
				"BUYMISSINGGOODS",
				GetMessage("BUYMISSINGGOODS"),
				"ADD",
				array(
					"selectbox",
					array(
						"ADD" => GetMessage("BUYMISSINGGOODS_ADD"),
						"ORDER" => GetMessage("BUYMISSINGGOODS_ORDER"),
						"SUBSCRIBE" => GetMessage("BUYMISSINGGOODS_SUBSCRIBE"),
						"NOTHING" => GetMessage("BUYMISSINGGOODS_NOTHING"),
					),
				),
			);

			// show quantity options
			$arModuleOptions[] = GetMessage("QUANTITY_OPTIONS");
			$arGroups = array();
			$DefaultGroupID = 0;
			$rsGroups = CGroup::GetList($by = "id", $order = "asc", array("ACTIVE" => "Y"));
			while($arItem = $rsGroups->Fetch()){
				$arGroups[$arItem["ID"]] = $arItem["NAME"];
				if($arItem["ANONYMOUS"] == "Y"){
					$DefaultGroupID = $arItem["ID"];
				}
			}
			$arGroupMultiselect = array("multiselectbox", $arGroups);
			$arModuleOptions[] = array("SHOW_QUANTITY_FOR_GROUPS", GetMessage("SHOW_QUANTITY_FOR_GROUPS"), $DefaultGroupID, $arGroupMultiselect);
			$arModuleOptions[] = array("SHOW_QUANTITY_COUNT_FOR_GROUPS", GetMessage("SHOW_QUANTITY_COUNT_FOR_GROUPS"), $DefaultGroupID, $arGroupMultiselect);
			$arModuleOptions[] = array('SHOW_QUANTITY_NOTE', "note" => GetMessage("SHOW_QUANTITY_NOTE"));
			$arModuleOptions[] = array("USE_WORD_EXPRESSION", GetMessage("USE_WORD_EXPRESSION"), "Y", array("checkbox"));
			$arModuleOptions[] = array("MAX_AMOUNT", GetMessage("MAX_AMOUNT"), "10", array("text", "4"));
			$arModuleOptions[] = array("MIN_AMOUNT", GetMessage("MIN_AMOUNT"), "2", array("text", "4"));

			// expression options
			$arModuleOptions[] = GetMessage("EXPRESSIONS_OPTIONS");
			$arModuleOptions[] = array("EXPRESSION_SUBSCRIBE_BUTTON", GetMessage("EXPRESSION_SUBSCRIBE_BUTTON"), GetMessage("EXPRESSION_SUBSCRIBE_BUTTON_DEFAULT"), array("text", "20"));
			$arModuleOptions[] = array("EXPRESSION_SUBSCRIBED_BUTTON", GetMessage("EXPRESSION_SUBSCRIBED_BUTTON"), GetMessage("EXPRESSION_SUBSCRIBED_BUTTON_DEFAULT"), array("text", "20"));
			$arModuleOptions[] = array("EXPRESSION_ORDER_BUTTON", GetMessage("EXPRESSION_ORDER_BUTTON"), GetMessage("EXPRESSION_ORDER_BUTTON_DEFAULT"), array("text", "20"));
			$arModuleOptions[] = array("EXPRESSION_ORDER_TEXT", GetMessage("EXPRESSION_ORDER_TEXT"), GetMessage("EXPRESSION_ORDER_TEXT_DEFAULT"), array("textarea", "2", "50"));
			$arModuleOptions[] = array("EXPRESSION_FOR_EXISTS", GetMessage("EXPRESSION_FOR_EXISTS"), GetMessage("EXPRESSION_FOR_EXISTS_DEFAULT"), array("text", "20"));
			$arModuleOptions[] = array("EXPRESSION_FOR_NOTEXISTS", GetMessage("EXPRESSION_FOR_NOTEXISTS"), GetMessage("EXPRESSION_FOR_NOTEXISTS_DEFAULT"), array("text", "20"));
			$arModuleOptions[] = array("EXPRESSION_FOR_MIN", GetMessage("EXPRESSION_FOR_MIN"), GetMessage("EXPRESSION_FOR_MIN_DEFAULT"), array("text", "20"));
			$arModuleOptions[] = array("EXPRESSION_FOR_MID", GetMessage("EXPRESSION_FOR_MID"), GetMessage("EXPRESSION_FOR_MID_DEFAULT"), array("text", "20"));
			$arModuleOptions[] = array("EXPRESSION_FOR_MAX", GetMessage("EXPRESSION_FOR_MAX"), GetMessage("EXPRESSION_FOR_MAX_DEFAULT"), array("text", "20"));
			$arModuleOptions[] = array("EXPRESSION_FOR_FREE_DELIVERY", GetMessage("EXPRESSION_FOR_FREE_DELIVERY"), GetMessage("EXPRESSION_FOR_FREE_DELIVERY_DEFAULT"), array("text", "20"));

			// show min prices order
			$arModuleOptions[] = GetMessage("MIN_ORDER_PRICES");
			$arModuleOptions[] = array("MIN_ORDER_PRICE", GetMessage("MIN_ORDER_PRICE"), 1000, array("text", "20"));
			$arModuleOptions[] = array("MIN_ORDER_PRICE_TEXT", GetMessage("MIN_ORDER_PRICE_TEXT"), GetMessage("MIN_ORDER_PRICE_TEXT_EXAMPLE"), array("textarea", "3", "70"));

			// yandex
			$arModuleOptions[] = GetMessage('COUNTERS_GOALS_BLOCK');
			$arModuleOptions[] = array('USE_YA_COUNTER', GetMessage('USE_YA_COUNTER_TITLE'), 'N', array('checkbox'));
			$arModuleOptions[] = array('YANDEX_COUNTER', GetMessage('YANDEX_COUNTER_CODE_TITLE'), '', array('textarea', '3', '50'));
			$arModuleOptions[] = array('YA_COUNTER_ID', GetMessage('YA_COUNTER_ID_TITLE'), '', array('text', '20'));
			$arModuleOptions[] = array('YANDEX_ECOMERCE', GetMessage('YANDEX_ECOMERCE_TITLE'), 'N', array('checkbox'));
			$arModuleOptions[] = array(
				'USE_FORMS_GOALS',
				GetMessage('USE_FORMS_GOALS_TITLE'),
				'COMMON',
				array(
					'selectbox',
					array(
						'NONE' => GetMessage('USE_FORMS_GOALS_NONE'),
						'COMMON' => GetMessage('USE_FORMS_GOALS_COMMON'),
						'SINGLE' => GetMessage('USE_FORMS_GOALS_SINGLE'),
					),
				),
			);
			$arModuleOptions[] = array('USE_BASKET_GOALS', GetMessage('USE_BASKET_GOALS_TITLE'), 'Y', array('checkbox'));
			$arModuleOptions[] = array('USE_1CLICK_GOALS', GetMessage('USE_1CLICK_GOALS_TITLE'), 'Y', array('checkbox'));
			$arModuleOptions[] = array('USE_FASTORDER_GOALS', GetMessage('USE_FASTORDER_GOALS_TITLE'), 'Y', array('checkbox'));
			$arModuleOptions[] = array('USE_FULLORDER_GOALS', GetMessage('USE_FULLORDER_GOALS_TITLE'), 'Y', array('checkbox'));
			$arModuleOptions[] = array('USE_DEBUG_GOALS', GetMessage('USE_DEBUG_GOALS_TITLE'), 'N', array('checkbox'));
			$arModuleOptions[] = array('GOALS_NOTE', 'note' => GetMessage('GOALS_NOTE_TITLE'));

			// google
			$arModuleOptions[] = array("GOOGLE_COUNTER", GetMessage("GOOGLE_COUNTER_TITLE"), '', array("textarea", "3", "50"));
			$arModuleOptions[] = array("GOOGLE_ECOMERCE", GetMessage("GOOGLE_ECOMERCE_TITLE"), 'N', array("checkbox"));
			$arModuleOptions[] = array("BASKET_ADD_EVENT", GetMessage("BASKET_ADD_EVENT_TITLE"), "addToCart", array("text", "20"));
			$arModuleOptions[] = array("BASKET_REMOVE_EVENT", GetMessage("BASKET_REMOVE_EVENT_TITLE"), "removeFromCart", array("text", "20"));
			$arModuleOptions[] = array("CHECKOUT_ORDER_EVENT", GetMessage("CHECKOUT_ORDER_EVENT_TITLE"), "checkout", array("text", "20"));

			$arTabs = array();
			foreach($arSites as $key => $arSite){
				$arTabs[] = array(
					"DIV" => "edit".($key+1),
					"TAB" => GetMessage("MAIN_OPTIONS", array("#SITE_NAME#" => $arSite["NAME"], "#SITE_ID#" => $arSite["ID"])),
					"ICON" => "settings",
					"TITLE" => GetMessage("MAIN_OPTIONS_TITLE"),
					"PAGE_TYPE" => "site_settings",
					"SITE_ID" => $arSite["ID"],
					"SITE_DIR" => str_replace('//', '/', '/'.$arSite['DIR']),
					"OPTIONS" => $arModuleOptions,
				);
			}
		}

		return array("TABS" => $arTabs, "TEMPLATE_OPTIONS" => $arComponentOptions);
	}

	function SetJSOptions(){
		global $APPLICATION, $TEMPLATE_OPTIONS, $THEME_SWITCHER, $STARTTIME;
		$MESS["MIN_ORDER_PRICE_TEXT"]=COption::GetOptionString(self::moduleID, "MIN_ORDER_PRICE_TEXT", GetMessage("MIN_ORDER_PRICE_TEXT_EXAMPLE"), SITE_ID);

		if(COption::GetOptionString(self::moduleID, "SHOW_LICENCE", 'N', SITE_ID) == "Y")
		{
			ob_start();
				$APPLICATION->IncludeFile(SITE_DIR."include/licenses_text.php", Array(), Array("MODE" => "html", "NAME" => "LICENSES"));
			$license_text = ob_get_contents();
			ob_end_clean();
			$MESS["LICENSES_TEXT"] = $license_text;
		}
		?>
		<script type="text/javascript">
		BX.message(<?=CUtil::PhpToJSObject( $MESS, false )?>);

		var arOptimusOptions = ({
			"SITE_DIR" : "<?=SITE_DIR?>",
			"SITE_ID" : "<?=SITE_ID?>",
			"FORM" : ({
				"ASK_FORM_ID" : "ASK",
				"SERVICES_FORM_ID" : "SERVICES",
				"FEEDBACK_FORM_ID" : "FEEDBACK",
				"CALLBACK_FORM_ID" : "CALLBACK",
				"RESUME_FORM_ID" : "RESUME",
				"TOORDER_FORM_ID" : "TOORDER"
			}),
			"PAGES" : ({
				"FRONT_PAGE" : "<?=self::IsMainPage()?>",
				"BASKET_PAGE" : "<?=self::IsBasketPage()?>",
				"ORDER_PAGE" : "<?=self::IsOrderPage()?>",
				"PERSONAL_PAGE" : "<?=self::IsPersonalPage()?>",
				"CATALOG_PAGE" : "<?=self::IsCatalogPage()?>"
			}),
			"PRICES" : ({
				"MIN_PRICE" : "<?=trim(COption::GetOptionString(self::moduleID, "MIN_ORDER_PRICE", "1000", SITE_ID));?>",
			}),
			"THEME" : ({
				"THEME_SWITCHER" : "<?=strToLower(trim($THEME_SWITCHER))?>",
				"COLOR_THEME" : "<?=strToLower(trim($TEMPLATE_OPTIONS["COLOR_THEME"]["CURRENT_VALUE"]))?>",
				"CUSTOM_COLOR_THEME" : "<?=strToLower(trim($TEMPLATE_OPTIONS["CUSTOM_COLOR_THEME"]["CURRENT_VALUE"]))?>",
				"LOGO_IMAGE" : "<?=trim($TEMPLATE_OPTIONS["LOGO_IMAGE"]["CURRENT_IMG"])?>",
				"FAVICON_IMAGE" : "<?=trim($TEMPLATE_OPTIONS["FAVICON_IMAGE"]["CURRENT_IMG"])?>",
				"APPLE_TOUCH_ICON_IMAGE" : "<?=trim($TEMPLATE_OPTIONS["APPLE_TOUCH_ICON_IMAGE"]["CURRENT_IMG"])?>",
				"BANNER_WIDTH" : "<?=strToLower(trim($TEMPLATE_OPTIONS["BANNER_WIDTH"]["CURRENT_VALUE"]))?>",
				"BANNER_ANIMATIONTYPE" : "<?=trim(COption::GetOptionString(self::moduleID, "BANNER_ANIMATIONTYPE", "SLIDE_HORIZONTAL", SITE_ID));?>",
				"BANNER_SLIDESSHOWSPEED" : "<?=trim(COption::GetOptionString(self::moduleID, "BANNER_SLIDESSHOWSPEED", "5000", SITE_ID));?>",
				"BANNER_ANIMATIONSPEED" : "<?=trim(COption::GetOptionString(self::moduleID, "BANNER_ANIMATIONSPEED", "600", SITE_ID));?>",
				"HEAD" : ({
					"VALUE" : "<?=strToLower(trim($TEMPLATE_OPTIONS["HEAD"]["CURRENT_VALUE"]))?>",
					"MENU" : "<?=strToLower(trim($TEMPLATE_OPTIONS["HEAD"]["CURRENT_MENU"]))?>",
					"MENU_COLOR" : "<?=strToLower(trim($TEMPLATE_OPTIONS["HEAD"]["CURRENT_MENU_COLOR"]))?>",
					"HEAD_COLOR" : "<?=strToLower(trim($TEMPLATE_OPTIONS["HEAD"]["CURRENT_HEAD_COLOR"]))?>",
				}),
				"BASKET" : "<?=strToLower(trim($TEMPLATE_OPTIONS["BASKET"]["CURRENT_VALUE"]))?>",
				"STORES" : "<?=strToLower(trim($TEMPLATE_OPTIONS["STORES"]["CURRENT_VALUE"]))?>",
				"STORES_SOURCE" : "<?=strToLower(trim($TEMPLATE_OPTIONS["STORES_SOURCE"]["CURRENT_VALUE"]))?>",
				"TYPE_SKU" : "<?=strToLower(trim($TEMPLATE_OPTIONS["TYPE_SKU"]["CURRENT_VALUE"]))?>",
				"TYPE_VIEW_FILTER" : "<?=strToLower(trim($TEMPLATE_OPTIONS["TYPE_VIEW_FILTER"]["CURRENT_VALUE"]))?>",
				"SHOW_BASKET_ONADDTOCART" : "<?=trim(COption::GetOptionString(self::moduleID, "SHOW_BASKET_ONADDTOCART", "Y", SITE_ID))?>",
				"SHOW_BASKET_PRINT" : "<?=trim(COption::GetOptionString(self::moduleID, "SHOW_BASKET_PRINT", "Y", SITE_ID))?>",
				"SHOW_ONECLICKBUY_ON_BASKET_PAGE" : "<?=trim(COption::GetOptionString(self::moduleID, "SHOW_ONECLICKBUY_ON_BASKET_PAGE", "Y", SITE_ID))?>",
				"PHONE_MASK" : "<?=trim(COption::GetOptionString(self::moduleID, "PHONE_MASK", "+9 (999) 999-99-99", SITE_ID));?>",
				"VALIDATE_PHONE_MASK" : "<?=trim(COption::GetOptionString(self::moduleID, "VALIDATE_PHONE_MASK", "^[+][0-9] [(][0-9]{3}[)] [0-9]{3}[-][0-9]{2}[-][0-9]{2}$", SITE_ID));?>",
				"SCROLLTOTOP_TYPE" : "<?=trim(COption::GetOptionString(self::moduleID, "SCROLLTOTOP_TYPE", "ROUND_COLOR", SITE_ID))?>",
				"SCROLLTOTOP_POSITION" : "<?=trim(COption::GetOptionString(self::moduleID, "SCROLLTOTOP_POSITION", "PADDING", SITE_ID))?>",
				"MENU_POSITION" : "<?=strToLower(trim($TEMPLATE_OPTIONS["MENU_POSITION"]["CURRENT_VALUE"]))?>",
				"SHOW_LICENCE" : "<?=COption::GetOptionString(self::moduleID, "SHOW_LICENCE", "N", SITE_ID)?>",
			}),
			"COUNTERS":({
				"YANDEX_COUNTER" : "<?=strlen(trim(COption::GetOptionString(self::moduleID, "YANDEX_COUNTER", false, SITE_ID)))?>",
				"YANDEX_ECOMERCE" : "<?=trim(COption::GetOptionString(self::moduleID, "YANDEX_ECOMERCE", false, SITE_ID))?>",
				"USE_YA_COUNTER" : "<?=trim(COption::GetOptionString(self::moduleID, "USE_YA_COUNTER", 'N', SITE_ID))?>",
				"YA_COUNTER_ID" : "<?=trim(COption::GetOptionString(self::moduleID, "YA_COUNTER_ID", '', SITE_ID))?>",
				"USE_FORMS_GOALS" : "<?=trim(COption::GetOptionString(self::moduleID, "USE_FORMS_GOALS", 'COMMON', SITE_ID))?>",
				"USE_BASKET_GOALS" : "<?=trim(COption::GetOptionString(self::moduleID, "USE_BASKET_GOALS", 'Y', SITE_ID))?>",
				"USE_1CLICK_GOALS" : "<?=trim(COption::GetOptionString(self::moduleID, "USE_1CLICK_GOALS", 'Y', SITE_ID))?>",
				"USE_FASTORDER_GOALS" : "<?=trim(COption::GetOptionString(self::moduleID, "USE_FASTORDER_GOALS", 'Y', SITE_ID))?>",
				"USE_FULLORDER_GOALS" : "<?=trim(COption::GetOptionString(self::moduleID, "USE_FULLORDER_GOALS", 'Y', SITE_ID))?>",
				"USE_DEBUG_GOALS" : "<?=trim(COption::GetOptionString(self::moduleID, "USE_DEBUG_GOALS", 'N', SITE_ID))?>",
				"GOOGLE_COUNTER" : "<?=strlen(trim(COption::GetOptionString(self::moduleID, "GOOGLE_COUNTER", false, SITE_ID)))?>",
				"GOOGLE_ECOMERCE" : "<?=trim(COption::GetOptionString(self::moduleID, "GOOGLE_ECOMERCE", false, SITE_ID))?>",
				"TYPE":{
					"ONE_CLICK":"<?=GetMessage("ONE_CLICK_BUY");?>",
					"QUICK_ORDER":"<?=GetMessage("QUICK_ORDER");?>",
				},
				"GOOGLE_EVENTS":{
					"ADD2BASKET": "<?=trim(COption::GetOptionString(self::moduleID, "BASKET_ADD_EVENT", "addToCart", SITE_ID))?>",
					"REMOVE_BASKET": "<?=trim(COption::GetOptionString(self::moduleID, "BASKET_REMOVE_EVENT", "removeFromCart", SITE_ID))?>",
					"CHECKOUT_ORDER": "<?=trim(COption::GetOptionString(self::moduleID, "CHECKOUT_ORDER_EVENT", "checkout", SITE_ID))?>",
				}
			}),
			"JS_ITEM_CLICK":({
				"precision" : 6,
				"precisionFactor" : Math.pow(10,6)
			})
		});

		$(document).ready(function(){
			$.extend( $.validator.messages, {
				required: BX.message('JS_REQUIRED'),
				email: BX.message('JS_FORMAT'),
				equalTo: BX.message('JS_PASSWORD_COPY'),
				minlength: BX.message('JS_PASSWORD_LENGTH'),
				remote: BX.message('JS_ERROR')
			});

			$.validator.addMethod(
				'regexp', function( value, element, regexp ){
					var re = new RegExp( regexp );
					return this.optional( element ) || re.test( value );
				},
				BX.message('JS_FORMAT')
			);

			$.validator.addMethod(
				'filesize', function( value, element, param ){
					return this.optional( element ) || ( element.files[0].size <= param )
				},
				BX.message('JS_FILE_SIZE')
			);

			$.validator.addMethod(
				'date', function( value, element, param ) {
					var status = false;
					if(!value || value.length <= 0){
						status = false;
					}
					else{
						// html5 date allways yyyy-mm-dd
						var re = new RegExp('^([0-9]{4})(.)([0-9]{2})(.)([0-9]{2})$');
						var matches = re.exec(value);
						if(matches){
							var composedDate = new Date(matches[1], (matches[3] - 1), matches[5]);
							status = ((composedDate.getMonth() == (matches[3] - 1)) && (composedDate.getDate() == matches[5]) && (composedDate.getFullYear() == matches[1]));
						}
						else{
							// firefox
							var re = new RegExp('^([0-9]{2})(.)([0-9]{2})(.)([0-9]{4})$');
							var matches = re.exec(value);
							if(matches){
								var composedDate = new Date(matches[5], (matches[3] - 1), matches[1]);
								status = ((composedDate.getMonth() == (matches[3] - 1)) && (composedDate.getDate() == matches[1]) && (composedDate.getFullYear() == matches[5]));
							}
						}
					}
					return status;
				}, BX.message('JS_DATE')
			);

			$.validator.addMethod(
				'extension', function(value, element, param){
					param = typeof param === 'string' ? param.replace(/,/g, '|') : 'png|jpe?g|gif';
					return this.optional(element) || value.match(new RegExp('.(' + param + ')$', 'i'));
				}, BX.message('JS_FILE_EXT')
			);

			$.validator.addMethod(
				'captcha', function( value, element, params ){
					return $.validator.methods.remote.call(this, value, element,{
						url: arOptimusOptions['SITE_DIR'] + 'ajax/check-captcha.php',
						type: 'post',
						data:{
							captcha_word: value,
							captcha_sid: function(){
								return $(element).closest('form').find('input[name="captcha_sid"]').val();
							}
						}
					});
				},
				BX.message('JS_ERROR')
			);

			$.validator.addClassRules({
				'phone':{
					regexp: arOptimusOptions['THEME']['VALIDATE_PHONE_MASK']
				},
				'confirm_password':{
					equalTo: 'input[name="REGISTER\[PASSWORD\]"]',
					minlength: 6
				},
				'password':{
					minlength: 6
				},
				'inputfile':{
					extension: arOptimusOptions['THEME']['VALIDATE_FILE_EXT'],
					filesize: 5000000
				},
				'captcha':{
					captcha: ''
				}
			});

			if(arOptimusOptions['THEME']['PHONE_MASK']){
				$('input.phone').inputmask('mask', {'mask': arOptimusOptions['THEME']['PHONE_MASK']});
			}

			jqmEd('feedback', arOptimusOptions['FORM']['FEEDBACK_FORM_ID']);
			jqmEd('ask', arOptimusOptions['FORM']['ASK_FORM_ID'], '.ask_btn');
			jqmEd('services', arOptimusOptions['FORM']['SERVICES_FORM_ID'], '.services_btn','','.services_btn');
			if($('.resume_send').length){
				$('.resume_send').live('click', function(e){
					$("body").append("<span class='resume_send_wr' style='display:none;'></span>");
					jqmEd('resume', arOptimusOptions['FORM']['RESUME_FORM_ID'], '.resume_send_wr','', this);
					$("body .resume_send_wr").click();
					$("body .resume_send_wr").remove();
				})
			}
			jqmEd('callback', arOptimusOptions['FORM']['CALLBACK_FORM_ID'], '.callback_btn');

		});
		</script>
		<?/*fix reset POST*/
		if($_SERVER["REQUEST_METHOD"]=="POST" && $_POST["color_theme"]){
			LocalRedirect($_SERVER["HTTP_REFERER"]);
		}?>
	<?}

	function checkAllowDelivery($summ, $currency){
		$ERROR = false;
		$min_price = \Bitrix\Main\Config\Option::get(self::moduleID, "MIN_ORDER_PRICE", 1000, SITE_ID);
		$error_text = "";
		if( $summ < $min_price ){
			$ERROR = true;
			$error_text = \Bitrix\Main\Config\Option::get(self::moduleID, "MIN_ORDER_PRICE_TEXT", GetMessage("MIN_ORDER_PRICE_TEXT_EXAMPLE") );
			$error_text = str_replace( '#PRICE#', SaleFormatCurrency($min_price,$currency), $error_text );
			if($currency)
				$error_text = str_replace( '#PRICE#', SaleFormatCurrency($min_price,$currency), $error_text );
			else
				$error_text = str_replace( '#PRICE#', $min_price, $error_text );
		}
		return $arError=array( "ERROR" => $ERROR, "TEXT" => $error_text );
	}

	function showMoreText( $text ){
		$arText = explode( "#MORE_TEXT#", $text);
		if( $arText[1] ){
			$str = $arText[0];
			$str .= '<div class="wrap_more_item">';
				$str .= '<div class="more_text_item">';
				$str .= $arText[1];
				$str .= '</div>';
				$str .= '<div class="open_more"><span class="text"><i class="arrow"></i><span class="pseudo">'.GetMessage("EXPAND_BLOCK").'</span></span></div>';
			$str .= '</div>';
		}else{
			$str = $text;
		}
		return $str;
	}

	function IsCompositeEnabled(){
		if(class_exists('CHTMLPagesCache')){
			if(method_exists('CHTMLPagesCache', 'GetOptions')){
				if($arHTMLCacheOptions = CHTMLPagesCache::GetOptions()){
					if(method_exists('CHTMLPagesCache', 'isOn')){
						if (CHTMLPagesCache::isOn()){
							if(isset($arHTMLCacheOptions['AUTO_COMPOSITE']) && $arHTMLCacheOptions['AUTO_COMPOSITE'] === 'Y'){
								return 'AUTO_COMPOSITE';
							}
							else{
								return 'COMPOSITE';
							}
						}
					}
					else{
						if($arHTMLCacheOptions['COMPOSITE'] === 'Y'){
							return 'COMPOSITE';
						}
					}
				}
			}
		}

		return false;
	}

	function EnableComposite($auto = false){
		if(class_exists('CHTMLPagesCache')){
			if(method_exists('CHTMLPagesCache', 'GetOptions')){
				if($arHTMLCacheOptions = CHTMLPagesCache::GetOptions()){
					$arHTMLCacheOptions['COMPOSITE'] = 'Y';
					$arHTMLCacheOptions['AUTO_UPDATE'] = 'Y'; // standart mode
					$arHTMLCacheOptions['AUTO_UPDATE_TTL'] = '0'; // no ttl delay
					$arHTMLCacheOptions['AUTO_COMPOSITE'] = ($auto ? 'Y' : 'N'); // auto composite mode
					CHTMLPagesCache::SetEnabled(true);
					CHTMLPagesCache::SetOptions($arHTMLCacheOptions);
					bx_accelerator_reset();
				}
			}
		}
	}

	function __AdmSettingsSaveOption_EX($module_id, $arOption){
		if(!is_array($arOption)){
			return false;
		}

		$arControllerOption = CControllerClient::GetInstalledOptions($module_id);
		if(isset($arControllerOption[$arOption[0]])){
			return false;
		}

		$name = $arOption[0];
		$val = $_REQUEST[$name];
		$siteID = end(explode("_", $arOption[0]));
		$name = substr($name, 0, (strlen($name)-strlen($siteID)-1));

		if(array_key_exists(4, $arOption) && $arOption[4] == 'Y'){
			if($arOption[3][0] == 'checkbox'){
				$val = 'N';
			}
			else{
				return false;
			}
		}

		if($arOption[3][0] == "checkbox" && $val != "Y"){
			$val = "N";
		}
		elseif($arOption[3][0] == "multiselectbox"){
			$val = @implode(",", $val);
		}
		elseif($arOption[3][0] == "file"){
			$val = $arValueDefault = serialize(array());
			if(isset($_REQUEST[$name.'_'.$siteID.'_del']) || (isset($_FILES[$arOption[0]]) && strlen($_FILES[$arOption[0]]['tmp_name']['0']))){
				$arValues = unserialize(COption::GetOptionString($module_id, $name, $arValueDefault, $siteID));
				$arValues = (array)$arValues;
				foreach($arValues as $fileID){
					CFile::Delete($fileID);
				}
			}

			if(isset($_FILES[$arOption[0]]) && (strlen($_FILES[$arOption[0]]['tmp_name']['n0']) || strlen($_FILES[$arOption[0]]['tmp_name']['0']))){
				$arValues = array();
				$absFilePath = (strlen($_FILES[$arOption[0]]['tmp_name']['n0']) ? $_FILES[$arOption[0]]['tmp_name']['n0'] : $_FILES[$arOption[0]]['tmp_name']['0']);
				$arOriginalName = (strlen($_FILES[$arOption[0]]['name']['n0']) ? $_FILES[$arOption[0]]['name']['n0'] : $_FILES[$arOption[0]]['name']['0']);
				if(file_exists($absFilePath)){
					$arFile = CFile::MakeFileArray($absFilePath);
					$arFile['name'] = $arOriginalName; // for original file extension

					if($bIsIco = strpos($arOriginalName, '.ico') !== false){
						$script_files = COption::GetOptionString("fileman", "~script_files", "php,php3,php4,php5,php6,phtml,pl,asp,aspx,cgi,dll,exe,ico,shtm,shtml,fcg,fcgi,fpl,asmx,pht,py,psp,var");
						$arScriptFiles = explode(',', $script_files);
						if(($p = array_search('ico', $arScriptFiles)) !== false){
							unset($arScriptFiles[$p]);
						}
						$tmp = implode(',', $arScriptFiles);
						COption::SetOptionString("fileman", "~script_files", $tmp);
					}

					if($fileID = CFile::SaveFile($arFile, self::moduleID)){
						$arValues[] = $fileID;
					}

					if($bIsIco){
						COption::SetOptionString("fileman", "~script_files", $script_files);
					}
				}
				$val = serialize($arValues);
			}

			if(!isset($_FILES[$arOption[0]]) || (!strlen($_FILES[$arOption[0]]['tmp_name']['n0']) && !strlen($_FILES[$arOption[0]]['tmp_name']['0']) && !isset($_REQUEST[$name.'_'.$siteID.'_del']))){
				return;
			}
		}
		if($name === 'FAVICON_IMAGE'){
			self::CopyFaviconToSiteDir($val, $siteID); //copy favicon for search bots
		}

		if($name == 'YA_COUNTER_ID' && strlen($val)){
			$val = str_replace('yaCounter', '', $val);
		}

		if(strpos($name, 'CUSTOM_COLOR_THEME') !== false || strpos($name, 'CUSTOM_BGCOLOR_THEME') !== false){
			$val = str_replace('#', '', $val);
			$val = strlen($val) ? $val : $arOption[2];
		}

		COption::SetOptionString($module_id, $name, $val, $arOption[1], $siteID);
	}

	static function CopyFaviconToSiteDir($arValue, $siteID = ''){
		if(($siteID)){
			$arValue=unserialize($arValue);
			if($arValue[0]){
				$imageSrc = $_SERVER['DOCUMENT_ROOT'].CFile::GetPath($arValue[0]);
			}
			else{
				if($arTemplate = self::GetSiteTemplate($siteID)){
					$imageSrc = str_replace('//', '/', $arTemplate['PATH'].'/images/favicon.ico');
				}
			}
			$arSite = CSite::GetByID($siteID)->Fetch();

			@unlink($imageDest = $arSite['ABS_DOC_ROOT'].'/'.$arSite['DIR'].'/favicon.ico');
			if(file_exists($imageSrc)){
				@copy($imageSrc, $arSite['ABS_DOC_ROOT'].'/'.$arSite['DIR'].'/favicon.ico');
			}else{
				@copy($arSite['ABS_DOC_ROOT'].'/'.$arSite['DIR'].'/include/favicon.ico', $arSite['ABS_DOC_ROOT'].'/'.$arSite['DIR'].'/favicon.ico');
			}
		}
	}

	static function GetSiteTemplate($siteID = ''){
		$arTemplate = array();

		if(strlen($siteID)){
			$dbRes = CSite::GetTemplateList($siteID);
			while($arTemplate = $dbRes->Fetch()){
				if(!strlen($arTemplate['CONDITION'])){
					if(file_exists(($arTemplate['PATH'] = $_SERVER['DOCUMENT_ROOT'].'/bitrix/templates/'.$arTemplate['TEMPLATE']))){
						break;
					}
					elseif(file_exists(($arTemplate['PATH'] = $_SERVER['DOCUMENT_ROOT'].'/local/templates/'.$arTemplate['TEMPLATE']))){
						break;
					}
				}
			}
		}

		return $arTemplate;
	}

	function __AdmSettingsDrawRow_EX($module_id, $Option, $siteID, $siteDir){
		$arControllerOption = CControllerClient::GetInstalledOptions($module_id);
		if(!is_array($Option)):?><tr class="heading"><td colspan="2"><?=$Option?></td></tr><?
		elseif(isset($Option["note"])):
			$name  = substr($Option[0], 0, (strlen($Option[0]) - strlen($siteID) - 1));
			if($name == 'GOALS_NOTE'){
				$FORMS_GOALS_LIST = '';
				if(CModule::IncludeModule('form')){
					if($siteID){
						if($arForms = COptimusCache::CForm_GetList($by = array('by' => 's_id', 'CACHE' => array('TAG' => 'forms')), $order = 'asc', array('SITE' => $siteID, 'SITE_EXACT_MATCH' => 'Y'), $is_filtered)
						){
							foreach($arForms as $arForm){
								$FORMS_GOALS_LIST .= $arForm['NAME'].' - <i>goal_webform_success_'.$arForm['ID'].'</i><br />';
							}
						}
					}
				}

				$Option['note'] = str_replace('#FORMS_GOALS_LIST#', $FORMS_GOALS_LIST, $Option['note']);
			}
		?>
			<tr data-optioncode="<?=$name?>">
				<td colspan="2" align="center">
					<?echo BeginNote('align="center"');?>
					<?=$Option["note"]?>
					<?echo EndNote();?>
				</td>
			</tr>
		<?
		else:
			$name  = substr($Option[0], 0, (strlen($Option[0])-strlen($siteID)-1));
			$val = COption::GetOptionString($module_id, $name, $Option[2], $siteID);
			$type = $Option[3];
			$disabled = array_key_exists(4, $Option) && $Option[4] == 'Y' ? ' disabled' : '';
			$sup_text = array_key_exists(5, $Option) ? $Option[5] : '';
			$style = "";
			if($name == "TOP_SECTION_DESCRIPTION_POSITION" || $name == "BOTTOM_SECTION_DESCRIPTION_POSITION")
			{
				$type_description = \Bitrix\Main\Config\Option::get(self::moduleID, "SHOW_SECTION_DESCRIPTION", "BOTTOM", $siteID );
				if($type_description != "BOTH")
					$style = "style='display:none;'";
			}
		?>
			<tr <?=$style;?> data-optioncode="<?=$name?>">
				<td<?if($type[0]=="multiselectbox" || $type[0]=="textarea" || $type[0]=="statictext" || $type[0]=="statichtml") echo ' class="adm-detail-valign-top"'?> width="50%"><?
					if($type[0]=="checkbox") echo "<label for='".htmlspecialcharsbx($Option[0])."'>".$Option[1]."</label>";
					else echo $Option[1];
					if (strlen($sup_text) > 0) { ?><span class="required"><sup><?=$sup_text?></sup></span><? }
				?></td>
				<td width="50%"><?
				if($type[0]=="checkbox"): ?><input type="checkbox" <?if(isset($arControllerOption[$Option[0]]))echo ' disabled title="'.GetMessage("MAIN_ADMIN_SET_CONTROLLER_ALT").'"';?> id="<?echo htmlspecialcharsbx($Option[0])?>" name="<?echo htmlspecialcharsbx($Option[0])?>" value="Y"<?if($val=="Y")echo" checked";?><?=$disabled?><?if($type[2]<>'') echo " ".$type[2]?>><?
				elseif($type[0]=="text" || $type[0]=="password"): ?><input type="<?echo $type[0]?>"<?if(isset($arControllerOption[$Option[0]]))echo ' disabled title="'.GetMessage("MAIN_ADMIN_SET_CONTROLLER_ALT").'"';?> size="<?echo $type[1]?>" maxlength="255" value="<?echo htmlspecialcharsbx($val)?>" name="<?echo htmlspecialcharsbx($Option[0])?>"<?=$disabled?><?=($type[0]=="password"? ' autocomplete="off"':'')?>><?
				elseif($type[0]=="selectbox"):
					$arr = $type[1];
					if(!is_array($arr))
						$arr = array();
					$arr_keys = array_keys($arr);
					?><select name="<?echo htmlspecialcharsbx($Option[0])?>" <?if(isset($arControllerOption[$Option[0]]))echo ' disabled title="'.GetMessage("MAIN_ADMIN_SET_CONTROLLER_ALT").'"';?> <?=$disabled?>><?
						$count = count($arr_keys);
						for($j=0; $j<$count; $j++): ?><option value="<?echo $arr_keys[$j]?>"<?if($val==$arr_keys[$j])echo" selected"?>><?echo htmlspecialcharsbx($arr[$arr_keys[$j]])?></option><? endfor;
						?></select>
				<?elseif($type[0]=="selectbox_iblock"):

					\Bitrix\Main\Loader::includeModule('iblock');
					$rsIBlock=CIBlock::GetList(array("SORT"=>"ASC", "ID"=>"DESC"), array("LID"=>$siteID));
					$arIBlocks=array();
					while($arIBlock=$rsIBlock->Fetch()){
						$arIBlocks[$arIBlock["ID"]]["NAME"]="(".$arIBlock["ID"].") ".$arIBlock["NAME"]."[".$arIBlock["CODE"]."]";
						$arIBlocks[$arIBlock["ID"]]["CODE"]=$arIBlock["CODE"];
					}
					$arr_keys = array_keys($arIBlocks);
					?>
					<select name="<?echo htmlspecialcharsbx($Option[0])?>" <?if(isset($arControllerOption[$Option[0]]))echo ' disabled title="'.GetMessage("MAIN_ADMIN_SET_CONTROLLER_ALT").'"';?> <?=$disabled?>>
						<?if($arIBlocks){
							foreach($arIBlocks as $key => $arValue) {
								$selected="";
								if(!$val && $arValue["CODE"]=="aspro_optimus_catalog"){
									$selected="selected";
								}elseif($val && $val==$key){
									$selected="selected";
								}?>
								<option value="<?=$key;?>" <?=$selected;?>><?=htmlspecialcharsbx($arValue["NAME"]);?></option>
							<?}
						}else{?>
							<option value="">-</option>
						<?}?>
					</select><?
				elseif($type[0]=="multiselectbox"):
					$arr = $type[1];
					if(!is_array($arr)) $arr = array();
					$arr_keys = array_keys($arr);
					$arr_val = explode(",",$val);
					?><select size="5" <?if(isset($arControllerOption[$Option[0]]))echo ' disabled title="'.GetMessage("MAIN_ADMIN_SET_CONTROLLER_ALT").'"';?> multiple name="<?echo htmlspecialcharsbx($Option[0])?>[]"<?=$disabled?>><?
						$count = count($arr_keys);
						for($j=0; $j<$count; $j++): ?><option value="<?echo $arr_keys[$j]?>"<?if(in_array($arr_keys[$j],$arr_val)) echo " selected"?>><?echo htmlspecialcharsbx($arr[$arr_keys[$j]])?></option><? endfor;
					?></select><?
				elseif($type[0]=="includefile"):
					if(!is_array($type[1]['INCLUDEFILE'])){
						$type[1]['INCLUDEFILE'] = array($type[1]['INCLUDEFILE']);
					}
					foreach($type[1]['INCLUDEFILE'] as $includefile){
						$includefile = str_replace('//', '/', str_replace('#SITE_DIR#', $siteDir.'/', $includefile));
						if(strpos($includefile, '#') === false){
							$template = (isset($type[1]['TEMPLATE']) && strlen($type[1]['TEMPLATE']) ? $type[1]['TEMPLATE'] : '');
							$href = (!strlen($includefile) ? "javascript:;" : "javascript: new BX.CAdminDialog({'content_url':'/bitrix/admin/public_file_edit.php?site=".$siteID."&bxpublic=Y&from=includefile&templateID=".TEMPLATE_NAME."&path=".$includefile."&lang=".LANGUAGE_ID."&template=".$template."&subdialog=Y&siteTemplateId=".TEMPLATE_NAME."','width':'1009','height':'503'}).Show();");
							?><a class="adm-btn" href="<?=$href?>" name="<?=htmlspecialcharsbx($name)."_".$siteID?>" title="<?=GetMessage('OPTIONS_EDIT_BUTTON_TITLE')?>"><?=GetMessage('OPTIONS_EDIT_BUTTON_TITLE')?></a>&nbsp;<?
						}
					}
				elseif($type[0]=="textarea"):?><textarea <?if(isset($arControllerOption[$Option[0]]))echo ' disabled title="'.GetMessage("MAIN_ADMIN_SET_CONTROLLER_ALT").'"';?> rows="<?echo $type[1]?>" cols="<?echo $type[2]?>" name="<?echo htmlspecialcharsbx($Option[0])?>"<?=$disabled?>><?echo htmlspecialcharsbx($val)?></textarea><?
				elseif($type[0]=='file'):
					$val = unserialize($val);
					$Option['MULTIPLE'] = 'N';
					if(strpos($Option[0], 'LOGO_IMAGE') !== false) {
						$arOption['WIDTH'] = 163;
						$arOption['HEIGHT'] = 36;
					}
					elseif(strpos($Option[0], 'FAVICON_IMAGE') !== false) {
						$arOption['WIDTH'] = 16;
						$arOption['HEIGHT'] = 16;
					}
					elseif(strpos($Option[0], 'APPLE_TOUCH_ICON_IMAGE') !== false) {
						$arOption['WIDTH'] = 180;
						$arOption['HEIGHT'] = 180;
					}
					self::__ShowFilePropertyField($Option[0], $Option, $val);
				elseif($type[0]=="statictext"): echo htmlspecialcharsbx($val);
				elseif($type[0]=="statichtml"): echo $val;
				endif;
				?></td>
			</tr>
		<?
		endif;
	}

	function __AdmSettingsDrawCustomRow($html){
		echo '<tr><td colspan="2">'.$html.'</td></tr>';
	}

	protected function __ShowFilePropertyField($name, $arOption, $values){
		global $bCopy, $historyId;

		if(!is_array($values)){
			$values = array($values);
		}

		if($bCopy || empty($values)){
			$values = array('n0' => 0);
		}

		$optionWidth = $arOption['WIDTH'] ? $arOption['WIDTH'] : 200;
		$optionHeight = $arOption['HEIGHT'] ? $arOption['HEIGHT'] : 100;

		if($arOption['MULTIPLE'] == 'N'){
			foreach($values as $key => $val){
				if(is_array($val)){
					$file_id = $val['VALUE'];
				}
				else{
					$file_id = $val;
				}
				if($historyId > 0){
					echo CFileInput::Show($name.'['.$key.']', $file_id,
						array(
							'IMAGE' => $arOption['IMAGE'],
							'PATH' => 'Y',
							'FILE_SIZE' => 'Y',
							'DIMENSIONS' => 'Y',
							'IMAGE_POPUP' => 'Y',
							'MAX_SIZE' => array(
								'W' => $optionWidth,
								'H' => $optionHeight,
							),
						)
					);
				}
				else{
					echo CFileInput::Show($name.'['.$key.']', $file_id,
						array(
							'IMAGE' => $arOption['IMAGE'],
							'PATH' => 'Y',
							'FILE_SIZE' => 'Y',
							'DIMENSIONS' => 'Y',
							'IMAGE_POPUP' => 'Y',
							'MAX_SIZE' => array(
							'W' => $optionWidth,
							'H' => $optionHeight,
							),
						),
						array(
							'upload' => true,
							'medialib' => true,
							'file_dialog' => true,
							'cloud' => true,
							'del' => true,
							'description' => $arOption['WITH_DESCRIPTION'] == 'Y',
						)
					);
				}
				break;
			}
		}
		else{
			$inputName = array();
			foreach($values as $key => $val){
				if(is_array($val)){
					$inputName[$name.'['.$key.']'] = $val['VALUE'];
				}
				else{
					$inputName[$name.'['.$key.']'] = $val;
				}
			}
			if($historyId > 0){
				echo CFileInput::ShowMultiple($inputName, $name.'[n#IND#]',
					array(
						'IMAGE' => $arOption['IMAGE'],
						'PATH' => 'Y',
						'FILE_SIZE' => 'Y',
						'DIMENSIONS' => 'Y',
						'IMAGE_POPUP' => 'Y',
						'MAX_SIZE' => array(
							'W' => $optionWidth,
							'H' => $optionHeight,
						),
					),
				false);
			}
			else{
				echo CFileInput::ShowMultiple($inputName, $name.'[n#IND#]',
					array(
						'IMAGE' => $arOption['IMAGE'],
						'PATH' => 'Y',
						'FILE_SIZE' => 'Y',
						'DIMENSIONS' => 'Y',
						'IMAGE_POPUP' => 'Y',
						'MAX_SIZE' => array(
							'W' => $optionWidth,
							'H' => $optionHeight,
						),
					),
				false,
					array(
						'upload' => true,
						'medialib' => true,
						'file_dialog' => true,
						'cloud' => true,
						'del' => true,
						'description' => $arOption['WITH_DESCRIPTION'] == 'Y',
					)
				);
			}
		}
	}

	static function InsertCounters(&$html){
		if(defined("ADMIN_SECTION")/* || $_SERVER["HTTP_BX_CACHE_MODE"] == "HTMLCACHE"*/){
			return;
		}

		define("LOAD_COUNTERS", true);
		global $APPLICATION;
		if(defined("LOAD_COUNTERS")  && (strpos($APPLICATION->GetCurPage(),'personal')===false)){
			$counter = $yandex_counter = $google_counter = '';

			$useYACounter = \Bitrix\Main\Config\Option::get(self::moduleID, "USE_YA_COUNTER", 'N', SITE_ID);
			if($useYACounter == 'Y'){
				$yandex_counter = \Bitrix\Main\Config\Option::get(self::moduleID, "YANDEX_COUNTER", false, SITE_ID);
			}
			if($yandex_counter){
				$counter .= '
<script>
	var yandexEvents = new function(){
		var myWatchers = new Array();
		this.addEventListener = function( watcher ){
			myWatchers.push( watcher );
		};

		this.raiseEvents = function( eventId ){
			for( var thisEventIndex in myWatchers ){
				myWatchers[thisEventIndex]( eventId );
			}
		};
	};
	window.onload=function(){
		window.dataLayer = window.dataLayer || [];
	}
</script>
';
				$counter .= $yandex_counter;
			}

			$google_counter = \Bitrix\Main\Config\Option::get(self::moduleID, "GOOGLE_COUNTER", false, SITE_ID);
			if( $google_counter && $google_ecomerce=="Y" ){
				$counter1 .=$google_counter;
				$html = str_replace( '<body id="main">', '<body id="main">'.$counter1, $html );
			}
			if($google_counter){
				$counter .= $google_counter;
			}

			if(strlen($counter)){
				$arParts = explode('</body>', $html);
				if(count($arParts) > 1){
					$arParts[count($arParts) - 1] = $counter.$arParts[count($arParts) - 1];
					$html = implode('</body>', $arParts);
				}
			}
		}
	}

	function clearBasketCacheHandler($orderID, $arFields, $arParams = array()){
		COptimusCache::ClearCacheByTag('sale_basket');
		unset($_SESSION['ASPRO_BASKET_COUNTERS']);
		if(isset($arFields) && $arFields)
		{
			if(isset($arFields["ID"]) && $arFields["ID"])
			{
				\Bitrix\Main\Loader::includeModule("sale");
				global $USER;
				$USER_ID = ($USER_ID = $USER->GetID()) ? $USER_ID : 0;
				$arUser = $arUser = COptimusCache::CUser_GetList(array("SORT" => "ASC", "CACHE" => array("MULTI" => "N", "TAG" => COptimusCache::GetUserCacheTag($USER_ID))), array("ID" => $USER_ID), array("FIELDS" => array("ID", "PERSONAL_PHONE")));
				if(!$arUser["PERSONAL_PHONE"])
				{
					$rsOrder = CSaleOrderPropsValue::GetList(array(), array("ORDER_ID" => $arFields["ID"]));
					$arOrderProps = array();
					while($item = $rsOrder->Fetch())
					{
						$arOrderProps[$item["CODE"]] = $item;
					}
					if(isset($arOrderProps["PHONE"]) && $arOrderProps["PHONE"] && (isset($arOrderProps["PHONE"]["VALUE"]) && $arOrderProps["PHONE"]["VALUE"]))
					{
						$user = new CUser;
						$fields = Array(
							"PERSONAL_PHONE" => $arOrderProps["PHONE"]["VALUE"],
						);
						$user->Update($arUser["ID"], $fields);
					}

				}
			}
		}
	}

	function OnBeforeUserUpdateHandler(&$arFields){
		$bTmpUser = false;

		if(strlen($arFields["NAME"]))
			$arFields["NAME"] = trim($arFields["NAME"]);
		if(strlen($arFields["NAME"]) && !strlen($arFields["LAST_NAME"]) && !strlen($arFields["SECOND_NAME"])){
			$arName = explode(' ', $arFields["NAME"]);

			if($arName){
				$arFields["NAME"] = "";
				$arFields["SECOND_NAME"] = "";
				foreach($arName as $i => $name){
					if(!$i){
						$arFields["LAST_NAME"] = $name;
					}
					else{
						if(!strlen($arFields["NAME"])){
							$arFields["NAME"] = $name;
						}
						elseif(!strlen($arFields["SECOND_NAME"])){
							$arFields["SECOND_NAME"] = $name;
						}
					}
				}
			}
		}
		if($_REQUEST["confirmorder"]=="Y"  && !strlen($arFields["SECOND_NAME"]) && $_REQUEST["ORDER_PROP_1"]){
			$arNames = explode(' ', $_REQUEST["ORDER_PROP_1"]);
			if($arNames[2]){
				$arFields["SECOND_NAME"]=$arNames[2];
			}
		}
		if(strlen($arFields["EMAIL"])){
			$bEmailError = false;

			$rsUser = CUser::GetList($by = "ID", $order = "ASC", array("=EMAIL" => $arFields["EMAIL"], "!ID" => $arFields["ID"]));
			if(!$bEmailError = intval($rsUser->SelectedRowsCount()) > 0){
				$rsUser = CUser::GetList($by = "ID", $order = "ASC", array("LOGIN_EQUAL" => $arFields["EMAIL"], "!ID" => $arFields["ID"]));
				$bEmailError = intval($rsUser->SelectedRowsCount()) > 0;
			}

			if($bEmailError){
				global $APPLICATION;
				$APPLICATION->throwException(GetMessage('EMAIL_IS_ALREADY_EXISTS', array('#EMAIL#' => $arFields["EMAIL"])));
				return false;
			}
			else{
				// !admin
				if (!isset($GLOBALS["USER"]) || !is_object($GLOBALS["USER"])){
					$bTmpUser = True;
					$GLOBALS["USER"] = new \CUser;
				}

				if(!$GLOBALS['USER']->IsAdmin())
					$arFields["LOGIN"] = $arFields["EMAIL"];
			}
		}

		if ($bTmpUser)
			unset($GLOBALS["USER"]);

		return $arFields;
	}

	function GetYearsItems($iblock_id){
		$arYears=array();
		$rsItems=CIBlockElement::GetList(array(), array("IBLOCK_ID" => $iblock_id, "ACTIVE" => "Y", "GLOBAL_ACTIVE" => "Y"), false, false, array("ID", "DATE_ACTIVE_FROM"));
		while($arItem=$rsItems->Fetch()){
			if($arItem["DATE_ACTIVE_FROM"]){
				$date = explode(' ', $arItem["DATE_ACTIVE_FROM"]);
				$date = $date[0];
				$date = explode('.', $date);
				$arYears[$date[2]] = $date[2];
			}
		}
		return $arYears;
	}

	function removeDirectory($dir){
		if($objs = glob($dir."/*")){
			foreach($objs as $obj){
				if(is_dir($obj)){
					self::removeDirectory($obj);
				}
				else{
					if(!unlink($obj)){
						if(chmod($obj, 0777)){
							unlink($obj);
						}
					}
				}
			}
		}
		if(!rmdir($dir)){
			if(chmod($dir, 0777)){
				rmdir($dir);
			}
		}
	}

    function inputClean($input, $sql = false){
       /* $input = htmlentities($input, ENT_QUOTES, LANG_CHARSET);
        if(get_magic_quotes_gpc ())
        {
            $input = stripslashes ($input);
        }
        if ($sql)
        {
            $input = mysql_real_escape_string ($input);
        }
        $input = strip_tags($input);
        $input=str_replace ("\n"," ", $input);
        $input=str_replace ("\r","", $input); */
        return $input;
    }

    static function getBasketCounters(){
    	global $USER;
    	$USER_ID = ($USER_ID = $USER->GetID()) ? $USER_ID : 0;
    	$arResult = false;

    	if(isset($_SESSION['ASPRO_BASKET_COUNTERS'])){
    		if(!is_array($_SESSION['ASPRO_BASKET_COUNTERS']) || (is_array($_SESSION['ASPRO_BASKET_COUNTERS']) && count($_SESSION['ASPRO_BASKET_COUNTERS']) && !isset($_SESSION['ASPRO_BASKET_COUNTERS'][$USER_ID]))){
    			unset($_SESSION['ASPRO_BASKET_COUNTERS']);
    		}
    		else{
		    	$arResult = $_SESSION['ASPRO_BASKET_COUNTERS'][$USER_ID];
    		}
    	}

    	if(!$arResult || !is_array($arResult)){
    		// set default value
    		$arResult = array('READY' => array('COUNT' => 0, 'TITLE' => '', 'HREF' => SITE_DIR.'basket/'), 'DELAY' => array('COUNT' => 0, 'TITLE' => '', 'HREF' => SITE_DIR.'basket/'), 'COMPARE' => array('COUNT' => 0, 'TITLE' => GetMessage('COMPARE_BLOCK'), 'HREF' => SITE_DIR.'catalog/compare.php'), 'PERSONAL' => array('ID' => $USER_ID, 'SRC' => '', 'TITLE' => GetMessage("USER_AUTH"), 'HREF' => SITE_DIR.'auth/'), 'DEFAULT' => true);

    		// get user avatar
	    	if($isAuthorized = ($USER->isAuthorized() ? true : false)){
				$arResult['PERSONAL']['TITLE'] = GetMessage("USER_CABINET");

	    		$arUser = COptimusCache::CUser_GetList(array("SORT" => "ASC", "CACHE" => array("MULTI" => "N", "TAG" => COptimusCache::GetUserCacheTag($USER_ID))), array("ID" => $USER_ID), array("FIELDS" => array("ID", "PERSONAL_PHOTO")));
				if($arUser["PERSONAL_PHOTO"]){
					$arPhoto = CFile::ResizeImageGet($arUser["PERSONAL_PHOTO"], array("width" => 50, "height" => 50), BX_RESIZE_IMAGE_EXACT, true);
					$arResult['PERSONAL']['SRC'] = $arPhoto['src'];
				}
	    	}
    	}

    	$_SESSION['ASPRO_BASKET_COUNTERS'] = array($USER_ID => $arResult);
    	return $arResult;
    }

    static function clearFormatPrice($price){
    	$strPrice = '';
    	if($price)
    	{
    		$arPrice = array();
	    	preg_match('/<span class=\'price_value\'>(.+?)<\/span>/is', $price, $arVals);
			if($arVals[1])
				$arPrice[] = $arVals[1];
			preg_match('/<span class=\'price_currency\'>(.+?)<\/span>/is', $price, $arVals);

			if($arVals[1])
				$arPrice[] = $arVals[1];
			if($arPrice)
				$strPrice = implode('', $arPrice);
    	}
    	return $strPrice;
    }

    static function updateBasketCounters($arValue){
    	global $USER;
    	$USER_ID = ($USER_ID = $USER->GetID()) ? $USER_ID : 0;

    	$arResult = self::getBasketCounters();
    	if($arValue && is_array($arValue)){
    		$arResult = array_replace_recursive($arResult, $arValue);
    	}
    	$arResult['DEFAULT'] = false;

    	$_SESSION['ASPRO_BASKET_COUNTERS'] = array($USER_ID => $arResult);
    	return $arResult;
    }

    static function clearBasketCounters(){
    	unset($_SESSION['ASPRO_BASKET_COUNTERS']);
    }


	function correctInstall(){
		if(COption::GetOptionString(self::moduleID, "WIZARD_DEMO_INSTALLED") == "Y"){
			if(CModule::IncludeModule("main")){
				require_once($_SERVER["DOCUMENT_ROOT"].BX_ROOT."/modules/main/classes/general/wizard.php");
				@set_time_limit(0);
				if(!CWizardUtil::DeleteWizard(self::wizardID)){if(!DeleteDirFilesEx($_SERVER["DOCUMENT_ROOT"]."/bitrix/wizards/".self::partnerName."/".self::solutionName."/")){self::removeDirectory($_SERVER["DOCUMENT_ROOT"]."/bitrix/wizards/".self::partnerName."/".self::solutionName."/");}}
				UnRegisterModuleDependences("main", "OnBeforeProlog", self::moduleID, get_class(), "correctInstall");
				COption::SetOptionString(self::moduleID, "WIZARD_DEMO_INSTALLED", "N");
			}
		}
	}

	function newAction($action = "unknown"){
		$socket = fsockopen('bi.aspro.ru', 80, $errno, $errstr, 10);
		if($socket){
			if(CModule::IncludeModule("main")){
				global $APPLICATION;
				require_once($_SERVER["DOCUMENT_ROOT"]."/bitrix/modules/main/classes/general/update_client.php");
				$errorMessage = "";
				$serverIP = ($_SERVER["HTTP_X_REAL_IP"] ? $_SERVER["HTTP_X_REAL_IP"] : $_SERVER["SERVER_ADDR"]);
				$arUpdateList = CUpdateClient::GetUpdatesList($errorMessage, "ru", "Y");
				if(array_key_exists("CLIENT", $arUpdateList) && $arUpdateList["CLIENT"][0]["@"]["LICENSE"]){
					$edition = $arUpdateList["CLIENT"][0]["@"]["LICENSE"];
				}
				else{
					$edition = "UNKNOWN";
				}
				$data = json_encode(
					array(
						"client" => "aspro",
						"install_date" => date("Y-m-d H:i:s"),
						"solution_code" => self::moduleID,
						"ip" => $serverIP,
						"http_host" => $_SERVER["HTTP_HOST"],
						"bitrix_version" => SM_VERSION,
						"bitrix_edition" => $APPLICATION->ConvertCharset($edition, SITE_CHARSET, "utf-8"),
						"bitrix_key_hash" => md5(CUpdateClient::GetLicenseKey()),
						"site_name" => $APPLICATION->ConvertCharset(COption::GetOptionString("main", "site_name"), SITE_CHARSET, "utf-8"),
						"site_url" => $APPLICATION->ConvertCharset(COption::GetOptionString("main", "server_name"), SITE_CHARSET, "utf-8"),
						"email_default" => $APPLICATION->ConvertCharset(COption::GetOptionString("main", "email_from"), SITE_CHARSET, "utf-8"),
						"action" => $action,
					)
				);
				fwrite($socket, "POST /rest/bitrix/installs HTTP/1.1\r\n");
				fwrite($socket, "Host: bi.aspro.ru\r\n");
				fwrite($socket, "Content-type: application/x-www-form-urlencoded\r\n");
				fwrite($socket, "Content-length:".strlen($data)."\r\n");
				fwrite($socket, "Accept:*/*\r\n");
				fwrite($socket, "User-agent:Bitrix Installer\r\n");
				fwrite($socket, "Connection:Close\r\n");
				fwrite($socket, "\r\n");
				fwrite($socket, "$data\r\n");
				fwrite($socket, "\r\n");
				$answer = '';
				while(!feof($socket)){
					$answer.= fgets($socket, 4096);
				}
				fclose($socket);
			}
		}
	}

	public static function AddMeta($arParams = array()){
		self::$arMetaParams = array_merge((array)self::$arMetaParams, (array)$arParams);
	}

	public static function SetMeta(){
		global $APPLICATION, $arSite;

		$PageH1 = $APPLICATION->GetTitle();
		$PageMetaTitleBrowser = $APPLICATION->GetPageProperty('title');
		$DirMetaTitleBrowser = $APPLICATION->GetDirProperty('title');
		$PageMetaDescription = $APPLICATION->GetPageProperty('description');
		$DirMetaDescription = $APPLICATION->GetDirProperty('description');

		// set title
		if(!CSite::inDir(SITE_DIR.'index.php')){
			if(!strlen($PageMetaTitleBrowser)){
				if(!strlen($DirMetaTitleBrowser)){
					$PageMetaTitleBrowser = $PageH1.((strlen($PageH1) && strlen($arSite['SITE_NAME'])) ? ' - ' : '' ).$arSite['SITE_NAME'];
					// $APPLICATION->SetPageProperty('title', $PageMetaTitleBrowser);
				}
			}
		}
		else{
			if(!strlen($PageMetaTitleBrowser)){
				if(!strlen($DirMetaTitleBrowser)){
					$PageMetaTitleBrowser = $arSite['SITE_NAME'].((strlen($arSite['SITE_NAME']) && strlen($PageH1)) ? ' - ' : '' ).$PageH1;
					// $APPLICATION->SetPageProperty('title', $PageMetaTitleBrowser);
				}
			}
		}

		// check Open Graph required meta properties
		if(!strlen(self::$arMetaParams['og:title'])){
			self::$arMetaParams['og:title'] = $PageMetaTitleBrowser;
		}
		if(!strlen(self::$arMetaParams['og:type'])){
			self::$arMetaParams['og:type'] = 'article';
		}
		if(!strlen(self::$arMetaParams['og:image'])){
			self::$arMetaParams['og:image'] = SITE_DIR.'logo.png'; // site logo
		}
		if(!strlen(self::$arMetaParams['og:url'])){
			self::$arMetaParams['og:url'] = $_SERVER['REQUEST_URI'];
		}
		if(!strlen(self::$arMetaParams['og:description'])){
			self::$arMetaParams['og:description'] = (strlen($PageMetaDescription) ? $PageMetaDescription : $DirMetaDescription);
		}

		foreach(self::$arMetaParams as $metaName => $metaValue){
			if(strlen($metaValue = strip_tags($metaValue))){
				$APPLICATION->AddHeadString('<meta property="'.$metaName.'" content="'.$metaValue.'" />', true);
				if($metaName === 'og:image'){
					$APPLICATION->AddHeadString('<link rel="image_src" href="'.$metaValue.'"  />', true);
				}
			}
		}
	}


	function DoIBlockAfterSave($arg1, $arg2 = false){
		$ELEMENT_ID = false;
		$IBLOCK_ID = false;
		$OFFERS_IBLOCK_ID = false;
		$OFFERS_PROPERTY_ID = false;
		if (CModule::IncludeModule('currency'))
			$strDefaultCurrency = CCurrency::GetBaseCurrency();

		//Check for catalog event
		if(is_array($arg2) && $arg2["PRODUCT_ID"] > 0){
			//Get iblock element
			$rsPriceElement = CIBlockElement::GetList(
				array(),
				array(
					"ID" => $arg2["PRODUCT_ID"],
				),
				false,
				false,
				array("ID", "IBLOCK_ID")
			);
			if($arPriceElement = $rsPriceElement->Fetch()){
				$arCatalog = CCatalog::GetByID($arPriceElement["IBLOCK_ID"]);
				if(is_array($arCatalog)){
					//Check if it is offers iblock
					if($arCatalog["OFFERS"] == "Y"){
						//Find product element
						$rsElement = CIBlockElement::GetProperty(
							$arPriceElement["IBLOCK_ID"],
							$arPriceElement["ID"],
							"sort",
							"asc",
							array("ID" => $arCatalog["SKU_PROPERTY_ID"])
						);
						$arElement = $rsElement->Fetch();
						if($arElement && $arElement["VALUE"] > 0)
						{
							$ELEMENT_ID = $arElement["VALUE"];
							$IBLOCK_ID = $arCatalog["PRODUCT_IBLOCK_ID"];
							$OFFERS_IBLOCK_ID = $arCatalog["IBLOCK_ID"];
							$OFFERS_PROPERTY_ID = $arCatalog["SKU_PROPERTY_ID"];
						}
					}
					//or iblock which has offers
					elseif($arCatalog["OFFERS_IBLOCK_ID"] > 0){
						$ELEMENT_ID = $arPriceElement["ID"];
						$IBLOCK_ID = $arPriceElement["IBLOCK_ID"];
						$OFFERS_IBLOCK_ID = $arCatalog["OFFERS_IBLOCK_ID"];
						$OFFERS_PROPERTY_ID = $arCatalog["OFFERS_PROPERTY_ID"];
					}
					//or it's regular catalog
					else{
						$ELEMENT_ID = $arPriceElement["ID"];
						$IBLOCK_ID = $arPriceElement["IBLOCK_ID"];
						$OFFERS_IBLOCK_ID = false;
						$OFFERS_PROPERTY_ID = false;
					}
				}
			}
		}
		//Check for iblock event
		elseif(is_array($arg1) && $arg1["ID"] > 0 && $arg1["IBLOCK_ID"] > 0){
			//Check if iblock has offers
			$arOffers = CIBlockPriceTools::GetOffersIBlock($arg1["IBLOCK_ID"]);
			if(is_array($arOffers)){
				$ELEMENT_ID = $arg1["ID"];
				$IBLOCK_ID = $arg1["IBLOCK_ID"];
				$OFFERS_IBLOCK_ID = $arOffers["OFFERS_IBLOCK_ID"];
				$OFFERS_PROPERTY_ID = $arOffers["OFFERS_PROPERTY_ID"];
			}
		}

		if($ELEMENT_ID){
			static $arPropCache = array();
			static $arPropArray=array();

			if(!array_key_exists($IBLOCK_ID, $arPropCache)){
				//Check for MINIMAL_PRICE property
				$rsProperty = CIBlockProperty::GetByID("MINIMUM_PRICE", $IBLOCK_ID);
				$arProperty = $rsProperty->Fetch();
				if($arProperty){
					$arPropCache[$IBLOCK_ID] = $arProperty["ID"];
					$arPropArray["MINIMUM_PRICE"]=$arProperty["ID"];
				}else{
					$arPropCache[$IBLOCK_ID] = false;
				}
				$rsProperty = CIBlockProperty::GetByID("IN_STOCK", $IBLOCK_ID);
				$arProperty = $rsProperty->Fetch();
				if($arProperty){
					$arPropCache[$IBLOCK_ID] = $arProperty["ID"];
					$arPropArray["IN_STOCK"]=$arProperty["ID"];
				}else{
					if(!$arPropCache[$IBLOCK_ID])
						$arPropCache[$IBLOCK_ID] = false;
				}
			}

			if($arPropCache[$IBLOCK_ID]){
				//Compose elements filter
				if($OFFERS_IBLOCK_ID){
					$rsOffers = CIBlockElement::GetList(
						array(),
						array(
							"IBLOCK_ID" => $OFFERS_IBLOCK_ID,
							"PROPERTY_".$OFFERS_PROPERTY_ID => $ELEMENT_ID,
							"ACTIVE" => "Y"
						),
						false,
						false,
						array("ID")
					);
					while($arOffer = $rsOffers->Fetch())
						$arProductID[] = $arOffer["ID"];

					if (!is_array($arProductID))
						$arProductID = array($ELEMENT_ID);
				}
				else
					$arProductID = array($ELEMENT_ID);

				if($arPropArray["MINIMUM_PRICE"]){
					$minPrice = false;
					$maxPrice = false;
					//Get prices
					$rsPrices = CPrice::GetList(
						array(),
						array(
							"PRODUCT_ID" => $arProductID,
						)
					);
					while($arPrice = $rsPrices->Fetch()){
						if (CModule::IncludeModule('currency') && $strDefaultCurrency != $arPrice['CURRENCY'])
							$arPrice["PRICE"] = CCurrencyRates::ConvertCurrency($arPrice["PRICE"], $arPrice["CURRENCY"], $strDefaultCurrency);

						$PRICE = $arPrice["PRICE"];

						if($minPrice === false || $minPrice > $PRICE)
							$minPrice = $PRICE;

						if($maxPrice === false || $maxPrice < $PRICE)
							$maxPrice = $PRICE;
					}

					//Save found minimal price into property
					if($minPrice !== false){
						CIBlockElement::SetPropertyValuesEx(
							$ELEMENT_ID,
							$IBLOCK_ID,
							array(
								"MINIMUM_PRICE" => $minPrice,
								"MAXIMUM_PRICE" => $maxPrice,
							)
						);
					}
				}
				if($arPropArray["IN_STOCK"]){
					$quantity=0;
					$rsQuantity = CCatalogProduct::GetList(
				        array("QUANTITY" => "DESC"),
				        array("ID" => $arProductID),
				        false,
				        false,
				        array("QUANTITY")
				    );
					while($arQuantity = $rsQuantity->Fetch()){
						if($arQuantity["QUANTITY"]>0)
							$quantity+=$arQuantity["QUANTITY"];
					}
					if($quantity>0){
						$rsPropStock = CIBlockPropertyEnum::GetList(Array("DEF"=>"DESC", "SORT"=>"ASC"), Array("IBLOCK_ID"=>$IBLOCK_ID, "CODE"=>"IN_STOCK"));
						if($arPropStock=$rsPropStock->Fetch()){
							$idProp=$arPropStock["ID"];
						}

						CIBlockElement::SetPropertyValuesEx(
							$ELEMENT_ID,
							$IBLOCK_ID,
							array(
								"IN_STOCK" => $idProp,
							)
						);
					}else{
						CIBlockElement::SetPropertyValuesEx(
							$ELEMENT_ID,
							$IBLOCK_ID,
							array(
								"IN_STOCK" => "",
							)
						);
					}
					if(class_exists('\Bitrix\Iblock\PropertyIndex\Manager')){
						\Bitrix\Iblock\PropertyIndex\Manager::updateElementIndex($IBLOCK_ID, $ELEMENT_ID);
					}
				}
			}
		}
	}

	function setStockProduct($ID, $arFields){
		//Get iblock element
		$rsPriceElement = CIBlockElement::GetList(
			array(),
			array(
				"ID" => $ID,
			),
			false,
			false,
			array("ID", "IBLOCK_ID")
		);
		if($arPriceElement = $rsPriceElement->Fetch()){
			$arCatalog = CCatalog::GetByID($arPriceElement["IBLOCK_ID"]);
			if(is_array($arCatalog)){
				//Check if it is offers iblock
				if($arCatalog["OFFERS"] == "Y"){
					//Find product element
					$rsElement = CIBlockElement::GetProperty(
						$arPriceElement["IBLOCK_ID"],
						$arPriceElement["ID"],
						"sort",
						"asc",
						array("ID" => $arCatalog["SKU_PROPERTY_ID"])
					);
					$arElement = $rsElement->Fetch();
					if($arElement && $arElement["VALUE"] > 0)
					{
						$ELEMENT_ID = $arElement["VALUE"];
						$IBLOCK_ID = $arCatalog["PRODUCT_IBLOCK_ID"];
						$OFFERS_IBLOCK_ID = $arCatalog["IBLOCK_ID"];
						$OFFERS_PROPERTY_ID = $arCatalog["SKU_PROPERTY_ID"];
					}
				}
				//or iblock which has offers
				elseif($arCatalog["OFFERS_IBLOCK_ID"] > 0){
					$ELEMENT_ID = $arPriceElement["ID"];
					$IBLOCK_ID = $arPriceElement["IBLOCK_ID"];
					$OFFERS_IBLOCK_ID = $arCatalog["OFFERS_IBLOCK_ID"];
					$OFFERS_PROPERTY_ID = $arCatalog["OFFERS_PROPERTY_ID"];
				}
				//or it's regular catalog
				else{
					$ELEMENT_ID = $arPriceElement["ID"];
					$IBLOCK_ID = $arPriceElement["IBLOCK_ID"];
					$OFFERS_IBLOCK_ID = false;
					$OFFERS_PROPERTY_ID = false;
				}
			}
		}
		if($ELEMENT_ID){
			static $arPropCache = array();
			static $arPropArray=array();

			if(!array_key_exists($IBLOCK_ID, $arPropCache)){
				//Check for IN_STOCK property
				$rsProperty = CIBlockProperty::GetByID("IN_STOCK", $IBLOCK_ID);
				$arProperty = $rsProperty->Fetch();
				if($arProperty){
					$arPropCache[$IBLOCK_ID] = $arProperty["ID"];
					$arPropArray["IN_STOCK"]=$arProperty["ID"];
				}else{
					if(!$arPropCache[$IBLOCK_ID])
						$arPropCache[$IBLOCK_ID] = false;
				}
			}
			if($arPropCache[$IBLOCK_ID]){
				//Compose elements filter
				if($OFFERS_IBLOCK_ID){
					$rsOffers = CIBlockElement::GetList(
						array(),
						array(
							"IBLOCK_ID" => $OFFERS_IBLOCK_ID,
							"PROPERTY_".$OFFERS_PROPERTY_ID => $ELEMENT_ID,
							"ACTIVE" => "Y"
						),
						false,
						false,
						array("ID")
					);
					while($arOffer = $rsOffers->Fetch())
						$arProductID[] = $arOffer["ID"];

					if (!is_array($arProductID))
						$arProductID = array($ELEMENT_ID);
				}
				else
					$arProductID = array($ELEMENT_ID);
				if($arPropArray["IN_STOCK"]){
					$quantity=0;
					$rsQuantity = CCatalogProduct::GetList(
				        array("QUANTITY" => "DESC"),
				        array("ID" => $arProductID),
				        false,
				        false,
				        array("QUANTITY")
				    );
					while($arQuantity = $rsQuantity->Fetch()){
						if($arQuantity["QUANTITY"]>0)
							$quantity+=$arQuantity["QUANTITY"];
					}
					if($quantity>0){
						$rsPropStock = CIBlockPropertyEnum::GetList(Array("DEF"=>"DESC", "SORT"=>"ASC"), Array("IBLOCK_ID"=>$IBLOCK_ID, "CODE"=>"IN_STOCK"));
						if($arPropStock=$rsPropStock->Fetch()){
							$idProp=$arPropStock["ID"];
						}

						CIBlockElement::SetPropertyValuesEx(
							$ELEMENT_ID,
							$IBLOCK_ID,
							array(
								"IN_STOCK" => $idProp,
							)
						);
					}else{
						CIBlockElement::SetPropertyValuesEx(
							$ELEMENT_ID,
							$IBLOCK_ID,
							array(
								"IN_STOCK" => "",
							)
						);
					}
					if(class_exists('\Bitrix\Iblock\PropertyIndex\Manager')){
						\Bitrix\Iblock\PropertyIndex\Manager::updateElementIndex($IBLOCK_ID, $ELEMENT_ID);
					}
				}
			}
		}
	}

	function getViewedProducts($userID=false, $siteID=false){
		global $TEMPLATE_OPTIONS, $STARTTIME;
		$arResult = array();
		$siteID = $siteID ? $siteID : SITE_ID;
		$localKey = 'OPTIMUS_VIEWED_ITEMS_'.$siteID;

		if($IsViewedTypeLocal = ($TEMPLATE_OPTIONS['VIEWED_TYPE']['CURRENT_VALUE'] === 'LOCAL')){
			$arViewed = (isset($_COOKIE[$localKey]) && strlen($_COOKIE[$localKey])) ? json_decode($_COOKIE[$localKey], true) : array();

			if($arViewed && is_array($arViewed)){
				$viewedDays = COption::GetOptionString("sale", "viewed_time", "5");
				$viewedCntMax = COption::GetOptionString("sale", "viewed_count", "10");
				$DIETIME = $STARTTIME - $viewedDays * 86400000;

				// delete old items
				foreach($arViewed as $ID => $arItem){
					if($arItem[0] < $DIETIME){
						unset($arViewed[$ID]);
						continue;
					}

					$arResult[$ID] = $arItem[0];
				}

				// sort by ACTIVE_FROM
				arsort($arResult);

				// make IDs array
				$arResult = array_keys($arResult);

				// only $viewedCntMax items
				$arResult = array_slice($arResult, 0, $viewedCntMax);
			}
		}
		else{
			\Bitrix\Main\Loader::includeModule('sale');
			\Bitrix\Main\Loader::includeModule('catalog');
			$userID = $userID ? $userID : (int)CSaleBasket::GetBasketUserID(false);

			$viewedIterator = \Bitrix\Catalog\CatalogViewedProductTable::GetList(array(
				'select' => array('PRODUCT_ID', 'ELEMENT_ID'),
				'filter' => array('=FUSER_ID' => $userID, '=SITE_ID' => $siteID),
				'order' => array('DATE_VISIT' => 'DESC'),
				'limit' => 8
			));
			while($viewedProduct = $viewedIterator->fetch()){
				$viewedProduct['ELEMENT_ID'] = (int)$viewedProduct['ELEMENT_ID'];
				$viewedProduct['PRODUCT_ID'] = (int)$viewedProduct['PRODUCT_ID'];
				$arResult[$viewedProduct['PRODUCT_ID']] = $viewedProduct['ELEMENT_ID'];
			}
		}

		return $arResult;
	}

	function setFooterTitle(){
		global $APPLICATION, $arSite;
		if(\Bitrix\Main\Config\Option::get("aspro.optimus", "HIDE_SITE_NAME_TITLE", "N")=="N"){
			if(!COptimus::IsMainPage()){
				if(strlen($APPLICATION->GetPageProperty('title')) > 1){
					$title = $APPLICATION->GetPageProperty('title');
				}
				else{
					$title = $APPLICATION->GetTitle();
				}
				$APPLICATION->SetPageProperty("title", $title.' - '.$arSite['SITE_NAME']);
			}
			else{
				if(strlen($APPLICATION->GetPageProperty('title')) > 1){
					$title =  $APPLICATION->GetPageProperty('title');
				}
				else{
					$title =  $APPLICATION->GetTitle();
				}
				if(!empty($title)){
					$APPLICATION->SetPageProperty("title", $title);
				}
				else{
					$APPLICATION->SetPageProperty("title", $arSite['SITE_NAME']);
				}
			}
		}

		self::SetMeta();
	}

	function getBasketItems($iblockID=0, $field="PRODUCT_ID"){
		$basket_items = $delay_items = $subscribe_items = $not_available_items = array();
		$arItems=array();
		$bUseSubscribeManager = ($arSubscribeList = self::getUserSubscribeList()) !== false;
		if(CModule::IncludeModule("sale")){
			$arBasketItems=array();
			$dbRes = CSaleBasket::GetList(array("NAME" => "ASC", "ID" => "ASC"), array("FUSER_ID" => CSaleBasket::GetBasketUserID(), "LID" => SITE_ID, "ORDER_ID" => "NULL"), false, false, array("ID", "PRODUCT_ID", "DELAY", "SUBSCRIBE", "CAN_BUY", "TYPE", "SET_PARENT_ID"));
			while($item = $dbRes->Fetch()){
				$arBasketItems[] = $item;
			}

			global $compare_items;
			if(!is_array($compare_items)){
				$compare_items = array();
				$iblockID=((isset($iblockID) && $iblockID) ? $iblockID : \Bitrix\Main\Config\Option::get(self::moduleID, "CATALOG_IBLOCK_ID", COptimusCache::$arIBlocks[SITE_ID]['aspro_optimus_catalog']['aspro_optimus_catalog'][0], SITE_ID ));
				if($iblockID && isset($_SESSION["CATALOG_COMPARE_LIST"][$iblockID]["ITEMS"])){
					$compare_items = array_keys($_SESSION["CATALOG_COMPARE_LIST"][$iblockID]["ITEMS"]);
				}
			}
			if($arBasketItems){
				foreach($arBasketItems as $arBasketItem){
					if(CSaleBasketHelper::isSetItem($arBasketItem)) // set item
						continue;
					if($arBasketItem["DELAY"]=="N" && $arBasketItem["CAN_BUY"] == "Y" && $arBasketItem["SUBSCRIBE"] == "N"){
						$basket_items[] = $arBasketItem[$field];
					}
					elseif($arBasketItem["DELAY"]=="Y" && $arBasketItem["CAN_BUY"] == "Y" && $arBasketItem["SUBSCRIBE"] == "N"){
						$delay_items[] = $arBasketItem[$field];
					}
					elseif($arBasketItem["SUBSCRIBE"]=="Y"){
						$subscribe_items[] = $arBasketItem[$field];
					}else{
						$not_available_items[] = $arBasketItem[$field];
					}
				}
			}
			$arItems["BASKET"]=array_combine($basket_items, $basket_items);
			$arItems["DELAY"]=array_combine($delay_items, $delay_items);
			$arItems["SUBSCRIBE"]=array_combine($subscribe_items, $subscribe_items);
			$arItems["NOT_AVAILABLE"]=array_combine($not_available_items, $not_available_items);
			$arItems["COMPARE"]=array_combine($compare_items, $compare_items);
		}

		if($bUseSubscribeManager && $arSubscribeList){
			foreach($arSubscribeList as $PRODUCT_ID => $arIDs){
				$arItems['SUBSCRIBE'][$PRODUCT_ID] = $PRODUCT_ID;
			}
		}

		return $arItems;
	}

	function getUserSubscribeList($userId = false){
		if(CModule::IncludeModule('catalog')){
			if(class_exists('\Bitrix\Catalog\Product\SubscribeManager')){
				global $USER, $DB;
				$userId = $userId ? intval($userId) : (($USER && is_object($USER) && $USER->isAuthorized()) ? $USER->getId() : false);

				if($userId){
					$arSubscribeList = array();
					$subscribeManager = new \Bitrix\Catalog\Product\SubscribeManager;

					$filter = array(
						'USER_ID' => $userId,
						'=SITE_ID' => SITE_ID,
						array(
							'LOGIC' => 'OR',
							array('=DATE_TO' => false),
							array('>DATE_TO' => date($DB->dateFormatToPHP(\CLang::getDateFormat('FULL')), time()))
						),
					);

					$resultObject = \Bitrix\Catalog\SubscribeTable::getList(
						array(
							'select' => array(
								'ID',
								'ITEM_ID',
								'TYPE' => 'PRODUCT.TYPE',
								'IBLOCK_ID' => 'IBLOCK_ELEMENT.IBLOCK_ID',
							),
							'filter' => $filter,
						)
					);

					while($arItem = $resultObject->fetch()){
						$arSubscribeList[$arItem['ITEM_ID']][] = $arItem['ID'];
					}

					return $arSubscribeList;
				}
			}
		}

		return false;
	}

	function showFooterBasket(){
		Bitrix\Main\Page\Frame::getInstance()->startDynamicWithID("basketitems-block");

		$arItems=self::getBasketItems();

		if(CModule::IncludeModule("currency")){
			CJSCore::Init(array('currency'));
			$currencyFormat = CCurrencyLang::GetFormatDescription(CSaleLang::GetLangCurrency(SITE_ID));
		}
		?>
		<script type="text/javascript">
			<?if(is_array($currencyFormat)):?>
				function jsPriceFormat(_number){
					BX.Currency.setCurrencyFormat('<?=CSaleLang::GetLangCurrency(SITE_ID);?>', <? echo CUtil::PhpToJSObject($currencyFormat, false, true); ?>);
					return BX.Currency.currencyFormat(_number, '<?=CSaleLang::GetLangCurrency(SITE_ID);?>', true);
				}
			<?endif;?>
		</script>
		<script type="text/javascript">
			var arBasketAspro = <? echo CUtil::PhpToJSObject($arItems, false, true); ?>;
			$(document).ready(function(){
				<?if(is_array($arItems["BASKET"]) && !empty($arItems["BASKET"])):?>
					<?foreach( $arItems["BASKET"] as $key=>$item ){?>
						$('.to-cart[data-item=<?=$key?>]').hide();
						$('.counter_block[data-item=<?=$key?>]').hide();
						$('.in-cart[data-item=<?=$key?>]').show();
						$('.in-cart[data-item=<?=$key?>]').closest('.button_block').addClass('wide');
					<?}?>
				<?endif;?>
				<?if(is_array($arItems["DELAY"]) && !empty($arItems["DELAY"])):?>
					<?foreach( $arItems["DELAY"] as $key=>$item ){?>
						$('.wish_item.to[data-item=<?=$key?>]').hide();
						$('.wish_item.in[data-item=<?=$key?>]').show();
						if ($('.wish_item[data-item=<?=$key?>]').find(".value.added").length) {
							$('.wish_item[data-item=<?=$key?>]').addClass("added");
							$('.wish_item[data-item=<?=$key?>]').find(".value").hide();
							$('.wish_item[data-item=<?=$key?>]').find(".value.added").css('display','block');
						}
					<?}?>
				<?endif;?>
				<?if(is_array($arItems["SUBSCRIBE"]) && !empty($arItems["SUBSCRIBE"])):?>
					<?foreach( $arItems["SUBSCRIBE"] as $key=>$item ){?>
						$('.to-subscribe[data-item=<?=$key?>]').hide();
						$('.in-subscribe[data-item=<?=$key?>]').show();
					<?}?>
				<?endif;?>
				<?if(is_array($arItems["COMPARE"]) && !empty($arItems["COMPARE"])):?>
					<?foreach( $arItems["COMPARE"] as $key=>$item ){?>
						$('.compare_item.to[data-item=<?=$key?>]').hide();
						$('.compare_item.in[data-item=<?=$key?>]').show();
						if ($('.compare_item[data-item=<?=$key?>]').find(".value.added").length){
							$('.compare_item[data-item=<?=$key?>]').addClass("added");
							$('.compare_item[data-item=<?=$key?>]').find(".value").hide();
							$('.compare_item[data-item=<?=$key?>]').find(".value.added").css('display','block');
						}
					<?}?>
				<?endif;?>
			});
		</script>
		<?Bitrix\Main\Page\Frame::getInstance()->finishDynamicWithID("basketitems-block", "");
	}

	static function GetIBlockAllElementsFilter(&$arParams){
		$arFilter = array('IBLOCK_ID' => $arParams['IBLOCK_ID'], 'INCLUDE_SUBSECTIONS' => 'Y');
		if(isset($arParams['CHECK_DATES']) && $arParams['CHECK_DATES'] == 'Y'){
			$arFilter = array_merge($arFilter, array('ACTIVE' => 'Y', 'ACTIVE_DATE' => 'Y'));
		}
		if(isset($arParams['SHOW_DEACTIVATED']) && $arParams['SHOW_DEACTIVATED'] === 'N'){ // for catalog component
			$arFilter = array_merge($arFilter, array('ACTIVE' => 'Y'));
		}
		if(strlen($arParams['FILTER_NAME']) && (array)$GLOBALS[$arParams['FILTER_NAME']]){
			$arFilter = array_merge($arFilter, (array)$GLOBALS[$arParams['FILTER_NAME']]);
		}
		return $arFilter;
	}

	function prepareShopListArray($arShops){
		$arFormatShops=array();

		$arPlacemarks = array();

		if(is_array($arShops)){
			foreach($arShops as $i => $arShop){
				if(isset($arShop['IBLOCK_ID'])){
					$arShop['TITLE'] = ($arShop['FIELDS']['NAME'] ? $arShop['NAME'] : '');
					$imageID = (($arShop['FIELDS']['PREVIEW_PICTURE'] && $arShop["PREVIEW_PICTURE"]['ID']) ? $arShop["PREVIEW_PICTURE"]['ID'] : (($arShop['FIELD_CODE']['DETAIL_PICTURE'] && $arShop["DETAIL_PICTURE"]['ID']) ? $arShop["DETAIL_PICTURE"]['ID'] : false));
					$arShop['IMAGE'] = ($imageID ? CFile::ResizeImageGet($imageID, array('width' => 100, 'height' => 69), BX_RESIZE_IMAGE_EXACT) : '');
					$arShop['ADDRESS'] = $arShop['DISPLAY_PROPERTIES']['ADDRESS']['VALUE'];
					$arShop['ADDRESS'] = $arShop['TITLE'].((strlen($arShop['TITLE']) && strlen($arShop['ADDRESS'])) ? ', ' : '').$arShop['ADDRESS'];
					$arShop['PHONE'] = $arShop['DISPLAY_PROPERTIES']['PHONE']['VALUE'];
					$arShop['EMAIL'] = $arShop['DISPLAY_PROPERTIES']['EMAIL']['VALUE'];
					if($arShop['DISPLAY_PROPERTIES']['SCHEDULE']['VALUE']['TYPE'] == 'html'){
						$arShop['SCHEDULE'] = htmlspecialchars_decode($arShop['DISPLAY_PROPERTIES']['SCHEDULE']['~VALUE']['TEXT']);
					}
					else{
						$arShop['SCHEDULE'] = nl2br($arShop['DISPLAY_PROPERTIES']['SCHEDULE']['~VALUE']['TEXT']);
					}
					$arShop['URL'] = $arShop['DETAIL_PAGE_URL'];
					$arShop['METRO_PLACEMARK_HTML'] = '';
					if($arShop['METRO'] = $arShop['DISPLAY_PROPERTIES']['METRO']['VALUE']){
						if(!is_array($arShop['METRO'])){
							$arShop['METRO'] = array($arShop['METRO']);
						}
						foreach($arShop['METRO'] as $metro){
							$arShop['METRO_PLACEMARK_HTML'] .= '<div class="metro"><i></i>'.$metro.'</div>';
						}
					}
					$arShop['DESCRIPTION'] = $arShop['DETAIL_TEXT'];
					$arShop['GPS_S'] = false;
					$arShop['GPS_N'] = false;
					if($arStoreMap = explode(',', $arShop['DISPLAY_PROPERTIES']['MAP']['VALUE'])){
						$arShop['GPS_S'] = $arStoreMap[0];
						$arShop['GPS_N'] = $arStoreMap[1];
					}

					if($arShop['GPS_S'] && $arShop['GPS_N']){
						$mapLAT += $arShop['GPS_S'];
						$mapLON += $arShop['GPS_N'];
						$str_phones = '';
						if($arShop['PHONE'])
						{
							$str_phones .= '<div class="phone">';
							foreach($arShop['PHONE'] as $phone)
							{
								$str_phones .= '<br><a rel="nofollow" href="tel:'.str_replace(array(' ', ',', '-', '(', ')'), '', $phone).'">'.$phone.'</a>';
							}
							$str_phones .= '</div>';
						}
						$arPlacemarks[] = array(
							"ID" => $arShop["ID"],
							"LAT" => $arShop['GPS_S'],
							"LON" => $arShop['GPS_N'],
							"TEXT" => $arShop["TITLE"],
							"HTML" => '<div class="title">'.(strlen($arShop["URL"]) ? '<a href="'.$arShop["URL"].'">' : '').$arShop["ADDRESS"].(strlen($arShop["URL"]) ? '</a>' : '').'</div><div class="info-content">'.($arShop['METRO'] ? $arShop['METRO_PLACEMARK_HTML'] : '').(strlen($arShop['SCHEDULE']) ? '<div class="schedule">'.$arShop['SCHEDULE'].'</div>' : '').$str_phones.(strlen($arShop['EMAIL']) ? '<div class="email"><a rel="nofollow" href="mailto:'.$arShop['EMAIL'].'">'.$arShop['EMAIL'].'</a></div>' : '').'</div>'.(strlen($arShop['URL']) ? '<a rel="nofollow" class="button" href="'.$arShop["URL"].'"><span>'.GetMessage('DETAIL').'</span></a>' : '')
						);
					}
				}
				else{
					$str_phones = '';
					if($arShop['PHONE'])
					{
						$arShop['PHONE'] = explode(",", $arShop['PHONE']);
						$str_phones .= '<div class="phone">';
						foreach($arShop['PHONE'] as $phone)
						{
							$str_phones .= '<br><a rel="nofollow" href="tel:'.str_replace(array(' ', ',', '-', '(', ')'), '', $phone).'">'.$phone.'</a>';
						}
						$str_phones .= '</div>';
					}
					if($arShop['GPS_S'] && $arShop['GPS_N']){
						$mapLAT += $arShop['GPS_N'];
						$mapLON += $arShop['GPS_S'];
						$arPlacemarks[] = array(
							"ID" => $arShop["ID"],
							"LON" => $arShop['GPS_S'],
							"LAT" => $arShop['GPS_N'],
							"TEXT" => $arShop["TITLE"],
							"HTML" => '<div class="title">'.(strlen($arShop["URL"]) ? '<a href="'.$arShop["URL"].'">' : '').$arShop["ADDRESS"].(strlen($arShop["URL"]) ? '</a>' : '').'</div><div class="info-content">'.($arShop['METRO'] ? $arShop['METRO_PLACEMARK_HTML'] : '').(strlen($arShop['SCHEDULE']) ? '<div class="schedule">'.$arShop['SCHEDULE'].'</div>' : '').$str_phones.(strlen($arShop['EMAIL']) ? '<div class="email"><a rel="nofollow" href="mailto:'.$arShop['EMAIL'].'">'.$arShop['EMAIL'].'</a></div>' : '').'</div>'.(strlen($arShop['URL']) ? '<a rel="nofollow" class="button" href="'.$arShop["URL"].'"><span>'.GetMessage('DETAIL').'</span></a>' : '')
						);
					}
				}
				$arShops[$i] = $arShop;
			}
		}
		$arFormatShops["SHOPS"]=$arShops;
		$arFormatShops["PLACEMARKS"]=$arPlacemarks;
		$arFormatShops["POINTS"]=array(
			"LAT" => $mapLAT,
			"LON" => $mapLON,
		);

		return $arFormatShops;
	}

	function prepareShopDetailArray($arShop, $arParams){
		$mapLAT = $mapLON = 0;
		$arPlacemarks = array();
		$arPhotos = array();
		$arFormatShops=array();

		if(is_array($arShop)){
			if(isset($arShop['IBLOCK_ID'])){
				$arShop['LIST_URL'] = $arShop['LIST_PAGE_URL'];
				$arShop['TITLE'] = (in_array('NAME', $arParams['FIELD_CODE']) ? $arShop['NAME'] : '');
				$arShop['ADDRESS'] = $arShop['DISPLAY_PROPERTIES']['ADDRESS']['VALUE'];
				$arShop['ADDRESS'] = $arShop['TITLE'].((strlen($arShop['TITLE']) && strlen($arShop['ADDRESS'])) ? ', ' : '').$arShop['ADDRESS'];
				$arShop['PHONE'] = $arShop['DISPLAY_PROPERTIES']['PHONE']['VALUE'];
				$arShop['EMAIL'] = $arShop['DISPLAY_PROPERTIES']['EMAIL']['VALUE'];
				if($arShop['DISPLAY_PROPERTIES']['SCHEDULE']['VALUE']['TYPE'] == 'html'){
					$arShop['SCHEDULE'] = htmlspecialchars_decode($arShop['DISPLAY_PROPERTIES']['SCHEDULE']['~VALUE']['TEXT']);
				}
				else{
					$arShop['SCHEDULE'] = nl2br($arShop['DISPLAY_PROPERTIES']['SCHEDULE']['~VALUE']['TEXT']);
				}
				$arShop['URL'] = $arShop['DETAIL_PAGE_URL'];
				$arShop['METRO_PLACEMARK_HTML'] = '';
				if($arShop['METRO'] = $arShop['DISPLAY_PROPERTIES']['METRO']['VALUE']){
					if(!is_array($arShop['METRO'])){
						$arShop['METRO'] = array($arShop['METRO']);
					}
					foreach($arShop['METRO'] as $metro){
						$arShop['METRO_PLACEMARK_HTML'] .= '<div class="metro"><i></i>'.$metro.'</div>';
					}
				}
				$arShop['GPS_S'] = false;
				$arShop['GPS_N'] = false;
				if($arStoreMap = explode(',', $arShop['DISPLAY_PROPERTIES']['MAP']['VALUE'])){
					$arShop['GPS_S'] = $arStoreMap[0];
					$arShop['GPS_N'] = $arStoreMap[1];
				}

				if($arShop['GPS_S'] && $arShop['GPS_N']){
					$mapLAT += $arShop['GPS_S'];
					$mapLON += $arShop['GPS_N'];
					$str_phones = '';
					if($arShop['PHONE'])
					{
						$str_phones .= '<div class="phone">';
						foreach($arShop['PHONE'] as $phone)
						{
							$str_phones .= '<br><a rel="nofollow" href="tel:'.str_replace(array(' ', ',', '-', '(', ')'), '', $phone).'">'.$phone.'</a>';
						}
						$str_phones .= '</div>';
					}
					$arPlacemarks[] = array(
						"ID" => $arShop["ID"],
						"LAT" => $arShop['GPS_S'],
						"LON" => $arShop['GPS_N'],
						"TEXT" => $arShop["TITLE"],
						"HTML" => '<div class="title">'.(strlen($arShop["URL"]) ? '<a href="'.$arShop["URL"].'">' : '').$arShop["ADDRESS"].(strlen($arShop["URL"]) ? '</a>' : '').'</div><div class="info-content">'.($arShop['METRO'] ? $arShop['METRO_PLACEMARK_HTML'] : '').(strlen($arShop['SCHEDULE']) ? '<div class="schedule">'.$arShop['SCHEDULE'].'</div>' : '').$str_phones.(strlen($arShop['EMAIL']) ? '<div class="email"><a rel="nofollow" href="mailto:'.$arShop['EMAIL'].'">'.$arShop['EMAIL'].'</a></div>' : '').'</div>'.(strlen($arShop['URL']) ? '<a rel="nofollow" class="button" href="'.$arShop["URL"].'"><span>'.GetMessage('DETAIL').'</span></a>' : '')
					);
				}
			}
			else{
				$arShop["TITLE"] = htmlspecialchars_decode($arShop["TITLE"]);
				$arShop["ADDRESS"] = htmlspecialchars_decode($arShop["ADDRESS"]);
				$arShop["ADDRESS"] = (strlen($arShop["TITLE"]) ? $arShop["TITLE"].', ' : '').$arShop["ADDRESS"];
				$arShop["DESCRIPTION"] = htmlspecialchars_decode($arShop['DESCRIPTION']);
				$arShop['SCHEDULE'] = htmlspecialchars_decode($arShop['SCHEDULE']);

				$str_phones = '';
				if($arShop['PHONE'])
				{
					$arShop['PHONE'] = explode(",", $arShop['PHONE']);
					$str_phones .= '<div class="phone">';
					foreach($arShop['PHONE'] as $phone)
					{
						$str_phones .= '<br><a rel="nofollow" href="tel:'.str_replace(array(' ', ',', '-', '(', ')'), '', $phone).'">'.$phone.'</a>';
					}
					$str_phones .= '</div>';
				}
				if($arShop['GPS_S'] && $arShop['GPS_N']){
					$mapLAT += $arShop['GPS_N'];
					$mapLON += $arShop['GPS_S'];
					$arPlacemarks[] = array(
						"ID" => $arShop["ID"],
						"LON" => $arShop['GPS_S'],
						"LAT" => $arShop['GPS_N'],
						"TEXT" => $arShop["TITLE"],
						"HTML" => '<div class="title">'.(strlen($arShop["URL"]) ? '<a href="'.$arShop["URL"].'">' : '').$arShop["ADDRESS"].(strlen($arShop["URL"]) ? '</a>' : '').'</div><div class="info-content">'.($arShop['METRO'] ? $arShop['METRO_PLACEMARK_HTML'] : '').(strlen($arShop['SCHEDULE']) ? '<div class="schedule">'.$arShop['SCHEDULE'].'</div>' : '').$str_phones.(strlen($arShop['EMAIL']) ? '<div class="email"><a rel="nofollow" href="mailto:'.$arShop['EMAIL'].'">'.$arShop['EMAIL'].'</a></div>' : '').'</div>'.(strlen($arShop['URL']) ? '<a rel="nofollow" class="button" href="'.$arShop["URL"].'"><span>'.GetMessage('DETAIL').'</span></a>' : '')
					);
				}
			}
		}
		$arFormatShops["SHOP"]=$arShop;
		$arFormatShops["PLACEMARKS"]=$arPlacemarks;
		$arFormatShops["POINTS"]=array(
			"LAT" => $mapLAT,
			"LON" => $mapLON,
		);

		return $arFormatShops;

	}

	function drawShopsList($arShops, $arParams, $showMap="Y"){
		global $APPLICATION;
		$mapLAT = $mapLON = 0;
		$arPlacemarks = array();

		if(is_array($arShops)){
			foreach($arShops as $i => $arShop){
				if(isset($arShop['IBLOCK_ID'])){
					$arShop['TITLE'] = (in_array('NAME', $arParams['FIELD_CODE']) ? $arShop['NAME'] : '');

					$imageID = ((in_array('PREVIEW_PICTURE', $arParams['FIELD_CODE']) && $arShop["PREVIEW_PICTURE"]['ID']) ? $arShop["PREVIEW_PICTURE"]['ID'] : ((in_array('DETAIL_PICTURE', $arParams['FIELD_CODE']) && $arShop["DETAIL_PICTURE"]['ID']) ? $arShop["DETAIL_PICTURE"]['ID'] : false));
					$arShop['IMAGE'] = ($imageID ? CFile::ResizeImageGet($imageID, array('width' => 100, 'height' => 69), BX_RESIZE_IMAGE_EXACT) : '');
					$arShop['ADDRESS'] = $arShop['DISPLAY_PROPERTIES']['ADDRESS']['VALUE'];
					$arShop['ADDRESS'] = $arShop['TITLE'].((strlen($arShop['TITLE']) && strlen($arShop['ADDRESS'])) ? ', ' : '').$arShop['ADDRESS'];
					$arShop['PHONE'] =  $arShop['DISPLAY_PROPERTIES']['PHONE']['VALUE'];
					$arShop['EMAIL'] = $arShop['DISPLAY_PROPERTIES']['EMAIL']['VALUE'];

					if(strToLower($arShop['DISPLAY_PROPERTIES']['SCHEDULE']['VALUE']['TYPE']) == 'html'){
						$arShop['SCHEDULE'] = htmlspecialchars_decode($arShop['DISPLAY_PROPERTIES']['SCHEDULE']['~VALUE']['TEXT']);
					}
					else{
						$arShop['SCHEDULE'] = nl2br($arShop['DISPLAY_PROPERTIES']['SCHEDULE']['~VALUE']['TEXT']);
					}
					$arShop['URL'] = $arShop['DETAIL_PAGE_URL'];
					$arShop['METRO_PLACEMARK_HTML'] = '';
					if($arShop['METRO'] = $arShop['DISPLAY_PROPERTIES']['METRO']['VALUE']){
						if(!is_array($arShop['METRO'])){
							$arShop['METRO'] = array($arShop['METRO']);
						}
						foreach($arShop['METRO'] as $metro){
							$arShop['METRO_PLACEMARK_HTML'] .= '<div class="metro"><i></i>'.$metro.'</div>';
						}
					}
					$arShop['DESCRIPTION'] = $arShop['DETAIL_TEXT'];
					$arShop['GPS_S'] = false;
					$arShop['GPS_N'] = false;
					if($arStoreMap = explode(',', $arShop['DISPLAY_PROPERTIES']['MAP']['VALUE'])){
						$arShop['GPS_S'] = $arStoreMap[0];
						$arShop['GPS_N'] = $arStoreMap[1];
					}

					if($arShop['GPS_S'] && $arShop['GPS_N']){
						$mapLAT += $arShop['GPS_S'];
						$mapLON += $arShop['GPS_N'];
						$str_phones = '';
						if($arShop['PHONE'])
						{
							foreach($arShop['PHONE'] as $phone)
							{
								$str_phones .= '<div class="phone"><a rel="nofollow" href="tel:'.str_replace(array(' ', ',', '-', '(', ')'), '', $phone).'">'.$phone.'</a></div>';
							}
						}
						$arPlacemarks[] = array(
							"ID" => $arShop["ID"],
							"LAT" => $arShop['GPS_S'],
							"LON" => $arShop['GPS_N'],
							"TEXT" => $arShop["TITLE"],
							"HTML" => '<div class="title">'.(strlen($arShop["URL"]) ? '<a href="'.$arShop["URL"].'">' : '').$arShop["ADDRESS"].(strlen($arShop["URL"]) ? '</a>' : '').'</div><div class="info-content">'.($arShop['METRO'] ? $arShop['METRO_PLACEMARK_HTML'] : '').(strlen($arShop['SCHEDULE']) ? '<div class="schedule">'.$arShop['SCHEDULE'].'</div>' : '').$str_phones.(strlen($arShop['EMAIL']) ? '<div class="email"><a rel="nofollow" href="mailto:'.$arShop['EMAIL'].'">'.$arShop['EMAIL'].'</a></div>' : '').'</div>'.(strlen($arShop['URL']) ? '<a rel="nofollow" class="button" href="'.$arShop["URL"].'"><span>'.GetMessage('DETAIL').'</span></a>' : '')
						);
					}
				}
				else{
					$str_phones = '';
					if($arShop['PHONE'])
					{
						$arShop['PHONE'] = explode(",", $arShop['PHONE']);
						foreach($arShop['PHONE'] as $phone)
						{
							$str_phones .= '<div class="phone"><a rel="nofollow" href="tel:'.str_replace(array(' ', ',', '-', '(', ')'), '', $phone).'">'.$phone.'</a></div>';
						}
					}
					if($arShop['GPS_S'] && $arShop['GPS_N']){
						$mapLAT += $arShop['GPS_N'];
						$mapLON += $arShop['GPS_S'];
						$arPlacemarks[] = array(
							"ID" => $arShop["ID"],
							"LON" => $arShop['GPS_S'],
							"LAT" => $arShop['GPS_N'],
							"TEXT" => $arShop["TITLE"],
							"HTML" => '<div class="title">'.(strlen($arShop["URL"]) ? '<a href="'.$arShop["URL"].'">' : '').$arShop["ADDRESS"].(strlen($arShop["URL"]) ? '</a>' : '').'</div><div class="info-content">'.($arShop['METRO'] ? $arShop['METRO_PLACEMARK_HTML'] : '').(strlen($arShop['SCHEDULE']) ? '<div class="schedule">'.$arShop['SCHEDULE'].'</div>' : '').$str_phones.(strlen($arShop['EMAIL']) ? '<div class="email"><a rel="nofollow" href="mailto:'.$arShop['EMAIL'].'">'.$arShop['EMAIL'].'</a></div>' : '').'</div>'.(strlen($arShop['URL']) ? '<a rel="nofollow" class="button" href="'.$arShop["URL"].'"><span>'.GetMessage('DETAIL').'</span></a>' : '')
						);
					}
				}
				$arShops[$i] = $arShop;
			}
			?>
			<?if($arShops):?>
				<?if(abs($mapLAT) > 0 && abs($mapLON) > 0 && $showMap=="Y"):?>
					<?
					$mapLAT = floatval($mapLAT / count($arShops));
					$mapLON = floatval($mapLON / count($arShops));
					?>
					<div class="contacts_map">
						<?if($arParams["MAP_TYPE"] != "0"):?>
							<?$APPLICATION->IncludeComponent(
								"bitrix:map.google.view",
								"map",
								array(
									"INIT_MAP_TYPE" => "ROADMAP",
									"MAP_DATA" => serialize(array("google_lat" => $mapLAT, "google_lon" => $mapLON, "google_scale" => 15, "PLACEMARKS" => $arPlacemarks)),
									"MAP_WIDTH" => "100%",
									"MAP_HEIGHT" => "400",
									"CONTROLS" => array(
									),
									"OPTIONS" => array(
										0 => "ENABLE_DBLCLICK_ZOOM",
										1 => "ENABLE_DRAGGING",
									),
									"MAP_ID" => "",
									"ZOOM_BLOCK" => array(
										"POSITION" => "right center",
									),
									"API_KEY" => $arParams["GOOGLE_API_KEY"],
									"COMPOSITE_FRAME_MODE" => "A",
									"COMPOSITE_FRAME_TYPE" => "AUTO"
								),
								false, array("HIDE_ICONS" =>"Y")
							);?>
						<?else:?>
							<?$APPLICATION->IncludeComponent(
								"bitrix:map.yandex.view",
								"",
								array(
									"INIT_MAP_TYPE" => "ROADMAP",
									"MAP_DATA" => serialize(array("yandex_lat" => $mapLAT, "yandex_lon" => $mapLON, "yandex_scale" => 4, "PLACEMARKS" => $arPlacemarks)),
									"MAP_WIDTH" => "100%",
									"MAP_HEIGHT" => "400",
									"CONTROLS" => array(
										0 => "ZOOM",
										1 => "SMALLZOOM",
										3 => "TYPECONTROL",
										4 => "SCALELINE",
									),
									"OPTIONS" => array(
										0 => "ENABLE_DBLCLICK_ZOOM",
										1 => "ENABLE_DRAGGING",
									),
									"MAP_ID" => "",
									"ZOOM_BLOCK" => array(
										"POSITION" => "right center",
									),
									"COMPONENT_TEMPLATE" => "map",
									"API_KEY" => $arParams["GOOGLE_API_KEY"],
									"COMPOSITE_FRAME_MODE" => "A",
									"COMPOSITE_FRAME_TYPE" => "AUTO"
								),
								false, array("HIDE_ICONS" =>"Y")
							);?>
						<?endif;?>
					</div>
				<?endif;?>
				<div class="wrapper_inner">
					<div class="shops list">
						<div class="items">
							<?foreach($arShops as $arShop):?>
								<div class="item <?=(strlen($arShop["IMAGE"]["src"]) ? '' : 'wi')?>" data-ID="<?=$arShop['ID']?>">
									<div class="image">
										<?if(strlen($arShop["IMAGE"]["src"])):?>
											<?if(strlen($arShop['URL'])):?>
												<a href="<?=$arShop['URL']?>"><img src="<?=$arShop["IMAGE"]["src"]?>" alt="<?=$arShop["ADDRESS"]?>" title="<?=$arShop["ADDRESS"]?>" /></a>
											<?else:?>
												<img src="<?=$arShop["IMAGE"]["src"]?>" alt="<?=$arShop["ADDRESS"]?>" title="<?=$arShop["ADDRESS"]?>" />
											<?endif;?>
										<?endif;?>
									</div>
									<div class="rubber">
										<div class="title_metro">
											<?if(strlen($arShop["ADDRESS"])):?>
												<?if(strlen($arShop['URL'])):?>
													<a href="<?=$arShop['URL']?>"><div class="title"><?=$arShop["ADDRESS"]?></div></a>
												<?else:?>
													<div class="title"><?=$arShop["ADDRESS"]?></div>
												<?endif;?>
											<?endif;?>
											<?if($arShop["METRO"]):?>
												<?foreach($arShop['METRO'] as $metro):?>
													<div class="metro"><i></i><?=$metro?></div>
												<?endforeach;?>
											<?endif;?>
										</div>
										<div class="schedule_phone_email">
											<div class="schedule"><?=$arShop["SCHEDULE"]?></div>
											<div class="phone_email">
												<?if($arShop["PHONE"]):?>
													<?foreach($arShop["PHONE"] as $phone):?>
														<div class="phone"><a rel="nofollow" href="tel:<?=str_replace(array(' ', ',', '-', '(', ')'), '', $phone);?>"><?=$phone;?></a></div>
													<?endforeach;?>
												<?endif;?>
												<?if(strlen($arShop["EMAIL"])):?>
													<div class="email"><a rel="nofollow" href="mailto:<?=$arShop["EMAIL"]?>"><?=$arShop["EMAIL"]?></a></div>
												<?endif;?>
											</div>
										</div>
									</div>
								</div>
							<?endforeach;?>
						</div>
					</div>
				</div>
				<div class="clearboth"></div>
			<?endif;?>
			<?
		}
		else{
			LocalRedirect(SITE_DIR.'contacts/');
		}
	}

	function drawShopDetail($arShop, $arParams, $showMap="Y"){
		global $APPLICATION;
		$mapLAT = $mapLON = 0;
		$arPlacemarks = array();
		$arPhotos = array();

		if(is_array($arShop)){
			if(isset($arShop['IBLOCK_ID'])){
				$arShop['LIST_URL'] = $arShop['LIST_PAGE_URL'];
				$arShop['TITLE'] = (in_array('NAME', $arParams['FIELD_CODE']) ? $arShop['NAME'] : '');
				$arShop['ADDRESS'] = $arShop['DISPLAY_PROPERTIES']['ADDRESS']['VALUE'];
				$arShop['ADDRESS'] = $arShop['TITLE'].((strlen($arShop['TITLE']) && strlen($arShop['ADDRESS'])) ? ', ' : '').$arShop['ADDRESS'];
				$arShop['PHONE'] = $arShop['DISPLAY_PROPERTIES']['PHONE']['VALUE'];
				$arShop['EMAIL'] = $arShop['DISPLAY_PROPERTIES']['EMAIL']['VALUE'];
				if(strToLower($arShop['DISPLAY_PROPERTIES']['SCHEDULE']['VALUE']['TYPE']) == 'html'){
					$arShop['SCHEDULE'] = htmlspecialchars_decode($arShop['DISPLAY_PROPERTIES']['SCHEDULE']['~VALUE']['TEXT']);
				}
				else{
					$arShop['SCHEDULE'] = nl2br($arShop['DISPLAY_PROPERTIES']['SCHEDULE']['~VALUE']['TEXT']);
				}
				$arShop['URL'] = $arShop['DETAIL_PAGE_URL'];
				$arShop['METRO_PLACEMARK_HTML'] = '';
				if($arShop['METRO'] = $arShop['DISPLAY_PROPERTIES']['METRO']['VALUE']){
					if(!is_array($arShop['METRO'])){
						$arShop['METRO'] = array($arShop['METRO']);
					}
					foreach($arShop['METRO'] as $metro){
						$arShop['METRO_PLACEMARK_HTML'] .= '<div class="metro"><i></i>'.$metro.'</div>';
					}
				}
				$arShop['DESCRIPTION'] = $arShop['DETAIL_TEXT'];
				$imageID = ((in_array('DETAIL_PICTURE', $arParams['FIELD_CODE']) && $arShop["DETAIL_PICTURE"]['ID']) ? $arShop["DETAIL_PICTURE"]['ID'] : false);
				if($imageID){
					$arShop['IMAGE'] = CFile::ResizeImageGet($imageID, array('width' => 210, 'height' => 143), BX_RESIZE_IMAGE_EXACT);
					$arPhotos[] = array(
						'ID' => $arShop["DETAIL_PICTURE"]['ID'],
						'ORIGINAL' => ($arShop["DETAIL_PICTURE"]['SRC'] ? $arShop["DETAIL_PICTURE"]['SRC'] : $arShop['IMAGE']),
						'PREVIEW' => $arShop['IMAGE'],
						'DESCRIPTION' => (strlen($arShop["DETAIL_PICTURE"]['DESCRIPTION']) ? $arShop["DETAIL_PICTURE"]['DESCRIPTION'] : $arShop['ADDRESS']),
					);
				}
				if(is_array($arShop['DISPLAY_PROPERTIES']['MORE_PHOTOS']['VALUE'])) {
					foreach($arShop['DISPLAY_PROPERTIES']['MORE_PHOTOS']['VALUE'] as $i => $photoID){
						$arPhotos[] = array(
							'ID' => $photoID,
							'ORIGINAL' => CFile::GetPath($photoID),
							'PREVIEW' => CFile::ResizeImageGet($photoID, array('width' => 210, 'height' => 143), BX_RESIZE_IMAGE_EXACT),
							'DESCRIPTION' => $arShop['DISPLAY_PROPERTIES']['MORE_PHOTOS']['DESCRIPTION'][$i],
						);
					}
				}

				$arShop['GPS_S'] = false;
				$arShop['GPS_N'] = false;
				if($arStoreMap = explode(',', $arShop['DISPLAY_PROPERTIES']['MAP']['VALUE'])){
					$arShop['GPS_S'] = $arStoreMap[0];
					$arShop['GPS_N'] = $arStoreMap[1];
				}

				if($arShop['GPS_S'] && $arShop['GPS_N']){
					$mapLAT += $arShop['GPS_S'];
					$mapLON += $arShop['GPS_N'];
					$str_phones = '';
					if($arShop['PHONE'])
					{
						foreach($arShop['PHONE'] as $phone)
						{
							$str_phones .= '<div class="phone"><a rel="nofollow" href="tel:'.str_replace(array(' ', ',', '-', '(', ')'), '', $phone).'">'.$phone.'</a></div>';
						}
					}
					$arPlacemarks[] = array(
						"ID" => $arShop["ID"],
						"LAT" => $arShop['GPS_S'],
						"LON" => $arShop['GPS_N'],
						"TEXT" => $arShop["TITLE"],
						"HTML" => '<div class="title">'.(strlen($arShop["URL"]) ? '<a href="'.$arShop["URL"].'">' : '').$arShop["ADDRESS"].(strlen($arShop["URL"]) ? '</a>' : '').'</div><div class="info-content">'.($arShop['METRO'] ? $arShop['METRO_PLACEMARK_HTML'] : '').(strlen($arShop['SCHEDULE']) ? '<div class="schedule">'.$arShop['SCHEDULE'].'</div>' : '').$str_phones.(strlen($arShop['EMAIL']) ? '<div class="email"><a rel="nofollow" href="mailto:'.$arShop['EMAIL'].'">'.$arShop['EMAIL'].'</a></div>' : '').'</div>'.(strlen($arShop['URL']) ? '<a rel="nofollow" class="button" href="'.$arShop["URL"].'"><span>'.GetMessage('DETAIL').'</span></a>' : '')
					);
				}
			}
			else{
				$arShop["TITLE"] = htmlspecialchars_decode($arShop["TITLE"]);
				$arShop["ADDRESS"] = htmlspecialchars_decode($arShop["ADDRESS"]);
				$arShop["ADDRESS"] = (strlen($arShop["TITLE"]) ? $arShop["TITLE"].', ' : '').$arShop["ADDRESS"];
				$arShop["DESCRIPTION"] = htmlspecialchars_decode($arShop['DESCRIPTION']);
				$arShop['SCHEDULE'] = htmlspecialchars_decode($arShop['SCHEDULE']);
				if($arShop["IMAGE_ID"]  && $arShop["IMAGE_ID"] != "null"){
					$arShop['IMAGE'] = CFile::ResizeImageGet($arShop["IMAGE_ID"], array('width' => 210, 'height' => 143), BX_RESIZE_IMAGE_EXACT);
					$arPhotos[] = array(
						'ID' => $arShop["PREVIEW_PICTURE"]['ID'],
						'ORIGINAL' => CFile::GetPath($arShop["IMAGE_ID"]),
						'PREVIEW' => $arShop['IMAGE'],
						'DESCRIPTION' => (strlen($arShop["PREVIEW_PICTURE"]['DESCRIPTION']) ? $arShop["PREVIEW_PICTURE"]['DESCRIPTION'] : $arShop["ADDRESS"]),
					);
				}
				if(is_array($arShop['MORE_PHOTOS'])) {
					foreach($arShop['MORE_PHOTOS'] as $photoID){
						$arPhotos[] = array(
							'ID' => $photoID,
							'ORIGINAL' => CFile::GetPath($photoID),
							'PREVIEW' => CFile::ResizeImageGet($photoID, array('width' => 210, 'height' => 143), BX_RESIZE_IMAGE_EXACT),
							'DESCRIPTION' => $arShop["ADDRESS"],
						);
					}
				}

				$str_phones = '';
				if($arShop['PHONE'])
				{
					$arShop['PHONE'] = explode(",", $arShop['PHONE']);
					foreach($arShop['PHONE'] as $phone)
					{
						$str_phones .= '<div class="phone"><a rel="nofollow" href="tel:'.str_replace(array(' ', ',', '-', '(', ')'), '', $phone).'">'.$phone.'</a></div>';
					}
				}
				if($arShop['GPS_S'] && $arShop['GPS_N']){
					$mapLAT += $arShop['GPS_N'];
					$mapLON += $arShop['GPS_S'];
					$arPlacemarks[] = array(
						"ID" => $arShop["ID"],
						"LON" => $arShop['GPS_S'],
						"LAT" => $arShop['GPS_N'],
						"TEXT" => $arShop["TITLE"],
						"HTML" => '<div class="title">'.(strlen($arShop["URL"]) ? '<a href="'.$arShop["URL"].'">' : '').$arShop["ADDRESS"].(strlen($arShop["URL"]) ? '</a>' : '').'</div><div class="info-content">'.($arShop['METRO'] ? $arShop['METRO_PLACEMARK_HTML'] : '').(strlen($arShop['SCHEDULE']) ? '<div class="schedule">'.$arShop['SCHEDULE'].'</div>' : '').$str_phones.(strlen($arShop['EMAIL']) ? '<div class="email"><a rel="nofollow" href="mailto:'.$arShop['EMAIL'].'">'.$arShop['EMAIL'].'</a></div>' : '').'</div>'.(strlen($arShop['URL']) ? '<a rel="nofollow" class="button" href="'.$arShop["URL"].'"><span>'.GetMessage('DETAIL').'</span></a>' : '')
					);
				}
			}
			?>
			<?if(abs($mapLAT) > 0 && abs($mapLON) > 0 && $showMap=="Y"):?>
				<div class="contacts_map">
					<?if($arParams["MAP_TYPE"] != "0"):?>
						<?$APPLICATION->IncludeComponent(
							"bitrix:map.google.view",
							"map",
							array(
								"INIT_MAP_TYPE" => "ROADMAP",
								"MAP_DATA" => serialize(array("google_lat" => $mapLAT, "google_lon" => $mapLON, "google_scale" => 16, "PLACEMARKS" => $arPlacemarks)),
								"MAP_WIDTH" => "100%",
								"MAP_HEIGHT" => "400",
								"CONTROLS" => array(
								),
								"OPTIONS" => array(
									0 => "ENABLE_DBLCLICK_ZOOM",
									1 => "ENABLE_DRAGGING",
								),
								"MAP_ID" => "",
								"ZOOM_BLOCK" => array(
									"POSITION" => "right center",
								),
								"COMPONENT_TEMPLATE" => "map",
								"API_KEY" => $arParams["GOOGLE_API_KEY"],
								"COMPOSITE_FRAME_MODE" => "A",
								"COMPOSITE_FRAME_TYPE" => "AUTO"
							),
							false, array("HIDE_ICONS" =>"Y")
						);?>
					<?else:?>
						<?$APPLICATION->IncludeComponent(
							"bitrix:map.yandex.view",
							"",
							array(
								"INIT_MAP_TYPE" => "ROADMAP",
								"MAP_DATA" => serialize(array("yandex_lat" => $mapLAT, "yandex_lon" => $mapLON, "yandex_scale" => 17, "PLACEMARKS" => $arPlacemarks)),
								"MAP_WIDTH" => "100%",
								"MAP_HEIGHT" => "400",
								"CONTROLS" => array(
									0 => "ZOOM",
									1 => "SMALLZOOM",
									3 => "TYPECONTROL",
									4 => "SCALELINE",
								),
								"OPTIONS" => array(
									0 => "ENABLE_DBLCLICK_ZOOM",
									1 => "ENABLE_DRAGGING",
								),
								"MAP_ID" => "",
								"ZOOM_BLOCK" => array(
									"POSITION" => "right center",
								),
								"COMPONENT_TEMPLATE" => "map",
								"API_KEY" => $arParams["GOOGLE_API_KEY"],
								"COMPOSITE_FRAME_MODE" => "A",
								"COMPOSITE_FRAME_TYPE" => "AUTO"
							),
							false, array("HIDE_ICONS" =>"Y")
						);?>
					<?endif;?>
				</div>
			<?endif;?>
			<div class="wrapper_inner shop detail">
				<div class="contacts_left">
					<div class="store_description">
						<?if(strlen($arShop['ADDRESS'])):?>
							<div class="store_property">
								<div class="title"><?=GetMessage('ADDRESS')?></div>
								<div class="value"><?=$arShop['ADDRESS']?></div>
							</div>
						<?endif;?>
						<?if($arShop['METRO']):?>
							<div class="store_property metro">
								<div class="title"><?=GetMessage('METRO')?></div>
								<?foreach($arShop['METRO'] as $metro):?>
									<div class="value"><i></i><?=$metro?></div>
								<?endforeach;?>
							</div>
						<?endif;?>
						<?if($arShop['PHONE']):?>
							<div class="store_property">
								<div class="title"><?=GetMessage('PHONE')?></div>
								<div class="value">
									<?foreach($arShop["PHONE"] as $phone):?>
										<div class="phone"><a rel="nofollow" href="tel:<?=str_replace(array(' ', ',', '-', '(', ')'), '', $phone);?>"><?=$phone;?></a></div>
									<?endforeach;?>
								</div>
							</div>
						<?endif;?>
						<?if(strlen($arShop['EMAIL'])):?>
							<div class="store_property">
								<div class="title">Email</div>
								<div class="value"><a rel="nofollow" href="mailto:<?=$arShop['EMAIL']?>"><?=$arShop['EMAIL']?></a></div>
							</div>
						<?endif;?>
						<?if(strlen($arShop['SCHEDULE'])):?>
							<div class="store_property">
								<div class="title"><?=GetMessage('SCHEDULE')?></div>
								<div class="value"><?=$arShop['SCHEDULE']?></div>
							</div>
						<?endif;?>
					</div>
				</div>
				<div class="contacts_right">
					<?if($arShop['DESCRIPTION']):?>
						<blockquote><?=$arShop['DESCRIPTION']?></blockquote>
					<?endif;?>
					<?if($arPhotos):?>
						<!-- noindex-->
						<?foreach($arPhotos as $arPhoto):?>
							<a class="fancy" data-fancybox-group="item_slider" title="<?=$arPhoto['DESCRIPTION']?>" href="<?=$arPhoto['ORIGINAL']?>"><img title="<?=$arPhoto['DESCRIPTION']?>" alt="<?=$arPhoto['DESCRIPTION']?>" src="<?=$arPhoto['PREVIEW']['src']?>"></a>
						<?endforeach;?>
						<!-- /noindex-->
					<?endif;?>
				</div>
				<div class="clearboth"></div>
				<!-- noindex--><a rel="nofollow" href="<?=$arShop['LIST_URL']?>" class="back"><?=GetMessage('BACK_STORE_LIST')?></a><!-- /noindex-->
			</div>
			<div class="clearboth"></div>
			<?
		}
		else{
			LocalRedirect(SITE_DIR.'contacts/');
		}
	}

}
?>47   103|/aspro.optimus/install/version.php|6f62b2a8<?
$arModuleVersion = array(
	"VERSION" => "1.1.2",
	"VERSION_DATE" => "2017-05-19 00:00:00"
);
?>141  6117|/aspro.optimus/install/wizards/aspro/optimus/site/templates/aspro_optimus/components/bitrix/form.result.new/inline/template.php|8ec7a0c5<?if(!defined("B_PROLOG_INCLUDED") || B_PROLOG_INCLUDED!==true) die();?>
<?$frame = $this->createFrame()->begin('')?>
<?
$bLeftAndRight = false;
if(is_array($arResult["QUESTIONS"])){
	foreach($arResult["QUESTIONS"] as $arQuestion){
		if($arQuestion["STRUCTURE"][0]["FIELD_PARAM"] == 'left'){
			$bLeftAndRight = true;
			break;
		}
	}
}
?>
<div class="form inline <?=$arResult["arForm"]["SID"]?>">
	<!--noindex-->
	<div class="form_head">
		<?if($arResult["isFormTitle"] == "Y"):?>
			<h4><?=$arResult["FORM_TITLE"]?></h4>
		<?endif;?>
		<?if($arResult["isFormDescription"] == "Y"):?>
			<div class="form_desc"><?=$arResult["FORM_DESCRIPTION"]?></div>
		<?endif;?>
	</div>
	<?if($arResult["isFormErrors"] == "Y" || strlen($arResult["FORM_NOTE"])):?>
		<div class="form_result <?=($arResult["isFormErrors"] == "Y" ? 'error' : 'success')?>">
			<?if($arResult["isFormErrors"] == "Y"):?>
				<?=$arResult["FORM_ERRORS_TEXT"]?>
			<?else:?>
				<script type="text/javascript">
				$(document).ready(function(){
					if(arOptimusOptions['COUNTERS']['USE_FORMS_GOALS'] !== 'NONE'){
						var eventdata = {goal: 'goal_webform_success' + (arOptimusOptions['COUNTERS']['USE_FORMS_GOALS'] === 'COMMON' ? '' : '_<?=$arParams['WEB_FORM_ID']?>'), params: <?=CUtil::PhpToJSObject($arParams, false)?>, result: <?=CUtil::PhpToJSObject($arResult, false)?>};
						BX.onCustomEvent('onCounterGoals', [eventdata]);
					}
				});
				</script>
				<?$successNoteFile = SITE_DIR."include/form/success_{$arResult["arForm"]["SID"]}.php";?>
				<?if(file_exists($_SERVER["DOCUMENT_ROOT"].$successNoteFile)):?>
				<?$APPLICATION->IncludeFile($successNoteFile, array(), array("MODE" => "html", "NAME" => "Form success note"));?>
				<?else:?>
					<?=GetMessage("FORM_SUCCESS");?>
				<?endif;?>
			<?endif;?>
		</div>
	<?endif;?>
	<?=$arResult["FORM_HEADER"]?>
	<?=bitrix_sessid_post();?>
	<div class="form_body">
		<?if(is_array($arResult["QUESTIONS"])):?>
			<?if(!$bLeftAndRight):?>
				<?foreach($arResult["QUESTIONS"] as $FIELD_SID => $arQuestion):?>
					<?COptimus::drawFormField($FIELD_SID, $arQuestion);?>
				<?endforeach;?>
			<?else:?>
				<div class="form_left">
					<?foreach($arResult["QUESTIONS"] as $FIELD_SID => $arQuestion):?>
						<?if($arQuestion["STRUCTURE"][0]["FIELD_PARAM"] == 'left'):?>
							<?COptimus::drawFormField($FIELD_SID, $arQuestion);?>
						<?endif;?>
					<?endforeach;?>
				</div>
				<div class="form_right">
					<?foreach($arResult["QUESTIONS"] as $FIELD_SID => $arQuestion):?>
						<?if($arQuestion["STRUCTURE"][0]["FIELD_PARAM"] != 'left'):?>
							<?COptimus::drawFormField($FIELD_SID, $arQuestion);?>
						<?endif;?>
					<?endforeach;?>
				</div>
			<?endif;?>
		<?endif;?>
		<div class="clearboth"></div>
		<?if($arResult["isUseCaptcha"] == "Y"):?>
			<div class="form-control captcha-row clearfix">
				<label><span><?=GetMessage("FORM_CAPRCHE_TITLE")?>&nbsp;<span class="star">*</span></span></label>
				<div class="captcha_image">
					<img src="/bitrix/tools/captcha.php?captcha_sid=<?=htmlspecialcharsbx($arResult["CAPTCHACode"])?>" border="0" />
					<input type="hidden" name="captcha_sid" value="<?=htmlspecialcharsbx($arResult["CAPTCHACode"])?>" />
					<div class="captcha_reload"></div>
				</div>
				<div class="captcha_input">
					<input type="text" class="inputtext captcha" name="captcha_word" size="30" maxlength="50" value="" required />
				</div>
			</div>
		<?endif;?>
		<div class="clearboth"></div>
	</div>
	<div class="form_footer">
		<?if(COption::GetOptionString("aspro.optimus", "SHOW_LICENCE", "N") == "Y"):?>
			<div class="licence_block filter label_block">
				<input type="checkbox" id="licenses_popup_<?=$arResult["arForm"]["SID"]?>" name="licenses_popup" required value="Y">
				<label for="licenses_popup_<?=$arResult["arForm"]["SID"]?>">
					<?$APPLICATION->IncludeFile(SITE_DIR."include/licenses_text.php", Array(), Array("MODE" => "html", "NAME" => "LICENSES")); ?>
				</label>
			</div>
		<?endif;?>
		<?/*<button type="submit" class="button medium" value="submit" name="web_form_submit" ><span><?=$arResult["arForm"]["BUTTON"]?></span></button>*/?>
		<input type="submit" class="button medium" value="<?=$arResult["arForm"]["BUTTON"]?>" name="web_form_submit">
		<button type="reset" class="button medium transparent" value="reset" name="web_form_reset" ><span><?=GetMessage('FORM_RESET')?></span></button>
		<script type="text/javascript">
		$(document).ready(function(){
			$('form[name="<?=$arResult["arForm"]["VARNAME"]?>"]').validate({
				highlight: function( element ){
					$(element).parent().addClass('error');
				},
				unhighlight: function( element ){
					$(element).parent().removeClass('error');
				},
				submitHandler: function( form ){
					if( $('form[name="<?=$arResult["arForm"]["VARNAME"]?>"]').valid() ){
						form.submit();
						setTimeout(function() {
							$(form).find('button[type="submit"]').attr("disabled", "disabled");
						}, 300);
					}
				},
				errorPlacement: function( error, element ){
					error.insertBefore(element);
				},
				messages:{
					licenses_popup: {
						required : BX.message('JS_REQUIRED_LICENSES')
					}
				}
			});

			if(arOptimusOptions['THEME']['PHONE_MASK'].length){
				var base_mask = arOptimusOptions['THEME']['PHONE_MASK'].replace( /(\d)/g, '_' );
				$('form[name=<?=$arResult["arForm"]["VARNAME"]?>] input.phone, form[name=<?=$arResult["arForm"]["VARNAME"]?>] input[data-sid=PHONE]').inputmask('mask', {'mask': arOptimusOptions['THEME']['PHONE_MASK'] });
				$('form[name=<?=$arResult["arForm"]["VARNAME"]?>] input.phone, form[name=<?=$arResult["arForm"]["VARNAME"]?>] input[data-sid=PHONE]').blur(function(){
					if( $(this).val() == base_mask || $(this).val() == '' ){
						if( $(this).hasClass('required') ){
							$(this).parent().find('label.error').html(BX.message('JS_REQUIRED'));
						}
					}
				});
			}
		});
		</script>
	</div>
	<?=$arResult["FORM_FOOTER"]?>
	<!--/noindex-->
</div>
<?$frame->end()?>140  5202|/aspro.optimus/install/wizards/aspro/optimus/site/templates/aspro_optimus/components/bitrix/form.result.new/popup/template.php|5255bb5b<?if(!defined("B_PROLOG_INCLUDED") || B_PROLOG_INCLUDED!==true) die();?>
<a href="#" class="close jqmClose"><i></i></a>
<div class="form <?=$arResult["arForm"]["SID"]?>">
	<!--noindex-->
	<div class="form_head">
		<?if($arResult["isFormTitle"] == "Y"):?>
			<h2><?=$arResult["FORM_TITLE"]?></h2>
		<?endif;?>
		<?if($arResult["isFormDescription"] == "Y"):?>
			<div class="form_desc"><?=$arResult["FORM_DESCRIPTION"]?></div>
		<?endif;?>
	</div>
	<?if($arResult["isFormErrors"] == "Y" || strlen($arResult["FORM_NOTE"])){?>
		<div class="form_result <?=($arResult["isFormErrors"] == "Y" ? 'error' : 'success')?>">
			<?if($arResult["isFormErrors"] == "Y"):?>
				<?=$arResult["FORM_ERRORS_TEXT"]?>
			<?else:?>
				<script type="text/javascript">
				$(document).ready(function(){
					if(arOptimusOptions['COUNTERS']['USE_FORMS_GOALS'] !== 'NONE'){
						var eventdata = {goal: 'goal_webform_success' + (arOptimusOptions['COUNTERS']['USE_FORMS_GOALS'] === 'COMMON' ? '' : '_<?=$arParams['WEB_FORM_ID']?>'), params: <?=CUtil::PhpToJSObject($arParams, false)?>, result: <?=CUtil::PhpToJSObject($arResult, false)?>};
						BX.onCustomEvent('onCounterGoals', [eventdata]);
					}
				});
				</script>
				<?$successNoteFile = SITE_DIR."include/form/success_{$arResult["arForm"]["SID"]}.php";?>
				<?if(file_exists($_SERVER["DOCUMENT_ROOT"].$successNoteFile)):?>
				<?$APPLICATION->IncludeFile($successNoteFile, array(), array("MODE" => "html", "NAME" => "Form success note"));?>
				<?else:?>
					<?=GetMessage("FORM_SUCCESS");?>
				<?endif;?>
			<?endif;?>
		</div>
	<?}else{?>
		<?=$arResult["FORM_HEADER"]?>
		<?=bitrix_sessid_post();?>
		<div class="form_body">
			<?if(is_array($arResult["QUESTIONS"])):?>
				<?foreach($arResult["QUESTIONS"] as $FIELD_SID => $arQuestion):?>
					<?COptimus::drawFormField($FIELD_SID, $arQuestion);?>
				<?endforeach;?>
			<?endif;?>
			<div class="clearboth"></div>
			<?if($arResult["isUseCaptcha"] == "Y"):?>
				<div class="form-control captcha-row clearfix">
					<label><span><?=GetMessage("FORM_CAPRCHE_TITLE")?>&nbsp;<span class="star">*</span></span></label>
					<div class="captcha_image">
						<img src="/bitrix/tools/captcha.php?captcha_sid=<?=htmlspecialcharsbx($arResult["CAPTCHACode"])?>" border="0" />
						<input type="hidden" name="captcha_sid" value="<?=htmlspecialcharsbx($arResult["CAPTCHACode"])?>" />
						<div class="captcha_reload"></div>
					</div>
					<div class="captcha_input">
						<input type="text" class="inputtext captcha" name="captcha_word" size="30" maxlength="50" value="" required />
					</div>
				</div>
			<?endif;?>
			<div class="clearboth"></div>
		</div>
		<div class="form_footer">
			<?if(COption::GetOptionString("aspro.optimus", "SHOW_LICENCE", "N") == "Y"):?>
				<div class="licence_block filter label_block">
					<input type="checkbox" id="licenses_popup_<?=$arResult["arForm"]["SID"]?>" name="licenses_popup" required value="Y">
					<label for="licenses_popup_<?=$arResult["arForm"]["SID"]?>">
						<?$APPLICATION->IncludeFile(SITE_DIR."include/licenses_text.php", Array(), Array("MODE" => "html", "NAME" => "LICENSES")); ?>
					</label>
				</div>
			<?endif;?>
			<?/*<button type="submit" class="button medium" value="submit" name="web_form_submit" ><span><?=$arResult["arForm"]["BUTTON"]?></span></button>*/?>
			<input type="submit" class="button medium" value="<?=$arResult["arForm"]["BUTTON"]?>" name="web_form_submit">
			<button type="reset" class="button medium transparent" value="reset" name="web_form_reset" ><span><?=GetMessage('FORM_CLOSE')?></span></button>

		</div>
		<?=$arResult["FORM_FOOTER"]?>
	<?}?>
	<!--/noindex-->
	<script type="text/javascript">
	$(document).ready(function(){
		$('form[name="<?=$arResult["arForm"]["VARNAME"]?>"]').validate({
			highlight: function( element ){
				$(element).parent().addClass('error');
			},
			unhighlight: function( element ){
				$(element).parent().removeClass('error');
			},
			submitHandler: function( form ){
				if( $('form[name="<?=$arResult["arForm"]["VARNAME"]?>"]').valid() ){
					form.submit();
					setTimeout(function() {
						$(form).find('button[type="submit"]').attr("disabled", "disabled");
					}, 300);
				}
			},
			errorPlacement: function( error, element ){
				error.insertBefore(element);
			},
			messages:{
				licenses_popup: {
					required : BX.message('JS_REQUIRED_LICENSES')
				}
			}
		});

		if(arOptimusOptions['THEME']['PHONE_MASK'].length){
			var base_mask = arOptimusOptions['THEME']['PHONE_MASK'].replace( /(\d)/g, '_' );
			$('form[name=<?=$arResult["arForm"]["VARNAME"]?>] input.phone').inputmask('mask', {'mask': arOptimusOptions['THEME']['PHONE_MASK'] });
			$('form[name=<?=$arResult["arForm"]["VARNAME"]?>] input.phone').blur(function(){
				if( $(this).val() == base_mask || $(this).val() == '' ){
					if( $(this).hasClass('required') ){
						$(this).parent().find('label.error').html(BX.message('JS_REQUIRED'));
					}
				}
			});
		}
		$('.popup').jqmAddClose('a.jqmClose');
		$('.popup').jqmAddClose('button[name="web_form_reset"]');
	});
	</script>
</div>103  85129|/aspro.optimus/install/wizards/aspro/optimus/site/templates/aspro_optimus/js/main.min.js|4f126bb6function setLocationSKU(e){var t=parseUrlQuery(),a=0,i="",o="",n="";if("oid"in t&&parseInt(t.oid)>0){t.oid=e;for(var s in t)parseInt(a)>0&&(i="&"),o=o+i+s+"="+t[s],a++;o&&(n=location.pathname+"?"+o);try{return void history.pushState(null,null,n)}catch(r){}location.hash="#"+n.substr(1)}}function clearViewedProduct(){try{var e=arOptimusOptions.SITE_ID,t="OPTIMUS_VIEWED_ITEMS_"+e,a={path:"/",expires:30};"undefined"!=typeof BX.localStorage&&BX.localStorage.set(t,{},0),$.removeCookie(t,a)}catch(i){console.error(i)}}function setViewedProduct(e,t){try{var a=$.cookie.json;$.cookie.json=!0;var i=arOptimusOptions.SITE_ID,o="OPTIMUS_VIEWED_ITEMS_"+i,n={path:"/",expires:30};if("undefined"!=typeof BX.localStorage&&"undefined"!=typeof e&&"undefined"!=typeof t){var s="undefined"!=typeof t.PRODUCT_ID?t.PRODUCT_ID:e,r=BX.localStorage.get(o)?BX.localStorage.get(o):{},l=$.cookie(o)?$.cookie(o):{},d=0;for(var c in r)r[c].IS_LAST=!1,"undefined"==typeof l[c]&&delete r[c];for(var c in l)"undefined"==typeof r[c]&&delete l[c];for(var c in l)d++;"undefined"!=typeof r[s]&&r[s].ID!=e&&(delete r[s],delete l[s]),delete r[2243],delete l[2243];var u=(new Date).getTime();t.ID=e,t.ACTIVE_FROM=u,t.IS_LAST=!0,r[s]=t,l[s]=[u.toString(),t.PICTURE_ID],$.cookie(o,l,n),BX.localStorage.set(o,r,2592e3)}}catch(p){console.error(p)}finally{$.cookie.json=a}}function initSelects(e){var t=navigator.userAgent.match(/(iPad|iPhone|iPod)/g)?!0:!1;if(!t&&!$("#bx-soa-order").length){$(e).find(".wrapper select:visible").ikSelect({syntax:'<div class="ik_select_link"> 						<span class="ik_select_link_text"></span> 						<div class="trigger"></div> 					</div> 					<div class="ik_select_dropdown"> 						<div class="ik_select_list"> 						</div> 					</div>',dynamicWidth:!0,ddMaxHeight:112,customClass:"common_select",onShow:function(e){e.$dropdown.css("top",parseFloat(e.$dropdown.css("top"))-5+"px"),e.$dropdown.outerWidth()<e.$link.outerWidth()&&e.$dropdown.css("width",e.$link.outerWidth()),e.$dropdown.outerWidth()>e.$link.outerWidth()&&e.$dropdown.css("width",e.$link.outerWidth());var t=0,a=0;e.$dropdown.css("left",e.$link.offset().left),$(e.$listInnerUl).find("li").each(function(){$(this).hasClass("ik_select_option_disabled")||(++t,a+=$(this).outerHeight())}),112>a?e.$listInner.css("height","auto"):e.$listInner.css("height","112px"),e.$link.addClass("opened"),e.$listInner.addClass("scroller")},onHide:function(e){e.$link.removeClass("opened")}});var a;$(window).on("resize",function(){clearTimeout(a),a=setTimeout(function(){var e="";(e=$(".common_select-link.opened + select").ikSelect().data("plugin_ikSelect"))&&e.$dropdown.css("left",e.$link.offset().left+"px")},20)})}}function initHoverBlock(e){$(e).find(".catalog_item.item_wrap").on("mouseenter",function(){$(this).addClass("hover")}),$(e).find(".catalog_item.item_wrap").on("mouseleave",function(){$(this).removeClass("hover")})}function setStatusButton(){$.ajax({url:arOptimusOptions.SITE_DIR+"ajax/getAjaxBasket.php",type:"POST",success:function(e){if(e.BASKET)for(var t in e.BASKET)$(".to-cart[data-item="+e.BASKET[t]+"]").hide(),$(".counter_block[data-item="+e.BASKET[t]+"]").hide(),$(".in-cart[data-item="+e.BASKET[t]+"]").show(),$(".in-cart[data-item="+e.BASKET[t]+"]").closest(".button_block").addClass("wide");if(e.DELAY)for(var t in e.DELAY)$(".wish_item.to[data-item="+e.DELAY[t]+"]").hide(),$(".wish_item.in[data-item="+e.DELAY[t]+"]").show(),$(".wish_item[data-item="+e.DELAY[t]+"]").find(".value.added").length&&($(".wish_item[data-item="+e.DELAY[t]+"]").addClass("added"),$(".wish_item[data-item="+e.DELAY[t]+"]").find(".value").hide(),$(".wish_item[data-item="+e.DELAY[t]+"]").find(".value.added").show());if(e.SUBSCRIBE)for(var t in e.SUBSCRIBE)$(".to-subscribe[data-item="+e.SUBSCRIBE[t]+"]").hide(),$(".in-subscribe[data-item="+e.SUBSCRIBE[t]+"]").show();if(e.COMPARE)for(var t in e.COMPARE)$(".compare_item.to[data-item="+e.COMPARE[t]+"]").hide(),$(".compare_item.in[data-item="+e.COMPARE[t]+"]").show(),$(".compare_item[data-item="+e.COMPARE[t]+"]").find(".value.added").length&&($(".compare_item[data-item="+e.COMPARE[t]+"]").find(".value").hide(),$(".compare_item[data-item="+e.COMPARE[t]+"]").find(".value.added").show())}})}function scroll_block(e){var t=e.offset().top;$("header").outerHeight(!0,!0);if($(".stores_tab").length)$(".stores_tab").addClass("current").siblings().removeClass("current");else if($(".prices_tab").addClass("current").siblings().removeClass("current"),$(".prices_tab .opener").length&&!$(".prices_tab .opener .opened").length){var a=$(".prices_tab .opener").first();a.find(".opener_icon").addClass("opened"),a.parents("tr").addClass("nb"),a.parents("tr").next(".offer_stores").find(".stores_block_wrap").slideDown(200)}$("html,body").animate({scrollTop:t-30},150)}function replaceBasketPopup(e){"undefined"!=typeof e&&(e.w.hide(),e.o.hide())}function waitLayer(e,t){"undefined"!=typeof dataLayer?"function"==typeof t&&t():setTimeout(function(){waitLayer(e,t)},e)}function checkCounters(e){return"undefined"!=typeof e?"google"==e&&"Y"==arOptimusOptions.COUNTERS.GOOGLE_ECOMERCE&&arOptimusOptions.COUNTERS.GOOGLE_COUNTER>0?!0:"yandex"==e&&"Y"==arOptimusOptions.COUNTERS.USE_YA_COUNTER&&"Y"==arOptimusOptions.COUNTERS.YANDEX_ECOMERCE&&arOptimusOptions.COUNTERS.YANDEX_COUNTER>0?!0:!1:"Y"==arOptimusOptions.COUNTERS.USE_YA_COUNTER&&"Y"==arOptimusOptions.COUNTERS.YANDEX_ECOMERCE&&arOptimusOptions.COUNTERS.YANDEX_COUNTER>0||"Y"==arOptimusOptions.COUNTERS.GOOGLE_ECOMERCE&&arOptimusOptions.COUNTERS.GOOGLE_COUNTER>0?!0:!1}function addBasketCounter(e){if("N"!==arOptimusOptions.COUNTERS.USE_BASKET_GOALS){var t={goal:"goal_basket_add",params:{id:e}};BX.onCustomEvent("onCounterGoals",[t])}checkCounters()&&$.ajax({url:arOptimusOptions.SITE_DIR+"ajax/goals.php",dataType:"json",type:"POST",data:{ID:e},success:function(e){e&&e.ID&&waitLayer(100,function(){dataLayer.push({event:arOptimusOptions.COUNTERS.GOOGLE_EVENTS.ADD2BASKET,ecommerce:{currencyCode:e.CURRENCY,add:{products:[{id:e.ID,name:e.NAME,price:e.PRICE,brand:e.BRAND,category:e.CATEGORY,quantity:e.QUANTITY}]}}})})}})}function purchaseCounter(e,t,a){checkCounters()?$.ajax({url:arOptimusOptions.SITE_DIR+"ajax/goals.php",dataType:"json",type:"POST",data:{ORDER_ID:e,TYPE:t},success:function(e){var i=[];if(e.ITEMS)for(var o in e.ITEMS)i.push({id:e.ITEMS[o].ID,sku:e.ITEMS[o].ID,name:e.ITEMS[o].NAME,price:e.ITEMS[o].PRICE,brand:e.ITEMS[o].BRAND,category:e.ITEMS[o].CATEGORY,quantity:e.ITEMS[o].QUANTITY});e.ID?waitLayer(100,function(){dataLayer.push({ecommerce:d={purchase:{actionField:{id:e.ACCOUNT_NUMBER,shipping:e.PRICE_DELIVERY,tax:e.TAX_VALUE,list:t,revenue:e.PRICE},products:i}}}),"undefined"!=typeof a&&a(d)}):"undefined"!=typeof a&&a(!1)},error:function(){"undefined"!=typeof a&&a(!1)}}):"undefined"!=typeof a&&a(!1)}function viewItemCounter(e,t){checkCounters()&&$.ajax({url:arOptimusOptions.SITE_DIR+"ajax/goals.php",dataType:"json",type:"POST",data:{PRODUCT_ID:e,PRICE_ID:t},success:function(e){e.ID&&waitLayer(100,function(){dataLayer.push({ecommerce:{detail:{products:[{id:e.ID,name:e.NAME,price:e.PRICE,brand:e.BRAND,category:e.CATEGORY}]}}})})}})}function checkoutCounter(e,t,a){checkCounters("google")&&$.ajax({url:arOptimusOptions.SITE_DIR+"ajax/goals.php",dataType:"json",type:"POST",data:{BASKET:"Y"},success:function(a){var i=[];if(a.ITEMS)for(var o in a.ITEMS)i.push({id:a.ITEMS[o].ID,name:a.ITEMS[o].NAME,price:a.ITEMS[o].PRICE,brand:a.ITEMS[o].BRAND,category:a.ITEMS[o].CATEGORY,quantity:a.ITEMS[o].QUANTITY});i&&waitLayer(100,function(){dataLayer.push({event:arOptimusOptions.COUNTERS.GOOGLE_EVENTS.CHECKOUT_ORDER,ecommerce:{actionField:{step:e,option:t},products:i}})})}})}function delFromBasketCounter(e,t){checkCounters()&&$.ajax({url:arOptimusOptions.SITE_DIR+"ajax/goals.php",dataType:"json",type:"POST",data:{ID:e},success:function(e){e.ID&&waitLayer(100,function(){dataLayer.push({event:arOptimusOptions.COUNTERS.GOOGLE_EVENTS.REMOVE_BASKET,ecommerce:{remove:{products:[{id:e.ID,name:e.NAME,category:e.CATEGORY}]}}}),"function"==typeof t&&t()})}})}function setHeightCompany(){$(".md-50.img").height($(".md-50.big").outerHeight()-35)}function initSly(){var e=$(document).find(".frame"),t=(e.children("ul").eq(0),e.parent());arOptimusOptions.PAGES.CATALOG_PAGE&&(e.sly({horizontal:1,itemNav:"basic",smart:1,mouseDragging:0,touchDragging:0,releaseSwing:0,startAt:0,scrollBar:t.find(".scrollbar"),scrollBy:1,speed:300,elasticBounds:0,easing:"swing",dragHandle:1,dynamicHandle:1,clickBar:1,forward:t.find(".forward"),backward:t.find(".backward")}),e.sly("reload"))}function createTableCompare(e,t,a){try{var i=e.clone().removeAttr("id").addClass("clone");a.length?(a.remove(),t.html(""),t.html(i)):t.append(i)}catch(o){}finally{}}function isRealValue(e){return e&&"null"!==e&&"undefined"!==e}function rightScroll(e,t){var a=BX("prop_"+e+"_"+t);if(a){var i=parseInt(a.style.marginLeft);i>=0&&(a.style.marginLeft=i-20+"%")}}function leftScroll(e,t){var a=BX("prop_"+e+"_"+t);if(a){var i=parseInt(a.style.marginLeft);0>i&&(a.style.marginLeft=i+20+"%")}}function touchMenu(e){$(window).outerWidth()>600?$(e).each(function(){var e=$(this);e.on("touchend",function(t){e.find(".child").length&&!e.hasClass("hover")&&(t.preventDefault(),t.stopPropagation(),e.siblings().removeClass("hover"),e.addClass("hover"),$(".menu .child").css({display:"none"}),e.find(".child").css({display:"block"}))})}):$(e).off()}function touchItemBlock(e){$(e).each(function(){var e=$(this),t=e.closest(".catalog_item");e.on("touchend",function(a){if(!t.hasClass("hover")){a.preventDefault(),a.stopPropagation(),t.siblings().removeClass("hover"),t.siblings().blur(),t.closest(".catalog_block").find(".catalog_item").removeClass("hover"),t.addClass("hover"),t.addClass("touch");var i=1*e.closest(".tab").attr("data-hover"),o=1*e.closest(".tab").attr("data-unhover");e.closest(".tab").stop().animate({height:o},100),e.closest(".catalog_item").siblings().find(".buttons_block").stop().fadeOut(233),e.closest(".tab").fadeTo(100,1),e.closest(".tab").stop().css({height:i}),e.closest(".catalog_item").find(".buttons_block").fadeIn(450,"easeOutCirc")}})})}function touchBasket(e){"N"!==arOptimusOptions.THEME.SHOW_BASKET_ONADDTOCART&&($(window).outerWidth()>600?$(document).find(e).on("touchend",function(e){$(this).parent().find(".basket_popup_wrapp").length&&!$(this).hasClass("hover")&&(e.preventDefault(),e.stopPropagation(),$(this).addClass("hover"),$(this).parent().find(".basket_popup_wrapp").slideDown())}):$(e).off())}function initFull(){initSelects(document),initHoverBlock(document),touchItemBlock(".catalog_item a"),InitOrderCustom(),$("html.print").length?window.print():checkStickyFooter(),basketActions(),orderActions()}var basketTimeoutSlide,resizeEventTimer,funcDefined=function(e){try{return"function"==typeof e?!0:"function"==typeof window[e]}catch(t){return!1}};if(!funcDefined("setLocationSKU"),!funcDefined("trimPrice"))var trimPrice=function(e){return e=e.split(" ").join(""),e=e.split("&nbsp;").join("")};if(!funcDefined("markProductRemoveBasket"))var markProductRemoveBasket=function(e){$(".in-cart[data-item="+e+"]").hide(),$(".to-cart[data-item="+e+"]").show(),$(".to-cart[data-item="+e+"]").closest(".button_block").removeClass("wide"),$(".to-cart[data-item="+e+"]").closest(".counter_wrapp").find(".counter_block").show(),$(".counter_block[data-item="+e+"]").show(),$(".in-subscribe[data-item="+e+"]").hide(),$(".to-subscribe[data-item="+e+"]").show(),$(".wish_item[data-item="+e+"]").removeClass("added"),$(".wish_item[data-item="+e+"] .value:not(.added)").show(),$(".wish_item[data-item="+e+"] .value.added").hide()};if(!funcDefined("markProductAddBasket"))var markProductAddBasket=function(e){$(".to-cart[data-item="+e+"]").hide(),$(".to-cart[data-item="+e+"]").closest(".counter_wrapp").find(".counter_block").hide(),$(".to-cart[data-item="+e+"]").closest(".button_block").addClass("wide"),$(".in-cart[data-item="+e+"]").show(),$(".wish_item[data-item="+e+"]").removeClass("added"),$(".wish_item[data-item="+e+"] .value:not(.added)").show(),$(".wish_item[data-item="+e+"] .value.added").hide()};if(!funcDefined("markProductDelay"))var markProductDelay=function(e){$(".in-cart[data-item="+e+"]").hide(),$(".to-cart[data-item="+e+"]").show(),$(".to-cart[data-item="+e+"]").closest(".counter_wrapp").find(".counter_block").show(),$(".to-cart[data-item="+e+"]").closest(".button_block").removeClass("wide"),$(".wish_item[data-item="+e+"]").addClass("added"),$(".wish_item[data-item="+e+"] .value:not(.added)").hide(),$(".wish_item[data-item="+e+"] .value.added").css("display","block")};if(!funcDefined("markProductSubscribe"))var markProductSubscribe=function(e){$(".to-subscribe[data-item="+e+"]").hide(),$(".in-subscribe[data-item="+e+"]").css("display","block")};if(!funcDefined("basketFly"))var basketFly=function(e){$.post(arOptimusOptions.SITE_DIR+"ajax/basket_fly.php","PARAMS="+$("#basket_form").find("input#fly_basket_params").val(),$.proxy(function(t){var a=$(".opener .basket_count").hasClass("small");$(t).find(".basket_count").find(".items div").text();$("#basket_line .basket_fly").addClass("loaded").html(t),"refresh"==e&&$("li[data-type=AnDelCanBuy]").trigger("click"),window.matchMedia("(min-width: 769px)").matches&&("open"==e?a?"N"!==arOptimusOptions.THEME.SHOW_BASKET_ONADDTOCART&&$(".opener .basket_count").click():($(".opener .basket_count").removeClass("small"),$('.tabs_content.basket li[item-section="AnDelCanBuy"]').addClass("cur"),$('#basket_line ul.tabs li[item-section="AnDelCanBuy"]').addClass("cur")):"wish"==e?a?"N"!==arOptimusOptions.THEME.SHOW_BASKET_ONADDTOCART&&$(".opener .wish_count").click():($(".opener .wish_count").removeClass("small"),$('.tabs_content.basket li[item-section="DelDelCanBuy"]').addClass("cur"),$('#basket_line ul.tabs li[item-section="DelDelCanBuy"]').addClass("cur")):"N"!==arOptimusOptions.THEME.SHOW_BASKET_ONADDTOCART&&$(".opener .basket_count").click())}))};if(!funcDefined("clearViewedProduct"),!funcDefined("setViewedProduct"),!funcDefined("initSelects"),funcDefined("CheckTopMenuFullCatalogSubmenu")||(CheckTopMenuFullCatalogSubmenu=function(){var e=$(".menu_top_block"),t=e.parents(".wrap_menu"),a=t.actual("outerWidth"),i=t.offset().left,o=i+a,n=e.hasClass("catalogfirst"),s=$(".menu_top_block:visible li.full"),r=e.actual("outerWidth");$(".catalog_block.menu_top_block").length&&$(".catalog_block.menu_top_block").is(":visible")&&(s=$(".menu_top_block.catalog_block li.full")),s.each(function(){var e=$(this),t=e.find(">.dropdown");t.length&&(n?t.css({left:r+"px",width:a-r+"px","padding-left":"0px","padding-right":"0px"}):t.css({left:-1*e.offset().left+"px",width:$(window).width()-1+"px","padding-left":i+"px","padding-right":$(window).width()-o+"px"}),!isOnceInited&&n&&"top"==arOptimusOptions.THEME.MENU_POSITION&&e.on("mouseenter",function(){t.css("min-height",e.closest(".dropdown").actual("outerHeight")+"px")}))})}),$.fn.getMaxHeights=function(e,t,a){for(var i=this.map(function(t,a){var i=0;return $(a).css("height",""),i=1==e?$(a).actual("outerHeight"):$(a).actual("height")}).get(),o=0,n=i.length;n>o;++o)i[o]%2&&--i[o];return Math.max.apply(this,i)},$.fn.equalizeHeights=function(e,t,a){for(var i=this.map(function(i,o){var n=0,s=0;return t!==!1&&(n=parseInt($(o).find(t).actual("outerHeight"))),n&&(n+=12),$(o).css("height",""),s=1==e?$(o).actual("outerHeight")-n:$(o).actual("height")-n,a!==!1&&(a>s&&(s+=a-s),window.matchMedia("(max-width: 520px)").matches&&(s=300),window.matchMedia("(max-width: 400px)").matches&&(s=200)),s}).get(),o=0,n=i.length;n>o;++o)i[o]%2&&--i[o];return this.height(Math.max.apply(this,i))},$.fn.getFloatWidth=function(){var e=0;if($(this).length){var t=$(this)[0].getBoundingClientRect();(e=t.width)||(e=t.right-t.left)}return e},$.fn.sliceHeight=function(e){function t(t){if(t.each(function(){$(this).css("line-height",""),$(this).css("height","")}),"undefined"==typeof e.autoslicecount||e.autoslicecount!==!1){var a="undefined"!=typeof e.row&&e.row.length?t.first().parents(e.row).getFloatWidth():t.first().parents(".items").getFloatWidth(),i="undefined"!=typeof e.item&&e.item.length?$(e.item).first().getFloatWidth():t.first().hasClass("item")?t.first().getFloatWidth():t.first().parents(".item").getFloatWidth();a||(a=t.first().parents(".row").getFloatWidth()),a&&i&&(e.slice=Math.floor(a/i))}if(e.slice)for(var o=0;o<t.length;o+=e.slice)$(t.slice(o,o+e.slice)).equalizeHeights(e.outer,e.classNull,e.minHeight);if(e.lineheight){var n=parseInt(e.lineheight);isNaN(n)&&(n=0),t.each(function(){$(this).css("line-height",$(this).actual("height")+n+"px")})}}var e=$.extend({slice:null,outer:!1,lineheight:!1,autoslicecount:!0,classNull:!1,minHeight:!1,options:!1,resize:!0,row:!1,item:!1},e),a=$(this);t(a),e.resize&&BX.addCustomEvent("onWindowResize",function(e){ignoreResize.push(!0),t(a),ignoreResize.pop()})},$.fn.sliceHeightNoResize=function(e){function t(t){if(t.each(function(){$(this).css("line-height",""),$(this).css("height","")}),"undefined"==typeof e.autoslicecount||e.autoslicecount!==!1){var a=t.first().hasClass("item")?t.first().getFloatWidth():t.first().parents(".item").getFloatWidth(),i=t.first().parents(".items").getFloatWidth();i||(i=t.first().parents(".row").getFloatWidth()),i&&a&&(e.slice=Math.floor(i/a))}if(e.slice)for(var o=0;o<t.length;o+=e.slice)$(t.slice(o,o+e.slice)).equalizeHeights(e.outer,e.classNull,e.minHeight);if(e.lineheight){var n=parseInt(e.lineheight);isNaN(n)&&(n=0),t.each(function(){$(this).css("line-height",$(this).actual("height")+n+"px")})}}var e=$.extend({slice:null,outer:!1,lineheight:!1,autoslicecount:!0,classNull:!1,minHeight:!1,options:!1,resize:!0},e),a=$(this);t(a)},!funcDefined("initHoverBlock"),!funcDefined("setStatusButton"),!funcDefined("onLoadjqm"))var onLoadjqm=function(e,t,a,i,o,n,s){t.w.addClass("show").css({"margin-left":$(window).width()>t.w.outerWidth()?"-"+t.w.outerWidth()/2+"px":"-"+$(window).width()/2+"px",top:$(document).scrollTop()+($(window).height()>t.w.outerHeight()?($(window).height()-t.w.outerHeight())/2:10)+"px",opacity:1}),"undefined"==typeof a&&(a=""),"undefined"==typeof i&&(i=!1);var r=$("."+e+"_frame").width();$("."+e+"_frame").css("margin-left","-"+r/2+"px"),"order-popup-call"==e||("order-button"==e?$(".order-button_frame").find("div[product_name]").find("input").val(t.t.title).attr("readonly","readonly").css({overflow:"hidden","text-overflow":"ellipsis"}):"to-order"==e&&i?($(".to-order_frame").find('[data-sid="PRODUCT_NAME"]').val($(i).data("name")).attr("readonly","readonly").css({overflow:"hidden","text-overflow":"ellipsis"}),$(".to-order_frame").find('[data-sid="PRODUCT_ID"]').val($(i).attr("data-item"))):"services"==e&&i?$(".services_frame").find('[data-sid="SERVICE"]').val($(i).attr("data-title")):"resume"==e&&i?$(i).attr("data-jobs")&&$(".resume_frame").find('[data-sid="POST"]').attr("readonly","readonly").val($(i).attr("data-jobs")):"basket_error"==e?($(".basket_error_frame .pop-up-title").text(o),$(".basket_error_frame .ajax_text").html(a),initSelects(document),"Y"==n&&s&&$("<div class='popup_button_basket_wr'><span class='popup_button_basket big_btn button' data-item="+s.data("item")+"><span>"+BX.message("ERROR_BASKET_BUTTON")+"</span></span></div>").insertAfter($(".basket_error_frame .ajax_text"))):"one_click_buy"==e?($("#one_click_buy_form_button").on("click",function(){$(this).hasClass("clicked")||$("#one_click_buy_form").valid()&&($(this).addClass("clicked"),$("#one_click_buy_form").submit())}),$("#one_click_buy_form").submit(function(){return $("."+e+"_frame form input.error").length||$("."+e+"_frame form textarea.error").length?!1:($.ajax({url:$(this).attr("action"),data:$(this).serialize(),type:"POST",dataType:"json",error:function(e){alert("Error connecting server")},success:function(e){if("Y"==e.result){if("N"!==arOptimusOptions.COUNTERS.USE_1CLICK_GOALS){var t={goal:"goal_1click_success"};BX.onCustomEvent("onCounterGoals",[t])}$(".one_click_buy_result").show(),$(".one_click_buy_result_success").show(),purchaseCounter(e.message,arOptimusOptions.COUNTERS.TYPE.ONE_CLICK)}else $(".one_click_buy_result").show(),$(".one_click_buy_result_fail").show(),"err"in e&&e.err&&(e.message=e.message+" \n"+e.err),$(".one_click_buy_result_text").html(e.message);$(".one_click_buy_modules_button",self).removeClass("disabled"),$("#one_click_buy_form").hide(),$("#one_click_buy_form_result").show()}}),!1)})):"one_click_buy_basket"==e&&($("#one_click_buy_form_button").on("click",function(){$(this).hasClass("clicked")||$("#one_click_buy_form").valid()&&($(this).addClass("clicked"),$("#one_click_buy_form").submit())}),$("#one_click_buy_form").on("submit",function(){return $("."+e+"_frame form input.error").length||$("."+e+"_frame form textarea.error").length?!1:($.ajax({url:$(this).attr("action"),data:$(this).serialize(),type:"POST",dataType:"json",error:function(e){window.console&&console.log(e)},success:function(e){if("Y"==e.result){if("N"!==arOptimusOptions.COUNTERS.USE_FASTORDER_GOALS){var t={goal:"goal_fastorder_success"};BX.onCustomEvent("onCounterGoals",[t])}$(".one_click_buy_result").show(),$(".one_click_buy_result_success").show(),purchaseCounter(e.message,arOptimusOptions.COUNTERS.TYPE.QUICK_ORDER)}else $(".one_click_buy_result").show(),$(".one_click_buy_result_fail").show(),"err"in e&&e.err&&(e.message=e.message+" \n"+e.err),$(".one_click_buy_result_text").text(e.message);$(".one_click_buy_modules_button",self).removeClass("disabled"),$("#one_click_buy_form").hide(),$("#one_click_buy_form_result").show()}}),!1)}))),$("."+e+"_frame").show()};if(!funcDefined("onHidejqm"))var onHidejqm=function(e,t){t.w.find(".one_click_buy_result_success").is(":visible")&&"one_click_buy_basket"==e&&(window.location.href=window.location.href),t.w.css("opacity",0).hide(),t.w.empty(),t.o.remove(),t.w.removeClass("show")};if(!funcDefined("oneClickBuy"))var oneClickBuy=function(e,t,a){var i="one_click_buy",o=1,n=!1,s=$(a).closest(".buy_block").find(".to-cart"),r=$(a).closest("tr").find(".to-cart");"undefined"!=typeof a&&(o=$(a).attr("data-quantity"),n=$(a).attr("data-props")),0>o&&(o=1);var l=s.data("props"),d=r.data("props"),c="",u="",p="N",f={},m=s.data("iblockid"),_=s.attr("data-item");l?c=l.split(";"):d&&(c=d.split(";")),s.data("part_props")&&(u=s.data("part_props")),s.data("add_props")&&(p=s.data("add_props")),f=fillBasketPropsExt(s,"prop",s.data("bakset_div")),f.iblockID=m,f.part_props=u,f.add_props=p,f.props=JSON.stringify(c),f.item=_,f.ocb_item="Y",$("body").find("."+i+"_frame").remove(),$("body").find("."+i+"_trigger").remove(),$("body").append('<div class="'+i+'_frame popup"></div>'),$("body").append('<div class="'+i+'_trigger"></div>'),$("."+i+"_frame").jqm({trigger:"."+i+"_trigger",onHide:function(e){onHidejqm(i,e)},toTop:!1,onLoad:function(e){onLoadjqm(i,e)},ajax:arOptimusOptions.SITE_DIR+"ajax/one_click_buy.php?ELEMENT_ID="+e+"&IBLOCK_ID="+t+"&ELEMENT_QUANTITY="+o+"&OFFER_PROPS="+f.props}),$("."+i+"_trigger").click()};if(!funcDefined("oneClickBuyBasket"))var oneClickBuyBasket=function(){name="one_click_buy_basket",$("body").find("."+name+"_frame").remove(),$("body").find("."+name+"_trigger").remove(),$("body").append('<div class="'+name+'_frame popup"></div>'),$("body").append('<div class="'+name+'_trigger"></div>'),$("."+name+"_frame").jqm({trigger:"."+name+"_trigger",onHide:function(e){onHidejqm(name,e)},onLoad:function(e){onLoadjqm(name,e)},ajax:arOptimusOptions.SITE_DIR+"ajax/one_click_buy_basket.php"}),$("."+name+"_trigger").click()};if(!funcDefined("scroll_block"),!funcDefined("jqmEd"))var jqmEd=function(e,t,a,i,o,n,s,r){return"undefined"==typeof i&&(i=""),"undefined"==typeof o&&(o=!1),$("body").find("."+e+"_frame").remove(),$("body").append('<div class="'+e+'_frame popup"></div>'),"undefined"==typeof a?$("."+e+"_frame").jqm({trigger:"."+e+"_frame.popup",onHide:function(t){onHidejqm(e,t)},onLoad:function(t){onLoadjqm(e,t,i,o)},ajax:arOptimusOptions.SITE_DIR+"ajax/form.php?form_id="+t+(i.length?"&"+i:"")}):("enter"==e?$("."+e+"_frame").jqm({trigger:a,onHide:function(t){onHidejqm(e,t)},onLoad:function(t){onLoadjqm(e,t,i,o)},ajax:arOptimusOptions.SITE_DIR+"ajax/auth.php"}):"basket_error"==e?$("."+e+"_frame").jqm({trigger:a,onHide:function(t){onHidejqm(e,t)},onLoad:function(t){onLoadjqm(e,t,i,o,n,s,r)},ajax:arOptimusOptions.SITE_DIR+"ajax/basket_error.php"}):$("."+e+"_frame").jqm({trigger:a,onHide:function(t){onHidejqm(e,t)},onLoad:function(t){onLoadjqm(e,t,i,o)},ajax:arOptimusOptions.SITE_DIR+"ajax/form.php?form_id="+t+(i.length?"&"+i:"")}),$(a).dblclick(function(){return!1})),!0};if(!funcDefined("replaceBasketPopup"),!funcDefined("waitLayer"),funcDefined("waitCounter")||(waitCounter=function(e,t,a){var i=window["yaCounter"+e];"object"==typeof i?"function"==typeof a&&a():setTimeout(function(){waitCounter(e,t,a)},t)}),funcDefined("InitTopestMenuGummi")||(InitTopestMenuGummi=function(){function e(){var e=a.find(">li:not(.more)"),t=e.length;if(t)for(var i=0,o=0;t>o;++o){var r=e.eq(o),l=r.actual("outerWidth",{includeMargin:!0});s[o]=(i+=l)+(o!==t-1?n:0)}}function t(){var e=a.actual("innerWidth"),t=a.find(">li:not(.more),li.more>.dropdown>li"),n=t.length;if(n){for(var r=!1,l=n-1;l>=0;--l){var d=t.eq(l),c=d.parents(".more").length>0;if(!c&&s[l]>e){r||(r=!0,i.removeClass("hidden"));var u=d.clone();u.find(">a").addClass("dark_font"),u.prependTo(o),d.addClass("cloned")}}for(var l=0;n>l;++l){var d=t.eq(l),c=d.parents(".more").length>0;if(c&&s[l]<=e){l===n-1&&(r=!1,i.addClass("hidden"));var u=d.clone();u.find(">a").removeClass("dark_font"),u.insertBefore(i),d.addClass("cloned")}}a.find("li.cloned").remove()}}if(!isOnceInited){var a=$(".menu.topest"),i=a.find(">.more"),o=i.find(">.dropdown"),n=i.actual("outerWidth",{includeMargin:!0}),s=[];ignoreResize.push(!0),e(),t(),ignoreResize.pop(),$(window).resize(function(){ignoreResize.push(!0),t(),ignoreResize.pop()})}}),funcDefined("InitTopMenuGummi")||(InitTopMenuGummi=function(){function e(){var e=a.closest(".wrap_menu").find(".inc_menu .menu_top_block >li:not(.more)"),t=e.length;if(t)for(var i=0,o=0;t>o;++o){var n=e.eq(o),l=n.actual("outerWidth");r[o]=(i+=l)+(o!==t-1?s:0)}}function t(){var e=i.actual("innerWidth")-o.actual("innerWidth"),t=a.find(">li:not(.more):not(.catalog),li.more>.dropdown>li"),s=t.length;if(s){for(var d=!1,u=s-1;u>=0;--u){var p=t.eq(u),f=p.parents(".more").length>0;if(!f&&r[u]>e){d||(d=!0,n.removeClass("hidden"));var m=p.clone();m.find(">.dropdown").removeAttr("style").removeClass("toleft"),m.find(">a").addClass("dark_font").removeAttr("style"),m.prependTo(l),p.addClass("cloned")}}for(var u=0;s>u;++u){var p=t.eq(u),f=p.parents(".more").length>0;if(f&&r[u]<=e){u===s-1&&(d=!1,n.addClass("hidden"));var m=p.clone();m.find(">a").removeClass("dark_font"),m.insertBefore(n),p.addClass("cloned")}}a.find("li.cloned").remove();var _=a.find(">li:not(.more):not(.catalog)").length,h=e-r[_-1],b=Math.floor(h/(_+(n.hasClass("hidden")?0:1))),k=c+b,v=Math.floor(k/2),g=k-v;a.find(">li:not(.catalog):visible>a").each(function(){$(this).css({"padding-left":v+"px"}),$(this).css({"padding-right":g+"px"})});var w=k+h-(_+(n.is(":visible")?1:0))*b,C=Math.floor(w/2),E=w-C;a.find(">li:visible").last().find(">a").css({"padding-left":C+"px"}),a.find(">li:visible").last().find(">a").css({"padding-right":E+"px"}),CheckTopMenuFullCatalogSubmenu()}}var a=$(".menu_top_block"),i=a.parents(".wrap_menu"),o=i.find(".catalog_menu_ext"),n=a.find(">.more"),s=n.actual("outerWidth",{includeMargin:!0});n.addClass("hidden");var r=[],l=n.find(">.dropdown"),d=2*parseInt(n.find(">a").css("padding-left")),c=d;ignoreResize.push(!0),e(),t(),ignoreResize.pop(),$(window).resize(function(){ignoreResize.push(!0),t(),ignoreResize.pop()})}),!funcDefined("checkCounters"),!funcDefined("addBasketCounter"),!funcDefined("purchaseCounter"),!funcDefined("viewItemCounter"),!funcDefined("checkoutCounter"),!funcDefined("delFromBasketCounter"),!funcDefined("setHeightCompany"),!funcDefined("initSly"),!funcDefined("createTableCompare"),funcDefined("fillBasketPropsExt")||(fillBasketPropsExt=function(e,t,a){var i=0,o=null,n=!1,s={},r=null;if(r=BX(a)){if(o=r.getElementsByTagName("select"),o&&o.length)for(i=0;i<o.length;i++)if(!o[i].disabled)switch(o[i].type.toLowerCase()){case"select-one":s[o[i].name]=o[i].value,n=!0}if(o=r.getElementsByTagName("input"),o&&o.length)for(i=0;i<o.length;i++)if(!o[i].disabled)switch(o[i].type.toLowerCase()){case"hidden":s[o[i].name]=o[i].value,n=!0;break;case"radio":o[i].checked&&(s[o[i].name]=o[i].value,n=!0)}}return n||(s[t]=[],s[t][0]=0),s}),funcDefined("showBasketError")||(showBasketError=function(e,t,a,i){var o=t?t:BX.message("ERROR_BASKET_TITLE"),n="N",s="";void 0!==typeof a&&(n="Y"),void 0!==typeof i&&(s=i),$("body").append("<span class='add-error-bakset' style='display:none;'></span>"),jqmEd("basket_error","error-bakset",".add-error-bakset",e,this,o,n,s),$("body .add-error-bakset").click(),$("body .add-error-bakset").remove()}),!funcDefined("isRealValue"),!funcDefined("rightScroll"),!funcDefined("leftScroll"),funcDefined("InitOrderCustom")||(InitOrderCustom=function(){$(".ps_logo img").wrap('<div class="image"></div>'),$("#bx-soa-order .radio-inline").each(function(){"checked"==$(this).find("input").attr("checked")&&$(this).addClass("checked")}),$("#bx-soa-order .checkbox input[type=checkbox]").each(function(){"checked"==$(this).attr("checked")&&$(this).parent().addClass("checked")}),$("#bx-soa-order .bx-authform-starrequired").each(function(){var e=$(this).html();$(this).closest("label").append('<span class="bx-authform-starrequired"> '+e+"</span>"),$(this).detach()}),$(".bx_ordercart_coupon").each(function(){$(this).find(".bad").length?$(this).addClass("bad"):$(this).find(".good").length&&$(this).addClass("good")})}),funcDefined("InitLabelAnimation")||(InitLabelAnimation=function(e){$(e).length&&($(e).find(".form-group").each(function(){$(this).find("input[type=text], textarea").length&&!$(this).find(".dropdown-block").length&&""!=$(this).find("input[type=text], textarea").val()&&$(this).addClass("value_y")}),$(document).on("click",e+" .form-group:not(.bx-soa-pp-field) label",function(){$(this).parent().find("input, textarea").focus()}),$(document).on("focusout",e+" .form-group:not(.bx-soa-pp-field) input, "+e+" .form-group:not(.bx-soa-pp-field) textarea",function(){var e=$(this).val();""==e||$(this).closest(".form-group").find(".dropdown-block").length||$(this).closest(".form-group").find("#profile_change").length?$(this).closest(".form-group").removeClass("value_y"):$(this).closest(".form-group").addClass("value_y")}),$(document).on("focus",e+" .form-group:not(.bx-soa-pp-field) input, "+e+" .form-group:not(.bx-soa-pp-field) textarea",function(){$(this).closest(".form-group").find(".dropdown-block").length||$(this).closest(".form-group").find("#profile_change").length||$(this).closest(".form-group").find("[name=PERSON_TYPE_OLD]").length||$(this).closest(".form-group").addClass("value_y")}))}),checkPopupWidth=function(){$(".popup.show").each(function(){var e=$(this).actual("width");$(this).css({"margin-left":$(window).width()>e?"-"+e/2+"px":"-"+$(window).width()/2+"px"})})},checkCaptchaWidth=function(){$(".captcha-row").each(function(){var e=$(this).actual("width");$(this).hasClass("b")?e>320&&$(this).removeClass("b"):320>=e&&$(this).addClass("b")})},checkFormWidth=function(){$(".form .form_left").each(function(){var e=$(this).parents(".form"),t=e.actual("width");e.hasClass("b")?t>417&&e.removeClass("b"):417>=t&&e.addClass("b")})},checkFormControlWidth=function(){$(".form-control").each(function(){var e=$(this).actual("width"),t=$(this).find("label:not(.error) > span").actual("width"),a=$(this).find("label.error").actual("width");a>0?$(this).hasClass("h")?e>t+a+5&&$(this).removeClass("h"):t+a+5>=e&&$(this).addClass("h"):$(this).removeClass("h")})},scrollToTop=function(){if("NONE"!==arOptimusOptions.THEME.SCROLLTOTOP_TYPE){var e=!1;$("body").append($("<a />").addClass("scroll-to-top "+arOptimusOptions.THEME.SCROLLTOTOP_TYPE+" "+arOptimusOptions.THEME.SCROLLTOTOP_POSITION).attr({href:"#",id:"scrollToTop"})),$("#scrollToTop").click(function(e){
return e.preventDefault(),$("body, html").animate({scrollTop:0},500),!1}),$(window).scroll(function(){e||(e=!0,$(window).scrollTop()>150?($("#scrollToTop").stop(!0,!0).addClass("visible"),e=!1):($("#scrollToTop").stop(!0,!0).removeClass("visible"),e=!1),checkScrollToTop())})}},checkScrollToTop=function(){var e=55,t=$(window).scrollTop(),a=$(window).height(),i=$("footer").offset().top+70;"CONTENT"==arOptimusOptions.THEME.SCROLLTOTOP_POSITION&&(warpperWidth=$("body > .wrapper > .wrapper_inner").width(),$("#scrollToTop").css("margin-left",Math.ceil(warpperWidth/2)+23)),t+a>i?$("#scrollToTop").css("bottom",e+t+a-i-0):parseInt($("#scrollToTop").css("bottom"))>e&&$("#scrollToTop").css("bottom",e)},CheckObjectsSizes=function(){$(".container iframe,.container object,.container video").each(function(){var e=$(this).attr("height"),t=$(this).attr("width");e&&t&&$(this).css("height",$(this).outerWidth()*e/t)})},!funcDefined("reloadTopBasket"))var reloadTopBasket=function(e,t,a,i,o,n){var s={PARAMS:$("#top_basket_params").val(),ACTION:e};"undefined"!=typeof n&&(s.delete_top_item="Y",s.delete_top_item_id=n.data("id")),$.post(arOptimusOptions.SITE_DIR+"ajax/show_basket_popup.php",s,$.proxy(function(e){$(t).html(e),getActualBasket(),"N"!==arOptimusOptions.THEME.SHOW_BASKET_ONADDTOCART&&$(window).outerWidth()>520&&("Y"==o&&$(t).find(".basket_popup_wrapp").stop(!0,!0).slideDown(a),clearTimeout(basketTimeoutSlide),basketTimeoutSlide=setTimeout(function(){var e=$("#basket_line").find(".basket_popup_wrapp");e.is(":hover")?e.show():$("#basket_line").find(".basket_popup_wrapp").slideUp(a)},i))}))};if(!funcDefined("initCountdown"))var initCountdown=function(){$(".view_sale_block").size()&&$(".view_sale_block").each(function(){var e=$(this).find(".active_to").text(),t=new Date(e.replace(/(\d+)\.(\d+)\.(\d+)/,"$3/$2/$1"));$(this).find(".countdown").countdown({until:t,format:"dHMS",padZeroes:!0,layout:'{d<}<span class="days item">{dnn}<div class="text">{dl}</div></span>{d>} <span class="hours item">{hnn}<div class="text">{hl}</div></span> <span class="minutes item">{mnn}<div class="text">{ml}</div></span> <span class="sec item">{snn}<div class="text">{sl}</div></span>'},$.countdown.regionalOptions.ru)})};var isOnceInited=insertFilter=!1,animationTime=200,delayTime=200,topMenuEnterTimer=!1,isMobile=jQuery.browser.mobile;if(isMobile&&(document.documentElement.className+=" mobile"),!funcDefined("checkVerticalMobileFilter"))var checkVerticalMobileFilter=function(){if($(".right_block1.catalog.vertical").length){if("undefined"!=typeof window.trackBarOptions){window.trackBarValues={};for(key in window.trackBarOptions)window.trackBarValues[key]={leftPercent:window["trackBar"+key].leftPercent,leftValue:window["trackBar"+key].minInput.value,rightPercent:window["trackBar"+key].rightPercent,rightValue:window["trackBar"+key].maxInput.value}}if(window.matchMedia("(max-width: 950px)").matches?insertFilter||($(".js_filter .bx_filter.bx_filter_vertical").html($(".left_block .bx_filter.bx_filter_vertical").html()),$(".left_block .bx_filter.bx_filter_vertical .bx_filter_section").remove(),insertFilter=!0):insertFilter&&($(".left_block .bx_filter.bx_filter_vertical").html($(".js_filter .bx_filter.bx_filter_vertical").html()),$(".js_filter .bx_filter.bx_filter_vertical .bx_filter_section").remove(),insertFilter=!1),"undefined"!=typeof window.trackBarOptions)for(key in window.trackBarOptions)window.trackBarOptions[key].leftPercent=window.trackBarValues[key].leftPercent,window.trackBarOptions[key].rightPercent=window.trackBarValues[key].rightPercent,window.trackBarOptions[key].curMinPrice=window.trackBarValues[key].leftValue,window.trackBarOptions[key].curMaxPrice=window.trackBarValues[key].rightValue,window["trackBar"+key]=new BX.Iblock.SmartFilter(window.trackBarOptions[key]),window["trackBar"+key].minInput.value=window.trackBarValues[key].leftValue,window["trackBar"+key].maxInput.value=window.trackBarValues[key].rightValue}};$(document).on("click",".menu_top_block>li .more a",function(){$this=$(this),$this.parents(".dropdown").first().find(">.hidden").removeClass("hidden"),$this.parent().addClass("hidden"),setTimeout(function(){$this.parent().remove()},500)}),$(document).on("mouseenter",".menu_top_block.catalogfirst>li>.dropdown>li.full",function(){var e=$(this).find(">.dropdown");e.length&&topMenuEnterTimer&&(clearTimeout(topMenuEnterTimer),topMenuEnterTimer=!1)}),$(document).on("mouseenter",".menu_top_block>li:not(.full)",function(){var e=$(this).find(">.dropdown");if(e.length&&!e.hasClass("visible")){var t=$(this).parents(".menu"),a=t.parents(".wrap_menu"),i=a.actual("outerWidth"),o=a.offset().left,n=o+i,s=n-($(this).offset().left+e.actual("outerWidth"));if(window.matchMedia("(min-width: 951px)").matches&&$(this).hasClass("catalog")&&($(".banner_auto").hasClass("catalog_page")||$(".banner_auto").hasClass("front_page")))return;0>s&&e.css({left:s+"px"}),e.stop().slideDown(animationTime,function(){e.css({height:"",overflow:"visible"})}),$(this).on("mouseleave",function(){var t=setTimeout(function(){e.stop().slideUp(animationTime,function(){e.css({left:""})})},delayTime);$(this).on("mouseenter",function(){t&&(clearTimeout(t),t=!1)})})}}),$(document).on("mouseenter",".menu_top_block>li .dropdown>li",function(){var e=$(this),t=e.find(">.dropdown");if(t.length&&(!e.parents(".full").length&&!e.hasClass("full")||e.parents(".more").length)){var a=e.parents(".menu"),o=a.parents(".wrap_menu"),n=[];topMenuEnterTimer=setTimeout(function(){var a=o.actual("outerWidth"),i=o.offset().left,s=i+a,r=e.parent(),l=r.hasClass("toleft")?!0:!1;l=l?e.offset().left+e.actual("outerWidth")-t.actual("outerWidth")<i:e.offset().left+e.actual("outerWidth")+t.actual("outerWidth")>s,l?e.find(">.dropdown").addClass("toleft").show():e.find(">.dropdown").removeClass("toleft").show();var d=t.offset().left,c=d+t.actual("outerWidth");e.parents(".dropdown").each(function(){var e=$(this),t=e.offset().left,a=t+e.actual("outerWidth");(t>=d&&c-1>t||a>d+1&&c>=a)&&(n.push(e),e.find(">li>a").css({opacity:"0.1"}))})},delayTime),e.unbind("mouseleave"),e.on("mouseleave",function(){var t=setTimeout(function(){if(e.find(".dropdown").removeClass("toleft").hide(),n.length)for(i in n)n[i].find(">li>a").css({opacity:""})},delayTime);e.unbind("mouseenter"),e.on("mouseenter",function(){t&&(clearTimeout(t),t=!1)})})}}),getGridSize=function(e){var t=1;return window.matchMedia("(min-width: 1200px)").matches&&(t=e[0]),window.matchMedia("(max-width: 1200px)").matches&&(t=e[1]),window.matchMedia("(max-width: 992px)").matches&&(t=e[2]),e[3]&&window.matchMedia("(max-width: 600px)").matches&&(t=e[3]),e[4]&&window.matchMedia("(max-width: 400px)").matches&&(t=e[4]),t},CheckFlexSlider=function(){$(".flexslider:not(.thmb)").each(function(){var e=$(this);e.resize();var t=e.data("flexslider").vars.counts;if("undefined"!=typeof t){var a=getGridSize(t),i=a!=e.data("flexslider").vars.minItems||a!=e.data("flexslider").vars.maxItems||a!=e.data("flexslider").vars.move;i&&(e.data("flexslider").vars.minItems=a,e.data("flexslider").vars.maxItems=a,e.data("flexslider").vars.move=a,e.flexslider(0),e.resize(),e.resize())}})},InitFlexSlider=function(){$(".flexslider:not(.thmb):not(.flexslider-init)").each(function(){var e,t=$(this),a={animationLoop:!1,controlNav:!1,directionNav:!0,animation:"slide"},i=$.extend({},a,e,t.data("plugin-options"));t.parent().hasClass("top_slider_wrapp")||("undefined"!=typeof i.counts&&"vertical"!==i.direction&&(i.maxItems=getGridSize(i.counts),i.minItems=getGridSize(i.counts),i.move=getGridSize(i.counts),i.itemWidth=200),i.after=i.start=function(e){var t={slider:e};BX.onCustomEvent("onSlide",[t])},i.end=function(e){var t={slider:e};BX.onCustomEvent("onSlideEnd",[t])},t.flexslider(i).addClass("flexslider-init"),i.controlNav&&t.addClass("flexslider-control-nav"),i.directionNav&&t.addClass("flexslider-direction-nav"))})},InitZoomPict=function(){if($(".zoom_picture").length){var e,t=($(".zoom_picture").closest(".slides"),$(".zoom_picture")),a={zoomWidth:200,zoomHeight:200,adaptive:!1,title:!0,Xoffset:15},i=$.extend({},a,e,t.data("plugin-options"));t.xzoom(i)}};var arBasketAsproCounters={};SetActualBasketFlyCounters=function(){1==arBasketAsproCounters.DEFAULT?$.ajax({url:arOptimusOptions.SITE_DIR+"ajax/basket_fly.php",type:"post",success:function(e){$("#basket_line .basket_fly").addClass("loaded").html(e)}}):($("#header .basket_fly .opener .basket_count .count").attr("class","count"+(arBasketAsproCounters.READY.COUNT>0?"":" empty_items")).find(".items span").text(arBasketAsproCounters.READY.COUNT),$("#header .basket_fly .opener .basket_count + a").attr("href",arBasketAsproCounters.READY.HREF),$("#header .basket_fly .opener .basket_count").attr("title",arBasketAsproCounters.READY.TITLE).attr("class","basket_count small clicked"+(arBasketAsproCounters.READY.COUNT>0?"":" empty")),$("#header .basket_fly .opener .wish_count .count").attr("class","count"+(arBasketAsproCounters.DELAY.COUNT>0?"":" empty_items")).find(".items span").text(arBasketAsproCounters.DELAY.COUNT),$("#header .basket_fly .opener .wish_count + a").attr("href",arBasketAsproCounters.DELAY.HREF),$("#header .basket_fly .opener .wish_count").attr("title",arBasketAsproCounters.DELAY.TITLE).attr("class","wish_count small clicked"+(arBasketAsproCounters.DELAY.COUNT>0?"":" empty")),$("#header .basket_fly .opener .compare_count .count").attr("class","count"+(arBasketAsproCounters.COMPARE.COUNT>0?"":" empty_items")).find(".items span").text(arBasketAsproCounters.COMPARE.COUNT),$("#header .basket_fly .opener .compare_count + a").attr("href",arBasketAsproCounters.COMPARE.HREF),$("#header .basket_fly .opener .user_block").attr("title",arBasketAsproCounters.PERSONAL.TITLE).find("+ a").attr("href",arBasketAsproCounters.PERSONAL.HREF),$("#header .basket_fly .opener .user_block .wraps_icon_block").attr("class","wraps_icon_block"+(arBasketAsproCounters.PERSONAL.ID>0?" user_auth":" user_reg")+(arBasketAsproCounters.PERSONAL.SRC?" w_img":" no_img")).attr("style",arBasketAsproCounters.PERSONAL.SRC?'background:url("'+arBasketAsproCounters.PERSONAL.SRC+'") center center no-repeat;':""))},$(document).ready(function(){if(arOptimusOptions.PAGES.ORDER_PAGE){var e=parseUrlQuery();if("ORDER_ID"in e){var t=e.ORDER_ID;if("N"!==arOptimusOptions.COUNTERS.USE_FULLORDER_GOALS){var a={goal:"goal_order_success",result:t};BX.onCustomEvent("onCounterGoals",[a])}if(checkCounters()&&"undefined"!=typeof BX.localStorage){var i=BX.localStorage.get("gtm_e_"+t);"object"==typeof i&&dataLayer.push({ecommerce:i}),"undefined"!=typeof localStorage&&localStorage.removeItem("gtm_e_"+t)}}}"Y"===arOptimusOptions.COUNTERS.USE_DEBUG_GOALS?$.cookie("_ym_debug",1,{path:"/"}):$.cookie("_ym_debug",null,{path:"/"}),scrollToTop(),checkVerticalMobileFilter(),checkFormWidth(),setTimeout(function(){InitTopestMenuGummi(),InitTopMenuGummi(),isOnceInited=!0,InitFlexSlider();try{$("header .wrap_menu").css({overflow:"visible"}),$(".visible_on_ready").removeClass("visible_on_ready")}catch(e){console.error(e)}},100),InitZoomPict(),$("body").on("click",".captcha_reload",function(e){var t=$(this).parents(".captcha-row");e.preventDefault(),$.ajax({url:arOptimusOptions.SITE_DIR+"ajax/captcha.php"}).done(function(e){t.find("input[name=captcha_sid]").val(e),t.find("img").attr("src","/bitrix/tools/captcha.php?captcha_sid="+e),t.find("input[name=captcha_word]").val("").removeClass("error"),t.find(".captcha_input").removeClass("error").find(".error").remove()})}),setTimeout(function(){$(".bg_image_site").css({opacity:1})},200),window.matchMedia("(min-width: 768px)").matches&&$(".wrapper_middle_menu.wrap_menu").removeClass("mobile"),window.matchMedia("(max-width: 767px)").matches&&$(".wrapper_middle_menu.wrap_menu").addClass("mobile"),setTimeout(function(){$(window).scroll()},400),$(".show_props").live("click",function(){$(this).prev(".props_list_wrapp").stop().slideToggle(333),$(this).find(".char_title").toggleClass("opened")}),$(".see_more").live("click",function(e){e.preventDefault();var t=$(this).is(".see_more")?$(this):$(this).parents(".see_more").first(),a=t.find("> a").length?t.find("> a"):t,i=t.parent().find("> .d");return t.hasClass("open")?(a.text(BX.message("CATALOG_VIEW_MORE")),t.removeClass("open"),i.hide()):(a.text(BX.message("CATALOG_VIEW_LESS")),t.addClass("open"),i.show()),!1}),$(".button.faq_button").click(function(e){e.preventDefault(),$(this).toggleClass("opened"),$(".faq_ask .form").slideToggle()}),$(".staff.list .staff_section .staff_section_title a").click(function(e){e.preventDefault(),$(this).parents(".staff_section").toggleClass("opened"),$(this).parents(".staff_section").find(".staff_section_items").stop().slideToggle(600),$(this).parents(".staff_section_title").find(".opener_icon").toggleClass("opened")}),$(".jobs_wrapp .item .name").click(function(e){$(this).closest(".item").toggleClass("opened"),$(this).closest(".item").find(".description_wrapp").stop().slideToggle(600),$(this).closest(".item").find(".opener_icon").toggleClass("opened")}),$(".faq.list .item .q a").live("click",function(e){e.preventDefault(),$(this).parents(".item").toggleClass("opened"),$(this).parents(".item").find(".a").stop().slideToggle(),$(this).parents(".item").find(".q .opener_icon").toggleClass("opened")}),$(".opener_icon").click(function(e){e.preventDefault(),$(this).parent().find("a").trigger("click")}),$(".to-order").live("click",function(e){e.preventDefault(),$("body").append("<span class='evb-toorder' style='display:none;'></span>"),jqmEd("to-order",arOptimusOptions.FORM.TOORDER_FORM_ID,".evb-toorder","",this),$("body .evb-toorder").click(),$("body .evb-toorder").remove()}),$(".dotdot").dotdotdot(),$(".more_block span").live("click",function(){var e=$(".catalog_detail .tabs_section").offset();$("html, body").animate({scrollTop:e.top-23},400)}),$(".counter_block:not(.basket) .plus").live("click",function(){if(!$(this).parents(".basket_wrapp").length&&"Y"!=$(this).parent().data("offers")){var e=$(this).parents(".counter_block_wr").length;input=$(this).parents(".counter_block").find("input[type=text]"),tmp_ratio=e?$(this).parents("tr").first().find("td.buy .to-cart").data("ratio"):$(this).parents(".counter_wrapp").find(".to-cart").data("ratio"),isDblQuantity=e?$(this).parents("tr").first().find("td.buy .to-cart").data("float_ratio"):$(this).parents(".counter_wrapp").find(".to-cart").data("float_ratio"),ratio=isDblQuantity?parseFloat(tmp_ratio):parseInt(tmp_ratio,10),max_value="",currentValue=input.val(),isDblQuantity&&(ratio=Math.round(ratio*arOptimusOptions.JS_ITEM_CLICK.precisionFactor)/arOptimusOptions.JS_ITEM_CLICK.precisionFactor),curValue=isDblQuantity?parseFloat(currentValue):parseInt(currentValue,10),curValue+=ratio,isDblQuantity&&(curValue=Math.round(curValue*arOptimusOptions.JS_ITEM_CLICK.precisionFactor)/arOptimusOptions.JS_ITEM_CLICK.precisionFactor),parseFloat($(this).data("max"))>0?input.val()<$(this).data("max")&&(curValue>$(this).data("max")?input.val($(this).data("max")):input.val(curValue),input.change()):(input.val(curValue),input.change())}}),$(".counter_block:not(.basket) .minus").live("click",function(){if(!$(this).parents(".basket_wrapp").length&&"Y"!=$(this).parent().data("offers")){var e=$(this).parents(".counter_block_wr").length;input=$(this).parents(".counter_block").find("input[type=text]"),tmp_ratio=e?$(this).parents("tr").first().find("td.buy .to-cart").data("ratio"):$(this).parents(".counter_wrapp").find(".to-cart").data("ratio"),isDblQuantity=e?$(this).parents("tr").first().find("td.buy .to-cart").data("float_ratio"):$(this).parents(".counter_wrapp").find(".to-cart").data("float_ratio"),ratio=isDblQuantity?parseFloat(tmp_ratio):parseInt(tmp_ratio,10),max_value="",currentValue=input.val(),isDblQuantity&&(ratio=Math.round(ratio*arOptimusOptions.JS_ITEM_CLICK.precisionFactor)/arOptimusOptions.JS_ITEM_CLICK.precisionFactor),curValue=isDblQuantity?parseFloat(currentValue):parseInt(currentValue,10),curValue-=ratio,isDblQuantity&&(curValue=Math.round(curValue*arOptimusOptions.JS_ITEM_CLICK.precisionFactor)/arOptimusOptions.JS_ITEM_CLICK.precisionFactor),parseFloat($(this).parents(".counter_block").find(".plus").data("max"))>0?currentValue>ratio&&(curValue<ratio?input.val(ratio):input.val(curValue),input.change()):(curValue>ratio?input.val(curValue):ratio?input.val(ratio):currentValue>1&&input.val(curValue),input.change())}}),$(".counter_block input[type=text]").numeric({allow:"."}),$(".counter_block input[type=text]").live("focus",function(){$(this).addClass("focus")}),$(".counter_block input[type=text]").live("blur",function(){$(this).removeClass("focus")}),$(".counter_block input[type=text]").live("change",function(e){if(!$(this).parents(".basket_wrapp").length){var t=$(this).val(),a=$(this).parents(".counter_wrapp").find(".to-cart").data("ratio")?$(this).parents(".counter_wrapp").find(".to-cart").data("ratio"):$(this).parents("tr").first().find("td.buy .to-cart").data("ratio"),i=$(this).parents(".counter_wrapp").find(".to-cart").data("float_ratio")?$(this).parents(".counter_wrapp").find(".to-cart").data("float_ratio"):$(this).parents("tr").first().find("td.buy .to-cart").data("float_ratio"),o=i?parseFloat(a):parseInt(a,10);i&&(o=Math.round(o*arOptimusOptions.JS_ITEM_CLICK.precisionFactor)/arOptimusOptions.JS_ITEM_CLICK.precisionFactor),$(this).hasClass("focus")&&(t-=t%o),parseFloat($(this).parents(".counter_block").find(".plus").data("max"))>0&&t>parseFloat($(this).parents(".counter_block").find(".plus").data("max"))&&(t=parseFloat($(this).parents(".counter_block").find(".plus").data("max")),t-=t%o),o>t?t=o:parseFloat(t)||(t=1),$(this).parents(".counter_block").parent().parent().find(".to-cart").attr("data-quantity",t),$(this).parents(".counter_block").parent().parent().find(".one_click").attr("data-quantity",t),$(this).val(t)}}),$(document).on("mouseenter","#basket_line .basket_normal:not(.empty_cart):not(.bcart) .basket_block ",function(){$(this).closest(".basket_normal").find(".popup").addClass("block"),$(this).closest(".basket_normal").find(".basket_popup_wrapp").stop(!0,!0).slideDown(150)}),$(document).on("mouseleave","#basket_line .basket_normal .basket_block ",function(){var e=$(this);$(this).closest(".basket_normal").find(".basket_popup_wrapp").stop(!0,!0).slideUp(150,function(){e.closest(".basket_normal").find(".popup").removeClass("block")})}),$(document).on("click",".popup_button_basket",function(){var e=$(".to-cart[data-item="+$(this).data("item")+"]"),t=e.attr("data-quantity");t||($val=1);var a=e.data("props"),i="",o="",n="N",s={},r=e.data("iblockid"),l=e.data("offers"),d="",c="",u=e.attr("data-item");"Y"!=l?l="N":c=e.closest(".prices_tab").find(".bx_sku_props input").val(),a&&(i=a.split(";")),e.data("part_props")&&(o=e.data("part_props")),e.data("add_props")&&(n=e.data("add_props")),$(".rid_item").length?d=$(".rid_item").data("rid"):e.data("rid")&&(d=e.data("rid")),s=fillBasketPropsExt(e,"prop","bx_ajax_text"),s.quantity=t,s.add_item="Y",s.rid=d,s.offers=l,s.iblockID=r,s.part_props=o,s.add_props=n,s.props=JSON.stringify(i),s.item=u,s.basket_props=c,$.ajax({type:"POST",url:arOptimusOptions.SITE_DIR+"ajax/item.php",data:s,dataType:"json",success:function(t){$(".basket_error_frame").jqmHide(),"STATUS"in t?(getActualBasket(s.iblockID),"OK"===t.STATUS?(e.hide(),e.closest(".counter_wrapp").find(".counter_block").hide(),e.parents("tr").find(".counter_block_wr .counter_block").hide(),e.closest(".button_block").addClass("wide"),e.parent().find(".in-cart").show(),addBasketCounter(u),$(".wish_item[data-item="+u+"]").removeClass("added"),$(".wish_item[data-item="+u+"]").find(".value").show(),$(".wish_item[data-item="+u+"]").find(".value.added").hide(),$("#basket_line .cart").length?($("#basket_line .cart").is(".empty_cart")&&($("#basket_line .cart").removeClass("empty_cart").find(".cart_wrapp a.basket_link").removeAttr("href").addClass("cart-call"),$("#basket_line .cart").removeClass("ecart"),touchBasket(".cart:not(.empty_cart) .basket_block .link")),reloadTopBasket("add",$("#basket_line"),200,5e3,"Y")):$("#basket_line .basket_fly").length&&basketFly($(window).outerWidth()>768?"open":"refresh")):showBasketError(BX.message(t.MESSAGE))):showBasketError(BX.message("CATALOG_PARTIAL_BASKET_PROPERTIES_ERROR"))}})}),$(document).on("click",".to-cart:not(.read_more)",function(e){e.preventDefault();var t=$(this),a=$(this).attr("data-quantity");a||($val=1);var i=$(this).data("props"),o="",n="",s="N",r={},l=$(this).data("iblockid"),d=$(this).data("offers"),c="",u="",p=$(this).attr("data-item");"Y"!=d?d="N":u=$(this).closest(".prices_tab").find(".bx_sku_props input").val(),i&&(o=i.split(";")),$(this).data("part_props")&&(n=$(this).data("part_props")),$(this).data("add_props")&&(s=$(this).data("add_props")),$(".rid_item").length?c=$(".rid_item").data("rid"):$(this).data("rid")&&(c=$(this).data("rid")),r=fillBasketPropsExt(t,"prop",t.data("bakset_div")),r.quantity=a,r.add_item="Y",r.rid=c,r.offers=d,r.iblockID=l,r.part_props=n,r.add_props=s,r.props=JSON.stringify(o),r.item=p,r.basket_props=u,"N"==t.data("empty_props")?showBasketError($("#"+t.data("bakset_div")).html(),BX.message("ERROR_BASKET_PROP_TITLE"),"Y",t):$.ajax({type:"POST",url:arOptimusOptions.SITE_DIR+"ajax/item.php",data:r,dataType:"json",success:function(e){getActualBasket(r.iblockID),null!==e?"STATUS"in e?(null===e.MESSAGE_EXT&&(e.MESSAGE_EXT=""),"OK"===e.STATUS?(t.hide(),t.closest(".counter_wrapp").find(".counter_block").hide(),t.parents("tr").find(".counter_block_wr .counter_block").hide(),t.closest(".button_block").addClass("wide"),t.parent().find(".in-cart").show(),addBasketCounter(p),$(".wish_item[data-item="+p+"]").removeClass("added"),$(".wish_item[data-item="+p+"]").find(".value").show(),$(".wish_item[data-item="+p+"]").find(".value.added").hide(),$("#basket_line .cart").length?($("#basket_line .cart").is(".empty_cart")&&($("#basket_line .cart").removeClass("empty_cart").find(".cart_wrapp a.basket_link").removeAttr("href").addClass("cart-call"),$("#basket_line .cart").removeClass("ecart"),touchBasket(".cart:not(.empty_cart) .basket_block .link")),reloadTopBasket("add",$("#basket_line"),200,5e3,"Y")):$("#basket_line .basket_fly").length&&basketFly($(window).outerWidth()>768?"open":"refresh")):showBasketError(BX.message(e.MESSAGE)+" <br/>"+e.MESSAGE_EXT)):showBasketError(BX.message("CATALOG_PARTIAL_BASKET_PROPERTIES_ERROR")):(t.hide(),t.closest(".counter_wrapp").find(".counter_block").hide(),t.parents("tr").find(".counter_block_wr .counter_block").hide(),t.closest(".button_block").addClass("wide"),t.parent().find(".in-cart").show(),addBasketCounter(p),$(".wish_item[data-item="+p+"]").removeClass("added"),$(".wish_item[data-item="+p+"]").find(".value").show(),$(".wish_item[data-item="+p+"]").find(".value.added").hide(),$("#basket_line .cart").length?($("#basket_line .cart").is(".empty_cart")&&($("#basket_line .cart").removeClass("empty_cart").find(".cart_wrapp a.basket_link").removeAttr("href").addClass("cart-call"),$("#basket_line .cart").removeClass("ecart"),touchBasket(".cart:not(.empty_cart) .basket_block .link")),reloadTopBasket("add",$("#basket_line"),200,5e3,"Y")):$("#basket_line .basket_fly").length&&$(window).outerWidth()>768&&basketFly("open"))}})}),$(document).on("click",".to-subscribe",function(e){if(e.preventDefault(),$(this).is(".auth"))location.href=arOptimusOptions.SITE_DIR+"auth/?backurl="+location.pathname;else{var t=$(this).attr("data-item"),a=$(this).attr("data-iblockid");$(this).hide(),$(this).parent().find(".in-subscribe").show(),$.get(arOptimusOptions.SITE_DIR+"ajax/item.php?item="+t+"&subscribe_item=Y",$.proxy(function(e){$(".wish_item[data-item="+t+"]").removeClass("added"),getActualBasket(a)}))}}),$(document).on("click",".in-subscribe",function(e){e.preventDefault();var t=$(this).attr("data-item"),a=$(this).attr("data-iblockid");$(this).hide(),$(this).parent().find(".to-subscribe").show(),$.get(arOptimusOptions.SITE_DIR+"ajax/item.php?item="+t+"&subscribe_item=Y",$.proxy(function(e){getActualBasket(a)}))}),$(document).on("click",".wish_item",function(e){e.preventDefault();var t=$(this).attr("data-quantity"),a=$(this).data("offers"),i=$(this).data("iblock"),o=$(this).data("props"),n="",s=$(this).data("item");item2=$(this).attr("data-item"),t||($val=1),"Y"!=a&&(a="N"),o&&(n=o.split(";")),$(this).hasClass("text")?$(this).hasClass("added")?($(".wish_item[data-item="+s+"]").removeClass("added"),$(".wish_item[data-item="+s+"]").find(".value").show(),$(".wish_item[data-item="+s+"]").find(".value.added").hide(),$(".like_icons").each(function(){$(this).find(".wish_item_button").length&&($(this).find(".wish_item_button").find('.wish_item[data-item="'+s+'"]').removeClass("added"),$(this).find(".wish_item_button").find('.wish_item[data-item="'+s+'"]').find(".value").show(),$(this).find(".wish_item_button").find('.wish_item[data-item="'+s+'"]').find(".value.added").hide())})):($(".wish_item[data-item="+s+"]").addClass("added"),$(".wish_item[data-item="+s+"]").find(".value").hide(),$(".wish_item[data-item="+s+"]").find(".value.added").css("display","block"),$(".like_icons").each(function(){$(this).find(".wish_item_button").length&&($(this).find(".wish_item_button").find('.wish_item[data-item="'+s+'"]').addClass("added"),$(this).find(".wish_item_button").find('.wish_item[data-item="'+s+'"]').find(".value").hide(),$(this).find(".wish_item_button").find('.wish_item[data-item="'+s+'"]').find(".value.added").show())})):$(this).hasClass("added")?($(this).hide(),$(this).closest(".wish_item_button").find(".to").show(),$(".like_icons").each(function(){$(this).find('.wish_item.text[data-item="'+s+'"]').length&&($(this).find('.wish_item.text[data-item="'+s+'"]').removeClass("added"),$(this).find('.wish_item.text[data-item="'+s+'"]').find(".value").show(),$(this).find('.wish_item.text[data-item="'+s+'"]').find(".value.added").hide()),$(this).find(".wish_item_button").length&&($(this).find(".wish_item_button").find('.wish_item[data-item="'+s+'"]').removeClass("added"),$(this).find(".wish_item_button").find('.wish_item[data-item="'+s+'"]').find(".value").show(),$(this).find(".wish_item_button").find('.wish_item[data-item="'+s+'"]').find(".value.added").hide())})):($(this).hide(),$(this).closest(".wish_item_button").find(".in").addClass("added").show(),$(".like_icons").each(function(){$(this).find('.wish_item.text[data-item="'+s+'"]').length&&($(this).find('.wish_item.text[data-item="'+s+'"]').addClass("added"),$(this).find('.wish_item.text[data-item="'+s+'"]').find(".value").hide(),$(this).find('.wish_item.text[data-item="'+s+'"]').find(".value.added").css({display:"block"})),$(this).find(".wish_item_button").length&&($(this).find(".wish_item_button").find('.wish_item[data-item="'+s+'"]').addClass("added"),$(this).find(".wish_item_button").find('.wish_item[data-item="'+s+'"]').find(".value").hide(),$(this).find(".wish_item_button").find('.wish_item[data-item="'+s+'"]').find(".value.added").show())})),$(".in-cart[data-item="+s+"]").hide(),$(".to-cart[data-item="+s+"]").parent().removeClass("wide"),$(".to-cart[data-item="+s+"]").show(),$(".counter_block[data-item="+s+"]").show(),$(this).closest(".module-cart").size()||$.ajax({type:"GET",url:arOptimusOptions.SITE_DIR+"ajax/item.php",data:"item="+item2+"&quantity="+t+"&wish_item=Y&offers="+a+"&iblockID="+i+"&props="+JSON.stringify(n),dataType:"json",success:function(e){if(getActualBasket(i),null!==e)if(null===e.MESSAGE_EXT&&(e.MESSAGE_EXT=""),"STATUS"in e)if("OK"===e.STATUS){if("N"!==arOptimusOptions.COUNTERS.USE_BASKET_GOALS){var t={goal:"goal_wish_add",params:{id:item2}};BX.onCustomEvent("onCounterGoals",[t])}$("#basket_line .cart").size()?reloadTopBasket("wish",$("#basket_line"),200,5e3,"N"):basketFly("wish")}else showBasketError(BX.message(e.MESSAGE)+" <br/>"+e.MESSAGE_EXT,BX.message("ERROR_ADD_DELAY_ITEM"));else showBasketError(BX.message(e.MESSAGE)+" <br/>"+e.MESSAGE_EXT,BX.message("ERROR_ADD_DELAY_ITEM"));else $("#basket_line .cart").size()?reloadTopBasket("wish",$("#basket_line"),200,5e3,"N"):basketFly("wish")}})}),$(document).on("click",".compare_item",function(e){e.preventDefault();var t=$(this).attr("data-item"),a=$(this).attr("data-iblock");$(this).hasClass("text")?$(this).hasClass("added")?($(".compare_item[data-item="+t+"]").removeClass("added"),$(".compare_item[data-item="+t+"]").find(".value").show(),$(".compare_item[data-item="+t+"]").find(".value.added").hide(),$(".like_icons").each(function(){$(this).find(".compare_item_button").length&&($(this).find(".compare_item_button").find('.compare_item[data-item="'+t+'"]').removeClass("added"),$(this).find(".compare_item_button").find('.compare_item[data-item="'+t+'"]').find(".value").show(),$(this).find(".compare_item_button").find('.compare_item[data-item="'+t+'"]').find(".value.added").hide())})):($(".compare_item[data-item="+t+"]").addClass("added"),$(".compare_item[data-item="+t+"]").find(".value").hide(),$(".compare_item[data-item="+t+"]").find(".value.added").css("display","block"),$(".like_icons").each(function(){$(this).find(".compare_item_button").length&&($(this).find(".compare_item_button").find('.compare_item[data-item="'+t+'"]').addClass("added"),$(this).find(".compare_item_button").find('.compare_item[data-item="'+t+'"]').find(".value.added").show(),$(this).find(".compare_item_button").find('.compare_item[data-item="'+t+'"]').find(".value").hide())})):$(this).hasClass("added")?($(this).hide(),$(this).closest(".compare_item_button").find(".to").show(),$(".like_icons").each(function(){$(this).find('.compare_item.text[data-item="'+t+'"]').length&&($(this).find('.compare_item.text[data-item="'+t+'"]').removeClass("added"),$(this).find('.compare_item.text[data-item="'+t+'"]').find(".value").show(),$(this).find('.compare_item.text[data-item="'+t+'"]').find(".value.added").hide()),$(this).find(".compare_item_button").length&&($(this).find(".compare_item_button").find('.compare_item[data-item="'+t+'"]').removeClass("added"),$(this).find(".compare_item_button").find('.compare_item[data-item="'+t+'"]').find(".value").show(),$(this).find(".compare_item_button").find('.compare_item[data-item="'+t+'"]').find(".value.added").hide())})):($(this).hide(),$(this).closest(".compare_item_button").find(".in").show(),$(".like_icons").each(function(){$(this).find('.compare_item.text[data-item="'+t+'"]').length&&($(this).find('.compare_item.text[data-item="'+t+'"]').addClass("added"),$(this).find('.compare_item.text[data-item="'+t+'"]').find(".value").hide(),$(this).find('.compare_item.text[data-item="'+t+'"]').find(".value.added").css({display:"block"})),$(this).find(".compare_item_button").length&&($(this).find(".compare_item_button").find('.compare_item[data-item="'+t+'"]').addClass("added"),$(this).find(".compare_item_button").find('.compare_item[data-item="'+t+'"]').find(".value.added").show(),$(this).find(".compare_item_button").find('.compare_item[data-item="'+t+'"]').find(".value").hide())})),$.get(arOptimusOptions.SITE_DIR+"ajax/item.php?item="+t+"&compare_item=Y&iblock_id="+a,$.proxy(function(e){getActualBasket(a),jsAjaxUtil.InsertDataToNode(arOptimusOptions.SITE_DIR+"ajax/show_compare_preview_top.php","compare_line",!1),$("#compare_fly").length&&jsAjaxUtil.InsertDataToNode(arOptimusOptions.SITE_DIR+"ajax/show_compare_preview_fly.php","compare_fly",!1)}))}),$(".fancy").fancybox({openEffect:"fade",closeEffect:"fade",nextEffect:"fade",prevEffect:"fade",tpl:{closeBtn:'<a title="'+BX.message("FANCY_CLOSE")+'" class="fancybox-item fancybox-close" href="javascript:;"></a>',next:'<a title="'+BX.message("FANCY_NEXT")+'" class="fancybox-nav fancybox-next" href="javascript:;"><span></span></a>',prev:'<a title="'+BX.message("FANCY_PREV")+'" class="fancybox-nav fancybox-prev" href="javascript:;"><span></span></a>'}}),$(".tabs>li").on("click",function(){if(!$(this).hasClass("active")){var e=$(this).index(),t=$(this).closest(".top_blocks").find(".slider_navigation").find(">li:eq("+e+")"),a=$(this).closest(".top_blocks").siblings(".tabs_content").find(">li:eq("+e+")");$(this).addClass("active").addClass("cur").siblings().removeClass("active").removeClass("cur"),
a.addClass("cur").siblings().removeClass("cur"),t.addClass("cur").siblings().removeClass("cur"),a.find(".catalog_block .catalog_item_wrapp .catalog_item .item_info:visible .item-title").sliceHeight({item:".catalog_item:visible"}),a.find(".catalog_block .catalog_item_wrapp .catalog_item .item_info:visible").sliceHeight({classNull:".footer_button",item:".catalog_item:visible"}),a.find(".catalog_block .catalog_item_wrapp .catalog_item:visible").sliceHeight({classNull:".footer_button",item:".catalog_item:visible"})}}),$(".search_block .icon").on("click",function(){var e=$(this);$(this).hasClass("open")?($(this).closest(".center_block").find(".search_middle_block").removeClass("active"),$(this).removeClass("open"),$(this).closest(".center_block").find(".search_middle_block").find(".noborder").hide()):(setTimeout(function(){e.closest(".center_block").find(".search_middle_block").find(".noborder").show()},100),$(this).closest(".center_block").find(".search_middle_block").addClass("active"),$(this).addClass("open"))}),$(document).on("mouseenter",".display_list .item_wrap",function(){$(this).prev().addClass("prev")}),$(document).on("mouseleave",".display_list .item_wrap",function(){$(this).prev().removeClass("prev")}),$(document).on("mouseenter",".catalog_block .item_wrap",function(){$(this).addClass("shadow_delay")}),$(document).on("mouseleave",".catalog_block .item_wrap",function(){$(this).removeClass("shadow_delay")}),$(document).on("click",".no_goods .button",function(){$(".bx_filter .smartfilter .bx_filter_search_reset").trigger("click")}),$(document).on("click",".ajax_load_btn",function(){var e=$(this).closest(".right_block").find(".module-pagination .flex-direction-nav .flex-next").attr("href"),t=$(this).find(".more_text_ajax");t.addClass("loading"),$.ajax({url:e,data:{ajax_get:"Y"},success:function(e){$.parseHTML(e);t.removeClass("loading"),$(".display_list").length?$(".display_list").append(e):$(".block_list").length?($(".block_list").append(e),touchItemBlock(".catalog_item a")):$(".module_products_list").length&&$(".module_products_list > tbody").append(e),setStatusButton(),initCountdown(),BX.onCustomEvent("onAjaxSuccess"),$(".bottom_nav").html($(e).find(".bottom_nav").html())}})}),$(document).on("click",".bx_compare .tabs-head li",function(){var e=$(this).find(".sortbutton").data("href");BX.showWait(BX("bx_catalog_compare_block")),$.ajax({url:e,data:{ajax_action:"Y"},success:function(t){history.pushState(null,null,e),$("#bx_catalog_compare_block").html(t),BX.closeWait()}})});var o;$(document).on({mouseover:function(e){var t=$(this),a=t.closest("tbody").index()+1,i=t.index()+1;o=$(e.delegateTarget).find(".data_table_props").children(":nth-child("+a+")").children(":nth-child("+i+")").addClass("hovered")},mouseleave:function(e){o&&o.removeClass("hovered")}},".bx_compare .data_table_props tbody>tr"),$(document).on("click",".fancy_offer",function(e){e.preventDefault();var t=[];$(".sliders .slides_block li").each(function(){var e={};e={title:$(this).find("img").attr("alt"),href:$(this).data("big")},$(this).hasClass("current")?t.unshift(e):t.push(e)}),console.log(t),$.fancybox(t,{openEffect:"fade",closeEffect:"fade",nextEffect:"fade",prevEffect:"fade",type:"image",tpl:{closeBtn:'<a title="'+BX.message("FANCY_CLOSE")+'" class="fancybox-item fancybox-close" href="javascript:;"></a>',next:'<a title="'+BX.message("FANCY_NEXT")+'" class="fancybox-nav fancybox-next" href="javascript:;"><span></span></a>',prev:'<a title="'+BX.message("FANCY_PREV")+'" class="fancybox-nav fancybox-prev" href="javascript:;"><span></span></a>'}})}),$(".tabs_section .tabs-head li").live("click",function(){$(this).is(".current")||($(".tabs_section .tabs-head li").removeClass("current"),$(this).addClass("current"),$(".tabs_section ul.tabs_content li").removeClass("current"),"product_reviews_tab"==$(this).attr("id")?($(".shadow.common").hide(),$("#reviews_content").show()):($(".shadow.common").show(),$("#reviews_content").hide(),$(".tabs_section ul.tabs_content > li:eq("+$(this).index()+")").addClass("current")))}),setTimeout(function(){$(".jobs_wrapp .item:first .name tr").trigger("click")},300),$(".buy_block .slide_offer").on("click",function(){scroll_block($(".tabs_section"))}),$(".share_wrapp .text").on("click",function(){$(this).parent().find(".shares").fadeToggle()}),$("html, body").live("mousedown",function(e){e.stopPropagation(),$(".shares").fadeOut(),$(".search_middle_block").removeClass("active_wide")}),$(".share_wrapp").find("*").live("mousedown",function(e){e.stopPropagation()}),$(document).on("click",".reviews-collapse-link",function(){$(".reviews-reply-form").slideToggle()}),initCountdown(),$(".menu.adaptive").on("click",function(){$(this).toggleClass("opened"),$(this).hasClass("opened")?$(".mobile_menu").toggleClass("opened").slideDown():$(".mobile_menu").toggleClass("opened").slideUp()}),$(".mobile_menu .has-child >a").on("click",function(e){var t=$(this).parent();e.preventDefault(),t.toggleClass("opened"),t.find(".dropdown").slideToggle()}),$(".mobile_menu .search-input-div input").live("keyup",function(e){var t=$(this).val();$(".center_block .stitle_form input").val(t),13==e.keyCode&&$(".center_block .stitle_form form").submit()}),$(".center_block .stitle_form input").live("keyup",function(e){var t=$(this).val();$(".mobile_menu .search-input-div input").val(t),13==e.keyCode&&$(".center_block .stitle_form form").submit()}),$(".mobile_menu .search-button-div button").live("click",function(e){e.preventDefault();var t=$(this).parents().find("input").val();$(".center_block .stitle_form input").val(t),$(".center_block .stitle_form form").submit()}),$(".btn.btn-add").on("click",function(){$.ajax({type:"GET",url:arOptimusOptions.SITE_DIR+"ajax/clearBasket.php",success:function(e){}})}),$(".sale-order-detail-payment-options-methods-info-change-link").on("click",function(){$(this).closest(".sale-order-detail-payment-options-methods-info").addClass("opened").siblings().addClass("opened")}),$(document).on("click",".expand_block",function(){togglePropBlock($(this))}),document.addEventListener("touchend",function(e){if($(e.target).closest(".menu_item_l1").length||($(".menu .menu_item_l1 .child").css({display:"none"}),$(".menu_item_l1").removeClass("hover")),$(e.target).closest(".basket_block").length||($(".basket_block .link").removeClass("hover"),$(".basket_block .basket_popup_wrapp").slideUp()),!$(e.target).closest(".catalog_item").length){var t=1*$(".tab:visible").attr("data-unhover");$(".tab:visible").stop().animate({height:t},100),$(".tab:visible").find(".catalog_item").removeClass("hover"),$(".tab:visible").find(".catalog_item .buttons_block").stop().fadeOut(233),$(".catalog_block").length&&$(".catalog_block").find(".catalog_item").removeClass("hover")}},!1),$(document).on("keyup",".coupon .input_coupon input",function(){$(this).val().length?($(this).removeClass("error"),$(this).closest(".input_coupon").find(".error").remove()):($(this).addClass("error"),$("<label class='error'>"+BX.message("INPUT_COUPON")+"</label>").insertBefore($(this)))}),BX.addCustomEvent(window,"onAjaxSuccess",function(){initSelects(document),InitOrderCustom(),$(".catalog_detail").length&&($(".bx_filter").remove(),InitFlexSlider()),arOptimusOptions.PAGES.ORDER_PAGE&&orderActions()}),BX.addCustomEvent(window,"onFrameDataRequestFail",function(e){console.log(e)})}),funcDefined("togglePropBlock")||(togglePropBlock=function(e){var t=e.closest(".bx_filter_parameters_box_container").find(".hidden_values");t.length&&(e.hasClass("inner_text")||e.hasClass("expand_block"))&&(t.is(":visible")?(e.text(BX.message("FILTER_EXPAND_VALUES")),t.hide()):(e.text(BX.message("FILTER_HIDE_VALUES")),t.show()))}),funcDefined("showPhoneMask")||(showPhoneMask=function(e){$(e).inputmask("mask",{mask:arOptimusOptions.THEME.PHONE_MASK,showMaskOnHover:!1})}),funcDefined("parseUrlQuery")||(parseUrlQuery=function(){var e={};if(location.search)for(var t=location.search.substr(1).split("&"),a=0;a<t.length;a++){var i=t[a].split("=");e[i[0]]=i[1]}return e}),funcDefined("getActualBasket")||(getActualBasket=function(e){var t="";"undefined"!=typeof e&&(t={iblockID:e}),$.ajax({type:"GET",url:arOptimusOptions.SITE_DIR+"ajax/actualBasket.php",data:t,success:function(e){$(".js_ajax").length||$("body").append('<div class="js_ajax"></div>'),$(".js_ajax").html(e)}})}),funcDefined("orderActions")||(orderActions=function(){if(arOptimusOptions.PAGES.ORDER_PAGE&&$(".bx-soa-cart-total").length){if($(".change_basket").length||$(".bx-soa-cart-total").prepend('<div class="change_basket">'+BX.message("BASKET_CHANGE_TITLE")+'<a href="'+arOptimusOptions.SITE_DIR+'basket/" class="change_link">'+BX.message("BASKET_CHANGE_LINK")+"</a></div>"),"object"==typeof BX.Sale.OrderAjaxComponent){if("N"!==arOptimusOptions.COUNTERS.USE_FULLORDER_GOALS&&"undefined"==typeof BX.Sale.OrderAjaxComponent.reachgoalbegin){BX.Sale.OrderAjaxComponent.reachgoalbegin=!0;var e={goal:"goal_order_begin"};BX.onCustomEvent("onCounterGoals",[e])}$(".bx-soa-cart-total-line-total").length&&!$(".bx-soa-cart-total .licence_block").length&&"Y"==arOptimusOptions.THEME.SHOW_LICENCE&&($('<div class="form"><div class="licence_block filter label_block"><label data-for="licenses_order" class="hidden error">'+BX.message("JS_REQUIRED_LICENSES")+'</label><input type="checkbox" name="licenses_order" required value="Y"><label data-for="licenses_order" class="license">'+BX.message("LICENSES_TEXT")+"</label></div></div>").insertAfter($("#bx-soa-total .bx-soa-cart-total-line-total")),$("#bx-soa-orderSave, .bx-soa-cart-total-button-container").addClass("lic_condition"),"undefined"==typeof BX.Sale.OrderAjaxComponent.oldClickOrderSaveAction&&"undefined"!=typeof BX.Sale.OrderAjaxComponent.clickOrderSaveAction&&(BX.Sale.OrderAjaxComponent.oldClickOrderSaveAction=BX.Sale.OrderAjaxComponent.clickOrderSaveAction,BX.Sale.OrderAjaxComponent.clickOrderSaveAction=function(e){$('input[name="licenses_order"]').prop("checked")?($(".bx-soa-cart-total .licence_block label.error").addClass("hidden"),BX.Sale.OrderAjaxComponent.oldClickOrderSaveAction(e)):$(".bx-soa-cart-total .licence_block label.error").removeClass("hidden")},BX.unbindAll(BX.Sale.OrderAjaxComponent.totalInfoBlockNode.querySelector("a.btn-order-save")),BX.unbindAll(BX.Sale.OrderAjaxComponent.mobileTotalBlockNode.querySelector("a.btn-order-save")),BX.unbindAll(BX.Sale.OrderAjaxComponent.orderSaveBlockNode.querySelector("a")),BX.bind(BX.Sale.OrderAjaxComponent.totalInfoBlockNode.querySelector("a.btn-order-save"),"click",BX.proxy(BX.Sale.OrderAjaxComponent.clickOrderSaveAction,BX.Sale.OrderAjaxComponent)),BX.bind(BX.Sale.OrderAjaxComponent.mobileTotalBlockNode.querySelector("a.btn-order-save"),"click",BX.proxy(BX.Sale.OrderAjaxComponent.clickOrderSaveAction,BX.Sale.OrderAjaxComponent)),BX.bind(BX.Sale.OrderAjaxComponent.orderSaveBlockNode.querySelector("a"),"click",BX.proxy(BX.Sale.OrderAjaxComponent.clickOrderSaveAction,BX.Sale.OrderAjaxComponent))),$(".bx-soa-cart-total .licence_block label.license").on("click",function(){var e=$(this).data("for");$(".bx-soa-cart-total .licence_block label.error").addClass("hidden"),$("input[name="+e+"]").prop("checked")?$("input[name="+e+"]").prop("checked",""):$("input[name="+e+"]").prop("checked","checked")})),BX.Sale.OrderAjaxComponent.hasOwnProperty("params")&&($(".bx-soa-cart-total .change_link").attr("href",BX.Sale.OrderAjaxComponent.params.PATH_TO_BASKET),arOptimusOptions.PRICES.MIN_PRICE&&arOptimusOptions.PRICES.MIN_PRICE>Number(BX.Sale.OrderAjaxComponent.result.TOTAL.ORDER_PRICE)&&($('<div class="fademask_ext"></div>').appendTo($("body")),location.href=BX.Sale.OrderAjaxComponent.params.PATH_TO_BASKET)),checkCounters()&&"undefined"==typeof BX.Sale.OrderAjaxComponent.oldSaveOrder&&"undefined"!=typeof BX.Sale.OrderAjaxComponent.saveOrder&&(BX.Sale.OrderAjaxComponent.oldSaveOrder=BX.Sale.OrderAjaxComponent.saveOrder,BX.Sale.OrderAjaxComponent.saveOrder=function(e){var t=BX.parseJSON(e);t&&t.order?t.order.SHOW_AUTH?BX.Sale.OrderAjaxComponent.oldSaveOrder(e):t.order.REDIRECT_URL&&t.order.REDIRECT_URL.length&&(!t.order.ERROR||BX.util.object_keys(t.order.ERROR).length<1)&&(arMatch=t.order.REDIRECT_URL.match(/ORDER_ID\=[^&=]*/g))&&arMatch.length&&(_id=arMatch[0].replace(/ORDER_ID\=/g,"",arMatch[0]))?$.ajax({url:arOptimusOptions.SITE_DIR+"ajax/check_order.php",dataType:"json",type:"POST",data:{ID:_id},success:function(t){parseInt(t)?purchaseCounter(parseInt(t),BX.message("FULL_ORDER"),function(t){"object"==typeof t&&"undefined"!=typeof BX.localStorage&&BX.localStorage.set("gtm_e_"+_id,t,60),BX.Sale.OrderAjaxComponent.oldSaveOrder(e)}):BX.Sale.OrderAjaxComponent.oldSaveOrder(e)},error:function(){BX.Sale.OrderAjaxComponent.oldSaveOrder(e)}}):BX.Sale.OrderAjaxComponent.oldSaveOrder(e):BX.Sale.OrderAjaxComponent.oldSaveOrder(e)})}$(".bx-ui-sls-quick-locations.quick-locations").on("click",function(){$(this).siblings().removeClass("active"),$(this).addClass("active")})}}),funcDefined("basketActions")||(basketActions=function(){if(arOptimusOptions.PAGES.BASKET_PAGE){if(checkMinPrice(),location.hash){var e=location.hash.substring(1);$("#basket_toolbar_button_"+e).length&&$("#basket_toolbar_button_"+e).trigger("click")}$(".bx_sort_container").append('<div class="top_control basket_sort"><span class="delete_all button grey_br transparent remove_all_basket">'+BX.message("BASKET_CLEAR_ALL_BUTTON")+"</span></div>"),"Y"==arOptimusOptions.THEME.SHOW_BASKET_PRINT&&$(".bx_sort_container .top_control").prepend('<span class="basket_print button grey_br transparent">'+BX.message("BASKET_PRINT_BUTTON")+"</span>"),$(".bx_sort_container .top_control .delete_all").data("type",$(".bx_sort_container a.current").index()),$(".bx_ordercart .bx_ordercart_coupon #coupon").wrap('<div class="input"></div>'),$(".bx_sort_container > a").on("click",function(){$(".bx_sort_container .top_control .delete_all").data("type",$(this).index())}),$(".basket_print").on("click",function(){window.print()}),$(".delete_all").on("click",function(){if("N"!==arOptimusOptions.COUNTERS.USE_BASKET_GOALS){var e={goal:"goal_basket_clear",params:{type:$(this).data("type")}};BX.onCustomEvent("onCounterGoals",[e])}$.post(arOptimusOptions.SITE_DIR+"ajax/action_basket.php","TYPE="+$(this).data("type")+"&CLEAR_ALL=Y",$.proxy(function(e){location.reload()}))}),$(".bx_item_list_section .bx_catalog_item").sliceHeight({row:".bx_item_list_slide",item:".bx_catalog_item"}),BX.addCustomEvent("onAjaxSuccess",function(){checkMinPrice();var e=$.trim($("#warning_message").text());$("#basket_items_list .error_text").detach(),""!=e&&($("#warning_message").hide().text(""),$("#basket_items_list").prepend('<div class="error_text">'+e+"</div>"))})}}),funcDefined("checkMinPrice")||(checkMinPrice=function(){if(arOptimusOptions.PAGES.BASKET_PAGE){var e=$("#allSum_FORMATED").text().replace(/[^0-9\.]/g,""),t=parseFloat(e);$(".catalog_back").length||$(".bx_ordercart_order_pay_center").prepend('<a href="/catalog/" class="catalog_back button transparent big_btn grey_br">'+BX.message("BASKET_CONTINUE_BUTTON")+"</a>"),arOptimusOptions.PRICES.MIN_PRICE?arOptimusOptions.PRICES.MIN_PRICE>t?($(".icon_error_wrapper").length||$(".bx_ordercart_order_pay_center").prepend('<div class="icon_error_wrapper"><div class="icon_error_block">'+BX.message("MIN_ORDER_PRICE_TEXT").replace("#PRICE#",jsPriceFormat(arOptimusOptions.PRICES.MIN_PRICE))+"</div></div>"),$(".oneclickbuy.fast_order").length&&$(".oneclickbuy.fast_order").remove(),$(".bx_ordercart_order_pay .checkout").length&&$(".bx_ordercart_order_pay .checkout").remove()):($(".icon_error_wrapper").length&&$(".icon_error_wrapper").remove(),$(".bx_ordercart_order_pay .checkout").length?$(".bx_ordercart .bx_ordercart_order_pay .checkout").css("opacity","1"):$(".bx_ordercart_order_pay_center").append('<a href="javascript:void(0)" onclick="checkOut();" class="checkout" style="opacity: 1;">'+BX.message("BASKET_ORDER_BUTTON")+"</a>"),$(".oneclickbuy.fast_order").length||"Y"!=arOptimusOptions.THEME.SHOW_ONECLICKBUY_ON_BASKET_PAGE||$(".bx_ordercart_order_pay_center").append('<span class="oneclickbuy button big_btn fast_order" onclick="oneClickBuyBasket()">'+BX.message("BASKET_QUICK_ORDER_BUTTON")+"</span>")):($(".bx_ordercart .bx_ordercart_order_pay .checkout").css("opacity","1"),$(".oneclickbuy.fast_order").length||"Y"!=arOptimusOptions.THEME.SHOW_ONECLICKBUY_ON_BASKET_PAGE||$(".bx_ordercart_order_pay_center").append('<span class="oneclickbuy button big_btn fast_order" onclick="oneClickBuyBasket()">'+BX.message("BASKET_QUICK_ORDER_BUTTON")+"</span>"))}});var isFrameDataReceived=!1;"undefined"!=typeof window.frameCacheVars?BX.addCustomEvent("onFrameDataReceived",function(e){initFull(),isFrameDataReceived=!0}):$(document).ready(initFull),funcDefined("setHeightBlockSlider")||(setHeightBlockSlider=function(){$(document).find(".specials.tab_slider_wrapp").outerWidth();$(document).find(".specials.tab_slider_wrapp .tabs_content > li.cur").css("height",""),$(document).find(".specials.tab_slider_wrapp .tabs_content .tab.cur .tabs_slider .buttons_block").hide(),$(document).find(".specials.tab_slider_wrapp .tabs_content > li.cur").equalize({children:".item-title"}),$(document).find(".specials.tab_slider_wrapp .tabs_content > li.cur").equalize({children:".item_info"}),$(document).find(".specials.tab_slider_wrapp .tabs_content > li.cur").equalize({children:".catalog_item"});var e=$(document).find(".specials.tab_slider_wrapp .tabs_content .tab.cur .tabs_slider li .buttons_block").height(),t=1*$(document).find(".specials.tab_slider_wrapp .tabs_content .tab.cur").height(),a=t+e+50;$(document).find(".specials.tab_slider_wrapp .tabs_content .tab.cur").attr("data-unhover",t),$(document).find(".specials.tab_slider_wrapp .tabs_content .tab.cur").attr("data-hover",a),$(document).find(".specials.tab_slider_wrapp .tabs_content").height(t)}),funcDefined("checkStickyFooter")||(checkStickyFooter=function(){try{ignoreResize.push(!0),$("#content").css("min-height","");var e=$("#content").offset().top,t=e+$("#content").outerHeight(),a=$("footer").offset().top;$("#content").css("min-height",$(window).height()-e-(a-t)-$("footer").outerHeight()+"px"),ignoreResize.pop()}catch(i){console.error(i)}});var timerResize=!1,ignoreResize=[];$(window).resize(function(){$("html.print").length||checkStickyFooter(),ignoreResize.length||(timerResize&&(clearTimeout(timerResize),timerResize=!1),timerResize=setTimeout(function(){BX.onCustomEvent("onWindowResize",!1)},50))});var timerScroll=!1,ignoreScroll=[],documentScrollTopLast=$(document).scrollTop();$(window).scroll(function(){documentScrollTopLast=$(document).scrollTop(),ignoreScroll.length||(timerScroll&&(clearTimeout(timerScroll),timerScroll=!1),timerScroll=setTimeout(function(){BX.onCustomEvent("onWindowScroll",!1)},50))}),BX.addCustomEvent("onWindowResize",function(e){try{if(ignoreResize.push(!0),checkScrollToTop(),checkPopupWidth(),checkCaptchaWidth(),checkFormWidth(),checkFormControlWidth(),touchMenu("ul.menu:not(.opened) > li.menu_item_l1"),touchBasket(".cart:not(.empty_cart) .basket_block .link"),CheckObjectsSizes(),CheckFlexSlider(),initSly(),checkVerticalMobileFilter(),window.matchMedia("(max-width: 768px)").matches&&$(".group_description_block.top").length){var t=$(".adaptive_filter").position().top;$(".bx_filter.bx_filter_vertical").css({top:t+20})}window.matchMedia("(min-width: 767px)").matches&&$(".wrapper_middle_menu.wrap_menu").removeClass("mobile"),window.matchMedia("(max-width: 767px)").matches&&$(".wrapper_middle_menu.wrap_menu").addClass("mobile"),$(window).outerWidth()>600?($("#header ul.menu").removeClass("opened").css("display",""),$(".authorization-cols").length&&($(".authorization-cols").equalize({children:".col .auth-title",reset:!0}),$(".authorization-cols").equalize({children:".col .form-block",reset:!0}))):($(".authorization-cols .auth-title").css("height",""),$(".authorization-cols .form-block").css("height","")),$("#basket_form").length&&$(window).outerWidth()<=600&&$("#basket_form .tabs_content.basket > li.cur td").each(function(){$(this).css("width","")}),$(".front_slider_wrapp").length&&$(".extended_pagination li i").each(function(){$(this).css({borderBottomWidth:$(this).parent("li").outerHeight()/2,borderTopWidth:$(this).parent("li").outerHeight()/2})}),setHeightCompany(),$(".bx_filter_section .bx_filter_select_container").each(function(){var e=$(this).closest(".bx_filter_parameters_box").attr("property_id");$("#smartFilterDropDown"+e).length&&$("#smartFilterDropDown"+e).css("max-width",$(this).width())})}catch(a){}finally{ignoreResize.pop()}}),BX.addCustomEvent("onWindowScroll",function(e){try{ignoreScroll.push(!0)}catch(t){}finally{ignoreScroll.pop()}}),BX.addCustomEvent("onCounterGoals",function(e){if("Y"===arOptimusOptions.COUNTERS.USE_YA_COUNTER){var t=arOptimusOptions.COUNTERS.YA_COUNTER_ID;if(t=parseInt(t),"object"!=typeof e&&(e={goal:"undefined"}),"string"!=typeof e.goal&&(e.goal="undefined"),t)try{waitCounter(t,50,function(){var a=window["yaCounter"+t];"object"==typeof a&&a.reachGoal(e.goal)})}catch(a){console.error(a)}else console.info("Bad counter id!",t)}});100  124412|/aspro.optimus/install/wizards/aspro/optimus/site/templates/aspro_optimus/js/main.js|c3a3cf10var basketTimeoutSlide;
var resizeEventTimer;

var funcDefined = function(func){
	try {
		if (typeof func == 'function') {
			return true;
		} else {
			return typeof window[func] === "function";
		}
	} catch (e) {
		return false;
	}
}

if(!funcDefined('setLocationSKU')){
	function setLocationSKU(ID){
		var objUrl = parseUrlQuery(),
			j = 0,
			prefix = '',
			query_string = '',
			url = '';
		if('oid' in objUrl)
		{
			if(parseInt(objUrl.oid)>0)
			{
				objUrl.oid = ID;
				for(var i in objUrl)
				{
					if(parseInt(j)>0)
						prefix = '&';
					query_string = query_string + prefix + i + '='+ objUrl[i];
					j++;
				}
				if(query_string)
				{
					url = location.pathname+'?'+query_string;
				}
				try {
					history.pushState(null, null, url);
					return;
				} catch(e) {}
				location.hash = '#' + url.substr(1)
			}
		}
	}
}

if(!funcDefined('trimPrice')){
	var trimPrice = function trimPrice(s){
		s=s.split(" ").join("");
		s=s.split("&nbsp;").join("");
		return s;
	}
}

if(!funcDefined('markProductRemoveBasket')){
	var markProductRemoveBasket = function markProductRemoveBasket(id){
		$('.in-cart[data-item='+id+']').hide();
		$('.to-cart[data-item='+id+']').show();
		$('.to-cart[data-item='+id+']').closest('.button_block').removeClass('wide');
		$('.to-cart[data-item='+id+']').closest('.counter_wrapp').find('.counter_block').show();
		$('.counter_block[data-item='+id+']').show();
		$('.in-subscribe[data-item='+id+']').hide();
		$('.to-subscribe[data-item='+id+']').show();
		$('.wish_item[data-item='+id+']').removeClass("added");
		$('.wish_item[data-item='+id+'] .value:not(.added)').show();
		$('.wish_item[data-item='+id+'] .value.added').hide();
	}
}

if(!funcDefined('markProductAddBasket')){
	var markProductAddBasket = function markProductAddBasket(id){
		$('.to-cart[data-item='+id+']').hide();
		$('.to-cart[data-item='+id+']').closest('.counter_wrapp').find('.counter_block').hide();
		$('.to-cart[data-item='+id+']').closest('.button_block').addClass('wide');
		$('.in-cart[data-item='+id+']').show();
		$('.wish_item[data-item='+id+']').removeClass("added");
		$('.wish_item[data-item='+id+'] .value:not(.added)').show();
		$('.wish_item[data-item='+id+'] .value.added').hide();
	}
}

if(!funcDefined('markProductDelay')){
	var markProductDelay = function markProductDelay(id){
		$('.in-cart[data-item='+id+']').hide();
		$('.to-cart[data-item='+id+']').show();
		$('.to-cart[data-item='+id+']').closest('.counter_wrapp').find('.counter_block').show();
		$('.to-cart[data-item='+id+']').closest('.button_block').removeClass('wide');
		$('.wish_item[data-item='+id+']').addClass("added");
		$('.wish_item[data-item='+id+'] .value:not(.added)').hide();
		// $('.wish_item[data-item='+id+'] .value.added').show();
		$('.wish_item[data-item='+id+'] .value.added').css('display','block');
	}
}

if(!funcDefined('markProductSubscribe')){
	var markProductSubscribe = function markProductSubscribe(id){
		$('.to-subscribe[data-item='+id+']').hide();
		$('.in-subscribe[data-item='+id+']').css('display','block');
	}
}

if(!funcDefined('basketFly')){
	var basketFly = function basketFly(action){
		$.post( arOptimusOptions['SITE_DIR']+"ajax/basket_fly.php", "PARAMS="+$("#basket_form").find("input#fly_basket_params").val(), $.proxy(function( data ){
			var small=$('.opener .basket_count').hasClass('small'),
				basket_count=$(data).find('.basket_count').find('.items div').text();
			$('#basket_line .basket_fly').addClass('loaded').html(data);

			if(action=="refresh"){
				$('li[data-type=AnDelCanBuy]').trigger('click');
			}

			if(window.matchMedia('(min-width: 769px)').matches){
				if (action=='open') {
					if(small){
						if(arOptimusOptions['THEME']['SHOW_BASKET_ONADDTOCART'] !== 'N'){
							$('.opener .basket_count').click();
						}
					}else{
						$('.opener .basket_count').removeClass('small')
						$('.tabs_content.basket li[item-section="AnDelCanBuy"]').addClass('cur');
						$('#basket_line ul.tabs li[item-section="AnDelCanBuy"]').addClass('cur');
					}
				} else if (action=='wish') {
					if(small){
						if(arOptimusOptions['THEME']['SHOW_BASKET_ONADDTOCART'] !== 'N'){
							$('.opener .wish_count').click();
						}
					}else{
						$('.opener .wish_count').removeClass('small')
						$('.tabs_content.basket li[item-section="DelDelCanBuy"]').addClass('cur');
						$('#basket_line ul.tabs li[item-section="DelDelCanBuy"]').addClass('cur');
					}
				} else {
					if(arOptimusOptions['THEME']['SHOW_BASKET_ONADDTOCART'] !== 'N'){
						$('.opener .basket_count').click();
					}
				}
			}
		}));
	}
}

if(!funcDefined("clearViewedProduct")){
	function clearViewedProduct(){
		try{
			var siteID = arOptimusOptions.SITE_ID;
			var localKey = 'OPTIMUS_VIEWED_ITEMS_' + siteID;
			var cookieParams = {path: '/', expires: 30};
			if(typeof BX.localStorage !== 'undefined'){
				// remove local storage
				BX.localStorage.set(localKey, {}, 0);
			}
			// remove cookie
			$.removeCookie(localKey, cookieParams);
		}
		catch(e){
			console.error(e);
		}
	}
}

if(!funcDefined("setViewedProduct")){
	function setViewedProduct(id, arData){
		try{

			// save $.cookie option
			var bCookieJson = $.cookie.json;
			$.cookie.json = true;

			var siteID = arOptimusOptions.SITE_ID;
			var localKey = 'OPTIMUS_VIEWED_ITEMS_' + siteID;
			var cookieParams = {path: '/', expires: 30};

			if((typeof BX.localStorage !== 'undefined') && (typeof id !== 'undefined') && (typeof arData !== 'undefined')){
				var PRODUCT_ID = (typeof arData.PRODUCT_ID !== 'undefined') ? arData.PRODUCT_ID : id;
				var arViewedLocal = BX.localStorage.get(localKey) ? BX.localStorage.get(localKey) : {};
				var arViewedCookie = $.cookie(localKey) ? $.cookie(localKey) : {};
				var count = 0;

				// delete some items (sync cookie & local storage)
				for(var _id in arViewedLocal){
					arViewedLocal[_id].IS_LAST = false;
					if(typeof arViewedCookie[_id] === 'undefined'){
						delete arViewedLocal[_id];
					}
				}
				for(var _id in arViewedCookie){
					if(typeof arViewedLocal[_id] === 'undefined'){
						delete arViewedCookie[_id];
					}
				}

				for(var _id in arViewedCookie){
					count++;
				}

				// delete item if other item (offer) of that PRODUCT_ID is exists
				if(typeof arViewedLocal[PRODUCT_ID] !== 'undefined'){
					if(arViewedLocal[PRODUCT_ID].ID != id){
						delete arViewedLocal[PRODUCT_ID];
						delete arViewedCookie[PRODUCT_ID];
					}
				}

				delete arViewedLocal[2243];
				delete arViewedCookie[2243];

				var time = new Date().getTime();
				arData.ID = id;
				arData.ACTIVE_FROM = time;
				arData.IS_LAST = true;
				arViewedLocal[PRODUCT_ID] = arData;
				arViewedCookie[PRODUCT_ID] = [time.toString(), arData.PICTURE_ID];

				$.cookie(localKey, arViewedCookie, cookieParams);
				BX.localStorage.set(localKey, arViewedLocal, 2592000);  // 30 days
			}
		}
		catch(e){
			console.error(e);
		}
		finally{
			// restore $.cookie option
			$.cookie.json = bCookieJson;
		}
	}
}



if(!funcDefined('initSelects')){
	function initSelects(target){
		var iOS = ( navigator.userAgent.match(/(iPad|iPhone|iPod)/g) ? true : false );
		if ( iOS ) return;
		if($("#bx-soa-order").length)
			return;
		// SELECT STYLING
		$(target).find('.wrapper select:visible').ikSelect({
			syntax: '<div class="ik_select_link"> \
						<span class="ik_select_link_text"></span> \
						<div class="trigger"></div> \
					</div> \
					<div class="ik_select_dropdown"> \
						<div class="ik_select_list"> \
						</div> \
					</div>',
			dynamicWidth: true,
			ddMaxHeight: 112,
			customClass: 'common_select',
			//equalWidths: true,
			onShow: function(inst){
				inst.$dropdown.css('top', (parseFloat(inst.$dropdown.css('top'))-5)+'px');
				if ( inst.$dropdown.outerWidth() < inst.$link.outerWidth() ){
					inst.$dropdown.css('width', inst.$link.outerWidth());
				}
				if ( inst.$dropdown.outerWidth() > inst.$link.outerWidth() ){
					inst.$dropdown.css('width', inst.$link.outerWidth());
				}
				var count=0,
					client_height=0;
				inst.$dropdown.css('left', inst.$link.offset().left);
				$(inst.$listInnerUl).find('li').each(function(){
					if(!$(this).hasClass('ik_select_option_disabled')){
						++count;
						client_height+=$(this).outerHeight();
					}
				})
				if(client_height<112){
					inst.$listInner.css('height', 'auto');
				}else{
					inst.$listInner.css('height', '112px');
				}
				inst.$link.addClass('opened');
				inst.$listInner.addClass('scroller');
			},
			onHide: function(inst){
				inst.$link.removeClass('opened');
			}
		});
		// END OF SELECT STYLING

		var timeout;
		$(window).on('resize', function(){
			clearTimeout(timeout);
			timeout = setTimeout(function(){
				//$('select:visible').ikSelect('redraw');
				var inst='';
				if(inst=$('.common_select-link.opened + select').ikSelect().data('plugin_ikSelect')){
					inst.$dropdown.css('left', inst.$link.offset().left+'px');
				}
			}, 20);
		});
	}
}

if(!funcDefined('CheckTopMenuFullCatalogSubmenu')){
	CheckTopMenuFullCatalogSubmenu = function(){
		var $menu = $('.menu_top_block');
		var $wrapmenu = $menu.parents('.wrap_menu');
		var wrapMenuWidth = $wrapmenu.actual('outerWidth');
		var wrapMenuLeft = $wrapmenu.offset().left;
		var wrapMenuRight = wrapMenuLeft + wrapMenuWidth;
		var bCatalogFirst = $menu.hasClass('catalogfirst');
		var findMenuLi = $('.menu_top_block:visible li.full');
		var parentSubmenuWidth = $menu.actual('outerWidth');

		if($('.catalog_block.menu_top_block').length){
			if($('.catalog_block.menu_top_block').is(':visible'))
				findMenuLi=$('.menu_top_block.catalog_block li.full');
		}

		findMenuLi.each(function(){
			var $this = $(this);
			var $submenu = $this.find('>.dropdown');

			if($submenu.length){
				if(bCatalogFirst){
					$submenu.css({left: parentSubmenuWidth + 'px', width: (wrapMenuWidth - parentSubmenuWidth) + 'px', 'padding-left': '0px', 'padding-right': '0px'});
				}
				else{
					$submenu.css({left: ($this.offset().left * -1) + 'px', width: ($(window).width() - 1) + 'px', 'padding-left': wrapMenuLeft + 'px', 'padding-right': ($(window).width() - wrapMenuRight) + 'px'});
				}
				if(!isOnceInited && bCatalogFirst && arOptimusOptions["THEME"]["MENU_POSITION"]=="top"){
					$this.on('mouseenter', function(){
						$submenu.css('min-height', $this.closest('.dropdown').actual('outerHeight') + 'px');
					});
				}
			}
		});
	}
}

$.fn.getMaxHeights = function( outer, classNull, minHeight ){
	var maxHeight = this.map( function( i, e ){
		var calc_height=0;

		$(e).css('height', '');

		if( outer == true ){
			calc_height=$(e).actual('outerHeight');
		}else{
			calc_height=$(e).actual('height');
		}
		return calc_height;
	}).get();
	for(var i = 0, c = maxHeight.length; i < c; ++i){
		if(maxHeight[i] % 2){
			--maxHeight[i];
		}
	}
	return Math.max.apply( this, maxHeight );
}

$.fn.equalizeHeights = function( outer, classNull, minHeight ){
	var maxHeight = this.map( function( i, e ){
		var minus_height=0,
			calc_height=0;
		if(classNull!==false){
			minus_height=parseInt($(e).find(classNull).actual('outerHeight'));
		}
		if(minus_height)
			minus_height+=12;
		$(e).css('height', '');
		if( outer == true ){
			calc_height=$(e).actual('outerHeight')-minus_height;
		}else{
			calc_height=$(e).actual('height')-minus_height;
		}
		if(minHeight!==false){
			if(calc_height<minHeight){
				calc_height+=(minHeight-calc_height);
			}
			if(window.matchMedia('(max-width: 520px)').matches){
				calc_height=300;
			}
			if(window.matchMedia('(max-width: 400px)').matches){
				calc_height=200;
			}
		}
		return calc_height;
	}).get();

	for(var i = 0, c = maxHeight.length; i < c; ++i){
		if(maxHeight[i] % 2){
			--maxHeight[i];
		}
	}
	return this.height( Math.max.apply( this, maxHeight ) );
}

$.fn.getFloatWidth = function(){
	var width = 0

	if($(this).length){
		var rect = $(this)[0].getBoundingClientRect()
		if(!(width = rect.width)){
			width = rect.right - rect.left
		}
	}

	return width
}

$.fn.sliceHeight = function( options ){
	function _slice(el){

		el.each(function() {
			$(this).css('line-height', '');
			$(this).css('height', '');
		});
		if(typeof(options.autoslicecount) == 'undefined' || options.autoslicecount !== false){
			var row=(typeof(options.row) !== 'undefined' && options.row.length) ?  el.first().parents(options.row).getFloatWidth() : el.first().parents('.items').getFloatWidth(),
				elw=(typeof(options.item) !== 'undefined' && options.item.length) ? $(options.item).first().getFloatWidth() : (el.first().hasClass('item') ? el.first().getFloatWidth() : el.first().parents('.item').getFloatWidth());
			if(!row){
				row = el.first().parents('.row').getFloatWidth();
			}
			if(row && elw){
				options.slice = Math.floor(row / elw);
			}
		}

		if(options.slice){
			for(var i = 0; i < el.length; i += options.slice){
				$(el.slice(i, i + options.slice)).equalizeHeights(options.outer, options.classNull, options.minHeight);
			}
		}
		if(options.lineheight){
			var lineheightAdd = parseInt(options.lineheight);
			if(isNaN(lineheightAdd)){
				lineheightAdd = 0;
			}
			el.each(function() {
				$(this).css('line-height', ($(this).actual('height') + lineheightAdd) + 'px');
			});
		}

	}

	var options = $.extend({
		slice: null,
		outer: false,
		lineheight: false,
		autoslicecount: true,
		classNull: false,
		minHeight: false,
		options: false,
		resize: true,
		row:false,
		item:false
	}, options);

	var el = $(this);
	_slice(el);

	if(options.resize){
		BX.addCustomEvent('onWindowResize', function(eventdata) {
			ignoreResize.push(true);
			_slice(el);
			ignoreResize.pop();
		});
	}
}

$.fn.sliceHeightNoResize = function( options ){
	function _slice(el){

		el.each(function() {
			$(this).css('line-height', '');
			$(this).css('height', '');
		});
		if(typeof(options.autoslicecount) == 'undefined' || options.autoslicecount !== false){
			var elw = (el.first().hasClass('item') ? el.first().getFloatWidth() : el.first().parents('.item').getFloatWidth());
			var elsw = el.first().parents('.items').getFloatWidth();
			if(!elsw){
				elsw = el.first().parents('.row').getFloatWidth();
			}
			if(elsw && elw){
				options.slice = Math.floor(elsw / elw);
			}
		}

		if(options.slice){
			for(var i = 0; i < el.length; i += options.slice){

				$(el.slice(i, i + options.slice)).equalizeHeights(options.outer, options.classNull, options.minHeight);
			}
		}
		if(options.lineheight){
			var lineheightAdd = parseInt(options.lineheight);
			if(isNaN(lineheightAdd)){
				lineheightAdd = 0;
			}
			el.each(function() {
				$(this).css('line-height', ($(this).actual('height') + lineheightAdd) + 'px');
			});
		}
	}

	var options = $.extend({
		slice: null,
		outer: false,
		lineheight: false,
		autoslicecount: true,
		classNull: false,
		minHeight: false,
		options: false,
		resize: true,
	}, options);

	var el = $(this);
	_slice(el);
}

if(!funcDefined('initHoverBlock')){
	function initHoverBlock(target){
		$(target).find('.catalog_item.item_wrap').on('mouseenter', function(){
			$(this).addClass('hover');
		})
		$(target).find('.catalog_item.item_wrap').on('mouseleave', function(){
			$(this).removeClass('hover');
		})
	}
}

if(!funcDefined('setStatusButton')){
	function setStatusButton(){
		$.ajax({
			url: arOptimusOptions["SITE_DIR"]+'ajax/getAjaxBasket.php',
			type: 'POST',
			success: function(data){
				if(data.BASKET){
					for( var i in data.BASKET ){
						$('.to-cart[data-item='+data.BASKET[i]+']').hide();
						$('.counter_block[data-item='+data.BASKET[i]+']').hide();
						$('.in-cart[data-item='+data.BASKET[i]+']').show();
						$('.in-cart[data-item='+data.BASKET[i]+']').closest('.button_block').addClass('wide');
					}
				}
				if(data.DELAY){
					for( var i in data.DELAY ){
						$('.wish_item.to[data-item='+data.DELAY[i]+']').hide();
						$('.wish_item.in[data-item='+data.DELAY[i]+']').show();
						if ($('.wish_item[data-item='+data.DELAY[i]+']').find(".value.added").length) {
							$('.wish_item[data-item='+data.DELAY[i]+']').addClass("added");
							$('.wish_item[data-item='+data.DELAY[i]+']').find(".value").hide();
							$('.wish_item[data-item='+data.DELAY[i]+']').find(".value.added").show();
						}
					}
				}
				if(data.SUBSCRIBE){
					for( var i in data.SUBSCRIBE ){
						$('.to-subscribe[data-item='+data.SUBSCRIBE[i]+']').hide();
						$('.in-subscribe[data-item='+data.SUBSCRIBE[i]+']').show();
					}
				}
				if(data.COMPARE){
					for( var i in data.COMPARE ){
						$('.compare_item.to[data-item='+data.COMPARE[i]+']').hide();
						$('.compare_item.in[data-item='+data.COMPARE[i]+']').show();
						if ($('.compare_item[data-item='+data.COMPARE[i]+']').find(".value.added").length){
							$('.compare_item[data-item='+data.COMPARE[i]+']').find(".value").hide();
							$('.compare_item[data-item='+data.COMPARE[i]+']').find(".value.added").show();
						}
					}
				}
			}
		});
	}
}


if(!funcDefined('onLoadjqm')){
	var onLoadjqm = function(name, hash, requestData, selector, requestTitle, isButton, thButton){
		hash.w.addClass('show').css({
			'margin-left': ($(window).width() > hash.w.outerWidth() ? '-' + hash.w.outerWidth() / 2 + 'px' : '-' + $(window).width() / 2 + 'px'),
			'top': $(document).scrollTop() + (($(window).height() > hash.w.outerHeight() ? ($(window).height() - hash.w.outerHeight()) / 2 : 10))   + 'px',
			'opacity': 1
		});
		if(typeof(requestData) == 'undefined'){
			requestData = '';
		}
		if(typeof(selector) == 'undefined'){
			selector = false;
		}
		var width = $('.'+name+'_frame').width();
		$('.'+name+'_frame').css('margin-left', '-'+width/2+'px');

		if(name=='order-popup-call') {
		}
		else if(name=='order-button') {
			$(".order-button_frame").find("div[product_name]").find("input").val(hash.t.title).attr("readonly", "readonly").css({"overflow": "hidden", "text-overflow": "ellipsis"});
		}
		else if(name == "to-order" && selector){
			$(".to-order_frame").find('[data-sid="PRODUCT_NAME"]').val($(selector).data('name')).attr("readonly", "readonly").css({"overflow": "hidden", "text-overflow": "ellipsis"});
			$(".to-order_frame").find('[data-sid="PRODUCT_ID"]').val($(selector).attr('data-item'));
		}
		else if(name == "services" && selector) {
			$(".services_frame").find('[data-sid="SERVICE"]').val($(selector).attr('data-title'));
		}
		else if(name == "resume" && selector) {
			if($(selector).attr('data-jobs')){
				$(".resume_frame").find('[data-sid="POST"]').attr("readonly", "readonly").val($(selector).attr('data-jobs'));
			}
		}
		else if(name=='basket_error')
		{
			$(".basket_error_frame .pop-up-title").text(requestTitle);
			$(".basket_error_frame .ajax_text").html(requestData);
			// $('.basket_error_frame .ajax_text select').ikSelect('redraw');
			initSelects(document);
			if(isButton=="Y" && thButton){
				$("<div class='popup_button_basket_wr'><span class='popup_button_basket big_btn button' data-item="+thButton.data("item")+"><span>"+BX.message("ERROR_BASKET_BUTTON")+"</span></span></div>").insertAfter($(".basket_error_frame .ajax_text"));
			}
		}
		else if( name == 'one_click_buy') {
			$('#one_click_buy_form_button').on("click", function() {
				if(!$(this).hasClass("clicked")){
					if($('#one_click_buy_form').valid()){
						$(this).addClass("clicked");
						$("#one_click_buy_form").submit(); //otherwise don't works
					}
				}
			});

			$('#one_click_buy_form').submit( function() {
				if($('.'+name+'_frame form input.error').length || $('.'+name+'_frame form textarea.error').length) {
					return false
				}
				else{
					$.ajax({
						url: $(this).attr('action'),
						data: $(this).serialize(),
						type: 'POST',
						dataType: 'json',
						error: function(data) {
							alert('Error connecting server');
						},
						success: function(data) {
							if(data.result == 'Y'){
								if(arOptimusOptions['COUNTERS']['USE_1CLICK_GOALS'] !== 'N'){
									var eventdata = {goal: 'goal_1click_success'};
									BX.onCustomEvent('onCounterGoals', [eventdata])
								}
								$('.one_click_buy_result').show();
								$('.one_click_buy_result_success').show();
								purchaseCounter(data.message, arOptimusOptions["COUNTERS"]["TYPE"]["ONE_CLICK"]);
							}
							else{
								$('.one_click_buy_result').show();
								$('.one_click_buy_result_fail').show();
								if(('err' in data) && data.err)
									data.message=data.message+' \n'+data.err;
								$('.one_click_buy_result_text').html(data.message);
							}
							$('.one_click_buy_modules_button', self).removeClass('disabled');
							$('#one_click_buy_form').hide();
							$('#one_click_buy_form_result').show();
						}
					});
				}
				return false;
			});
		}
		else if( name == 'one_click_buy_basket') {
			$('#one_click_buy_form_button').on("click", function() {
				if(!$(this).hasClass("clicked")){
					if($('#one_click_buy_form').valid()){
						$(this).addClass("clicked");
						$("#one_click_buy_form").submit(); //otherwise don't works
					}
				}
			});

			$('#one_click_buy_form').on("submit", function(){
				if($('.'+name+'_frame form input.error').length || $('.'+name+'_frame form textarea.error').length) {
					return false
				}
				else{
					$.ajax({
						url: $(this).attr('action'),
						data: $(this).serialize(),
						type: 'POST',
						dataType: 'json',
						error: function(data) {
							window.console&&console.log(data);
						},
						success: function(data) {
							if(data.result == 'Y') {
								if(arOptimusOptions['COUNTERS']['USE_FASTORDER_GOALS'] !== 'N'){
									var eventdata = {goal: 'goal_fastorder_success'};
									BX.onCustomEvent('onCounterGoals', [eventdata])
								}
								$('.one_click_buy_result').show();
								$('.one_click_buy_result_success').show();
								purchaseCounter(data.message, arOptimusOptions["COUNTERS"]["TYPE"]["QUICK_ORDER"]);
							}
							else{
								$('.one_click_buy_result').show();
								$('.one_click_buy_result_fail').show();
								if(('err' in data) && data.err)
									data.message=data.message+' \n'+data.err;
								$('.one_click_buy_result_text').text(data.message);
							}
							$('.one_click_buy_modules_button', self).removeClass('disabled');
							$('#one_click_buy_form').hide();
							$('#one_click_buy_form_result').show();
						}
					});
				}
				return false;
			});
		}

		$('.'+name+'_frame').show();
	}
}

if(!funcDefined('onHidejqm')){
	var onHidejqm = function(name, hash){
		if (hash.w.find('.one_click_buy_result_success').is(':visible') && name=="one_click_buy_basket") {
			window.location.href = window.location.href;
		}
		hash.w.css('opacity', 0).hide();
		hash.w.empty();
		hash.o.remove();
		hash.w.removeClass('show');
	}
}

if(!funcDefined("oneClickBuy")) {
	var oneClickBuy = function (elementID, iblockID, that) {
		var name = 'one_click_buy';
		var elementQuantity = 1;
		var offerProps = false;
		var buy_btn=$(that).closest('.buy_block').find('.to-cart');
		var buy_btn2=$(that).closest('tr').find('.to-cart');

		if(typeof(that) !== 'undefined'){
			elementQuantity = $(that).attr('data-quantity');
			offerProps = $(that).attr('data-props');
		}

		if(elementQuantity < 0){
			elementQuantity = 1;
		}

		var tmp_props=buy_btn.data("props"),
			tmp_props2=buy_btn2.data("props"),
			props='',
			part_props='',
			add_props='N',
			fill_prop={},
			iblockid = buy_btn.data('iblockid'),
			item = buy_btn.attr('data-item');

		if(tmp_props){
			props=tmp_props.split(";");
		}else if(tmp_props2){
			props=tmp_props2.split(";");
		}
		if(buy_btn.data("part_props")){
			part_props=buy_btn.data("part_props");
		}
		if(buy_btn.data("add_props")){
			add_props=buy_btn.data("add_props");
		}

		fill_prop=fillBasketPropsExt(buy_btn, 'prop', buy_btn.data('bakset_div'));
		fill_prop.iblockID=iblockid;
		fill_prop.part_props=part_props;
		fill_prop.add_props=add_props;
		fill_prop.props=JSON.stringify(props);
		fill_prop.item=item;
		fill_prop.ocb_item="Y";

		$('body').find('.'+name+'_frame').remove();
		$('body').find('.'+name+'_trigger').remove();
		$('body').append('<div class="'+name+'_frame popup"></div>');
		$('body').append('<div class="'+name+'_trigger"></div>');
		$('.'+name+'_frame').jqm({trigger: '.'+name+'_trigger', onHide: function(hash) { onHidejqm(name,hash); }, toTop: false, onLoad: function( hash ){ onLoadjqm(name, hash ); }, ajax: arOptimusOptions["SITE_DIR"]+'ajax/one_click_buy.php?ELEMENT_ID='+elementID+'&IBLOCK_ID='+iblockID+'&ELEMENT_QUANTITY='+elementQuantity+'&OFFER_PROPS='+fill_prop.props});
		$('.'+name+'_trigger').click();
	}
}

if(!funcDefined("oneClickBuyBasket")) {
	var oneClickBuyBasket = function () {
		name = 'one_click_buy_basket'
		$('body').find('.'+name+'_frame').remove();
		$('body').find('.'+name+'_trigger').remove();
		$('body').append('<div class="'+name+'_frame popup"></div>');
		$('body').append('<div class="'+name+'_trigger"></div>');
		$('.'+name+'_frame').jqm({trigger: '.'+name+'_trigger', onHide: function(hash) { onHidejqm(name,hash) }, onLoad: function( hash ){ onLoadjqm( name, hash ); }, ajax: arOptimusOptions["SITE_DIR"]+'ajax/one_click_buy_basket.php'});
		$('.'+name+'_trigger').click();
	}
}

if(!funcDefined("scroll_block")) {
	function scroll_block(block){
		var topPos = block.offset().top,
			headerH = $('header').outerHeight(true,true);
		if($(".stores_tab").length){
			$(".stores_tab").addClass("current").siblings().removeClass("current");
		}else{
			$(".prices_tab").addClass("current").siblings().removeClass("current");
			if($(".prices_tab .opener").length && !$(".prices_tab .opener .opened").length){
				var item = $(".prices_tab .opener").first();
				item.find(".opener_icon").addClass("opened");
				item.parents("tr").addClass("nb")
				item.parents("tr").next(".offer_stores").find(".stores_block_wrap").slideDown(200);
			}
		}
		$('html,body').animate({'scrollTop':topPos-30},150);
	}
}

if(!funcDefined("jqmEd")) {
	var jqmEd = function (name, form_id, open_trigger, requestData, selector, requestTitle, isButton, thButton){
		if(typeof(requestData) == "undefined"){
			requestData = '';
		}
		if(typeof(selector) == "undefined"){
			selector = false;
		}
		$('body').find('.'+name+'_frame').remove();
		$('body').append('<div class="'+name+'_frame popup"></div>');
		if(typeof open_trigger == "undefined" ){
			$('.'+name+'_frame').jqm({trigger: '.'+name+'_frame.popup',onHide: function(hash) { onHidejqm(name,hash); }, onLoad: function( hash ){ onLoadjqm( name , hash , requestData, selector); }, ajax: arOptimusOptions["SITE_DIR"]+'ajax/form.php?form_id='+form_id+(requestData.length ? '&' + requestData : '')});
		}else{
			if(name == 'enter'){
				$('.'+name+'_frame').jqm({trigger: open_trigger,onHide: function(hash) { onHidejqm(name,hash); },  onLoad: function( hash ){ onLoadjqm( name , hash , requestData, selector); }, ajax: arOptimusOptions["SITE_DIR"]+'ajax/auth.php'});
			}else if(name=='basket_error'){
				$('.'+name+'_frame').jqm({trigger: open_trigger, onHide: function(hash) { onHidejqm(name,hash); }, onLoad: function( hash ){ onLoadjqm( name , hash , requestData, selector, requestTitle, isButton, thButton); }, ajax: arOptimusOptions["SITE_DIR"]+'ajax/basket_error.php'});
			}else{
				$('.'+name+'_frame').jqm({trigger: open_trigger, onHide: function(hash) { onHidejqm(name,hash); }, onLoad: function( hash ){ onLoadjqm( name , hash , requestData, selector); }, ajax: arOptimusOptions["SITE_DIR"]+'ajax/form.php?form_id='+form_id+(requestData.length ? '&' + requestData : '')});
			}
			$(open_trigger).dblclick(function(){return false;})
		}
		return true;
	}
}

if (!funcDefined("replaceBasketPopup")){
	function replaceBasketPopup (hash){
		if(typeof hash != "undefined"){
			hash.w.hide();
			hash.o.hide();
		}
	}
}

if(!funcDefined("waitLayer")){
	function waitLayer(delay, callback){
		if(typeof dataLayer != 'undefined'){
			if(typeof callback == 'function'){
				callback();
			}
		}
		else{
			setTimeout(function() {
				waitLayer(delay, callback);
			}, delay);
		}
	}
}

if(!funcDefined("waitCounter")){
	waitCounter = function(idCounter, delay, callback){
		var obCounter = window['yaCounter' + idCounter];
		if(typeof obCounter == 'object'){
			if(typeof callback == 'function'){
				callback();
			}
		}
		else{
			setTimeout(function(){
				waitCounter(idCounter, delay, callback);
			}, delay);
		}
	}
}

if(!funcDefined("InitTopestMenuGummi")){
	InitTopestMenuGummi = function(){
		if(!isOnceInited){
			function _init(){
				var arItems = $menuTopest.find('>li:not(.more)');
				var cntItems = arItems.length;
				if(cntItems){
					var itemsWidth = 0;
					for(var i = 0; i < cntItems; ++i){
						var item = arItems.eq(i);
						var itemWidth = item.actual('outerWidth',{includeMargin: true});
						arItemsHideWidth[i] = (itemsWidth += itemWidth) + (i !== (cntItems - 1) ? moreWidth : 0);
					}
				}
			}

			function _gummi(){
				var rowWidth = $menuTopest.actual('innerWidth');
				var arItems = $menuTopest.find('>li:not(.more),li.more>.dropdown>li');
				var cntItems = arItems.length;
				if(cntItems){
					var bMore = false;
					for(var i = cntItems - 1; i >= 0; --i){
						var item = arItems.eq(i);
						var bInMore = item.parents('.more').length > 0;
						if(!bInMore){
							if(arItemsHideWidth[i] > rowWidth){
								if(!bMore){
									bMore = true;
									more.removeClass('hidden');
								}
								var clone = item.clone();
								clone.find('>a').addClass('dark_font');
								clone.prependTo(moreDropdown);
								item.addClass('cloned');
							}
						}
					}
					for(var i = 0; i < cntItems; ++i){
						var item = arItems.eq(i);
						var bInMore = item.parents('.more').length > 0;
						if(bInMore){
							if(arItemsHideWidth[i] <= rowWidth){
								if(i === (cntItems - 1)){
									bMore = false;
									more.addClass('hidden');
								}
								var clone = item.clone();
								clone.find('>a').removeClass('dark_font');
								clone.insertBefore(more);
								item.addClass('cloned');
							}
						}
					}
					$menuTopest.find('li.cloned').remove();
				}
			}

			var $menuTopest = $('.menu.topest');
			var more = $menuTopest.find('>.more');
			var moreDropdown = more.find('>.dropdown');
			var moreWidth = more.actual('outerWidth',{includeMargin: true});
			var arItemsHideWidth = [];
			ignoreResize.push(true);
			_init();
			_gummi();
			ignoreResize.pop();

			$(window).resize(function(){
				ignoreResize.push(true);
				_gummi();
				ignoreResize.pop();
			});
		}
	}
}

if(!funcDefined("InitTopMenuGummi")){
	InitTopMenuGummi = function(){
		function _init(){
			var arItems = $topMenu.closest('.wrap_menu').find('.inc_menu .menu_top_block >li:not(.more)');
			var cntItems = arItems.length;
			if(cntItems){
				var itemsWidth = 0;
				for(var i = 0; i < cntItems; ++i){
					var item = arItems.eq(i);
						var itemWidth = item.actual('outerWidth');
						arItemsHideWidth[i] = (itemsWidth += itemWidth) + (i !== (cntItems - 1) ? moreWidth : 0);
				}
			}

		}

		function _gummi(){
			var rowWidth = $wrapMenu.actual('innerWidth') - $wrapMenuLeft.actual('innerWidth');
			var arItems = $topMenu.find('>li:not(.more):not(.catalog),li.more>.dropdown>li');
			var cntItems = arItems.length;

			if(cntItems){
				var bMore = false;
				for(var i = cntItems - 1; i >= 0; --i){
					var item = arItems.eq(i);
					var bInMore = item.parents('.more').length > 0;
					if(!bInMore){
						if(arItemsHideWidth[i] > rowWidth){
							if(!bMore){
								bMore = true;
								more.removeClass('hidden');
							}
							var clone = item.clone();
							clone.find('>.dropdown').removeAttr('style').removeClass('toleft');
							clone.find('>a').addClass('dark_font').removeAttr('style');
							clone.prependTo(moreDropdown);
							item.addClass('cloned');
						}
					}
				}
				for(var i = 0; i < cntItems; ++i){
					var item = arItems.eq(i);
					var bInMore = item.parents('.more').length > 0;
					if(bInMore){
						if(arItemsHideWidth[i] <= rowWidth){
							if(i === (cntItems - 1)){
								bMore = false;
								more.addClass('hidden');
							}
							var clone = item.clone();
							clone.find('>a').removeClass('dark_font');
							clone.insertBefore(more);
							item.addClass('cloned');
						}
					}
				}
				$topMenu.find('li.cloned').remove();

				var cntItemsVisible = $topMenu.find('>li:not(.more):not(.catalog)').length;
				var o = rowWidth - arItemsHideWidth[cntItemsVisible - 1];
				var itemsPaddingAdd = Math.floor(o / (cntItemsVisible + (more.hasClass('hidden') ? 0 : 1)));
				var itemsPadding_new = itemsPadding_min + itemsPaddingAdd;
				var itemsPadding_new_l = Math.floor(itemsPadding_new / 2);
				var itemsPadding_new_r = itemsPadding_new - itemsPadding_new_l;

				$topMenu.find('>li:not(.catalog):visible>a').each(function(){
					$(this).css({'padding-left': itemsPadding_new_l + 'px'});
					$(this).css({'padding-right': itemsPadding_new_r + 'px'});
				});

				var lastItemPadding_new = itemsPadding_new + o - (cntItemsVisible + (more.is(':visible') ? 1 : 0)) * itemsPaddingAdd;
				var lastItemPadding_new_l = Math.floor(lastItemPadding_new / 2);
				var lastItemPadding_new_r = lastItemPadding_new - lastItemPadding_new_l;
				$topMenu.find('>li:visible').last().find('>a').css({'padding-left': lastItemPadding_new_l + 'px'});
				$topMenu.find('>li:visible').last().find('>a').css({'padding-right': lastItemPadding_new_r + 'px'});
				CheckTopMenuFullCatalogSubmenu();
			}
		}

		var $topMenu = $('.menu_top_block');
		var $wrapMenu = $topMenu.parents('.wrap_menu');
		var $wrapMenuLeft = $wrapMenu.find('.catalog_menu_ext');
		var more = $topMenu.find('>.more');
		var moreWidth = more.actual('outerWidth',{includeMargin: true});
		more.addClass('hidden');
		var arItemsHideWidth = [];
		var moreDropdown = more.find('>.dropdown');
		var itemsPadding = parseInt(more.find('>a').css('padding-left')) * 2;
		var itemsPadding_min = itemsPadding;

		// setTimeout(function(){
			ignoreResize.push(true);
			_init();
			_gummi();
			ignoreResize.pop();
		// }, 100)

		$(window).resize(function(){
			ignoreResize.push(true);
			_gummi();
			ignoreResize.pop();
		});

		/*BX.addCustomEvent('onTopPanelFixUnfix', function(eventdata) {
			ignoreResize.push(true);
			_gummi();
			ignoreResize.pop();
		});*/
	}
}

if(!funcDefined("checkCounters")){
	function checkCounters(name){
		if(typeof name !== "undefined"){
			if(name == "google" && (arOptimusOptions["COUNTERS"]["GOOGLE_ECOMERCE"] == "Y" && arOptimusOptions["COUNTERS"]["GOOGLE_COUNTER"] > 0)){
				return true;
			}
			else if(name == "yandex" && (arOptimusOptions['COUNTERS']['USE_YA_COUNTER'] == 'Y' && arOptimusOptions["COUNTERS"]["YANDEX_ECOMERCE"] == "Y" && arOptimusOptions["COUNTERS"]["YANDEX_COUNTER"] > 0)){
				return true;
			}
			else{
				return false;
			}
		}
		else if((arOptimusOptions['COUNTERS']['USE_YA_COUNTER'] == 'Y' && arOptimusOptions["COUNTERS"]["YANDEX_ECOMERCE"] == "Y" && arOptimusOptions["COUNTERS"]["YANDEX_COUNTER"] > 0) || (arOptimusOptions["COUNTERS"]["GOOGLE_ECOMERCE"] == "Y" && arOptimusOptions["COUNTERS"]["GOOGLE_COUNTER"] > 0)) {
			return true;
		}
		else{
			return false;
		}
	}
}

if(!funcDefined("addBasketCounter")){
	function addBasketCounter(id){
		if(arOptimusOptions['COUNTERS']['USE_BASKET_GOALS'] !== 'N'){
			var eventdata = {goal: 'goal_basket_add', params: {id: id}};
			BX.onCustomEvent('onCounterGoals', [eventdata]);
		}
		if(checkCounters()){
			$.ajax({
				url:arOptimusOptions['SITE_DIR'] + "ajax/goals.php",
				dataType: "json",
				type: "POST",
				data: {"ID": id},
				success: function(item){
					if(!!item && !!item.ID){
						waitLayer(100, function() {
							dataLayer.push({
								"event": arOptimusOptions["COUNTERS"]['GOOGLE_EVENTS']['ADD2BASKET'],
							    "ecommerce": {
							    	"currencyCode": item.CURRENCY,
							        "add": {
							            "products": [{
						                    "id": item.ID,
						                    "name": item.NAME,
						                    "price": item.PRICE,
						                    "brand": item.BRAND,
						                    "category": item.CATEGORY,
						                    "quantity": item.QUANTITY
						                }]
							        }
							    }
							});
						});
					}
				}
			});
		}
	}
}

if(!funcDefined("purchaseCounter")){
	function purchaseCounter(order_id, type, callback){
		if(checkCounters()){
			$.ajax({
				url:arOptimusOptions['SITE_DIR'] + "ajax/goals.php",
				dataType: "json",
				type: "POST",
				data: {"ORDER_ID": order_id, "TYPE": type},
				success: function(order){
					var products = [];
					if(order.ITEMS){
						for(var i in order.ITEMS){
							products.push({
								"id": order.ITEMS[i].ID,
								"sku": order.ITEMS[i].ID,
			                    "name": order.ITEMS[i].NAME,
			                    "price": order.ITEMS[i].PRICE,
			                    "brand": order.ITEMS[i].BRAND,
			                    "category": order.ITEMS[i].CATEGORY,
			                    "quantity": order.ITEMS[i].QUANTITY
							});
						}
					}
					if(order.ID){
						waitLayer(100, function() {
							dataLayer.push({
							    "ecommerce": d = {
							    	"purchase": {
								    	"actionField":{
								    		"id": order.ACCOUNT_NUMBER,
								    		"shipping": order.PRICE_DELIVERY,
								    		"tax": order.TAX_VALUE,
								    		"list": type,
								    		"revenue": order.PRICE
								    	},
							            "products": products
							        }
							    }
							});

							if(typeof callback !== 'undefined'){
								callback(d);
							}
						});
					}
					else{
						if(typeof callback !== 'undefined'){
							callback(false);
						}
					}
				},
				error: function(){
					if(typeof callback !== 'undefined'){
						callback(false);
					}
				}
			});
		}
		else{
			if(typeof callback !== 'undefined'){
				callback(false);
			}
		}
	}
}

if(!funcDefined("viewItemCounter")){
	function viewItemCounter(id, price_id){
		if(checkCounters()){
			$.ajax({
				url:arOptimusOptions['SITE_DIR'] + "ajax/goals.php",
				dataType: "json",
				type: "POST",
				data: {"PRODUCT_ID": id, "PRICE_ID": price_id},
				success: function(item){
					if(item.ID){
						waitLayer(100, function() {
							dataLayer.push({
								//"event": "",
								"ecommerce": {
									"detail": {
										"products": [{
											"id": item.ID,
											"name": item.NAME,
											"price": item.PRICE,
											"brand": item.BRAND,
											"category": item.CATEGORY
										}]
									}
								}
							});
						});
					}
				}
			});
		}
	}
}

if(!funcDefined("checkoutCounter")){
	function checkoutCounter(step, option, callback){
		if(checkCounters('google')){
			$.ajax({
				url:arOptimusOptions['SITE_DIR'] + "ajax/goals.php",
				dataType: "json",
				type: "POST",
				data: {"BASKET": "Y"},
				success: function(basket){
					var products = [];
					if(basket.ITEMS){
						for(var i in basket.ITEMS){
							products.push({
								"id": basket.ITEMS[i].ID,
			                    "name": basket.ITEMS[i].NAME,
			                    "price": basket.ITEMS[i].PRICE,
			                    "brand": basket.ITEMS[i].BRAND,
			                    "category": basket.ITEMS[i].CATEGORY,
			                    "quantity": basket.ITEMS[i].QUANTITY
							});
						}
					}
					if(products){
						waitLayer(100, function() {
							dataLayer.push({
								"event": arOptimusOptions["COUNTERS"]['GOOGLE_EVENTS']['CHECKOUT_ORDER'],
							    "ecommerce": {
							    	"actionField":{
							    		"step": step,
							    		"option": option
							    	},
							        "products": products
							    },
							    /*"eventCallback": function() {
							    	if((typeof callback !== 'undefined') && (typeof callback === 'function')){
							    		callback();
							    	}
							   }*/
							});
						});
					}
				}
			});
		}
	}
}

if(!funcDefined("delFromBasketCounter")){
	function delFromBasketCounter(id, callback){
		if(checkCounters()){
			$.ajax({
				url:arOptimusOptions['SITE_DIR'] + "ajax/goals.php",
				dataType: "json",
				type: "POST",
				data: {"ID": id},
				success: function(item){
					if(item.ID){
						waitLayer(100, function() {
							dataLayer.push({
								"event": arOptimusOptions["COUNTERS"]['GOOGLE_EVENTS']['REMOVE_BASKET'],
							    "ecommerce": {
							        "remove": {
							            "products": [{
						                    "id": item.ID,
						                    "name": item.NAME,
						                    "category": item.CATEGORY
						                }]
							        }
							    }
							});
							if(typeof callback == 'function'){
								callback();
							}
						});
					}
				}
			});
		}
	}
}

if(!funcDefined("setHeightCompany")){
	function setHeightCompany(){
		$('.md-50.img').height($('.md-50.big').outerHeight()-35);
	}
}

if(!funcDefined("initSly")){
	function initSly(){
		var $frame  = $(document).find('.frame');
		var $slidee = $frame.children('ul').eq(0);
		var $wrap   = $frame.parent();

		if(arOptimusOptions["PAGES"]["CATALOG_PAGE"]){
			$frame.sly({
				horizontal: 1,
				itemNav: 'basic',
				smart: 1,
				mouseDragging: 0,
				touchDragging: 0,
				releaseSwing: 0,
				startAt: 0,
				scrollBar: $wrap.find('.scrollbar'),
				scrollBy: 1,
				speed: 300,
				elasticBounds: 0,
				easing: 'swing',
				dragHandle: 1,
				dynamicHandle: 1,
				clickBar: 1,

				// Buttons
				forward: $wrap.find('.forward'),
				backward: $wrap.find('.backward'),
			});
			$frame.sly('reload');
		}
	}
}

if(!funcDefined("createTableCompare")){
	function createTableCompare(originalTable, appendDiv, cloneTable){

		try{
			var clone = originalTable.clone().removeAttr('id').addClass('clone');
			if(cloneTable.length){
				cloneTable.remove();
				appendDiv.html('');
				appendDiv.html(clone);
			}else{
				appendDiv.append(clone);
			}
		}
		catch(e){}
		finally{

		}
	}
}

if(!funcDefined('fillBasketPropsExt')){
	fillBasketPropsExt = function(that, prop_code, basket_prop_div){
		var
			i = 0,
			propCollection = null,
			foundValues = false,
			basketParams = {},
			obBasketProps = null;

		// obBasketProps = that.closest('.catalog_detail').find('.basket_props_block');
		obBasketProps = BX(basket_prop_div);

		if (!!obBasketProps)
		{
			propCollection = obBasketProps.getElementsByTagName('select');
			if (!!propCollection && !!propCollection.length)
			{
				for (i = 0; i < propCollection.length; i++)
				{
					if (!propCollection[i].disabled)
					{
						switch(propCollection[i].type.toLowerCase())
						{
							case 'select-one':
								basketParams[propCollection[i].name] = propCollection[i].value;
								foundValues = true;
								break;
							default:
								break;
						}
					}
				}
			}
			propCollection = obBasketProps.getElementsByTagName('input');
			if (!!propCollection && !!propCollection.length)
			{
				for (i = 0; i < propCollection.length; i++)
				{
					if (!propCollection[i].disabled)
					{
						switch(propCollection[i].type.toLowerCase())
						{
							case 'hidden':
								basketParams[propCollection[i].name] = propCollection[i].value;
								foundValues = true;
								break;
							case 'radio':
								if (propCollection[i].checked)
								{
									basketParams[propCollection[i].name] = propCollection[i].value;
									foundValues = true;
								}
								break;
							default:
								break;
						}
					}
				}
			}
		}
		if (!foundValues)
		{
			basketParams[prop_code] = [];
			basketParams[prop_code][0] = 0;
		}
		return basketParams;
	}
}
if(!funcDefined('showBasketError')){
	showBasketError = function(mess, title, addButton, th){
		var title_set=(title ? title : BX.message("ERROR_BASKET_TITLE")),
			isButton="N",
			thButton="";
		if(typeof addButton!==undefined){
			isButton="Y";
		}
		if(typeof th!==undefined){
			thButton=th;
		}
		$("body").append("<span class='add-error-bakset' style='display:none;'></span>");
		jqmEd('basket_error', 'error-bakset', '.add-error-bakset', mess, this, title_set, isButton, thButton);
		$("body .add-error-bakset").click();
		$("body .add-error-bakset").remove();
	}
}

if(!funcDefined("isRealValue")){
	function isRealValue(obj){
		return obj && obj !== "null" && obj!== "undefined";
	}
}

if(!funcDefined("rightScroll")){
	function rightScroll(prop, id){
		var el = BX('prop_' + prop + '_' + id);
		if (el) {
			var curVal = parseInt(el.style.marginLeft);
			if (curVal >= 0) el.style.marginLeft = curVal - 20 + '%';
		}
	}
}

if(!funcDefined("leftScroll")){
	function leftScroll(prop, id){
		var el = BX('prop_' + prop + '_' + id);
		if (el) {
			var curVal = parseInt(el.style.marginLeft);
			if (curVal < 0) el.style.marginLeft = curVal + 20 + '%';
		}
	}
}

if(!funcDefined("InitOrderCustom")){
	InitOrderCustom = function () {
		$('.ps_logo img').wrap('<div class="image"></div>');

		$('#bx-soa-order .radio-inline').each(function() {
			if ($(this).find('input').attr('checked') == 'checked') {
				$(this).addClass('checked');
			}
		});

		$('#bx-soa-order .checkbox input[type=checkbox]').each(function() {
			if ($(this).attr('checked') == 'checked')
				$(this).parent().addClass('checked');
		});

		$('#bx-soa-order .bx-authform-starrequired').each(function() {
			var html = $(this).html();
			$(this).closest('label').append('<span class="bx-authform-starrequired"> '+ html + '</span>');
			$(this).detach();
		});
		$('.bx_ordercart_coupon').each(function() {
			if ($(this).find('.bad').length)
				$(this).addClass('bad');
			else if ($(this).find('.good').length)
				$(this).addClass('good');
		});
		/*if (typeof(propsMap) !== 'undefined') {
			$(propsMap).on('click', function () {
				var value = $('#orderDescription').val();
				if ($('#orderDescription')) {
					if (value != '') {
						$('#orderDescription').closest('.form-group').addClass('value_y');
					}
				}
			});
		}*/
	}
}

if(!funcDefined("InitLabelAnimation")){
	InitLabelAnimation = function(className) {
		// Fix order labels
		if (!$(className).length) {
			return;
		}
		$(className).find('.form-group').each(function() {
			if ($(this).find('input[type=text], textarea').length && !$(this).find('.dropdown-block').length && $(this).find('input[type=text], textarea').val() != '') {
				$(this).addClass('value_y');
			}
		});

		$(document).on('click', className+' .form-group:not(.bx-soa-pp-field) label', function() {
			$(this).parent().find('input, textarea').focus();
		});

		$(document).on('focusout', className+' .form-group:not(.bx-soa-pp-field) input, '+className+' .form-group:not(.bx-soa-pp-field) textarea', function() {
			var value = $(this).val();
			if (value != '' && !$(this).closest('.form-group').find('.dropdown-block').length && !$(this).closest('.form-group').find('#profile_change').length) {
				$(this).closest('.form-group').addClass('value_y');
			}else{
				$(this).closest('.form-group').removeClass('value_y');
			}
		});

		$(document).on('focus', className+' .form-group:not(.bx-soa-pp-field) input, '+className+' .form-group:not(.bx-soa-pp-field) textarea', function() {
			if (!$(this).closest('.form-group').find('.dropdown-block').length && !$(this).closest('.form-group').find('#profile_change').length && !$(this).closest('.form-group').find('[name=PERSON_TYPE_OLD]').length ) {
				$(this).closest('.form-group').addClass('value_y');
			}
		});
	};
}

checkPopupWidth = function(){
	$('.popup.show').each(function() {
		var width_form = $(this).actual('width');
		$(this).css({
			'margin-left': ($(window).width() > width_form ? '-' + width_form / 2 + 'px' : '-' + $(window).width() / 2 + 'px'),
		});
	});
}

checkCaptchaWidth = function(){
	$('.captcha-row').each(function() {
		var width = $(this).actual('width');
		if($(this).hasClass('b')){
			if(width > 320){
				$(this).removeClass('b');
			}
		}
		else{
			if(width <= 320){
				$(this).addClass('b');
			}
		}
	});
}

checkFormWidth = function(){
	$('.form .form_left').each(function() {
		var form = $(this).parents('.form');
		var width = form.actual('width');
		if(form.hasClass('b')){
			if(width > 417){
				form.removeClass('b');
			}
		}
		else{
			if(width <= 417){
				form.addClass('b');
			}
		}
	});
}

checkFormControlWidth = function(){
	$('.form-control').each(function() {
		var width = $(this).actual('width');
		var labelWidth = $(this).find('label:not(.error) > span').actual('width');
		var errorWidth = $(this).find('label.error').actual('width');
		if(errorWidth > 0){
			if($(this).hasClass('h')){
				if(width > (labelWidth + errorWidth + 5)){
					$(this).removeClass('h');
				}
			}
			else{
				if(width <= (labelWidth + errorWidth + 5)){
					$(this).addClass('h');
				}
			}
		}
		else{
			$(this).removeClass('h');
		}
	});
}

scrollToTop = function(){
	if(arOptimusOptions['THEME']['SCROLLTOTOP_TYPE'] !== 'NONE'){
		var _isScrolling = false;
		// Append Button
		$('body').append($('<a />').addClass('scroll-to-top ' + arOptimusOptions['THEME']['SCROLLTOTOP_TYPE'] + ' ' + arOptimusOptions['THEME']['SCROLLTOTOP_POSITION']).attr({'href': '#', 'id': 'scrollToTop'}));
		$('#scrollToTop').click(function(e){
			e.preventDefault();
			$('body, html').animate({scrollTop : 0}, 500);
			return false;
		});
		// Show/Hide Button on Window Scroll event.
		$(window).scroll(function(){
			if(!_isScrolling) {
				_isScrolling = true;
				if($(window).scrollTop() > 150){
					$('#scrollToTop').stop(true, true).addClass('visible');
					_isScrolling = false;
				}
				else{
					$('#scrollToTop').stop(true, true).removeClass('visible');
					_isScrolling = false;
				}
				checkScrollToTop();
			}
		});
	}
}

checkScrollToTop = function(){
	var bottom = 55,
		scrollVal = $(window).scrollTop(),
		windowHeight = $(window).height(),
		footerOffset = $('footer').offset().top +70;

	if(arOptimusOptions['THEME']['SCROLLTOTOP_POSITION'] == 'CONTENT'){
		warpperWidth = $('body > .wrapper > .wrapper_inner').width();
		$('#scrollToTop').css('margin-left', Math.ceil(warpperWidth / 2) + 23);
	}

	if(scrollVal + windowHeight > footerOffset){
		$('#scrollToTop').css('bottom', bottom  + scrollVal + windowHeight - footerOffset - 0);
	}
	else if(parseInt($('#scrollToTop').css('bottom')) > bottom){
		$('#scrollToTop').css('bottom', bottom);
	}
}

CheckObjectsSizes = function() {
	$('.container iframe,.container object,.container video').each(function() {
		var height_attr = $(this).attr('height');
		var width_attr = $(this).attr('width');
		if (height_attr && width_attr) {
			$(this).css('height', $(this).outerWidth() * height_attr / width_attr);
		}
	});
}

if(!funcDefined('reloadTopBasket')){
	var reloadTopBasket = function reloadTopBasket(action, basketWindow, speed, delay, slideDown, item){
		var obj={
				"PARAMS": $('#top_basket_params').val(),
				"ACTION": action
			};
		if(typeof item !== "undefined" ){
			obj.delete_top_item='Y';
			obj.delete_top_item_id=item.data('id');
		}
		$.post( arOptimusOptions['SITE_DIR']+"ajax/show_basket_popup.php", obj, $.proxy(function( data ){
			$(basketWindow).html(data);

			getActualBasket();

			if(arOptimusOptions['THEME']['SHOW_BASKET_ONADDTOCART'] !== 'N'){
				if($(window).outerWidth() > 520){
					if(slideDown=="Y")
						$(basketWindow).find('.basket_popup_wrapp').stop(true,true).slideDown(speed);
					clearTimeout(basketTimeoutSlide);
					basketTimeoutSlide = setTimeout(function() {
						var _this = $('#basket_line').find('.basket_popup_wrapp');
						if (_this.is(':hover')) {
							_this.show();
						}else{
							$('#basket_line').find('.basket_popup_wrapp').slideUp(speed);
						}
					},delay);
				}
			}
		}))
	}
}

/*countdown start*/
if(!funcDefined('initCountdown')){
	var initCountdown = function initCountdown(){
		if( $('.view_sale_block').size() ){
			$('.view_sale_block').each(function(){
				var activeTo=$(this).find('.active_to').text(),
					dateTo= new Date(activeTo.replace(/(\d+)\.(\d+)\.(\d+)/, '$3/$2/$1'));
				$(this).find('.countdown').countdown({until: dateTo, format: 'dHMS', padZeroes: true, layout: '{d<}<span class="days item">{dnn}<div class="text">{dl}</div></span>{d>} <span class="hours item">{hnn}<div class="text">{hl}</div></span> <span class="minutes item">{mnn}<div class="text">{ml}</div></span> <span class="sec item">{snn}<div class="text">{sl}</div></span>'}, $.countdown.regionalOptions['ru']);
			})
		}
	}
}
/*countdown end*/

var isOnceInited = insertFilter = false;
var animationTime = 200;
var delayTime = 200;
var topMenuEnterTimer = false;
var isMobile = jQuery.browser.mobile;

if(isMobile){
	document.documentElement.className += ' mobile';
}

/*filter start*/
if(!funcDefined('checkVerticalMobileFilter')){
	var checkVerticalMobileFilter = function checkVerticalMobileFilter(){
		if($('.right_block1.catalog.vertical').length){
			if(typeof window['trackBarOptions'] !== 'undefined'){
				window['trackBarValues'] = {}
				for(key in window['trackBarOptions']){
					window['trackBarValues'][key] = {
						'leftPercent': window['trackBar' + key].leftPercent,
						'leftValue': window['trackBar' + key].minInput.value,
						'rightPercent': window['trackBar' + key].rightPercent,
						'rightValue': window['trackBar' + key].maxInput.value,
					}
				}
			}

			if(window.matchMedia('(max-width: 950px)').matches){
				if(!insertFilter){
					$('.js_filter .bx_filter.bx_filter_vertical').html($('.left_block .bx_filter.bx_filter_vertical').html());
					$('.left_block .bx_filter.bx_filter_vertical .bx_filter_section').remove();
					insertFilter=true;
				}
			}else{
				if(insertFilter){
					$('.left_block .bx_filter.bx_filter_vertical').html($('.js_filter .bx_filter.bx_filter_vertical').html());
					$('.js_filter .bx_filter.bx_filter_vertical .bx_filter_section').remove();
					insertFilter=false;
				}
			}

			if(typeof window['trackBarOptions'] !== 'undefined'){
				for(key in window['trackBarOptions']){
					window['trackBarOptions'][key].leftPercent = window['trackBarValues'][key].leftPercent;
					window['trackBarOptions'][key].rightPercent = window['trackBarValues'][key].rightPercent;
					window['trackBarOptions'][key].curMinPrice = window['trackBarValues'][key].leftValue;
					window['trackBarOptions'][key].curMaxPrice = window['trackBarValues'][key].rightValue;
					window['trackBar' + key] = new BX.Iblock.SmartFilter(window['trackBarOptions'][key]);
					window['trackBar' + key].minInput.value = window['trackBarValues'][key].leftValue;
					window['trackBar' + key].maxInput.value = window['trackBarValues'][key].rightValue;
				}
			}
		}
	}
}
/*filter end*/

// TOP MENU ANIMATION
$(document).on('click', '.menu_top_block>li .more a', function(){
	$this = $(this);
	$this.parents('.dropdown').first().find('>.hidden').removeClass('hidden');
	$this.parent().addClass('hidden');
	setTimeout(function(){
		$this.parent().remove();
	}, 500);
});

$(document).on('mouseenter', '.menu_top_block.catalogfirst>li>.dropdown>li.full', function(){
	var $submenu = $(this).find('>.dropdown');

	if($submenu.length){
		if(topMenuEnterTimer){
			clearTimeout(topMenuEnterTimer);
			topMenuEnterTimer = false;
		}
	}
});

$(document).on('mouseenter', '.menu_top_block>li:not(.full)', function(){
	var $submenu = $(this).find('>.dropdown');

	if($submenu.length && !$submenu.hasClass('visible')){
		var $menu = $(this).parents('.menu');
		var $wrapmenu = $menu.parents('.wrap_menu');
		var wrapMenuWidth = $wrapmenu.actual('outerWidth');
		var wrapMenuLeft = $wrapmenu.offset().left;
		var wrapMenuRight = wrapMenuLeft + wrapMenuWidth;
		var left = wrapMenuRight - ($(this).offset().left + $submenu.actual('outerWidth'));
		if(window.matchMedia('(min-width: 951px)').matches && $(this).hasClass('catalog') && ( $('.banner_auto').hasClass('catalog_page') || $('.banner_auto').hasClass('front_page'))){
			return;
		}
		if(left < 0){
			$submenu.css({left: left + 'px'});
		}
		$submenu.stop().slideDown(animationTime, function(){
			$submenu.css({height: '', 'overflow':'visible'});
		});


		$(this).on('mouseleave', function(){
			var leaveTimer = setTimeout(function(){
				$submenu.stop().slideUp(animationTime, function(){
					$submenu.css({left: ''});
				});
			}, delayTime);

			$(this).on('mouseenter', function(){
				if(leaveTimer){
					clearTimeout(leaveTimer);
					leaveTimer = false;
				}
			});
		});
	}

});

$(document).on('mouseenter', '.menu_top_block>li .dropdown>li', function(){
	var $this = $(this);
	var $submenu = $this.find('>.dropdown');

	if($submenu.length && ((!$this.parents('.full').length && !$this.hasClass('full')) || $this.parents('.more').length)){
		var $menu = $this.parents('.menu');
		var $wrapmenu = $menu.parents('.wrap_menu');
		var arParentSubmenuForOpacity = [];
		topMenuEnterTimer = setTimeout(function(){

			var wrapMenuWidth = $wrapmenu.actual('outerWidth');
			var wrapMenuLeft = $wrapmenu.offset().left;
			var wrapMenuRight = wrapMenuLeft + wrapMenuWidth;
			var $parentSubmenu = $this.parent();
			var bToLeft = $parentSubmenu.hasClass('toleft') ? true : false;
			if(!bToLeft){
				bToLeft = $this.offset().left + $this.actual('outerWidth') + $submenu.actual('outerWidth') > wrapMenuRight;
			}
			else{
				bToLeft = $this.offset().left + $this.actual('outerWidth') - $submenu.actual('outerWidth') < wrapMenuLeft;
			}

			if(bToLeft){
				$this.find('>.dropdown').addClass('toleft').show();
			}
			else{
				$this.find('>.dropdown').removeClass('toleft').show();
			}
			var submenuLeft = $submenu.offset().left;
			var submenuRight = submenuLeft + $submenu.actual('outerWidth');

			$this.parents('.dropdown').each(function(){
				var $this = $(this);
				var leftOffset = $this.offset().left;
				var rightOffset = leftOffset + $this.actual('outerWidth');
				if(leftOffset >= submenuLeft  && leftOffset < (submenuRight - 1) || (rightOffset > (submenuLeft + 1) && rightOffset <= submenuRight)){
					arParentSubmenuForOpacity.push($this);
					$this.find('>li>a').css({opacity: '0.1'});
				}
			});
		}, delayTime);

		$this.unbind('mouseleave');
		$this.on('mouseleave', function(){
			var leaveTimer = setTimeout(function(){
				$this.find('.dropdown').removeClass('toleft').hide();
				if(arParentSubmenuForOpacity.length){
					for(i in arParentSubmenuForOpacity){
						arParentSubmenuForOpacity[i].find('>li>a').css({opacity: ''});
					}
				}
			}, delayTime);

			$this.unbind('mouseenter');
			$this.on('mouseenter', function(){
				if(leaveTimer){
					clearTimeout(leaveTimer);
					leaveTimer = false;
				}
			});
		});
	}
});

getGridSize = function(counts) {
	var counts_item=1;
		//wide
		if(window.matchMedia('(min-width: 1200px)').matches){
			counts_item=counts[0];
		}

		//large
		if(window.matchMedia('(max-width: 1200px)').matches){
			counts_item=counts[1];
		}

		//middle
		if(window.matchMedia('(max-width: 992px)').matches){
			counts_item=counts[2];
		}

		//small
		if(counts[3]){
			if(window.matchMedia('(max-width: 600px)').matches){
				counts_item=counts[3];
			}
		}

		//exsmall
		if(counts[4]){
			if(window.matchMedia('(max-width: 400px)').matches){
				counts_item=counts[4];
			}
		}
	return counts_item;
}

CheckFlexSlider = function(){
	$('.flexslider:not(.thmb)').each(function(){
		var slider = $(this);
		slider.resize();
		var counts = slider.data('flexslider').vars.counts;
		if(typeof(counts) != 'undefined'){
			var cnt = getGridSize(counts);
			var to0 = (cnt != slider.data('flexslider').vars.minItems || cnt != slider.data('flexslider').vars.maxItems || cnt != slider.data('flexslider').vars.move);
			if(to0){
				slider.data('flexslider').vars.minItems = cnt;
				slider.data('flexslider').vars.maxItems = cnt;
				slider.data('flexslider').vars.move = cnt;
				slider.flexslider(0);
				slider.resize();
				slider.resize(); // twise!
			}
		}
	});
}

InitFlexSlider = function() {
	$('.flexslider:not(.thmb):not(.flexslider-init)').each(function(){
		var slider = $(this);
		var options;
		var defaults = {
			animationLoop: false,
			controlNav: false,
			directionNav: true,
			animation: "slide"
		}
		var config = $.extend({}, defaults, options, slider.data('plugin-options'));
		if(!slider.parent().hasClass('top_slider_wrapp')){
			if(typeof(config.counts) != 'undefined' && config.direction !== 'vertical'){
				config.maxItems =  getGridSize(config.counts);
				config.minItems = getGridSize(config.counts);
				config.move = getGridSize(config.counts);
				config.itemWidth = 200;
			}

			config.after = config.start = function(slider){
				var eventdata = {slider: slider};
				BX.onCustomEvent('onSlide', [eventdata]);
			}

			config.end = function(slider){
				var eventdata = {slider: slider};
				BX.onCustomEvent('onSlideEnd', [eventdata]);
			}

			slider.flexslider(config).addClass('flexslider-init');
			if(config.controlNav)
				slider.addClass('flexslider-control-nav');
			if(config.directionNav)
				slider.addClass('flexslider-direction-nav');
		}
	});
}

InitZoomPict = function() {
	if($('.zoom_picture').length){
		var slide=$('.zoom_picture').closest('.slides');
		var zoomer = $('.zoom_picture'),
			options,
			defaults = {
				zoomWidth: 200,
				zoomHeight: 200,
				adaptive: false,
				title: true,
				Xoffset: 15,

			};
		var config = $.extend({}, defaults, options, zoomer.data('plugin-options'));
			zoomer.xzoom(config);
	}
}

var arBasketAsproCounters = {}
SetActualBasketFlyCounters = function(){
	if(arBasketAsproCounters.DEFAULT == true){
		$.ajax({
			url: arOptimusOptions['SITE_DIR'] + 'ajax/basket_fly.php',
			type: 'post',
			success: function(html){
				$('#basket_line .basket_fly').addClass('loaded').html(html);
			}
		});
	}
	else{
		$('#header .basket_fly .opener .basket_count .count').attr('class', 'count' + (arBasketAsproCounters.READY.COUNT > 0 ? '' : ' empty_items')).find('.items span').text(arBasketAsproCounters.READY.COUNT)
		$('#header .basket_fly .opener .basket_count + a').attr('href', arBasketAsproCounters['READY']['HREF'])
		$('#header .basket_fly .opener .basket_count').attr('title', arBasketAsproCounters.READY.TITLE).attr('class', 'basket_count small clicked' + (arBasketAsproCounters.READY.COUNT > 0 ? '' : ' empty'))

		$('#header .basket_fly .opener .wish_count .count').attr('class', 'count' + (arBasketAsproCounters.DELAY.COUNT > 0 ? '' : ' empty_items')).find('.items span').text(arBasketAsproCounters.DELAY.COUNT)
		$('#header .basket_fly .opener .wish_count + a').attr('href', arBasketAsproCounters.DELAY.HREF)
		$('#header .basket_fly .opener .wish_count').attr('title', arBasketAsproCounters.DELAY.TITLE).attr('class', 'wish_count small clicked' + (arBasketAsproCounters.DELAY.COUNT > 0 ? '' : ' empty'))

		$('#header .basket_fly .opener .compare_count .count').attr('class', 'count' + (arBasketAsproCounters.COMPARE.COUNT > 0 ? '' : ' empty_items')).find('.items span').text(arBasketAsproCounters.COMPARE.COUNT)
		$('#header .basket_fly .opener .compare_count + a').attr('href', arBasketAsproCounters.COMPARE.HREF)

		$('#header .basket_fly .opener .user_block').attr('title', arBasketAsproCounters.PERSONAL.TITLE).find('+ a').attr('href', arBasketAsproCounters.PERSONAL.HREF)
		$('#header .basket_fly .opener .user_block .wraps_icon_block').attr('class', 'wraps_icon_block' + (arBasketAsproCounters.PERSONAL.ID > 0 ? ' user_auth' : ' user_reg') + (arBasketAsproCounters.PERSONAL.SRC ? ' w_img' : ' no_img')).attr('style', (arBasketAsproCounters.PERSONAL.SRC ? 'background:url("' + arBasketAsproCounters.PERSONAL.SRC + '") center center no-repeat;' : ''))
	}
}

$(document).ready(function(){
	//ecommerce order
	if(arOptimusOptions["PAGES"]["ORDER_PAGE"]){
		var arUrl = parseUrlQuery();
		if("ORDER_ID" in arUrl){
			var _id = arUrl["ORDER_ID"];
			if(arOptimusOptions['COUNTERS']['USE_FULLORDER_GOALS'] !== 'N'){
				var eventdata = {goal: 'goal_order_success', result: _id};
				BX.onCustomEvent('onCounterGoals', [eventdata])
			}

			if(checkCounters()){
				if(typeof BX.localStorage !== 'undefined'){
					var d = BX.localStorage.get('gtm_e_' + _id);
					if(typeof d === 'object'){
						dataLayer.push({"ecommerce": d});
					}

					if(typeof localStorage !== 'undefined'){
						localStorage.removeItem('gtm_e_' + _id);
					}
				}
			}
		}
	}

	// ya.metrika debug
	if(arOptimusOptions['COUNTERS']['USE_DEBUG_GOALS'] === 'Y'){
		$.cookie('_ym_debug', 1, {path: '/',});
	}
	else{
		$.cookie('_ym_debug', null, {path: '/',});
	}

	scrollToTop();
	checkVerticalMobileFilter();
	checkFormWidth();

	setTimeout(function(){
		InitTopestMenuGummi();
		InitTopMenuGummi();
		isOnceInited = true;

		InitFlexSlider();

		try{
			// SHOW TOP MENU ON READY AFTER GUMMI
			$('header .wrap_menu').css({overflow: 'visible'});
			$('.visible_on_ready').removeClass('visible_on_ready');
		}
		catch(e){console.error(e);}
	},100);



	InitZoomPict();

	$('body').on( 'click', '.captcha_reload', function(e){
		var captcha = $(this).parents('.captcha-row');
		e.preventDefault();
		$.ajax({
			url: arOptimusOptions['SITE_DIR'] + 'ajax/captcha.php'
		}).done(function(text){
			captcha.find('input[name=captcha_sid]').val(text);
			captcha.find('img').attr('src', '/bitrix/tools/captcha.php?captcha_sid=' + text);
			captcha.find('input[name=captcha_word]').val('').removeClass('error');
			captcha.find('.captcha_input').removeClass('error').find('.error').remove();
		});
	});

	setTimeout(function(){
		$('.bg_image_site').css({
			'opacity':1
		})
	},200);

	if(window.matchMedia('(min-width: 768px)').matches){
		$('.wrapper_middle_menu.wrap_menu').removeClass('mobile');
	}

	if(window.matchMedia('(max-width: 767px)').matches){
		$('.wrapper_middle_menu.wrap_menu').addClass('mobile');
	}

	setTimeout(function() {
		$(window).scroll();
	}, 400);

	$(".show_props").live('click', function(){
		$(this).prev(".props_list_wrapp").stop().slideToggle(333);
		$(this).find(".char_title").toggleClass("opened");
	});

	$('.see_more').live('click', function(e) {
		e.preventDefault();
		var see_more = ($(this).is('.see_more') ? $(this) : $(this).parents('.see_more').first());
		var see_moreText = (see_more.find('> a').length ? see_more.find('> a') : see_more);
		var see_moreHiden = see_more.parent().find('> .d');
		if(see_more.hasClass('open')){
			see_moreText.text(BX.message('CATALOG_VIEW_MORE'));
			see_more.removeClass('open');
			see_moreHiden.hide();
		}
		else{
			see_moreText.text(BX.message('CATALOG_VIEW_LESS'));
			see_more.addClass('open');
			see_moreHiden.show();
		}
		return false;
	});

	$('.button.faq_button').click(function(e){
		e.preventDefault();
		$(this).toggleClass('opened');
		$('.faq_ask .form').slideToggle();
	});

	$('.staff.list .staff_section .staff_section_title a').click(function(e) {
		e.preventDefault();
		$(this).parents('.staff_section').toggleClass('opened');
		$(this).parents('.staff_section').find('.staff_section_items').stop().slideToggle(600);
		$(this).parents('.staff_section_title').find('.opener_icon').toggleClass('opened');
	});

	$('.jobs_wrapp .item .name').click(function(e) {
		$(this).closest('.item').toggleClass('opened');
		$(this).closest('.item').find('.description_wrapp').stop().slideToggle(600);
		$(this).closest('.item').find('.opener_icon').toggleClass('opened');
	});

	$('.faq.list .item .q a').live('click', function(e){
		e.preventDefault();
		$(this).parents('.item').toggleClass('opened');
		$(this).parents('.item').find('.a').stop().slideToggle();
		$(this).parents('.item').find('.q .opener_icon').toggleClass('opened');
	});

	$('.opener_icon').click(function(e) {
		e.preventDefault();
		$(this).parent().find('a').trigger('click');
	});

	$('.to-order').live('click', function(e){
		e.preventDefault();
		$("body").append("<span class='evb-toorder' style='display:none;'></span>");
		jqmEd('to-order', arOptimusOptions['FORM']['TOORDER_FORM_ID'], '.evb-toorder', '', this);
		$("body .evb-toorder").click();
		$("body .evb-toorder").remove();
	});

	$('.dotdot').dotdotdot();

	$('.more_block span').live('click', function() {
		var content_offset=$('.catalog_detail .tabs_section').offset();
		$('html, body').animate({scrollTop: content_offset.top-23}, 400);
	});

	$(".counter_block:not(.basket) .plus").live("click", function(){
		if(!$(this).parents('.basket_wrapp').length){
			if($(this).parent().data("offers")!="Y"){
				var isDetailSKU2 = $(this).parents('.counter_block_wr').length;
					input = $(this).parents(".counter_block").find("input[type=text]")
					tmp_ratio = !isDetailSKU2 ? $(this).parents(".counter_wrapp").find(".to-cart").data('ratio') : $(this).parents('tr').first().find("td.buy .to-cart").data('ratio'),
					isDblQuantity = !isDetailSKU2 ? $(this).parents(".counter_wrapp").find(".to-cart").data('float_ratio') : $(this).parents('tr').first().find("td.buy .to-cart").data('float_ratio'),
					ratio=( isDblQuantity ? parseFloat(tmp_ratio) : parseInt(tmp_ratio, 10)),
					max_value='';
					currentValue = input.val();


				if(isDblQuantity)
					ratio = Math.round(ratio*arOptimusOptions.JS_ITEM_CLICK.precisionFactor)/arOptimusOptions.JS_ITEM_CLICK.precisionFactor;

				curValue = (isDblQuantity ? parseFloat(currentValue) : parseInt(currentValue, 10));

				curValue += ratio;
				if (isDblQuantity){
					curValue = Math.round(curValue*arOptimusOptions.JS_ITEM_CLICK.precisionFactor)/arOptimusOptions.JS_ITEM_CLICK.precisionFactor;
				}
				if(parseFloat($(this).data('max'))>0){
					if(input.val() < $(this).data('max')){
						if(curValue>$(this).data('max')){
							input.val($(this).data('max'));
						}else{
							input.val(curValue);
						}
						input.change();
					}
				}else{
					input.val(curValue);
					input.change();
				}
			}
		}
	});

	$(".counter_block:not(.basket) .minus").live("click", function(){
		if(!$(this).parents('.basket_wrapp').length){
			if($(this).parent().data("offers")!="Y"){
				var isDetailSKU2 = $(this).parents('.counter_block_wr').length;
					input = $(this).parents(".counter_block").find("input[type=text]")
					tmp_ratio = !isDetailSKU2 ? $(this).parents(".counter_wrapp").find(".to-cart").data('ratio') : $(this).parents('tr').first().find("td.buy .to-cart").data('ratio'),
					isDblQuantity = !isDetailSKU2 ? $(this).parents(".counter_wrapp").find(".to-cart").data('float_ratio') : $(this).parents('tr').first().find("td.buy .to-cart").data('float_ratio'),
					ratio=( isDblQuantity ? parseFloat(tmp_ratio) : parseInt(tmp_ratio, 10)),
					max_value='';
					currentValue = input.val();

				if(isDblQuantity)
					ratio = Math.round(ratio*arOptimusOptions.JS_ITEM_CLICK.precisionFactor)/arOptimusOptions.JS_ITEM_CLICK.precisionFactor;

				curValue = (isDblQuantity ? parseFloat(currentValue) : parseInt(currentValue, 10));

				curValue -= ratio;
				if (isDblQuantity){
					curValue = Math.round(curValue*arOptimusOptions.JS_ITEM_CLICK.precisionFactor)/arOptimusOptions.JS_ITEM_CLICK.precisionFactor;
				}

				if(parseFloat($(this).parents(".counter_block").find(".plus").data('max'))>0){
					if(currentValue > ratio){
						if(curValue<ratio){
							input.val(ratio);
						}else{
							input.val(curValue);
						}
						input.change();
					}
				}else{
					if(curValue > ratio){
						input.val(curValue);
					}else{
						if(ratio){
							input.val(ratio);
						}else if(currentValue > 1){
							input.val(curValue);
						}
					}
					input.change();
				}
			}
		}
	});

	$('.counter_block input[type=text]').numeric({allow:"."});
	$('.counter_block input[type=text]').live('focus', function(){
		$(this).addClass('focus');
	})
	$('.counter_block input[type=text]').live('blur', function(){
		$(this).removeClass('focus');
	})
	$('.counter_block input[type=text]').live('change', function(e){
		if(!$(this).parents('.basket_wrapp').length){
			var val = $(this).val(),
				tmp_ratio = $(this).parents(".counter_wrapp").find(".to-cart").data('ratio') ? $(this).parents(".counter_wrapp").find(".to-cart").data('ratio') : $(this).parents('tr').first().find("td.buy .to-cart").data('ratio'),
				isDblQuantity = $(this).parents(".counter_wrapp").find(".to-cart").data('float_ratio') ? $(this).parents(".counter_wrapp").find(".to-cart").data('float_ratio') : $(this).parents('tr').first().find("td.buy .to-cart").data('float_ratio'),
				ratio=( isDblQuantity ? parseFloat(tmp_ratio) : parseInt(tmp_ratio, 10));

			if(isDblQuantity)
				ratio = Math.round(ratio*arOptimusOptions.JS_ITEM_CLICK.precisionFactor)/arOptimusOptions.JS_ITEM_CLICK.precisionFactor;

			if($(this).hasClass('focus'))
				val -= (val % ratio);

			if(parseFloat($(this).parents(".counter_block").find(".plus").data('max'))>0){
				if(val>parseFloat($(this).parents(".counter_block").find(".plus").data('max'))){
					val=parseFloat($(this).parents(".counter_block").find(".plus").data('max'));
					val -= (val % ratio);
				}
			}
			if(val<ratio){
				val=ratio;
			}else if(!parseFloat(val)){
				val=1;
			}

			$(this).parents('.counter_block').parent().parent().find('.to-cart').attr('data-quantity', val);
			$(this).parents('.counter_block').parent().parent().find('.one_click').attr('data-quantity', val);
			$(this).val(val);
		}
	});

	/*slide cart*/
	$(document).on('mouseenter', '#basket_line .basket_normal:not(.empty_cart):not(.bcart) .basket_block ', function() {
		$(this).closest('.basket_normal').find('.popup').addClass('block');
		$(this).closest('.basket_normal').find('.basket_popup_wrapp').stop(true,true).slideDown(150);
	});
	$(document).on('mouseleave', '#basket_line .basket_normal .basket_block ', function() {
		var th=$(this);
		$(this).closest('.basket_normal').find('.basket_popup_wrapp').stop(true,true).slideUp(150, function(){
			th.closest('.basket_normal').find('.popup').removeClass('block');
		});
	});

	$(document).on('click', '.popup_button_basket', function(){
		var th=$(".to-cart[data-item="+$(this).data("item")+"]");

		var val = th.attr('data-quantity');

		if(!val) $val = 1;

		var tmp_props=th.data("props"),
			props='',
			part_props='',
			add_props='N',
			fill_prop={},
			iblockid = th.data('iblockid'),
			offer = th.data('offers'),
			rid='',
			basket_props='',
			item = th.attr('data-item');

		if(offer!="Y"){
			offer = "N";
		}else{
			basket_props=th.closest('.prices_tab').find('.bx_sku_props input').val();
		}
		if(tmp_props){
			props=tmp_props.split(";");
		}
		if(th.data("part_props")){
			part_props=th.data("part_props");
		}
		if(th.data("add_props")){
			add_props=th.data("add_props");
		}
		if($('.rid_item').length){
			rid=$('.rid_item').data('rid');
		}else if(th.data('rid')){
			rid=th.data('rid');
		}

		fill_prop=fillBasketPropsExt(th, 'prop', 'bx_ajax_text');

		fill_prop.quantity=val;
		fill_prop.add_item='Y';
		fill_prop.rid=rid;
		fill_prop.offers=offer;
		fill_prop.iblockID=iblockid;
		fill_prop.part_props=part_props;
		fill_prop.add_props=add_props;
		fill_prop.props=JSON.stringify(props);
		fill_prop.item=item;
		fill_prop.basket_props=basket_props;

		$.ajax({
			type:"POST",
			url:arOptimusOptions['SITE_DIR']+"ajax/item.php",
			data:fill_prop,
			dataType:"json",
			success:function(data){
				$('.basket_error_frame').jqmHide();
				if("STATUS" in data){
					getActualBasket(fill_prop.iblockID);
					if(data.STATUS === 'OK'){
						th.hide();
						th.closest('.counter_wrapp').find('.counter_block').hide();
						th.parents('tr').find('.counter_block_wr .counter_block').hide();
						th.closest('.button_block').addClass('wide');
						th.parent().find('.in-cart').show();

						addBasketCounter(item);
						$('.wish_item[data-item='+item+']').removeClass("added");
						$('.wish_item[data-item='+item+']').find(".value").show();
						$('.wish_item[data-item='+item+']').find(".value.added").hide();
						if($("#basket_line .cart").length)
						{
							if($("#basket_line .cart").is(".empty_cart"))
							{
								$("#basket_line .cart").removeClass("empty_cart").find(".cart_wrapp a.basket_link").removeAttr("href").addClass("cart-call");
								$("#basket_line .cart").removeClass("ecart");
								touchBasket('.cart:not(.empty_cart) .basket_block .link');
							}

							reloadTopBasket('add', $('#basket_line'), 200, 5000, 'Y');

						}else if($("#basket_line .basket_fly").length){
							if($(window).outerWidth()>768){
								basketFly('open');
							}else{
								basketFly('refresh');
							}
						}
					}else{
						showBasketError(BX.message(data.MESSAGE));
					}
				}else{
					showBasketError(BX.message("CATALOG_PARTIAL_BASKET_PROPERTIES_ERROR"));
				}
			}
		});
	})

	$(document).on( 'click', '.to-cart:not(.read_more)', function(e){
		e.preventDefault();
		var th=$(this);

		var val = $(this).attr('data-quantity');

		if(!val) $val = 1;

		var tmp_props=$(this).data("props"),
			props='',
			part_props='',
			add_props='N',
			fill_prop={},
			iblockid = $(this).data('iblockid'),
			offer = $(this).data('offers'),
			rid='',
			basket_props='',
			item = $(this).attr('data-item');

		if(offer!="Y"){
			offer = "N";
		}else{
			basket_props=$(this).closest('.prices_tab').find('.bx_sku_props input').val();
		}
		if(tmp_props){
			props=tmp_props.split(";");
		}
		if($(this).data("part_props")){
			part_props=$(this).data("part_props");
		}
		if($(this).data("add_props")){
			add_props=$(this).data("add_props");
		}
		if($('.rid_item').length){
			rid=$('.rid_item').data('rid');
		}else if($(this).data('rid')){
			rid=$(this).data('rid');
		}

		fill_prop=fillBasketPropsExt(th, 'prop', th.data('bakset_div'));

		fill_prop.quantity=val;
		fill_prop.add_item='Y';
		fill_prop.rid=rid;
		fill_prop.offers=offer;
		fill_prop.iblockID=iblockid;
		fill_prop.part_props=part_props;
		fill_prop.add_props=add_props;
		fill_prop.props=JSON.stringify(props);
		fill_prop.item=item;
		fill_prop.basket_props=basket_props;

		if(th.data("empty_props")=="N"){
			showBasketError($("#"+th.data("bakset_div")).html(), BX.message("ERROR_BASKET_PROP_TITLE"), "Y", th);
		}else{
			$.ajax({
				type:"POST",
				url:arOptimusOptions['SITE_DIR']+"ajax/item.php",
				data:fill_prop,
				dataType:"json",
				success:function(data){
					getActualBasket(fill_prop.iblockID);
					if(data !==null){
						if("STATUS" in data){
							if(data.MESSAGE_EXT===null)
								data.MESSAGE_EXT='';
							if(data.STATUS === 'OK'){
								th.hide();
								th.closest('.counter_wrapp').find('.counter_block').hide();
								th.parents('tr').find('.counter_block_wr .counter_block').hide();
								th.closest('.button_block').addClass('wide');
								th.parent().find('.in-cart').show();

								addBasketCounter(item);
								$('.wish_item[data-item='+item+']').removeClass("added");
								$('.wish_item[data-item='+item+']').find(".value").show();
								$('.wish_item[data-item='+item+']').find(".value.added").hide();
								if($("#basket_line .cart").length)
								{
									if($("#basket_line .cart").is(".empty_cart"))
									{
										$("#basket_line .cart").removeClass("empty_cart").find(".cart_wrapp a.basket_link").removeAttr("href").addClass("cart-call");
										$("#basket_line .cart").removeClass("ecart");
										touchBasket('.cart:not(.empty_cart) .basket_block .link');
									}

									reloadTopBasket('add', $('#basket_line'), 200, 5000, 'Y');

								}else if($("#basket_line .basket_fly").length){
									if($(window).outerWidth()>768){
										basketFly('open');
									}else{
										basketFly('refresh');
									}
								}
							}else{
								showBasketError(BX.message(data.MESSAGE)+' <br/>'+data.MESSAGE_EXT);
							}
						}else{
							showBasketError(BX.message("CATALOG_PARTIAL_BASKET_PROPERTIES_ERROR"));
						}
					}else{
						th.hide();
						th.closest('.counter_wrapp').find('.counter_block').hide();
						th.parents('tr').find('.counter_block_wr .counter_block').hide();
						th.closest('.button_block').addClass('wide');
						th.parent().find('.in-cart').show();

						addBasketCounter(item);
						$('.wish_item[data-item='+item+']').removeClass("added");
						$('.wish_item[data-item='+item+']').find(".value").show();
						$('.wish_item[data-item='+item+']').find(".value.added").hide();
						if($("#basket_line .cart").length)
						{
							if($("#basket_line .cart").is(".empty_cart"))
							{
								$("#basket_line .cart").removeClass("empty_cart").find(".cart_wrapp a.basket_link").removeAttr("href").addClass("cart-call");
								$("#basket_line .cart").removeClass("ecart");
								touchBasket('.cart:not(.empty_cart) .basket_block .link');
							}

							reloadTopBasket('add', $('#basket_line'), 200, 5000, 'Y');
						}else if($("#basket_line .basket_fly").length && $(window).outerWidth()>768){
							basketFly('open');
						}
					}
				}
			});
		}
	})

	$(document).on('click', '.to-subscribe', function(e){
		e.preventDefault();
		if($(this).is('.auth')){
			location.href=arOptimusOptions['SITE_DIR']+'auth/?backurl='+location.pathname;
		}
		else{
			var item = $(this).attr('data-item'),
				iblockid = $(this).attr('data-iblockid');
			$(this).hide();
			$(this).parent().find('.in-subscribe').show();
			$.get(arOptimusOptions['SITE_DIR'] + 'ajax/item.php?item=' + item + '&subscribe_item=Y',
				$.proxy(function(data){
					$('.wish_item[data-item=' + item + ']').removeClass('added');
					getActualBasket(iblockid);
				})
			);
		}
	})

	$(document).on('click', '.in-subscribe', function(e){
		e.preventDefault();
		var item = $(this).attr('data-item'),
			iblockid = $(this).attr('data-iblockid');;
		$(this).hide();
		$(this).parent().find('.to-subscribe').show();
		$.get(arOptimusOptions['SITE_DIR'] + 'ajax/item.php?item=' + item + '&subscribe_item=Y',
			$.proxy(function(data){
				getActualBasket(iblockid);
			})
		);
	})

	$(document).on('click', '.wish_item', function(e){
		e.preventDefault();
		var val = $(this).attr('data-quantity'),
			offer = $(this).data('offers'),
			iblockid = $(this).data('iblock'),
			tmp_props=$(this).data("props"),
			props='',
			item = $(this).data('item');
			item2 = $(this).attr('data-item');
		if(!val) $val = 1;
		if(offer!="Y") offer = "N";
		if(tmp_props){
			props=tmp_props.split(";");
		}
		if(!$(this).hasClass('text')){
			if($(this).hasClass('added')){
				$(this).hide();
				$(this).closest('.wish_item_button').find('.to').show();

				$('.like_icons').each(function(){
					if($(this).find('.wish_item.text[data-item="'+item+'"]').length){
						$(this).find('.wish_item.text[data-item="'+item+'"]').removeClass('added');
						$(this).find('.wish_item.text[data-item="'+item+'"]').find('.value').show();
						$(this).find('.wish_item.text[data-item="'+item+'"]').find('.value.added').hide();
					}
					if($(this).find('.wish_item_button').length){
						$(this).find('.wish_item_button').find('.wish_item[data-item="'+item+'"]').removeClass('added');
						$(this).find('.wish_item_button').find('.wish_item[data-item="'+item+'"]').find('.value').show();
						$(this).find('.wish_item_button').find('.wish_item[data-item="'+item+'"]').find('.value.added').hide();
					}
				})
			}
			else{
				$(this).hide();
				$(this).closest('.wish_item_button').find('.in').addClass('added').show();

				$('.like_icons').each(function(){
					if($(this).find('.wish_item.text[data-item="'+item+'"]').length){
						$(this).find('.wish_item.text[data-item="'+item+'"]').addClass('added');
						$(this).find('.wish_item.text[data-item="'+item+'"]').find('.value').hide();
						$(this).find('.wish_item.text[data-item="'+item+'"]').find('.value.added').css({"display":"block"})
					}
					if($(this).find('.wish_item_button').length){
						$(this).find('.wish_item_button').find('.wish_item[data-item="'+item+'"]').addClass('added');
						$(this).find('.wish_item_button').find('.wish_item[data-item="'+item+'"]').find('.value').hide();
						$(this).find('.wish_item_button').find('.wish_item[data-item="'+item+'"]').find('.value.added').show();
					}
				})
			}
		}else{
			if(!$(this).hasClass('added')){
				$('.wish_item[data-item=' + item + ']').addClass('added');
				$('.wish_item[data-item=' + item + ']').find('.value').hide();
				$('.wish_item[data-item=' + item + ']').find('.value.added').css('display','block');

				$('.like_icons').each(function(){
					if($(this).find('.wish_item_button').length){
						$(this).find('.wish_item_button').find('.wish_item[data-item="'+item+'"]').addClass('added');
						$(this).find('.wish_item_button').find('.wish_item[data-item="'+item+'"]').find('.value').hide();
						$(this).find('.wish_item_button').find('.wish_item[data-item="'+item+'"]').find('.value.added').show();
					}
				})
			}else{
				$('.wish_item[data-item=' + item + ']').removeClass('added');
				$('.wish_item[data-item=' + item + ']').find('.value').show();
				$('.wish_item[data-item=' + item + ']').find('.value.added').hide();

				$('.like_icons').each(function(){
					if($(this).find('.wish_item_button').length){
						$(this).find('.wish_item_button').find('.wish_item[data-item="'+item+'"]').removeClass('added');
						$(this).find('.wish_item_button').find('.wish_item[data-item="'+item+'"]').find('.value').show();
						$(this).find('.wish_item_button').find('.wish_item[data-item="'+item+'"]').find('.value.added').hide();
					}
				})
			}
		}

		$('.in-cart[data-item=' + item + ']').hide();
		$('.to-cart[data-item=' + item + ']').parent().removeClass('wide');
		$('.to-cart[data-item=' + item + ']').show();
		$('.counter_block[data-item=' + item + ']').show();
		if(!$(this).closest('.module-cart').size()){
			$.ajax({
				type:"GET",
				url:arOptimusOptions['SITE_DIR']+"ajax/item.php",
				data:"item="+item2+"&quantity="+val+"&wish_item=Y"+"&offers="+offer+"&iblockID="+iblockid+"&props="+JSON.stringify(props),
				dataType:"json",
				success: function(data){
					getActualBasket(iblockid);
					if(data !==null){
						if(data.MESSAGE_EXT===null)
							data.MESSAGE_EXT='';
						if("STATUS" in data){
							if(data.STATUS === 'OK'){
								if(arOptimusOptions['COUNTERS']['USE_BASKET_GOALS'] !== 'N'){
									var eventdata = {goal: 'goal_wish_add', params: {id: item2}};
									BX.onCustomEvent('onCounterGoals', [eventdata]);
								}
								if($("#basket_line .cart").size()){
									reloadTopBasket('wish', $('#basket_line'), 200, 5000, 'N');
								}else{
									basketFly('wish');
								}
							}else{
								showBasketError(BX.message(data.MESSAGE)+' <br/>'+data.MESSAGE_EXT, BX.message("ERROR_ADD_DELAY_ITEM"));
							}
						}else{
							showBasketError(BX.message(data.MESSAGE)+' <br/>'+data.MESSAGE_EXT, BX.message("ERROR_ADD_DELAY_ITEM"));
						}
					}else{
						if($("#basket_line .cart").size()){
							reloadTopBasket('wish', $('#basket_line'), 200, 5000, 'N');
						}else{
							basketFly('wish');
						}
					}
				}
			});
		}
	})

	// $('.compare_item').live('click', function(e){
	$(document).on('click', '.compare_item', function(e){
		e.preventDefault();
		var item = $(this).attr('data-item');
		var iblockID = $(this).attr('data-iblock');
		if(!$(this).hasClass('text')){
			if($(this).hasClass('added')){
				$(this).hide();
				$(this).closest('.compare_item_button').find('.to').show();

				/*sync other button*/
				$('.like_icons').each(function(){
					if($(this).find('.compare_item.text[data-item="'+item+'"]').length){
						$(this).find('.compare_item.text[data-item="'+item+'"]').removeClass('added');
						$(this).find('.compare_item.text[data-item="'+item+'"]').find('.value').show();
						$(this).find('.compare_item.text[data-item="'+item+'"]').find('.value.added').hide();
					}
					if($(this).find('.compare_item_button').length){
						$(this).find('.compare_item_button').find('.compare_item[data-item="'+item+'"]').removeClass('added');
						$(this).find('.compare_item_button').find('.compare_item[data-item="'+item+'"]').find('.value').show();
						$(this).find('.compare_item_button').find('.compare_item[data-item="'+item+'"]').find('.value.added').hide();
					}
				})
			}
			else{
				$(this).hide();
				$(this).closest('.compare_item_button').find('.in').show();

				/*sync other button*/
				$('.like_icons').each(function(){
					if($(this).find('.compare_item.text[data-item="'+item+'"]').length){
						$(this).find('.compare_item.text[data-item="'+item+'"]').addClass('added');;
						$(this).find('.compare_item.text[data-item="'+item+'"]').find('.value').hide();
						$(this).find('.compare_item.text[data-item="'+item+'"]').find('.value.added').css({"display":"block"});
					}
					if($(this).find('.compare_item_button').length){
						$(this).find('.compare_item_button').find('.compare_item[data-item="'+item+'"]').addClass('added');
						$(this).find('.compare_item_button').find('.compare_item[data-item="'+item+'"]').find('.value.added').show();
						$(this).find('.compare_item_button').find('.compare_item[data-item="'+item+'"]').find('.value').hide();
					}
				})
			}
		}else{
			if(!$(this).hasClass('added')){
				$('.compare_item[data-item=' + item + ']').addClass('added');
				$('.compare_item[data-item=' + item + ']').find('.value').hide();
				$('.compare_item[data-item=' + item + ']').find('.value.added').css('display','block');

				/*sync other button*/
				$('.like_icons').each(function(){
					if($(this).find('.compare_item_button').length){
						$(this).find('.compare_item_button').find('.compare_item[data-item="'+item+'"]').addClass('added');
						$(this).find('.compare_item_button').find('.compare_item[data-item="'+item+'"]').find('.value.added').show();
						$(this).find('.compare_item_button').find('.compare_item[data-item="'+item+'"]').find('.value').hide();
					}
				})
			}else{
				$('.compare_item[data-item=' + item + ']').removeClass('added');
				$('.compare_item[data-item=' + item + ']').find('.value').show();
				$('.compare_item[data-item=' + item + ']').find('.value.added').hide();

				/*sync other button*/
				$('.like_icons').each(function(){
					if($(this).find('.compare_item_button').length){
						$(this).find('.compare_item_button').find('.compare_item[data-item="'+item+'"]').removeClass('added');
						$(this).find('.compare_item_button').find('.compare_item[data-item="'+item+'"]').find('.value').show();
						$(this).find('.compare_item_button').find('.compare_item[data-item="'+item+'"]').find('.value.added').hide();
					}
				})
			}
		}

		$.get(arOptimusOptions['SITE_DIR'] + 'ajax/item.php?item=' + item + '&compare_item=Y&iblock_id=' + iblockID,
			$.proxy(function(data){
				getActualBasket(iblockID);
				jsAjaxUtil.InsertDataToNode(arOptimusOptions['SITE_DIR'] + 'ajax/show_compare_preview_top.php', 'compare_line', false);
				if($('#compare_fly').length){
					jsAjaxUtil.InsertDataToNode(arOptimusOptions['SITE_DIR'] + 'ajax/show_compare_preview_fly.php', 'compare_fly', false);
				}
			})
		);
	});

	$('.fancy').fancybox({
		openEffect  : 'fade',
		closeEffect : 'fade',
		nextEffect : 'fade',
		prevEffect : 'fade',
		tpl:{
			closeBtn : '<a title="'+BX.message('FANCY_CLOSE')+'" class="fancybox-item fancybox-close" href="javascript:;"></a>',
			next     : '<a title="'+BX.message('FANCY_NEXT')+'" class="fancybox-nav fancybox-next" href="javascript:;"><span></span></a>',
			prev     : '<a title="'+BX.message('FANCY_PREV')+'" class="fancybox-nav fancybox-prev" href="javascript:;"><span></span></a>'
		},
	});

	$('.tabs>li').on('click', function(){
		if(!$(this).hasClass('active')){
			var sliderIndex = $(this).index(),
				curLiNav=$(this).closest('.top_blocks').find('.slider_navigation').find('>li:eq(' + sliderIndex + ')'),
				curLi=$(this).closest('.top_blocks').siblings('.tabs_content').find('>li:eq(' + sliderIndex + ')');
			$(this).addClass('active').addClass('cur').siblings().removeClass('active').removeClass('cur');
			curLi.addClass('cur').siblings().removeClass('cur');
			curLiNav.addClass('cur').siblings().removeClass('cur');

			/*equal height*/
			curLi.find('.catalog_block .catalog_item_wrapp .catalog_item .item_info:visible .item-title').sliceHeight({item:'.catalog_item:visible'});
			curLi.find('.catalog_block .catalog_item_wrapp .catalog_item .item_info:visible').sliceHeight({classNull: '.footer_button', item:'.catalog_item:visible'});
			curLi.find('.catalog_block .catalog_item_wrapp .catalog_item:visible').sliceHeight({classNull: '.footer_button', item:'.catalog_item:visible'});
		}
	})

	/*search click*/
	$('.search_block .icon').on('click', function(){
		var th=$(this);
		if($(this).hasClass('open')){
			$(this).closest('.center_block').find('.search_middle_block').removeClass('active');
			$(this).removeClass('open');
			$(this).closest('.center_block').find('.search_middle_block').find('.noborder').hide();
		}else{
			setTimeout(function(){
				th.closest('.center_block').find('.search_middle_block').find('.noborder').show();
			},100);
			$(this).closest('.center_block').find('.search_middle_block').addClass('active');
			$(this).addClass('open');
		}
	})
	$(document).on('mouseenter', '.display_list .item_wrap', function(){
		$(this).prev().addClass('prev');
	});
	$(document).on('mouseleave', '.display_list .item_wrap', function(){
		$(this).prev().removeClass('prev');
	});
	$(document).on('mouseenter', '.catalog_block .item_wrap', function(){
		$(this).addClass('shadow_delay');
	});
	$(document).on('mouseleave', '.catalog_block .item_wrap', function(){
		$(this).removeClass('shadow_delay');
	});
	$(document).on('click', '.no_goods .button', function(){
		$('.bx_filter .smartfilter .bx_filter_search_reset').trigger('click');
	});

	$(document).on('click', '.ajax_load_btn', function(){
		var url=$(this).closest('.right_block').find('.module-pagination .flex-direction-nav .flex-next').attr('href'),
			th=$(this).find('.more_text_ajax');
		th.addClass('loading');

		$.ajax({
			url: url,
			data: {"ajax_get": "Y"},
			success: function(html){
				var new_html=$.parseHTML(html);
				th.removeClass('loading');
				if($('.display_list').length){
					$('.display_list').append(html);
				}else if($('.block_list').length){
					$('.block_list').append(html);
					touchItemBlock('.catalog_item a');
				}else if($('.module_products_list').length){
					$('.module_products_list > tbody').append(html);
				}
				setStatusButton();
				initCountdown();
				BX.onCustomEvent('onAjaxSuccess');
				$('.bottom_nav').html($(html).find('.bottom_nav').html());
			}
		})
	})

	$(document).on('click', '.bx_compare .tabs-head li', function(){
		var url=$(this).find('.sortbutton').data('href');
		BX.showWait(BX("bx_catalog_compare_block"));
		$.ajax({
			url: url,
			data: {'ajax_action': 'Y'},
			success: function(html){
				history.pushState(null, null, url);
				$('#bx_catalog_compare_block').html(html);
				BX.closeWait();
			}
		})
	})
	var hoveredTrs;
	$(document).on({
		mouseover: function(e){
			var _ = $(this);
			var tbodyIndex = _.closest('tbody').index()+1; //+1 for nth-child
			var trIndex = _.index()+1; // +1 for nth-child
			hoveredTrs = $(e.delegateTarget).find('.data_table_props')
				.children(':nth-child('+tbodyIndex+')')
				.children(':nth-child('+trIndex+')').addClass('hovered');
		},
		mouseleave: function(e){
			if(hoveredTrs)
				hoveredTrs.removeClass('hovered');
		}
	}, '.bx_compare .data_table_props tbody>tr');
	$(document).on('click', '.fancy_offer', function(e){
		e.preventDefault();
		var arPict=[];
		$('.sliders .slides_block li').each(function(){
			var obImg = {};
			obImg = {
				'title': $(this).find('img').attr('alt'),
				'href': $(this).data('big')
			}
			if($(this).hasClass('current')){
				arPict.unshift(obImg);
			}else{
				arPict.push(obImg);
			}
		})
		console.log(arPict);
		$.fancybox(arPict, {
			openEffect  : 'fade',
			closeEffect : 'fade',
			nextEffect : 'fade',
			prevEffect : 'fade',
			type : 'image',
			tpl:{
				closeBtn : '<a title="'+BX.message('FANCY_CLOSE')+'" class="fancybox-item fancybox-close" href="javascript:;"></a>',
				next     : '<a title="'+BX.message('FANCY_NEXT')+'" class="fancybox-nav fancybox-next" href="javascript:;"><span></span></a>',
				prev     : '<a title="'+BX.message('FANCY_PREV')+'" class="fancybox-nav fancybox-prev" href="javascript:;"><span></span></a>'
			},
		});
	})

	/*tabs*/
	$(".tabs_section .tabs-head li").live("click", function(){
		if(!$(this).is(".current")){
			$(".tabs_section .tabs-head li").removeClass("current");
			$(this).addClass("current");
			$(".tabs_section ul.tabs_content li").removeClass("current");
			if($(this).attr("id") == "product_reviews_tab"){
				$(".shadow.common").hide(); $("#reviews_content").show();
			}
			else{
				$(".shadow.common").show();
				$("#reviews_content").hide();
				$(".tabs_section ul.tabs_content > li:eq("+$(this).index()+")").addClass("current");
			}
		}
	});
	/*open first section slide*/
	setTimeout(function() {
		$('.jobs_wrapp .item:first .name tr').trigger('click');
	}, 300);

	$('.buy_block .slide_offer').on('click', function(){
		scroll_block($('.tabs_section'));
	});
	$('.share_wrapp .text').on('click', function(){
		$(this).parent().find('.shares').fadeToggle();
	})
	$('html, body').live('mousedown', function(e) {
		e.stopPropagation();
		$('.shares').fadeOut();
		$('.search_middle_block').removeClass('active_wide');
	})
	$('.share_wrapp').find('*').live('mousedown', function(e) {
		e.stopPropagation();
	});
	$(document).on('click', '.reviews-collapse-link', function(){
		$('.reviews-reply-form').slideToggle();
	})

	initCountdown();

	/*adaptive menu start*/
	$('.menu.adaptive').on('click', function(){
		$(this).toggleClass('opened');
		if($(this).hasClass('opened')){
			$('.mobile_menu').toggleClass('opened').slideDown();
		}else{
			$('.mobile_menu').toggleClass('opened').slideUp();
		}
	});
	$('.mobile_menu .has-child >a').on('click', function(e){
		var parentLi=$(this).parent();
		e.preventDefault();
		parentLi.toggleClass('opened');
		parentLi.find('.dropdown').slideToggle();
	})

	$('.mobile_menu .search-input-div input').live('keyup', function(e) {
		var inputValue = $(this).val();
		$('.center_block .stitle_form input').val(inputValue);
		if(e.keyCode == 13){
			$('.center_block .stitle_form form').submit();
		}
	});

	$('.center_block .stitle_form input').live('keyup', function(e) {
		var inputValue = $(this).val();
		$('.mobile_menu .search-input-div input').val(inputValue);
		if(e.keyCode == 13){
			$('.center_block .stitle_form form').submit();
		}
	});

	$('.mobile_menu .search-button-div button').live('click', function(e) {
		e.preventDefault();
		var inputValue = $(this).parents().find('input').val();
		$('.center_block .stitle_form input').val(inputValue);
		$('.center_block .stitle_form form').submit();
	});
	/*adaptive menu end*/

	$('.btn.btn-add').on('click', function(){
		$.ajax({
			type:"GET",
			url:arOptimusOptions['SITE_DIR']+"ajax/clearBasket.php",
			success: function(data){
			}
		});
	})

	/*detail order show payments*/
	$('.sale-order-detail-payment-options-methods-info-change-link').on('click', function(){
		$(this).closest('.sale-order-detail-payment-options-methods-info').addClass('opened').siblings().addClass('opened');
	})

	/*expand/hide filter values*/
	$(document).on('click', '.expand_block', function(){
		togglePropBlock($(this));
	})

	/*touch event*/
	document.addEventListener('touchend', function(event) {
		if(!$(event.target).closest('.menu_item_l1').length){
			$('.menu .menu_item_l1 .child').css({'display':'none'});
			$('.menu_item_l1').removeClass('hover');
		}
		if(!$(event.target).closest('.basket_block').length){
			$('.basket_block .link').removeClass('hover');
			$('.basket_block .basket_popup_wrapp').slideUp();
		}
		if(!$(event.target).closest('.catalog_item').length){
			var tabsContentUnhoverHover = $('.tab:visible').attr('data-unhover') * 1;
			$('.tab:visible').stop().animate({'height': tabsContentUnhoverHover}, 100);
			$('.tab:visible').find('.catalog_item').removeClass('hover');
			$('.tab:visible').find('.catalog_item .buttons_block').stop().fadeOut(233);
			if($('.catalog_block').length){
				$('.catalog_block').find('.catalog_item').removeClass('hover');
				//$('.catalog_block').find('.catalog_item').blur();
			}
		}
		//togglePropBlock($(event.target));

	}, false);

	//touchItemBlock('.catalog_item a');

	$(document).on('keyup', '.coupon .input_coupon input', function(){
		if($(this).val().length){
			$(this).removeClass('error');
			$(this).closest('.input_coupon').find('.error').remove();
		}else{
			$(this).addClass('error');
			$("<label class='error'>"+BX.message("INPUT_COUPON")+"</label>").insertBefore($(this));
		}
	})
	// showPhoneMask('input[autocomplete=tel]');
	BX.addCustomEvent(window, "onAjaxSuccess", function(){
		initSelects(document);
		// InitLabelAnimation('#bx-soa-order-form');
		InitOrderCustom();
		// showPhoneMask('input[autocomplete=tel]');
		if($('.catalog_detail').length){
			$('.bx_filter').remove();
			InitFlexSlider();
		}

		if(arOptimusOptions["PAGES"]["ORDER_PAGE"]){
			orderActions();
		}
	});
	BX.addCustomEvent(window, "onFrameDataRequestFail", function(response){
		console.log(response);
	});
});

if(!funcDefined('togglePropBlock')){
	togglePropBlock=function(className){
		var all_props_block = className.closest('.bx_filter_parameters_box_container').find('.hidden_values');
		if(all_props_block.length && (className.hasClass('inner_text') || className.hasClass('expand_block')))
		{
			if(all_props_block.is(':visible'))
			{
				className.text(BX.message('FILTER_EXPAND_VALUES'));
				all_props_block.hide();
			}
			else
			{
				className.text(BX.message('FILTER_HIDE_VALUES'));
				all_props_block.show();
			}
		}
	}
}

if(!funcDefined('showPhoneMask')){
	showPhoneMask=function(className){
		$(className).inputmask('mask', {'mask': arOptimusOptions['THEME']['PHONE_MASK'], 'showMaskOnHover':false });
	}
}

if(!funcDefined('parseUrlQuery')){
	parseUrlQuery=function() {
	    var data = {};
	    if(location.search) {
	        var pair = (location.search.substr(1)).split('&');
	        for(var i = 0; i < pair.length; i ++) {
	            var param = pair[i].split('=');
	            data[param[0]] = param[1];
	        }
	    }
	    return data;
	}
}

if(!funcDefined('getActualBasket')){
	getActualBasket=function(iblockID){
		var data='';
		if(typeof iblockID !=="undefined"){
			data={"iblockID":iblockID}
		}
		$.ajax({
			type:"GET",
			url:arOptimusOptions['SITE_DIR']+"ajax/actualBasket.php",
			data:data,
			success: function(data){
				if(!$('.js_ajax').length)
					$('body').append('<div class="js_ajax"></div>');
				$('.js_ajax').html(data);
			}
		});
	}
}

function touchMenu(selector){
	if($(window).outerWidth()>600){
		$(selector).each(function(){
			var th=$(this);
			th.on('touchend', function(e) {
				if (th.find('.child').length && !th.hasClass('hover')) {
					e.preventDefault();
					e.stopPropagation();
					th.siblings().removeClass('hover');
					th.addClass('hover');
					$('.menu .child').css({'display':'none'});
					th.find('.child').css({'display':'block'});
				}
			})
		})
	}else{
		$(selector).off();
	}
}
function touchItemBlock(selector){
	$(selector).each(function(){
		var th=$(this),
			item=th.closest('.catalog_item');
		th.on('touchend', function(e) {
			if (!item.hasClass('hover')) {
				e.preventDefault();
				e.stopPropagation();
				item.siblings().removeClass('hover');
				item.siblings().blur();
				item.closest('.catalog_block').find('.catalog_item').removeClass('hover');
				item.addClass('hover');
				item.addClass('touch');

				var tabsContentHover = th.closest('.tab').attr('data-hover') * 1,
					tabsContentUnhoverHover = th.closest('.tab').attr('data-unhover') * 1;

				th.closest('.tab').stop().animate({'height': tabsContentUnhoverHover}, 100);
				th.closest('.catalog_item').siblings().find('.buttons_block').stop().fadeOut(233)

				th.closest('.tab').fadeTo(100, 1);
				th.closest('.tab').stop().css({'height': tabsContentHover});
				th.closest('.catalog_item').find('.buttons_block').fadeIn(450, 'easeOutCirc');
			}
		})
	})
}
function touchBasket(selector){
	if(arOptimusOptions['THEME']['SHOW_BASKET_ONADDTOCART'] !== 'N'){
		if($(window).outerWidth()>600){
			$(document).find(selector).on('touchend', function(e) {
				if ($(this).parent().find('.basket_popup_wrapp').length && !$(this).hasClass('hover')) {
					e.preventDefault();
					e.stopPropagation();
					$(this).addClass('hover');
					$(this).parent().find('.basket_popup_wrapp').slideDown();
				}
			})
		}else{
			$(selector).off();
		}
	}
}
function initFull(){
	initSelects(document);
	initHoverBlock(document);
	touchItemBlock('.catalog_item a');
	// InitLabelAnimation('#bx-soa-order-form');
	InitOrderCustom();
	if(!$('html.print').length)
		checkStickyFooter();
	else
		window.print();

	basketActions();
	orderActions();
}
if(!funcDefined('orderActions')){
	orderActions = function(){
		if(arOptimusOptions["PAGES"]["ORDER_PAGE"]){
			if($('.bx-soa-cart-total').length){
				if(!$('.change_basket').length)
					$('.bx-soa-cart-total').prepend('<div class="change_basket">'+BX.message("BASKET_CHANGE_TITLE")+'<a href="'+arOptimusOptions["SITE_DIR"]+'basket/" class="change_link">'+BX.message("BASKET_CHANGE_LINK")+'</a></div>');
				if(typeof (BX.Sale.OrderAjaxComponent) == "object"){
					if(arOptimusOptions['COUNTERS']['USE_FULLORDER_GOALS'] !== 'N'){
						if(typeof BX.Sale.OrderAjaxComponent.reachgoalbegin === 'undefined'){
							BX.Sale.OrderAjaxComponent.reachgoalbegin = true;
							var eventdata = {goal: 'goal_order_begin'};
							BX.onCustomEvent('onCounterGoals', [eventdata])
						}
					}
					if($('.bx-soa-cart-total-line-total').length && !$('.bx-soa-cart-total .licence_block').length && arOptimusOptions["THEME"]["SHOW_LICENCE"] == "Y"){
						$('<div class="form"><div class="licence_block filter label_block"><label data-for="licenses_order" class="hidden error">'+BX.message('JS_REQUIRED_LICENSES')+'</label><input type="checkbox" name="licenses_order" required value="Y"><label data-for="licenses_order" class="license">'+BX.message('LICENSES_TEXT')+'</label></div></div>').insertAfter($('#bx-soa-total .bx-soa-cart-total-line-total'));
						$('#bx-soa-orderSave, .bx-soa-cart-total-button-container').addClass('lic_condition');

						if(typeof (BX.Sale.OrderAjaxComponent.oldClickOrderSaveAction) === "undefined" && typeof (BX.Sale.OrderAjaxComponent.clickOrderSaveAction) !== 'undefined'){
							BX.Sale.OrderAjaxComponent.oldClickOrderSaveAction = BX.Sale.OrderAjaxComponent.clickOrderSaveAction;
							BX.Sale.OrderAjaxComponent.clickOrderSaveAction = function(event){
								if($('input[name="licenses_order"]').prop('checked')){
									$('.bx-soa-cart-total .licence_block label.error').addClass('hidden');
									BX.Sale.OrderAjaxComponent.oldClickOrderSaveAction(event);
								}
								else{
									$('.bx-soa-cart-total .licence_block label.error').removeClass('hidden');
								}
							}
							BX.unbindAll(BX.Sale.OrderAjaxComponent.totalInfoBlockNode.querySelector('a.btn-order-save'));
							BX.unbindAll(BX.Sale.OrderAjaxComponent.mobileTotalBlockNode.querySelector('a.btn-order-save'));
							BX.unbindAll(BX.Sale.OrderAjaxComponent.orderSaveBlockNode.querySelector('a'));
							BX.bind(BX.Sale.OrderAjaxComponent.totalInfoBlockNode.querySelector('a.btn-order-save'), 'click', BX.proxy(BX.Sale.OrderAjaxComponent.clickOrderSaveAction, BX.Sale.OrderAjaxComponent));
							BX.bind(BX.Sale.OrderAjaxComponent.mobileTotalBlockNode.querySelector('a.btn-order-save'), 'click', BX.proxy(BX.Sale.OrderAjaxComponent.clickOrderSaveAction, BX.Sale.OrderAjaxComponent));
							BX.bind(BX.Sale.OrderAjaxComponent.orderSaveBlockNode.querySelector('a'), 'click', BX.proxy(BX.Sale.OrderAjaxComponent.clickOrderSaveAction, BX.Sale.OrderAjaxComponent));
						}
						$('.bx-soa-cart-total .licence_block label.license').on('click', function(){
							var id = $(this).data('for');
							$('.bx-soa-cart-total .licence_block label.error').addClass('hidden');
							if(!$('input[name='+id+']').prop('checked')){
								$('input[name='+id+']').prop('checked', 'checked');
							}
							else{
								$('input[name='+id+']').prop('checked', '');
							}
						})
					}
					if(BX.Sale.OrderAjaxComponent.hasOwnProperty("params")){
						$('.bx-soa-cart-total .change_link').attr('href', BX.Sale.OrderAjaxComponent.params.PATH_TO_BASKET);
						if(arOptimusOptions["PRICES"]["MIN_PRICE"]){
							if(arOptimusOptions["PRICES"]["MIN_PRICE"]>Number(BX.Sale.OrderAjaxComponent.result.TOTAL.ORDER_PRICE)){
								$('<div class="fademask_ext"></div>').appendTo($('body'));
								location.href=BX.Sale.OrderAjaxComponent.params.PATH_TO_BASKET;
							}
						}
					}
					if(checkCounters() && typeof (BX.Sale.OrderAjaxComponent.oldSaveOrder) === "undefined" && typeof (BX.Sale.OrderAjaxComponent.saveOrder) !== 'undefined'){
						BX.Sale.OrderAjaxComponent.oldSaveOrder = BX.Sale.OrderAjaxComponent.saveOrder;
						BX.Sale.OrderAjaxComponent.saveOrder = function(result){
							var res = BX.parseJSON(result);
							if (res && res.order){
								if (!res.order.SHOW_AUTH){
									if (res.order.REDIRECT_URL && res.order.REDIRECT_URL.length && (!res.order.ERROR || BX.util.object_keys(res.order.ERROR).length < 1)){
										if((arMatch = res.order.REDIRECT_URL.match(/ORDER_ID\=[^&=]*/g)) && arMatch.length && (_id = arMatch[0].replace(/ORDER_ID\=/g, '', arMatch[0]))){
											$.ajax({
												url:arOptimusOptions['SITE_DIR']+"ajax/check_order.php",
												dataType: "json",
												type: "POST",
												data: { "ID": _id },
												success: function(id){
													if(parseInt(id)){
														purchaseCounter(parseInt(id), BX.message('FULL_ORDER'), function(d){
															if(typeof d == 'object'){
																if(typeof BX.localStorage !== 'undefined'){
																	BX.localStorage.set('gtm_e_' + _id, d, 60);
																}
															}
															BX.Sale.OrderAjaxComponent.oldSaveOrder(result);
														});
													}
													else{
														BX.Sale.OrderAjaxComponent.oldSaveOrder(result);
													}
												},
												error: function(){
													BX.Sale.OrderAjaxComponent.oldSaveOrder(result);
												}
											})
										}
										else{
											BX.Sale.OrderAjaxComponent.oldSaveOrder(result);
										}
									}
									else{
										BX.Sale.OrderAjaxComponent.oldSaveOrder(result);
									}
								}
								else{
									BX.Sale.OrderAjaxComponent.oldSaveOrder(result);
								}
							}
							else{
								BX.Sale.OrderAjaxComponent.oldSaveOrder(result);
							}
						}
					}
				}
				$('.bx-ui-sls-quick-locations.quick-locations').on('click', function(){
					$(this).siblings().removeClass('active');
					$(this).addClass('active');
				})
			}
		}
	}
}

if(!funcDefined('basketActions')){
	basketActions = function(){
		if(arOptimusOptions["PAGES"]["BASKET_PAGE"]){
			checkMinPrice();

			if(location.hash)
			{
				var hash = location.hash.substring(1);
				if($('#basket_toolbar_button_'+hash).length)
				{
					$('#basket_toolbar_button_'+hash).trigger('click');
				}
			}

			$('.bx_sort_container').append('<div class="top_control basket_sort"><span class="delete_all button grey_br transparent remove_all_basket">'+BX.message("BASKET_CLEAR_ALL_BUTTON")+'</span></div>');
			if(arOptimusOptions["THEME"]["SHOW_BASKET_PRINT"]=="Y"){
				$('.bx_sort_container .top_control').prepend('<span class="basket_print button grey_br transparent">'+BX.message("BASKET_PRINT_BUTTON")+'</span>');
			}
			$('.bx_sort_container .top_control .delete_all').data("type",$('.bx_sort_container a.current').index());
			$('.bx_ordercart .bx_ordercart_coupon #coupon').wrap('<div class="input"></div>');

			$('.bx_sort_container > a').on('click', function() {
				$('.bx_sort_container .top_control .delete_all').data("type", $(this).index());
			});

			$('.basket_print').on('click', function() {
				 // window.open(location.pathname+"?print=Y",'_blank');
				 window.print();
			});

			$('.delete_all').on('click', function() {
				if(arOptimusOptions['COUNTERS']['USE_BASKET_GOALS'] !== 'N'){
					var eventdata = {goal: 'goal_basket_clear', params: {type: $(this).data('type')}};
					BX.onCustomEvent('onCounterGoals', [eventdata]);
				}
				$.post( arOptimusOptions['SITE_DIR']+"ajax/action_basket.php", "TYPE="+$(this).data('type')+"&CLEAR_ALL=Y", $.proxy(function( data ) {
					location.reload();
				}));
			});

			$('.bx_item_list_section .bx_catalog_item').sliceHeight({row:'.bx_item_list_slide', item:'.bx_catalog_item'});

			BX.addCustomEvent('onAjaxSuccess', function() {
				checkMinPrice();

				var errorText = $.trim($('#warning_message').text());
				$('#basket_items_list .error_text').detach();
				if (errorText != '') {
					$('#warning_message').hide().text('');
					$('#basket_items_list').prepend('<div class="error_text">' +errorText+ '</div>');
				}
			});
		}
	}
}

if(!funcDefined('checkMinPrice')){
	checkMinPrice = function(){
		if(arOptimusOptions["PAGES"]["BASKET_PAGE"]){
			var summ_raw=$('#allSum_FORMATED').text().replace(/[^0-9\.]/g,''),
				summ=parseFloat(summ_raw);
			if(!$('.catalog_back').length)
				$('.bx_ordercart_order_pay_center').prepend('<a href="/catalog/" class="catalog_back button transparent big_btn grey_br">'+BX.message("BASKET_CONTINUE_BUTTON")+'</a>');

			if(arOptimusOptions["PRICES"]["MIN_PRICE"]){
				if(arOptimusOptions["PRICES"]["MIN_PRICE"]>summ){
					if(!$('.icon_error_wrapper').length){
						$('.bx_ordercart_order_pay_center').prepend('<div class="icon_error_wrapper"><div class="icon_error_block">'+BX.message("MIN_ORDER_PRICE_TEXT").replace("#PRICE#", jsPriceFormat(arOptimusOptions["PRICES"]["MIN_PRICE"]))+'</div></div>');
					}

					if($('.oneclickbuy.fast_order').length)
						$('.oneclickbuy.fast_order').remove();

					if($('.bx_ordercart_order_pay .checkout').length)
						$('.bx_ordercart_order_pay .checkout').remove();
				}else{
					if($('.icon_error_wrapper').length)
						$('.icon_error_wrapper').remove();

					if($('.bx_ordercart_order_pay .checkout').length)
						$('.bx_ordercart .bx_ordercart_order_pay .checkout').css('opacity','1');
					else
						$('.bx_ordercart_order_pay_center').append('<a href="javascript:void(0)" onclick="checkOut();" class="checkout" style="opacity: 1;">'+BX.message("BASKET_ORDER_BUTTON")+'</a>');
					if(!$('.oneclickbuy.fast_order').length && arOptimusOptions["THEME"]["SHOW_ONECLICKBUY_ON_BASKET_PAGE"] == "Y")
						$('.bx_ordercart_order_pay_center').append('<span class="oneclickbuy button big_btn fast_order" onclick="oneClickBuyBasket()">'+BX.message("BASKET_QUICK_ORDER_BUTTON")+'</span>');


				}
			}else{
				$('.bx_ordercart .bx_ordercart_order_pay .checkout').css('opacity','1');
				if(!$('.oneclickbuy.fast_order').length && arOptimusOptions["THEME"]["SHOW_ONECLICKBUY_ON_BASKET_PAGE"] == "Y")
					$('.bx_ordercart_order_pay_center').append('<span class="oneclickbuy button big_btn fast_order" onclick="oneClickBuyBasket()">'+BX.message("BASKET_QUICK_ORDER_BUTTON")+'</span>');
			}
		}
	}
}

var isFrameDataReceived = false;
if (typeof window.frameCacheVars !== "undefined"){
	BX.addCustomEvent("onFrameDataReceived", function (json){
		initFull();
		isFrameDataReceived = true;
	});
}else{
	$( document ).ready(initFull);
}

if(!funcDefined('setHeightBlockSlider')){
	setHeightBlockSlider = function(){
		var sliderWidth = $(document).find('.specials.tab_slider_wrapp').outerWidth();

		$(document).find('.specials.tab_slider_wrapp .tabs_content > li.cur').css('height', '');
		$(document).find('.specials.tab_slider_wrapp .tabs_content .tab.cur .tabs_slider .buttons_block').hide();
		$(document).find('.specials.tab_slider_wrapp .tabs_content > li.cur').equalize({children: '.item-title'});
		$(document).find('.specials.tab_slider_wrapp .tabs_content > li.cur').equalize({children: '.item_info'});
		$(document).find('.specials.tab_slider_wrapp .tabs_content > li.cur').equalize({children: '.catalog_item'});
		var itemsButtonsHeight = $(document).find('.specials.tab_slider_wrapp .tabs_content .tab.cur .tabs_slider li .buttons_block').height();
		var tabsContentUnhover = $(document).find('.specials.tab_slider_wrapp .tabs_content .tab.cur').height() * 1;
		var tabsContentHover = tabsContentUnhover + itemsButtonsHeight+50;
		$(document).find('.specials.tab_slider_wrapp .tabs_content .tab.cur').attr('data-unhover', tabsContentUnhover);
		$(document).find('.specials.tab_slider_wrapp .tabs_content .tab.cur').attr('data-hover', tabsContentHover);
		$(document).find('.specials.tab_slider_wrapp .tabs_content').height(tabsContentUnhover);
	}
}

if(!funcDefined('checkStickyFooter')){
	checkStickyFooter = function() {
		try{
			ignoreResize.push(true);
			$('#content').css('min-height', '');
			var contentTop = $('#content').offset().top;
			var contentBottom = contentTop + $('#content').outerHeight();
			var footerTop = $('footer').offset().top;
			$('#content').css('min-height', $(window).height() - contentTop - (footerTop - contentBottom) - $('footer').outerHeight() + 'px');
			ignoreResize.pop();
		}
		catch(e){console.error(e);}
	}
}

/* EVENTS */
var timerResize = false, ignoreResize = [];
$(window).resize(function(){
	if(!$('html.print').length)
		checkStickyFooter();

	// here immediate functions
	if(!ignoreResize.length){
		if(timerResize){
			clearTimeout(timerResize);
			timerResize = false;
		}
		timerResize = setTimeout(function(){
			// here delayed functions in event
			BX.onCustomEvent('onWindowResize', false);
		}, 50);
	}
});

var timerScroll = false, ignoreScroll = [], documentScrollTopLast = $(document).scrollTop();
$(window).scroll(function(){
	// here immediate functions
	documentScrollTopLast = $(document).scrollTop();
	if(!ignoreScroll.length){
		if(timerScroll){
			clearTimeout(timerScroll);
			timerScroll = false;
		}
		timerScroll = setTimeout(function(){
			// here delayed functions in event
			BX.onCustomEvent('onWindowScroll', false);
		}, 50);
	}
});

BX.addCustomEvent('onWindowResize', function(eventdata){
	try{
		ignoreResize.push(true);

		// CheckTopMenuFullCatalogSubmenu();

		checkScrollToTop();
		checkPopupWidth();
		checkCaptchaWidth();
		checkFormWidth();
		checkFormControlWidth();
		touchMenu('ul.menu:not(.opened) > li.menu_item_l1');
		touchBasket('.cart:not(.empty_cart) .basket_block .link');
		CheckObjectsSizes();

		CheckFlexSlider();
		// InitZoomPict();
		initSly();

		checkVerticalMobileFilter();

		if(window.matchMedia('(max-width: 768px)').matches){
			if($('.group_description_block.top').length){
				var top_pos=$('.adaptive_filter').position().top;
				$('.bx_filter.bx_filter_vertical').css({'top':top_pos+20});
			}

		}

		if(window.matchMedia('(min-width: 767px)').matches){
			$('.wrapper_middle_menu.wrap_menu').removeClass('mobile');
		}
		if(window.matchMedia('(max-width: 767px)').matches){
			$('.wrapper_middle_menu.wrap_menu').addClass('mobile');
		}

		if($(window).outerWidth()>600){
			$("#header ul.menu").removeClass("opened").css("display", "");

			if($(".authorization-cols").length){
				$('.authorization-cols').equalize({children: '.col .auth-title', reset: true});
				$('.authorization-cols').equalize({children: '.col .form-block', reset: true});
			}
		} else {
			$('.authorization-cols .auth-title').css("height", "");
			$('.authorization-cols .form-block').css("height", "");
		}


		if($("#basket_form").length && $(window).outerWidth()<=600){
			$("#basket_form .tabs_content.basket > li.cur td").each(function() { $(this).css("width","");});
		}

		if($(".front_slider_wrapp").length){
			$(".extended_pagination li i").each(function(){
				$(this).css({"borderBottomWidth": ($(this).parent("li").outerHeight()/2), "borderTopWidth": ($(this).parent("li").outerHeight()/2)});
			});
		}

		setHeightCompany();
		$(".bx_filter_section .bx_filter_select_container").each(function(){
			var prop_id=$(this).closest('.bx_filter_parameters_box').attr('property_id');
			if($('#smartFilterDropDown'+prop_id).length){
				$('#smartFilterDropDown'+prop_id).css("max-width", $(this).width());
			}
		})
	}
	catch(e){}
	finally{
		ignoreResize.pop();
	}
});

BX.addCustomEvent('onWindowScroll', function(eventdata){
	try{
		ignoreScroll.push(true);
	}
	catch(e){}
	finally{
		ignoreScroll.pop();
	}
});

BX.addCustomEvent('onCounterGoals', function(eventdata){
	if(arOptimusOptions['COUNTERS']['USE_YA_COUNTER'] === 'Y'){
		var idCounter = arOptimusOptions['COUNTERS']['YA_COUNTER_ID'];
		idCounter = parseInt(idCounter);

		if(typeof eventdata != 'object'){
			eventdata = {goal: 'undefined'};
		}
		if(typeof eventdata.goal != 'string'){
			eventdata.goal = 'undefined';
		}

		if(idCounter){
			try{
				waitCounter(idCounter, 50, function(){
					var obCounter = window['yaCounter' + idCounter];
					if(typeof obCounter == 'object'){
						obCounter.reachGoal(eventdata.goal);
					}
				});
			}
			catch(e){
				console.error(e)
			}
		}
		else{
			console.info('Bad counter id!', idCounter);
		}
	}
})RTIBE