BITRIX46   11402|/aspro.optimus/updater1.7.4.php|5848561c<?
// aspro.optimus 1.7.4 updater
// changed files

// module:
// /classes/general/COptimus.php - update


// components:


// services:

// wizard:

// template:
// /components/bitrix/catalog.element/fast_view/script.js - update
// /components/bitrix/catalog.element/fast_view/script.min.js - update
// /components/bitrix/catalog.element/main2/script.js - update
// /components/bitrix/catalog.element/main2/script.min.js - update
// /components/bitrix/sale.basket.basket/fly/template.php - update
// /js/jquery.fancybox.js - update
// /js/jquery.fancybox.min.js - update
// /js/main.js - update
// /js/main.min.js - update

// public:



use \Bitrix\Main\Config\Option;
require_once __DIR__ .'/functions.php';

define('PARTNER_NAME', 'aspro');
define('MODULE_NAME', 'aspro.optimus');
define('MODULE_NAME_SHORT', 'optimus');
define('TEMPLATE_NAME', 'aspro_optimus');
define('MODULE_PATH', '/bitrix/modules/' . MODULE_NAME);
define('TEMPLATE_PATH', '/bitrix/templates/'.TEMPLATE_NAME);
define('UPDATER_SELF_TEMPLATE_PATH', 'install/wizards/'.PARTNER_NAME.'/'.MODULE_NAME_SHORT.'/site/templates/'.TEMPLATE_NAME);
define('UPDATER_SITE_TEMPLATE_PATH', 'templates/'.TEMPLATE_NAME);
define('CURRENT_VERSION', GetCurVersion($_SERVER['DOCUMENT_ROOT'].'/bitrix/modules/'.MODULE_NAME.'/install/version.php'));
define('NEW_VERSION', GetCurVersion(__DIR__.'/install/version.php'));

UpdaterLog('START UPDATE '.CURRENT_VERSION.' -> '.NEW_VERSION.PHP_EOL);

// remove old bak files
RemoveOldBakFiles();

// create bak files
foreach([
	// module:
	'/bitrix/modules/'.MODULE_NAME.'/classes/general/COptimus.php',
	
	// components:

	// templates
	TEMPLATE_PATH.'/components/bitrix/catalog.element/fast_view/script.js',
	TEMPLATE_PATH.'/components/bitrix/catalog.element/fast_view/script.min.js',
	TEMPLATE_PATH.'/components/bitrix/catalog.element/main2/script.js',
	TEMPLATE_PATH.'/components/bitrix/catalog.element/main2/script.min.js',
	TEMPLATE_PATH.'/components/bitrix/sale.basket.basket/fly/template.php',
	TEMPLATE_PATH.'/js/jquery.fancybox.js',
	TEMPLATE_PATH.'/js/jquery.fancybox.min.js',
	TEMPLATE_PATH.'/js/main.js',
	TEMPLATE_PATH.'/js/main.min.js',
] as $file){
	CreateBakFile($_SERVER['DOCUMENT_ROOT'].$file);
}

// // remove some files
// foreach([
// 	'/order/clear.php',
// 	'/bitrix/wizards/' . PARTNER_NAME . '/' . MODULE_NAME_SHORT . '/site/public/ru/order/clear.php',
// 	MODULE_PATH . '/install/wizards/' . PARTNER_NAME . '/' . MODULE_NAME_SHORT . '/site/public/ru/order/clear.php'] as $file){
// 	unlink($_SERVER['DOCUMENT_ROOT'].$file);
// }

// update module
//$updater->CopyFiles('install', 'modules/'.MODULE_NAME.'/install');

// update admin section images
// $updater->CopyFiles('install/images', 'images/'.MODULE_NAME);

// update admin section gadget
// $updater->CopyFiles('install/gadgets', 'gadgets');

// update admin page
// $updater->CopyFiles('install/admin', 'admin');

// update admin js
// $updater->CopyFiles('install/js', 'js/'.MODULE_NAME.'/');

// update admin css
// $updater->CopyFiles('install/css', 'css/'.MODULE_NAME.'/');

// update admin tools
// $updater->CopyFiles('install/tools', 'tools/'.MODULE_NAME.'/');

// update module css
// $updater->CopyFiles('css', 'modules/'.MODULE_NAME.'/css');

// update wizard
$updater->CopyFiles('install/wizards', 'wizards');

// update components
//if(file_exists($_SERVER['DOCUMENT_ROOT'].'/bitrix/components/'.PARTNER_NAME.'/')){
	//$updater->CopyFiles('install/components', 'components');
//}

//update mail templates
if(file_exists($_SERVER['DOCUMENT_ROOT'].'/bitrix/templates/.default/')){
	$updater->CopyFiles('install/wizards/'.PARTNER_NAME.'/'.MODULE_NAME_SHORT.'/site/templates/.default/components', 'templates/.default/components');
}
//if(file_exists($_SERVER['DOCUMENT_ROOT'].'/bitrix/templates/aspro_mail/')){
	 //$updater->CopyFiles('install/wizards/'.PARTNER_NAME.'/'.MODULE_NAME_SHORT.'/site/templates/aspro_mail/', 'templates/aspro_mail');
//}
//if(file_exists($_SERVER['DOCUMENT_ROOT'].'/bitrix/templates/aspro_max_mail/')){
	// $updater->CopyFiles('install/wizards/'.PARTNER_NAME.'/'.MODULE_NAME_SHORT.'/site/templates/aspro_max_mail/', 'templates/aspro_max_mail');
//}

// update template
if(file_exists($_SERVER['DOCUMENT_ROOT'].'/bitrix/templates/'.TEMPLATE_NAME)){
	//$updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/css', UPDATER_SITE_TEMPLATE_PATH.'/css');
	// $updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/defines.php', UPDATER_SITE_TEMPLATE_PATH.'/defines.php');
	//$updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/template_styles.css', UPDATER_SITE_TEMPLATE_PATH.'/template_styles.css');
	//$updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/template_styles.min.css', UPDATER_SITE_TEMPLATE_PATH.'/template_styles.min.css');
	// $updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/styles.css', UPDATER_SITE_TEMPLATE_PATH.'/styles.css');
	// $updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/styles.min.css', UPDATER_SITE_TEMPLATE_PATH.'/styles.min.css');

	// update js
	$updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/js', UPDATER_SITE_TEMPLATE_PATH.'/js');

	// update images
	//$updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/images', UPDATER_SITE_TEMPLATE_PATH.'/images');

	// update components templates
	$updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/components', UPDATER_SITE_TEMPLATE_PATH.'/components');

	// update lang
	// $updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/lang', UPDATER_SITE_TEMPLATE_PATH.'/lang');

	// update vendor
	// $updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/vendor', UPDATER_SITE_TEMPLATE_PATH.'/vendor');

	// update defines
	// $updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/defines.php', UPDATER_SITE_TEMPLATE_PATH.'/defines.php');

	// update ajax
	//$updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/ajax', UPDATER_SITE_TEMPLATE_PATH.'/ajax');

	// update bgcolor
	// $updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/bg_color', UPDATER_SITE_TEMPLATE_PATH.'/bg_color');

	// update page_blocks
	// $updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/page_blocks', UPDATER_SITE_TEMPLATE_PATH.'/page_blocks');

	// update page_templates
	//$updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/page_templates', UPDATER_SITE_TEMPLATE_PATH.'/page_templates');

	// update themes
	//$updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/themes', UPDATER_SITE_TEMPLATE_PATH.'/themes');

	// update template description
	//$updater->CopyFiles(UPDATER_SELF_TEMPLATE_PATH.'/description.php', UPDATER_SITE_TEMPLATE_PATH.'/description.php');
}

// remove asprobanner from client sites
if (strpos($_SERVER['HTTP_HOST'], 'aspro-demo') === false) {
	$template_list = array_map(function($path){ return $_SERVER['DOCUMENT_ROOT']."/bitrix/templates/".$path; }, array_diff(scandir($_SERVER['DOCUMENT_ROOT']."/bitrix/templates/"), ['.', '..']));
	
	if (file_exists($_SERVER['DOCUMENT_ROOT']."/local/templates/")) {
		$local_list = array_diff(scandir($_SERVER['DOCUMENT_ROOT']."/local/templates/"), ['.', '..']);
		
		if (count($local_list)) {
			$local_list = array_map(function($path){ return $_SERVER['DOCUMENT_ROOT']."/local/templates/".$path; }, $local_list);
			$template_list = array_merge($template_list, $local_list);
		}
	}

	foreach ($template_list as $template_path) {
		$banner_path = $template_path."/asprobanner.php";
		$fp = $template_path."/header.php";

		if (file_exists($fp)) {
			$content = @file_get_contents($fp);
		
			if (strpos($content, 'asprobanner') !== false) {
				$regex = "/<\?if\(!\(isset\([$]_SERVER\['HTTP_ACCEPT_LANGUAGE'\]\)(.|\n)*?\/asprobanner\.php\"\);\?>/s";
				preg_match($regex, $content, $matches);
				
				if ($matches[0] && strpos($matches[0], 'asprobanner') !== false) {
					$content = str_replace($matches[0], "\n\t\t", $content);
				}
		
				CreateBakFile($fp);
				@file_put_contents($fp, $content);
				unset($content, $matches);
			}
		}

		if (file_exists($banner_path)) {
			CreateBakFile($banner_path);
			unlink($banner_path);
		}
	}
}

// current SITEs
$arSites = GetSites();

// current IBLOCK_IDs
$arIblocks = GetIBlocks();

//Option::set(MODULE_NAME, 'NeedGenerateThemes', 'Y');
//Option::set(MODULE_NAME, 'NeedGenerateCustomTheme', 'Y');
//Option::set(MODULE_NAME, 'NeedGenerateCustomThemeBG', 'Y');

/*$arTemplateFiles = [
	'update' => [
		TEMPLATE_PATH.'/footer.php',
	],
	'deleted' => [
		TEMPLATE_PATH.'/js/jquery.dotdotdot.js',
		TEMPLATE_PATH.'/js/jquery.dotdotdot.min.js',
	],
];

$siteDir = $_SERVER['DOCUMENT_ROOT'];

foreach($arTemplateFiles as $type => $arFiles) {
	foreach($arFiles as $path){

		$file_from = $siteDir.$path;

		if(!file_exists($file_from))
		continue;

		if( $type === 'deleted' ){
								
			CreateBakFile($file_from);
			unlink($file_from);
			UpdaterLog('Deleted ' .$file_from);
			
		} elseif($type === "update") {

			if( $path === '/bitrix/templates/aspro_optimus/footer.php' ) {
				$content = @file_get_contents($file_from);

				if(!strpos($content, "COptimus::bottomActions();")) {
					$pattern = "COptimus::showFooterBasket();";
					$replacement = "COptimus::showFooterBasket();\n\t\tCOptimus::bottomActions();";
					$content = str_replace($pattern, $replacement, $content);
				}

				CreateBakFile($file_from);
				@file_put_contents($file_from, $content);
				UpdaterLog('Update ' .$file_from);
			}
		}
	}
}*/

if($arSites && $arIblocks){

	// require_once($_SERVER["DOCUMENT_ROOT"]."/bitrix/modules/main/classes/general/wizard.php");
	// require_once($_SERVER["DOCUMENT_ROOT"]."/bitrix/modules/main/install/wizard_sol/utils.php");

	foreach($arSites as $siteId => $arSite){
		$arSite['DIR'] = str_replace('//', '/', '/'.$arSite['DIR']);

		if(!strlen($arSite['DOC_ROOT'])){
			$arSite['DOC_ROOT'] = $_SERVER['DOCUMENT_ROOT'];
		}

		$arSite['DOC_ROOT'] = str_replace('//', '/', $arSite['DOC_ROOT'].'/');
		$siteDir = str_replace('//', '/', $arSite['DOC_ROOT'].$arSite['DIR']);
		$fileCheckSolution = str_replace('//', '/', $siteDir.'/ajax/form.php');

		// if(file_exists($fileCheckSolution)){
		// 	$content = @file_get_contents($fileCheckSolution);
		// 	if(strpos($content, 'COptimus') !== false){

		// 		$arPublicFiles = [
		// 			'add' => [
		// 			],
		// 			'rewrite' => [
		// 			],
		// 		]; 

		// 		foreach($arPublicFiles as $type => $arFiles) {
		// 			foreach($arFiles as $path){

		// 			// updating or rewriting a file
		// 			$file_from = $type === 'rewrite'
		// 				? str_replace('//', '/', $_SERVER['DOCUMENT_ROOT'].'/bitrix/modules/'.MODULE_NAME.'/install/wizards/'.PARTNER_NAME.'/'.MODULE_NAME_SHORT.'/site/public/ru'.$path)
		// 				: str_replace('//', '/', $siteDir.$path);

		// 				if(file_exists($file_from)) {
		// 					$content = @file_get_contents($file_from);
		// 					$file_to = str_replace('//', '/', $siteDir.$path);

		// 					CreateBakFile($file_to);
		// 					@file_put_contents($file_to, $content);
							
		// 					UpdaterLog('Update '.$path);
		// 				}
		// 			}
		// 		}
			
		// 	}
		// }
	}
}

// is composite enabled
$compositeMode = IsCompositeEnabled();

// clear all sites cache in some components and dirs (include composite cache)
ClearAllSitesCacheDirs([
	'html_pages', 
	'cache/js', 
	'cache/css',
]);
ClearAllSitesCacheComponents([
	'bitrix:catalog.element',
	'bitrix:sale.basket.basket',
]);



if($compositeMode){
	$arHTMLCacheOptions = GetCompositeOptions();
	EnableComposite($compositeMode === 'AUTO_COMPOSITE', $arHTMLCacheOptions);
}

UpdaterLog('FINISH UPDATE '.CURRENT_VERSION.' -> '.NEW_VERSION.PHP_EOL);
?>43   12481|/aspro.optimus/functions.php|d1367c16<?
CModule::IncludeModule("main");
CModule::IncludeModule("iblock");

set_time_limit(0);

if(!function_exists("ClearAllSitesCacheComponents")){
	function ClearAllSitesCacheComponents($arComponentsNames){
		if($arComponentsNames && is_array($arComponentsNames)){
			global $CACHE_MANAGER;
			$arSites = array();
			$rsSites = CSite::GetList($by = "sort", $order = "desc", array("ACTIVE" => "Y"));
			while($arSite = $rsSites->Fetch()){
			  $arSites[] = $arSite;
			}
			foreach($arComponentsNames as $componentName){
				foreach($arSites as $arSite){
					CBitrixComponent::clearComponentCache($componentName, $arSite["ID"]);
				}
			}
		}
	}
}

if(!function_exists("ClearAllSitesCacheDirs")){
	function ClearAllSitesCacheDirs($arDirs){
		if($arDirs && is_array($arDirs)){
			foreach($arDirs as $dir){
				$obCache = new CPHPCache();
				$obCache->CleanDir("", $dir);
			}
		}
	}
}

if(!function_exists("GetIBlocks")){
	function GetIBlocks(){
		$arRes = array();
		$dbRes = CIBlock::GetList(array(), array("ACTIVE" => "Y"));
		while($item = $dbRes->Fetch()){
			$arRes[$item["LID"]][$item["IBLOCK_TYPE_ID"]][$item["CODE"]][] = $item["ID"];
		}
		return $arRes;
	}
}

if(!function_exists("GetSites")){
	function GetSites(){
		$arRes = array();
		$dbRes = CSite::GetList($by="sort", $order="desc", array("ACTIVE" => "Y"));
		while($item = $dbRes->Fetch()){
			$arRes[$item["LID"]] = $item;
		}
		return $arRes;
	}
}

if(!function_exists("GetCurVersion")){
	function GetCurVersion($versionFile){
		$ver = false;
		if(file_exists($versionFile)){
			$arModuleVersion = array();
			include($versionFile);
			$ver = trim($arModuleVersion["VERSION"]);
		}
		return $ver;
	}
}

if(!function_exists("CreateBakFile")){
	function CreateBakFile($file, $curVersion = CURRENT_VERSION){
		$file = trim($file);
		if(file_exists($file)){
			$arPath = pathinfo($file);
			$backFile = $arPath['dirname'].'/_'.$arPath['basename'].'.back'.$curVersion;
			if(!file_exists($backFile)){
				@copy($file, $backFile);
			}
		}
	}
}

if(!function_exists("RemoveFileFromModuleWizard")){
	function RemoveFileFromModuleWizard($file){
		@unlink($_SERVER['DOCUMENT_ROOT'].'/bitrix/modules/'.MODULE_NAME.'/install/wizards/'.PARTNER_NAME.'/'.MODULE_NAME_SHORT.$file);
		@unlink($_SERVER['DOCUMENT_ROOT'].'/bitrix/wizards/'.PARTNER_NAME.'/'.MODULE_NAME_SHORT.$file);
	}
}

if(!function_exists("RemoveFileFromTemplate")){
	function RemoveFileFromTemplate($file, $bModule = true){
		@unlink($_SERVER['DOCUMENT_ROOT'].TEMPLATE_PATH.$file);
		if($bModule){
			RemoveFileFromModuleWizard('/site/templates/'.TEMPLATE_NAME.$file);
		}
	}
}

if(!function_exists('SearchFilesInPublicRecursive')){
	function SearchFilesInPublicRecursive($dir, $pattern, $flags = 0){
		$arDirExclude = array('bitrix', 'upload');
		$pattern = str_replace('//', '/', str_replace('//', '/', $dir.'/').$pattern);
		$files = glob($pattern, $flags);
		foreach(glob(dirname($pattern).'/*', GLOB_ONLYDIR|GLOB_NOSORT) as $dir){
			if(!in_array(basename($dir), $arDirExclude)){
				$files = array_merge($files, SearchFilesInPublicRecursive($dir, basename($pattern), $flags));
			}
		}
		return $files;
	}
}

if(!function_exists('RemoveOldBakFiles')){
	function RemoveOldBakFiles(){
		$arDirs = $arFiles = array();

		foreach(
			$arExclude = array(
				'bitrix',
				'local',
				'upload',
				'webp-copy',
				'cgi',
				'cgi-bin',
			) as $dir){
			$arDirExclude[] = $_SERVER['DOCUMENT_ROOT'].'/'.$dir;
		}

		// public
		if($arSites = GetSites()){
			foreach($arSites as $siteID => $arSite){
				$arSite['DIR'] = str_replace('//', '/', '/'.$arSite['DIR']);
				if(!strlen($arSite['DOC_ROOT'])){
					$arSite['DOC_ROOT'] = $_SERVER['DOCUMENT_ROOT'];
				}
				$arSite['DOC_ROOT'] = str_replace('//', '/', $arSite['DOC_ROOT'].'/');
				$siteDir = str_replace('//', '/', $arSite['DOC_ROOT'].$arSite['DIR']);

				if($arPublicDirs = glob($siteDir.'*', GLOB_ONLYDIR|GLOB_NOSORT)){
					foreach($arPublicDirs as $dir){
						foreach($arExclude as $exclude){
							if(strpos($dir, '/'.$exclude) !== false){
								continue 2;
							}
						}

						$arDirs[] = str_replace('//', '/', $dir.'/');
					}
				}
			}

			$i = 0;
			while($arDirs && ++$i < 10000){
				$dir = array_pop($arDirs);
				$arFiles = array_merge($arFiles, (array)glob($dir.'_*.back*', GLOB_NOSORT));
				foreach((array)glob($dir.'*', GLOB_ONLYDIR|GLOB_NOSORT) as $dir){
					if(
						strlen($dir)
					){
						foreach($arExclude as $exclude){
							if(strpos($dir, '/'.$exclude) !== false){
								continue 2;
							}
						}

						$arDirs[] = str_replace('//', '/', $dir.'/');
					}
				}
			}
		}

		$arDirs = array();

		// aspro components
		if(file_exists($_SERVER['DOCUMENT_ROOT'].'/bitrix/components/')){
			if($arComponents = glob($_SERVER['DOCUMENT_ROOT'].'/bitrix/components/'.PARTNER_NAME.'*', 0)){
				foreach($arComponents as $componentPath){
					$arDirs[] = str_replace('//', '/', $componentPath.'/');
				}
			}
		}
		if(file_exists($_SERVER['DOCUMENT_ROOT'].'/local/components/')){
			if($arComponents = glob($_SERVER['DOCUMENT_ROOT'].'/local/components/'.PARTNER_NAME.'*', 0)){
				foreach($arComponents as $componentPath){
					$arDirs[] = str_replace('//', '/', $componentPath.'/');
				}
			}
		}

		// aspro and other templates
		if(file_exists($_SERVER['DOCUMENT_ROOT'].'/bitrix/templates/')){
			if($arTemplates = glob($_SERVER['DOCUMENT_ROOT'].'/bitrix/templates/*', 0)){
				foreach($arTemplates as $templatePath){
					$arDirs[] = str_replace('//', '/', $templatePath.'/');
				}
			}
		}
		if(file_exists($_SERVER['DOCUMENT_ROOT'].'/local/templates/')){
			if($arTemplates = glob($_SERVER['DOCUMENT_ROOT'].'/local/templates/*', 0)){
				foreach($arTemplates as $templatePath){
					$arDirs[] = str_replace('//', '/', $templatePath.'/');
				}
			}
		}

		// aspro modules
		if(file_exists($_SERVER['DOCUMENT_ROOT'].'/bitrix/modules/')){
			if($arModules = glob($_SERVER['DOCUMENT_ROOT'].'/bitrix/modules/'.PARTNER_NAME.'*', 0)){
				foreach($arModules as $modulePath){
					$arDirs[] = str_replace('//', '/', $modulePath.'/');
				}
			}
		}
		if(file_exists($_SERVER['DOCUMENT_ROOT'].'/local/modules/')){
			if($arModules = glob($_SERVER['DOCUMENT_ROOT'].'/local/modules/'.PARTNER_NAME.'*', 0)){
				foreach($arModules as $modulePath){
					$arDirs[] = str_replace('//', '/', $modulePath.'/');
				}
			}
		}

		// aspro wizards
		if(file_exists($_SERVER['DOCUMENT_ROOT'].'/bitrix/wizards/')){
			if($arModules = glob($_SERVER['DOCUMENT_ROOT'].'/bitrix/wizards/'.PARTNER_NAME.'*', 0)){
				foreach($arModules as $modulePath){
					$arDirs[] = str_replace('//', '/', $modulePath.'/');
				}
			}
		}
		if(file_exists($_SERVER['DOCUMENT_ROOT'].'/local/wizards/')){
			if($arModules = glob($_SERVER['DOCUMENT_ROOT'].'/local/wizards/'.PARTNER_NAME.'*', 0)){
				foreach($arModules as $modulePath){
					$arDirs[] = str_replace('//', '/', $modulePath.'/');
				}
			}
		}

		$i = 0;
		while($arDirs && ++$i < 10000){
			$popdir = array_pop($arDirs);
			$arFiles = array_merge($arFiles, (array)glob($popdir.'_*.back*', GLOB_NOSORT));
			foreach((array)glob($popdir.'{,.}*', GLOB_ONLYDIR|GLOB_NOSORT|GLOB_BRACE) as $dir){
				if(
					strlen($dir) &&
					!in_array($dir, array($popdir.'.', $popdir.'..')) &&
					!in_array($dir, $arDirExclude) &&
					(
						strpos($dir, PARTNER_NAME) !== false ||
						strpos($dir, '/templates/') !== false
					)
				){
					$arDirs[] = str_replace('//', '/', $dir.'/');
				}
			}
		}

		if($arFiles){
			foreach($arFiles as $file){
				if(file_exists($file) && !is_dir($file)){
					if(time() - filemtime($file) >= 1209600){ // 14 days
						@unlink($file);
					}
				}
			}
		}
	}
}

if(!function_exists("GetDBcharset")){
	function GetDBcharset(){
		$sql='SHOW VARIABLES LIKE "character_set_database";';
		if(method_exists('\Bitrix\Main\Application', 'getConnection')){
			$db=\Bitrix\Main\Application::getConnection();
			$arResult = $db->query($sql)->fetch();
			return $arResult['Value'];
		}elseif(defined("BX_USE_MYSQLI") && BX_USE_MYSQLI == true){
			if($result = @mysqli_query($sql)){
				$arResult = mysql_fetch_row($result);
				return $arResult[1];
			}
		}elseif($result = @mysql_query($sql)){
			$arResult = mysql_fetch_row($result);
			return $arResult[1];
		}
		return false;
	}
}

if(!function_exists("GetMes")){
	function GetMes($str){
		static $isUTF8;
		if($isUTF8 === NULL){
			$isUTF8 = GetDBcharset() == 'utf8';
		}
		return ($isUTF8 ? iconv('CP1251', 'UTF-8', $str) : $str);
	}
}

if(!function_exists("UpdaterLog")){
	function UpdaterLog($str){
		static $fLOG;
		if($bFirst = !$fLOG){
			$fLOG = $_SERVER['DOCUMENT_ROOT'].'/bitrix/modules/'.MODULE_NAME.'/updaterlog.txt';
		}
		if(is_array($str)){
			$str = print_r($str, 1);
		}
		@file_put_contents($fLOG, ($bFirst ? PHP_EOL : '').date("d.m.Y H:i:s", time()).' '.$str.PHP_EOL, FILE_APPEND);
	}
}

if(!function_exists("InitComposite")){
	function InitComposite($arSites){
		if(class_exists("CHTMLPagesCache")){
			if(method_exists("CHTMLPagesCache", "GetOptions")){
				if($arHTMLCacheOptions = CHTMLPagesCache::GetOptions()){
					if($arHTMLCacheOptions["COMPOSITE"] !== "Y"){
						$arDomains = array();
						if($arSites){
							foreach($arSites as $arSite){
								if(strlen($serverName = trim($arSite["SERVER_NAME"], " \t\n\r"))){
									$arDomains[$serverName] = $serverName;
								}
								if(strlen($arSite["DOMAINS"])){
									foreach(explode("\n", $arSite["DOMAINS"]) as $domain){
										if(strlen($domain = trim($domain, " \t\n\r"))){
											$arDomains[$domain] = $domain;
										}
									}
								}
							}
						}

						if(!$arDomains){
							$arDomains[$_SERVER["SERVER_NAME"]] = $_SERVER["SERVER_NAME"];
						}

						if(!$arHTMLCacheOptions["GROUPS"]){
							$arHTMLCacheOptions["GROUPS"] = array();
						}
						$rsGroups = CGroup::GetList(($by="id"), ($order="asc"), array());
						while($arGroup = $rsGroups->Fetch()){
							if($arGroup["ID"] > 2){
								if(in_array($arGroup["STRING_ID"], array("RATING_VOTE_AUTHORITY", "RATING_VOTE")) && !in_array($arGroup["ID"], $arHTMLCacheOptions["GROUPS"])){
									$arHTMLCacheOptions["GROUPS"][] = $arGroup["ID"];
								}
							}
						}

						$arHTMLCacheOptions["COMPOSITE"] = "Y";
						$arHTMLCacheOptions["DOMAINS"] = array_merge((array)$arHTMLCacheOptions["DOMAINS"], (array)$arDomains);
						CHTMLPagesCache::SetEnabled(true);
						CHTMLPagesCache::SetOptions($arHTMLCacheOptions);
						bx_accelerator_reset();
					}
				}
			}
		}
	}
}

if(!function_exists('IsCompositeEnabled')){
	function IsCompositeEnabled(){
		if(class_exists('CHTMLPagesCache')){
			if($arHTMLCacheOptions = GetCompositeOptions()){
				if(method_exists('CHTMLPagesCache', 'isOn')){
					if (CHTMLPagesCache::isOn()){
						if(isset($arHTMLCacheOptions['AUTO_COMPOSITE']) && $arHTMLCacheOptions['AUTO_COMPOSITE'] === 'Y'){
							return 'AUTO_COMPOSITE';
						}
						else{
							return 'COMPOSITE';
						}
					}
				}
				else{
					if($arHTMLCacheOptions['COMPOSITE'] === 'Y'){
						return 'COMPOSITE';
					}
				}
			}
		}

		return false;
	}
}

if(!function_exists('EnableComposite')){
	function EnableComposite($auto = false, $arHTMLCacheOptions = array()){
		if(class_exists('CHTMLPagesCache')){
			if(method_exists('CHTMLPagesCache', 'GetOptions')){
				$arHTMLCacheOptions = is_array($arHTMLCacheOptions) ? $arHTMLCacheOptions : array();
				$arHTMLCacheOptions = array_merge(CHTMLPagesCache::GetOptions(), $arHTMLCacheOptions);
	
				$arHTMLCacheOptions['COMPOSITE'] = isset($arHTMLCacheOptions['COMPOSITE']) && $arHTMLCacheOptions['COMPOSITE'] ? $arHTMLCacheOptions['COMPOSITE'] : 'Y';
				$arHTMLCacheOptions['AUTO_UPDATE'] = isset($arHTMLCacheOptions['AUTO_UPDATE']) && $arHTMLCacheOptions['AUTO_UPDATE'] ? $arHTMLCacheOptions['AUTO_UPDATE'] : 'Y'; // standart mode
				$arHTMLCacheOptions['AUTO_UPDATE_TTL'] = isset($arHTMLCacheOptions['AUTO_UPDATE_TTL']) && $arHTMLCacheOptions['AUTO_UPDATE_TTL'] ? $arHTMLCacheOptions['AUTO_UPDATE_TTL'] : '0'; // no ttl delay
				$arHTMLCacheOptions['AUTO_COMPOSITE'] = ($auto ? 'Y' : 'N'); // auto composite mode
	
				CHTMLPagesCache::SetEnabled(true);
				CHTMLPagesCache::SetOptions($arHTMLCacheOptions);
				bx_accelerator_reset();
			}
		}
	}
}

if(!function_exists('GetCompositeOptions')){
	function GetCompositeOptions(){
		if(class_exists('CHTMLPagesCache')){
			if(method_exists('CHTMLPagesCache', 'GetOptions')){
				return CHTMLPagesCache::GetOptions();
			}
		}

		return array();
	}
}
?>46   98|/aspro.optimus/install/version.php|4a72392e<?
$arModuleVersion = [
	"VERSION" => "1.7.4",
	"VERSION_DATE" => "2022-07-20 00:00:00"
];
?>95   2611|/aspro.optimus/install/wizards/aspro/optimus/site/public/ru/info/brands/index.php|2f01296a<?
require($_SERVER["DOCUMENT_ROOT"]."/bitrix/header.php");
$APPLICATION->SetTitle("Производители");
?><?$APPLICATION->IncludeComponent("bitrix:news", "brands", array(
	"IBLOCK_TYPE" => "aspro_optimus_content",
	"IBLOCK_ID" => "#IBLOCK_BRANDS_ID#",
	"NEWS_COUNT" => "32",
	"USE_SEARCH" => "N",
	"USE_RSS" => "N",
	"USE_RATING" => "N",
	"USE_CATEGORIES" => "N",
	"USE_REVIEW" => "N",
	"USE_FILTER" => "N",
	"SORT_BY1" => "SORT",
	"SORT_ORDER1" => "ASC",
	"SORT_BY2" => "SORT",
	"SORT_ORDER2" => "ASC",
	"CHECK_DATES" => "Y",
	"SEF_MODE" => "Y",
	"SEF_FOLDER" => "#SITE_DIR#info/brands/",
	"AJAX_MODE" => "N",
	"AJAX_OPTION_JUMP" => "N",
	"AJAX_OPTION_STYLE" => "Y",
	"AJAX_OPTION_HISTORY" => "N",
	"CACHE_TYPE" => "A",
	"CACHE_TIME" => "36000000",
	"CACHE_FILTER" => "N",
	"CACHE_GROUPS" => "N",
	"SET_TITLE" => "Y",
	"SET_STATUS_404" => "N",
	"INCLUDE_IBLOCK_INTO_CHAIN" => "N",
	"ADD_SECTIONS_CHAIN" => "N",
	"USE_PERMISSIONS" => "N",
	"PREVIEW_TRUNCATE_LEN" => "",
	"LIST_ACTIVE_DATE_FORMAT" => "j F Y",
	"LIST_FIELD_CODE" => array(
		0 => "PREVIEW_PICTURE",
		1 => "DETAIL_PICTURE",
		2 => "",
	),
	"LIST_PROPERTY_CODE" => array(
		0 => "",
		1 => "",
	),
	"HIDE_LINK_WHEN_NO_DETAIL" => "N",
	"DISPLAY_NAME" => "Y",
	"META_KEYWORDS" => "-",
	"META_DESCRIPTION" => "-",
	"BROWSER_TITLE" => "-",
	"DETAIL_ACTIVE_DATE_FORMAT" => "j F Y",
	"DETAIL_FIELD_CODE" => array(
		0 => "PREVIEW_PICTURE",
		1 => "",
	),
	"DETAIL_PROPERTY_CODE" => array(
		0 => "",
		1 => "MORE_PHOTO",
	),
	"IBLOCK_CATALOG_TYPE" => "aspro_optimus_catalog",
	"CATALOG_IBLOCK_ID1" => "#IBLOCK_CATALOG_ID#",
	"CATALOG_IBLOCK_ID2" => "",
	"CATALOG_IBLOCK_ID3" => "",
	"SHOW_BACK_LINK" => "Y",
	"GALLERY_PROPERTY" => "MORE_PHOTO",
	"SHOW_GALLERY" => "Y",
	"LINKED_PRODUCTS_PROPERTY" => "BRAND",
	"SHOW_LINKED_PRODUCTS" => "Y",
	"DETAIL_DISPLAY_TOP_PAGER" => "N",
	"DETAIL_DISPLAY_BOTTOM_PAGER" => "Y",
	"DETAIL_PAGER_TITLE" => "",
	"DETAIL_PAGER_TEMPLATE" => "",
	"DETAIL_PAGER_SHOW_ALL" => "Y",
	"PAGER_TEMPLATE" => ".default",
	"DISPLAY_TOP_PAGER" => "N",
	"DISPLAY_BOTTOM_PAGER" => "Y",
	"PAGER_TITLE" => "",
	"PAGER_SHOW_ALWAYS" => "N",
	"PAGER_DESC_NUMBERING" => "N",
	"PAGER_DESC_NUMBERING_CACHE_TIME" => "36000",
	"PAGER_SHOW_ALL" => "N",
	"CATALOG_FILTER_NAME" => "arrProductsFilter",
	"LIST_VIEW" => "slider",
	"PRICE_CODE" => array(0=>"BASE",1=>"",),
	"SHOW_ITEM_SECTION" => "Y",
	"DEPTH_LEVEL_BRAND" => "3",
	"AJAX_OPTION_ADDITIONAL" => "",
	"SEF_URL_TEMPLATES" => array(
		"news" => "",
		"section" => "",
		"detail" => "#ELEMENT_CODE#/",
	)
	),
	false
);?><?require($_SERVER["DOCUMENT_ROOT"]."/bitrix/footer.php");?>99   14206|/aspro.optimus/install/wizards/aspro/optimus/site/templates/aspro_optimus/header.php|7bed3741<?if(!defined("B_PROLOG_INCLUDED") || B_PROLOG_INCLUDED !== true) die();
if($GET["debug"] == "y"){
	error_reporting(E_ERROR | E_PARSE);
}
IncludeTemplateLangFile(__FILE__);
global $APPLICATION, $TEMPLATE_OPTIONS, $arSite;
$arSite = CSite::GetByID(SITE_ID)->Fetch();
$htmlClass = ($_REQUEST && isset($_REQUEST['print']) ? 'print' : false);
?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="<?=LANGUAGE_ID?>" lang="<?=LANGUAGE_ID?>" <?=($htmlClass ? 'class="'.$htmlClass.'"' : '')?>>
<head>
	<title><?$APPLICATION->ShowTitle()?></title>
	<?$APPLICATION->ShowMeta("viewport");?>
	<?$APPLICATION->ShowMeta("HandheldFriendly");?>
	<?$APPLICATION->ShowMeta("apple-mobile-web-app-capable", "yes");?>
	<?$APPLICATION->ShowMeta("apple-mobile-web-app-status-bar-style");?>
	<?$APPLICATION->ShowMeta("SKYPE_TOOLBAR");?>
	<?$APPLICATION->ShowHead();?>
	<?$APPLICATION->AddHeadString('<script>BX.message('.CUtil::PhpToJSObject( $MESS, false ).')</script>', true);?>
	<?if(CModule::IncludeModule("aspro.optimus")) {COptimus::Start(SITE_ID);}?>
	<!--[if gte IE 9]><style type="text/css">.basket_button, .button30, .icon {filter: none;}</style><![endif]-->
	<?$bIndexBot = (isset($_SERVER['HTTP_ACCEPT_LANGUAGE']) && strpos($_SERVER['HTTP_USER_AGENT'], 'Lighthouse') !== false);?>
<?if(!$bIndexBot):?><link href='<?=CMain::IsHTTPS() ? 'https' : 'http'?>://fonts.googleapis.com/css?family=Ubuntu:400,500,700,400italic&subset=latin,cyrillic' rel='stylesheet' type='text/css'><?endif;?>
</head>
	<body class='<?=($bIndexBot ? "wbot" : "");?>' id="main">
		<div id="panel"><?$APPLICATION->ShowPanel();?></div>
		<?if(!CModule::IncludeModule("aspro.optimus")){?><center><?$APPLICATION->IncludeFile(SITE_DIR."include/error_include_module.php");?></center></body></html><?die();?><?}?>
		<?$APPLICATION->IncludeComponent("aspro:theme.optimus", ".default", array("COMPONENT_TEMPLATE" => ".default"), false);?>
		<?COptimus::SetJSOptions();?>
			<?if($TEMPLATE_OPTIONS["MOBILE_FILTER_COMPACT"]["CURRENT_VALUE"] === "Y"):?>
			    <div id="mobilefilter" class="visible-xs visible-sm scrollbar-filter"></div>
			<?endif;?>
		<div class="wrapper <?=(COptimus::getCurrentPageClass());?> basket_<?=strToLower($TEMPLATE_OPTIONS["BASKET"]["CURRENT_VALUE"]);?> <?=strToLower($TEMPLATE_OPTIONS["MENU_COLOR"]["CURRENT_VALUE"]);?> banner_auto">
			<div class="header_wrap <?=strtolower($TEMPLATE_OPTIONS["HEAD_COLOR"]["CURRENT_VALUE"])?>">
				<?if($TEMPLATE_OPTIONS["BASKET"]["CURRENT_VALUE"]=="NORMAL"){?>
					<div class="top-h-row">
						<div class="wrapper_inner">
							<div class="top_inner">
								<div class="content_menu">
									<?$APPLICATION->IncludeComponent("bitrix:main.include", ".default",
										array(
											"COMPONENT_TEMPLATE" => ".default",
											"PATH" => SITE_DIR."include/topest_page/menu.top_content_row.php",
											"AREA_FILE_SHOW" => "file",
											"AREA_FILE_SUFFIX" => "",
											"AREA_FILE_RECURSIVE" => "Y",
											"EDIT_TEMPLATE" => "standard.php"
										),
										false
									);?>
								</div>
								<div class="phones">
									<div class="phone_block">
										<span class="phone_wrap">
											<span class="icons fa fa-phone"></span>
											<span class="phone_text">
												<?$APPLICATION->IncludeComponent("bitrix:main.include", ".default",
													array(
														"COMPONENT_TEMPLATE" => ".default",
														"PATH" => SITE_DIR."include/phone.php",
														"AREA_FILE_SHOW" => "file",
														"AREA_FILE_SUFFIX" => "",
														"AREA_FILE_RECURSIVE" => "Y",
														"EDIT_TEMPLATE" => "standard.php"
													),
													false
												);?>
											</span>
										</span>
										<span class="order_wrap_btn">
											<span class="callback_btn"><?=GetMessage("CALLBACK")?></span>
										</span>
									</div>
								</div>
								<div class="h-user-block" id="personal_block">
									<?$APPLICATION->IncludeComponent("bitrix:main.include", ".default",
										array(
											"COMPONENT_TEMPLATE" => ".default",
											"PATH" => SITE_DIR."include/topest_page/auth.top.php",
											"AREA_FILE_SHOW" => "file",
											"AREA_FILE_SUFFIX" => "",
											"AREA_FILE_RECURSIVE" => "Y",
											"EDIT_TEMPLATE" => "standard.php"
										),
										false
									);?>
								</div>
								<div class="clearfix"></div>
							</div>
						</div>
					</div>
				<?}?>
				<header id="header" class="page-header">
					<div class="wrapper_inner">
						<div class="top_br"></div>
						<table class="middle-h-row">
							<tr>
								<td class="logo_wrapp">
									<div class="logo nofill_<?=strtolower(\Bitrix\Main\Config\Option::get('aspro.optimus', 'NO_LOGO_BG', 'N'));?>">
										<?COptimus::ShowLogo();?>
									</div>
								</td>
								<td class="text_wrapp">
									<div class="slogan">
										<?$APPLICATION->IncludeComponent("bitrix:main.include", ".default",
											array(
												"COMPONENT_TEMPLATE" => ".default",
												"PATH" => SITE_DIR."include/top_page/slogan.php",
												"AREA_FILE_SHOW" => "file",
												"AREA_FILE_SUFFIX" => "",
												"AREA_FILE_RECURSIVE" => "Y",
												"EDIT_TEMPLATE" => "standard.php"
											),
											false
										);?>
									</div>
								</td>
								<td  class="center_block">
									<div class="search">
										<?$APPLICATION->IncludeComponent("bitrix:main.include", ".default",
											array(
												"COMPONENT_TEMPLATE" => ".default",
												"PATH" => SITE_DIR."include/top_page/search.title.catalog.php",
												"AREA_FILE_SHOW" => "file",
												"AREA_FILE_SUFFIX" => "",
												"AREA_FILE_RECURSIVE" => "Y",
												"EDIT_TEMPLATE" => "standard.php"
											),
											false
										);?>
									</div>
								</td>
								<td class="basket_wrapp">
									<?if($TEMPLATE_OPTIONS["BASKET"]["CURRENT_VALUE"] == "NORMAL"){?>
										<div class="wrapp_all_icons">
											<div class="header-compare-block icon_block iblock compare-line" id="compare_line" >
												<?$APPLICATION->IncludeComponent("bitrix:main.include", ".default",
													array(
														"COMPONENT_TEMPLATE" => ".default",
														"PATH" => SITE_DIR."include/top_page/catalog.compare.list.compare_top.php",
														"AREA_FILE_SHOW" => "file",
														"AREA_FILE_SUFFIX" => "",
														"AREA_FILE_RECURSIVE" => "Y",
														"EDIT_TEMPLATE" => "standard.php"
													),
													false
												);?>
											</div>
											<div class="header-cart basket-line" id="basket_line">
												<?$APPLICATION->IncludeComponent("bitrix:main.include", ".default",
													array(
														"COMPONENT_TEMPLATE" => ".default",
														"PATH" => SITE_DIR."include/top_page/comp_basket_top.php",
														"AREA_FILE_SHOW" => "file",
														"AREA_FILE_SUFFIX" => "",
														"AREA_FILE_RECURSIVE" => "Y",
														"EDIT_TEMPLATE" => "standard.php"
													),
													false
												);?>
											</div>
										</div>
									<?}else{?>
										<div class="header-cart fly basket-line" id="basket_line">
											<?$APPLICATION->IncludeComponent("bitrix:main.include", ".default",
												array(
													"COMPONENT_TEMPLATE" => ".default",
													"PATH" => SITE_DIR."include/top_page/comp_basket_top.php",
													"AREA_FILE_SHOW" => "file",
													"AREA_FILE_SUFFIX" => "",
													"AREA_FILE_RECURSIVE" => "Y",
													"EDIT_TEMPLATE" => "standard.php"
												),
												false
											);?>
										</div>
										<div class="middle_phone">
											<div class="phones">
												<span class="phone_wrap">
													<span class="phone">
														<span class="icons fa fa-phone"></span>
														<span class="phone_text">
															<?$APPLICATION->IncludeComponent("bitrix:main.include", ".default",
																array(
																	"COMPONENT_TEMPLATE" => ".default",
																	"PATH" => SITE_DIR."include/phone.php",
																	"AREA_FILE_SHOW" => "file",
																	"AREA_FILE_SUFFIX" => "",
																	"AREA_FILE_RECURSIVE" => "Y",
																	"EDIT_TEMPLATE" => "standard.php"
																),
																false
															);?>
														</span>
													</span>
													<span class="order_wrap_btn">
														<span class="callback_btn"><?=GetMessage("CALLBACK")?></span>
													</span>
												</span>
											</div>
										</div>
									<?}?>
									<div class="clearfix"></div>
								</td>
							</tr>
						</table>
					</div>
					<div class="catalog_menu menu_<?=strToLower($TEMPLATE_OPTIONS["MENU_COLOR"]["CURRENT_VALUE"]);?>">
						<div class="wrapper_inner">
							<div class="wrapper_middle_menu wrap_menu">
								<ul class="menu adaptive">
									<li class="menu_opener">
										<?$APPLICATION->ShowViewContent('search_in_menu');?>
										<div class="text">
											<?$APPLICATION->IncludeComponent("bitrix:main.include", ".default",
												array(
													"COMPONENT_TEMPLATE" => ".default",
													"PATH" => SITE_DIR."include/menu/menu.mobile.title.php",
													"AREA_FILE_SHOW" => "file",
													"AREA_FILE_SUFFIX" => "",
													"AREA_FILE_RECURSIVE" => "Y",
													"EDIT_TEMPLATE" => "standard.php"
												),
												false
											);?>
										</div>
									</li>
								</ul>
								<div class="catalog_menu_ext">
									<?$APPLICATION->IncludeComponent("bitrix:main.include", ".default",
										array(
											"COMPONENT_TEMPLATE" => ".default",
											"PATH" => SITE_DIR."include/menu/menu.catalog.php",
											"AREA_FILE_SHOW" => "file",
											"AREA_FILE_SUFFIX" => "",
											"AREA_FILE_RECURSIVE" => "Y",
											"EDIT_TEMPLATE" => "standard.php"
										),
										false
									);?>
								</div>
								<div class="inc_menu">
									<?$APPLICATION->IncludeComponent("bitrix:main.include", ".default",
										array(
											"COMPONENT_TEMPLATE" => ".default",
											"PATH" => SITE_DIR."include/menu/menu.top_content_multilevel.php",
											"AREA_FILE_SHOW" => "file",
											"AREA_FILE_SUFFIX" => "",
											"AREA_FILE_RECURSIVE" => "Y",
											"EDIT_TEMPLATE" => "standard.php"
										),
										false
									);?>
								</div>
							</div>
						</div>
					</div>
				</header>
				
				<? if( $TEMPLATE_OPTIONS['HEAD_FIXED_CHECK']['CURRENT_VALUE'] === 'Y' ): ?>
					<div id="headerfixed" class="page-header page-header__fixed">
						<? COptimus::ShowPageType('header_fixed'); ?>
					</div>
				<? endif; ?>
				
				<? if( $TEMPLATE_OPTIONS['HEAD_MOBILE_CHECK']['CURRENT_VALUE'] === 'Y' ): ?>
					<div id="headerfixed_mobile" class="page-header page-header__fixed--mobile">
						<? COptimus::ShowPageType('header_fixed_mobile') ?>
					</div>
				<? endif; ?>
			</div>
			<div class="wraps" id="content">
				<div class="wrapper_inner <?=(COptimus::IsMainPage() ? "front" : "");?> <?=((COptimus::IsOrderPage() || COptimus::IsBasketPage()) ? "wide_page" : "");?>">
					<?if(!COptimus::IsOrderPage() && !COptimus::IsBasketPage()){?>
						<?$APPLICATION->ShowViewContent('detail_filter');?>
						<div class="left_block">
							<?$APPLICATION->IncludeComponent("bitrix:main.include", ".default",
								array(
									"COMPONENT_TEMPLATE" => ".default",
									"PATH" => SITE_DIR."include/left_block/menu.left_menu.php",
									"AREA_FILE_SHOW" => "file",
									"AREA_FILE_SUFFIX" => "",
									"AREA_FILE_RECURSIVE" => "Y",
									"EDIT_TEMPLATE" => "standard.php"
								),
								false
							);?>

							<?$APPLICATION->ShowViewContent('left_menu');?>

							<?$APPLICATION->IncludeComponent("bitrix:main.include", ".default",
								array(
									"COMPONENT_TEMPLATE" => ".default",
									"PATH" => SITE_DIR."include/left_block/comp_banners_left.php",
									"AREA_FILE_SHOW" => "file",
									"AREA_FILE_SUFFIX" => "",
									"AREA_FILE_RECURSIVE" => "Y",
									"EDIT_TEMPLATE" => "standard.php"
								),
								false
							);?>
							<?$APPLICATION->IncludeComponent("bitrix:main.include", ".default",
								array(
									"COMPONENT_TEMPLATE" => ".default",
									"PATH" => SITE_DIR."include/left_block/comp_subscribe.php",
									"AREA_FILE_SHOW" => "file",
									"AREA_FILE_SUFFIX" => "",
									"AREA_FILE_RECURSIVE" => "Y",
									"EDIT_TEMPLATE" => "standard.php"
								),
								false
							);?>
							<?$APPLICATION->IncludeComponent("bitrix:main.include", ".default",
								array(
									"COMPONENT_TEMPLATE" => ".default",
									"PATH" => SITE_DIR."include/left_block/comp_news.php",
									"AREA_FILE_SHOW" => "file",
									"AREA_FILE_SUFFIX" => "",
									"AREA_FILE_RECURSIVE" => "Y",
									"EDIT_TEMPLATE" => "standard.php"
								),
								false
							);?>
							<?$APPLICATION->IncludeComponent("bitrix:main.include", ".default",
								array(
									"COMPONENT_TEMPLATE" => ".default",
									"PATH" => SITE_DIR."include/left_block/comp_news_articles.php",
									"AREA_FILE_SHOW" => "file",
									"AREA_FILE_SUFFIX" => "",
									"AREA_FILE_RECURSIVE" => "Y",
									"EDIT_TEMPLATE" => "standard.php"
								),
								false
							);?>
						</div>
						<div class="right_block">
					<?}?>
						<div class="middle">
							<?if(!COptimus::IsMainPage()):?>
								<div class="container">
									<div id="navigation"><?$APPLICATION->IncludeComponent("bitrix:breadcrumb", "optimus", array(
										"START_FROM" => "0",
										"PATH" => "",
										"SITE_ID" => "-",
										"SHOW_SUBSECTIONS" => "N"
										),
										false
									);?>
									</div><?$APPLICATION->ShowViewContent('section_bnr_content');?>
			<!--title_content-->
			<h1 id="pagetitle"><?=$APPLICATION->ShowTitle(false);?></h1>
			<!--end-title_content-->
										<?endif;?>
<?if(isset($_SERVER["HTTP_X_REQUESTED_WITH"]) && strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) == "xmlhttprequest") $APPLICATION->RestartBuffer();?>104  147560|/aspro.optimus/install/wizards/aspro/optimus/site/templates/aspro_optimus/js/main.min.js|6dd04006var basketTimeoutSlide,resizeEventTimer,funcDefined=function(func){try{return"function"==typeof func||"function"==typeof window[func]}catch(e){return!1}};if(!funcDefined("setLocationSKU"))function setLocationSKU(ID,offerID){if(void 0===offerID&&(offerID="oid"),offerID){var objUrl=parseUrlQuery(),j=0,prefix="",query_string="",url="";for(var i in objUrl[offerID]=ID,objUrl)parseInt(j)>0&&(prefix="&"),query_string+=prefix+i+"="+objUrl[i],j++;query_string&&(url=location.pathname+"?"+query_string);try{return void history.replaceState(null,null,url)}catch(e){}location.hash="#"+url.substr(1)}}if("SelectOfferProp"in window||"function"==typeof window.SelectOfferProp||(SelectOfferProp=function(){var _this=$(this),obParams={},obSelect={},objUrl=parseUrlQuery(),add_url="",selectMode=!_this.hasClass("item"),container=_this.closest(".bx_catalog_item_scu"),img=_this.closest(".item-parent").find(".thumb img");obParams={PARAMS:_this.closest(".js-wrapper-block").data("params"),ID:container.data("offer_id"),SITE_ID:container.data("site_id"),LINK_ID:container.data("id")+"_"+_this.closest(".cur").data("code"),IBLOCK_ID:container.data("offer_iblockid"),PROPERTY_ID:container.data("propertyid"),DEPTH:_this.closest(".item_wrapper").index(),VALUE:selectMode?_this.find("option:selected").data("onevalue"):_this.data("onevalue"),CLASS:"inner_content",PICTURE:img.data("src")?img.data("src"):img.attr("src"),ARTICLE_NAME:_this.closest(".item_wrapper").find(".article_block").data("name"),ARTICLE_VALUE:_this.closest(".item_wrapper").find(".article_block").data("value")},"clear_cache"in objUrl&&"Y"==objUrl.clear_cache&&(add_url+="?clear_cache=Y");for(i=0;i<obParams.DEPTH+1;i++)strName="PROP_"+container.find(".item_wrapper:eq("+i+") > div").data("id"),container.find(".item_wrapper:eq("+i+") select").length?(obSelect[strName]=container.find(".item_wrapper:eq("+i+") select option:selected").data("onevalue"),obParams[strName]=container.find(".item_wrapper:eq("+i+") select option:selected").data("onevalue"),container.find(".item_wrapper:eq("+i+") select option:selected").attr("title")&&_this.closest(".item_wrapper").find(".show_class").text(container.find(".item_wrapper:eq("+i+") select option:selected").attr("title"))):(obSelect[strName]=container.find(".item_wrapper:eq("+i+") li.item.active").data("onevalue"),obParams[strName]=container.find(".item_wrapper:eq("+i+") li.item.active").data("onevalue"));if(selectMode||(_this.siblings().removeClass("active"),_this.addClass("active")),_this.attr("title")){var skuVal=_this.attr("title");_this.closest(".item_wrapper").find(".show_class").text(skuVal)}else{var img_row=_this.find(" > i");if(img_row.length&&img_row.attr("title")){var skuVal=img_row.attr("title");_this.closest(".item_wrapper").find(".show_class").text(skuVal)}}$.ajax({url:arOptimusOptions.SITE_DIR+"ajax/js_item_detail.php"+add_url,type:"POST",data:obParams}).success((function(html){var ob=BX.processHTML(html);BX.ajax.processScripts(ob.SCRIPT),funcDefined("sliceItemBlock")&&sliceItemBlock({resize:!1}),$(".counter_wrapp.list")&&$(".counter_wrapp.list .counter_block.big").removeClass("big")}))},$(document).on("click",".ajax_load .bx_catalog_item_scu li.item:not(.active)",SelectOfferProp),$(document).on("change",".ajax_load .bx_catalog_item_scu select",SelectOfferProp)),!funcDefined("trimPrice"))var trimPrice=function trimPrice(s){return s=(s=s.split(" ").join("")).split("&nbsp;").join("")};if(!funcDefined("markProductRemoveBasket"))var markProductRemoveBasket=function markProductRemoveBasket(id){$(".in-cart[data-item="+id+"]").hide(),$(".to-cart[data-item="+id+"]").show(),$(".to-cart[data-item="+id+"]").closest(".button_block").removeClass("wide"),$(".to-cart[data-item="+id+"]").closest(".counter_wrapp").find(".counter_block").show(),$(".counter_block[data-item="+id+"]").show(),$(".in-subscribe[data-item="+id+"]").hide(),$(".to-subscribe[data-item="+id+"]").show(),$(".wish_item[data-item="+id+"]").removeClass("added"),$(".wish_item[data-item="+id+"] .value:not(.added)").show(),$(".wish_item[data-item="+id+"] .value.added").hide()};if(!funcDefined("markProductAddBasket"))var markProductAddBasket=function markProductAddBasket(id){$(".to-cart[data-item="+id+"]").hide(),$(".to-cart[data-item="+id+"]").closest(".counter_wrapp").find(".counter_block").hide(),$(".to-cart[data-item="+id+"]").closest(".button_block").addClass("wide"),$(".in-cart[data-item="+id+"]").show(),$(".wish_item[data-item="+id+"]").removeClass("added"),$(".wish_item[data-item="+id+"] .value:not(.added)").show(),$(".wish_item[data-item="+id+"] .value.added").hide()};if(!funcDefined("markProductDelay"))var markProductDelay=function markProductDelay(id){$(".in-cart[data-item="+id+"]").hide(),$(".to-cart[data-item="+id+"]").show(),$(".to-cart[data-item="+id+"]").closest(".counter_wrapp").find(".counter_block").show(),$(".to-cart[data-item="+id+"]").closest(".button_block").removeClass("wide"),$(".wish_item[data-item="+id+"]").addClass("added"),$(".wish_item[data-item="+id+"] .value:not(.added)").hide(),$(".wish_item[data-item="+id+"] .value.added").css("display","block")};if(!funcDefined("markProductSubscribe"))var markProductSubscribe=function markProductSubscribe(id){$(".to-subscribe[data-item="+id+"]").hide(),$(".in-subscribe[data-item="+id+"]").css("display","block")};if(!funcDefined("basketFly"))var basketFly=function basketFly(action){"object"==typeof obOptimusPredictions&&obOptimusPredictions.updateAll(),$.post(arOptimusOptions.SITE_DIR+"ajax/basket_fly.php","PARAMS="+$("#basket_form").find("input#fly_basket_params").val(),$.proxy((function(data){var small=$(".opener .basket_count").hasClass("small"),basket_count=$(data).find(".basket_count").find(".items div").text();$("#basket_line .basket_fly").addClass("loaded").html(data),"refresh"==action&&$("li[data-type=AnDelCanBuy]").trigger("click"),window.matchMedia("(min-width: 769px)").matches&&("open"==action?small?"N"!==arOptimusOptions.THEME.SHOW_BASKET_ONADDTOCART&&$(".opener .basket_count").click():($(".opener .basket_count").removeClass("small"),$('.tabs_content.basket li[item-section="AnDelCanBuy"]').addClass("cur"),$('#basket_line ul.tabs li[item-section="AnDelCanBuy"]').addClass("cur")):"wish"==action?small?"N"!==arOptimusOptions.THEME.SHOW_BASKET_ONADDTOCART&&$(".opener .wish_count").click():($(".opener .wish_count").removeClass("small"),$('.tabs_content.basket li[item-section="DelDelCanBuy"]').addClass("cur"),$('#basket_line ul.tabs li[item-section="DelDelCanBuy"]').addClass("cur")):"N"!==arOptimusOptions.THEME.SHOW_BASKET_ONADDTOCART&&$(".opener .basket_count").click())})))};if(!funcDefined("clearViewedProduct"))function clearViewedProduct(){try{var siteID,localKey="OPTIMUS_VIEWED_ITEMS_"+arOptimusOptions.SITE_ID,cookieParams={path:"/",expires:30};void 0!==BX.localStorage&&BX.localStorage.set(localKey,{},0),$.removeCookie(localKey,cookieParams)}catch(e){console.error(e)}}if(!funcDefined("setViewedProduct"))function setViewedProduct(id,arData){try{var bCookieJson=$.cookie.json;$.cookie.json=!0;var siteID,localKey="OPTIMUS_VIEWED_ITEMS_"+arOptimusOptions.SITE_ID,cookieParams={path:"/",expires:30};if(void 0!==BX.localStorage&&void 0!==id&&void 0!==arData){var PRODUCT_ID=void 0!==arData.PRODUCT_ID?arData.PRODUCT_ID:id,arViewedLocal=BX.localStorage.get(localKey)?BX.localStorage.get(localKey):{},arViewedCookie=$.cookie(localKey)?$.cookie(localKey):{},count=0;for(var _id in arViewedLocal)arViewedLocal[_id].IS_LAST=!1,void 0===arViewedCookie[_id]&&delete arViewedLocal[_id];for(var _id in arViewedCookie)void 0===arViewedLocal[_id]&&delete arViewedCookie[_id];for(var _id in arViewedCookie)count++;void 0!==arViewedLocal[PRODUCT_ID]&&arViewedLocal[PRODUCT_ID].ID!=id&&(delete arViewedLocal[PRODUCT_ID],delete arViewedCookie[PRODUCT_ID]),delete arViewedLocal[2243],delete arViewedCookie[2243];var time=(new Date).getTime();arData.ID=id,arData.ACTIVE_FROM=time,arData.IS_LAST=!0,arViewedLocal[PRODUCT_ID]=arData,arViewedCookie[PRODUCT_ID]=[time.toString(),arData.PICTURE_ID],$.cookie(localKey,arViewedCookie,cookieParams),BX.localStorage.set(localKey,arViewedLocal,2592e3)}}catch(e){console.error(e)}finally{$.cookie.json=bCookieJson}}if(!funcDefined("initSelects"))function initSelects(target){var iOS,timeout;!!navigator.userAgent.match(/(iPad|iPhone|iPod)/g)||($("#bx-soa-order").length||($(target).find(".wrapper select:visible").ikSelect({syntax:'<div class="ik_select_link"> \t\t\t\t\t\t<span class="ik_select_link_text"></span> \t\t\t\t\t\t<div class="trigger"></div> \t\t\t\t\t</div> \t\t\t\t\t<div class="ik_select_dropdown"> \t\t\t\t\t\t<div class="ik_select_list"> \t\t\t\t\t\t</div> \t\t\t\t\t</div>',dynamicWidth:!0,ddMaxHeight:112,customClass:"common_select",onShow:function(inst){inst.$dropdown.css("top",parseFloat(inst.$dropdown.css("top"))-5+"px"),inst.$dropdown.outerWidth()<inst.$link.outerWidth()&&inst.$dropdown.css("width",inst.$link.outerWidth()),inst.$dropdown.outerWidth()>inst.$link.outerWidth()&&inst.$dropdown.css("width",inst.$link.outerWidth());var count=0,client_height=0;inst.$dropdown.css("left",inst.$link.offset().left),$(inst.$listInnerUl).find("li").each((function(){$(this).hasClass("ik_select_option_disabled")||(++count,client_height+=$(this).outerHeight())})),client_height<112?inst.$listInner.css("height","auto"):inst.$listInner.css("height","112px"),inst.$link.addClass("opened"),inst.$listInner.addClass("scroller")},onHide:function(inst){inst.$link.removeClass("opened")}}),$(window).on("resize",(function(){clearTimeout(timeout),timeout=setTimeout((function(){var inst="";(inst=$(".common_select-link.opened + select").ikSelect().data("plugin_ikSelect"))&&inst.$dropdown.css("left",inst.$link.offset().left+"px")}),20)}))))}if(funcDefined("CheckTopMenuFullCatalogSubmenu")||(CheckTopMenuFullCatalogSubmenu=function(){if("hover"==arOptimusOptions.THEME.MENU_TYPE_VIEW){var $menu=$(".menu_top_block"),$wrapmenu=$menu.parents(".wrap_menu"),wrapMenuWidth=$wrapmenu.actual("outerWidth"),wrapMenuLeft=$wrapmenu.offset().left,wrapMenuRight=wrapMenuLeft+wrapMenuWidth,bCatalogFirst=$menu.hasClass("catalogfirst"),findMenuLi=$(".menu_top_block:visible li.full"),parentSubmenuWidth=$menu.actual("outerWidth");$(".catalog_block.menu_top_block").length&&$(".catalog_block.menu_top_block").is(":visible")&&(findMenuLi=$(".menu_top_block.catalog_block li.full")),findMenuLi.each((function(){var $this=$(this),$submenu=$this.find(">.dropdown");$submenu.length&&(bCatalogFirst?$submenu.css({left:parentSubmenuWidth+"px",width:wrapMenuWidth-parentSubmenuWidth+"px","padding-left":"0px","padding-right":"0px"}):$submenu.css({left:-1*$this.offset().left+"px",width:$(window).width()-1+"px","padding-left":wrapMenuLeft+"px","padding-right":$(window).width()-wrapMenuRight+"px"}),!isOnceInited&&bCatalogFirst&&"top"==arOptimusOptions.THEME.MENU_POSITION&&$this.on("mouseenter",(function(){$submenu.css("min-height",$this.closest(".dropdown").actual("outerHeight")+"px")})))}))}}),$.fn.getMaxHeights=function(outer,classNull,minHeight){for(var maxHeight=this.map((function(i,e){var calc_height=0;return $(e).css("height",""),calc_height=1==outer?$(e).actual("outerHeight"):$(e).actual("height")})).get(),i=0,c=maxHeight.length;i<c;++i)maxHeight[i]%2&&--maxHeight[i];return Math.max.apply(this,maxHeight)},$.fn.equalizeHeights=function(outer,classNull,minHeight){for(var maxHeight=this.map((function(i,e){var minus_height=0,calc_height=0;return!1!==classNull&&(isMobile||(minus_height=parseInt($(e).find(classNull).actual("outerHeight")))),minus_height&&(minus_height+=12),$(e).css("height",""),calc_height=1==outer?$(e).actual("outerHeight")-minus_height:$(e).actual("height")-minus_height,!1!==minHeight&&(calc_height<minHeight&&(calc_height+=minHeight-calc_height),window.matchMedia("(max-width: 520px)").matches&&(calc_height=300),window.matchMedia("(max-width: 400px)").matches&&(calc_height=200)),calc_height})).get(),i=0,c=maxHeight.length;i<c;++i)maxHeight[i]%2&&--maxHeight[i];return this.height(Math.max.apply(this,maxHeight))},$.fn.getFloatWidth=function(){var width=0;if($(this).length){var rect=$(this)[0].getBoundingClientRect();(width=rect.width)||(width=rect.right-rect.left)}return width},$.fn.sliceHeight=function(options){function _slice(el){if(el.each((function(){$(this).css("line-height",""),$(this).css("height","")})),1!=options.mobile||!window.matchMedia("(max-width: 520px)").matches){if(void 0===options.autoslicecount||!1!==options.autoslicecount){var row=void 0!==options.row&&options.row.length?el.first().parents(options.row).getFloatWidth():el.first().parents(".items").getFloatWidth(),elw=void 0!==options.item&&options.item.length?$(options.item).first().getFloatWidth():el.first().hasClass("item")?el.first().getFloatWidth():el.first().parents(".item").getFloatWidth();row||(row=el.first().parents(".row").getFloatWidth()),row&&elw&&(options.slice=Math.floor(row/elw))}if(options.slice)for(var i=0;i<el.length;i+=options.slice)$(el.slice(i,i+options.slice)).equalizeHeights(options.outer,options.classNull,options.minHeight);if(options.lineheight){var lineheightAdd=parseInt(options.lineheight);isNaN(lineheightAdd)&&(lineheightAdd=0),el.each((function(){$(this).css("line-height",$(this).actual("height")+lineheightAdd+"px")}))}}}var options=$.extend({slice:null,outer:!1,lineheight:!1,autoslicecount:!0,classNull:!1,minHeight:!1,options:!1,resize:!0,row:!1,item:!1,mobile:!1},options),el=$(this);1==options.mobile&&"object"==typeof arOptimusOptions&&"string"==typeof arOptimusOptions.THEME.MOBILE_CATALOG_BLOCK_COMPACT&&"Y"===arOptimusOptions.THEME.MOBILE_CATALOG_BLOCK_COMPACT.toUpperCase()&&el.first().parents(".catalog_block.items").length&&(options.mobile=!1),_slice(el),options.resize?(window.sliceResizeElements||(window.sliceResizeElements=[],BX.addCustomEvent("onWindowResize",(function(){ignoreResize.push(!0),window.sliceResizeElements.forEach((function(el){_slice(el)})),ignoreResize.pop()}))),window.sliceResizeElements.push(el)):ignoreResize.length||_slice(el)},$.fn.sliceHeightNoResize=function(options){function _slice(el){if(el.each((function(){$(this).css("line-height",""),$(this).css("height","")})),void 0===options.autoslicecount||!1!==options.autoslicecount){var elw=el.first().hasClass("item")?el.first().getFloatWidth():el.first().parents(".item").getFloatWidth(),elsw=el.first().parents(".items").getFloatWidth();elsw||(elsw=el.first().parents(".row").getFloatWidth()),elsw&&elw&&(options.slice=Math.floor(elsw/elw))}if(options.slice)for(var i=0;i<el.length;i+=options.slice)$(el.slice(i,i+options.slice)).equalizeHeights(options.outer,options.classNull,options.minHeight);if(options.lineheight){var lineheightAdd=parseInt(options.lineheight);isNaN(lineheightAdd)&&(lineheightAdd=0),el.each((function(){$(this).css("line-height",$(this).actual("height")+lineheightAdd+"px")}))}}var options=$.extend({slice:null,outer:!1,lineheight:!1,autoslicecount:!0,classNull:!1,minHeight:!1,options:!1,resize:!0},options),el;_slice($(this))},!funcDefined("initHoverBlock"))function initHoverBlock(target){}if(!funcDefined("setStatusButton"))function setStatusButton(){$.ajax({url:arOptimusOptions.SITE_DIR+"ajax/getAjaxBasket.php",type:"POST",success:function(data){if(data.BASKET)for(var i in data.BASKET)$(".to-cart[data-item="+data.BASKET[i]+"]").hide(),$(".counter_block[data-item="+data.BASKET[i]+"]").hide(),$(".in-cart[data-item="+data.BASKET[i]+"]").show(),$(".in-cart[data-item="+data.BASKET[i]+"]").closest(".button_block").addClass("wide");if(data.DELAY)for(var i in data.DELAY)$(".wish_item.to[data-item="+data.DELAY[i]+"]").hide(),$(".wish_item.in[data-item="+data.DELAY[i]+"]").show(),$(".wish_item[data-item="+data.DELAY[i]+"]").find(".value.added").length&&($(".wish_item[data-item="+data.DELAY[i]+"]").addClass("added"),$(".wish_item[data-item="+data.DELAY[i]+"]").find(".value").hide(),$(".wish_item[data-item="+data.DELAY[i]+"]").find(".value.added").show());if(data.SUBSCRIBE)for(var i in data.SUBSCRIBE)$(".to-subscribe[data-item="+data.SUBSCRIBE[i]+"]").hide(),$(".in-subscribe[data-item="+data.SUBSCRIBE[i]+"]").show();if(data.COMPARE)for(var i in data.COMPARE)$(".compare_item.to[data-item="+data.COMPARE[i]+"]").hide(),$(".compare_item.in[data-item="+data.COMPARE[i]+"]").show(),$(".compare_item[data-item="+data.COMPARE[i]+"]").find(".value.added").length&&($(".compare_item[data-item="+data.COMPARE[i]+"]").find(".value").hide(),$(".compare_item[data-item="+data.COMPARE[i]+"]").find(".value.added").show())}})}if(window.onload=function(){window.dataLayer=window.dataLayer||[]},!funcDefined("onLoadjqm"))var onLoadjqm=function(name,hash,requestData,selector,requestTitle,isButton,thButton){if(void 0===hash.c.noOverlay||void 0!==hash.c.noOverlay&&!hash.c.noOverlay){let diffWidth;$("body").addClass("jqm-initied"),(diffWidth=window.innerWidth-document.documentElement.clientWidth)&&$("body").css({"padding-right":diffWidth+"px","box-sizing":"border-box"}),hash.w.closest("#popup_iframe_wrapper").css({"z-index":3e3,display:"flex"})}hash.w.addClass("show").css({opacity:1}),hash.w.addClass("scrollbar scrollbar--overflow"),$("body").css({overflow:"hidden"}),$("body").hasClass("fast_view")||"fast_view"!==name||$("body").addClass(name),void 0===requestData&&(requestData=""),void 0===selector&&(selector=!1),"order-popup-call"==name||("order-button"==name?$(".order-button_frame").find("div[product_name]").find("input").val(hash.t.title).attr("readonly","readonly").css({overflow:"hidden","text-overflow":"ellipsis"}):"to-order"!=name&&"cheaper"!=name||!selector?"services"==name&&selector?$(".services_frame").find('[data-sid="SERVICE"]').val($(selector).attr("data-title")):"resume"==name&&selector?$(selector).attr("data-jobs")&&$(".resume_frame").find('[data-sid="POST"]').attr("readonly","readonly").val($(selector).attr("data-jobs")):"basket_error"==name?($(".basket_error_frame .pop-up-title").text(requestTitle),$(".basket_error_frame .ajax_text").html(requestData),initSelects(document),"Y"==isButton&&thButton&&$("<div class='popup_button_basket_wr'><span class='popup_button_basket big_btn button' data-item="+thButton.data("item")+"><span>"+BX.message("ERROR_BASKET_BUTTON")+"</span></span></div>").insertAfter($(".basket_error_frame .ajax_text"))):"one_click_buy"==name?$("#one_click_buy_form").submit((function(){if($("#one_click_buy_form").valid()){if($("."+name+"_frame form input.error").length||$("."+name+"_frame form textarea.error").length)return!1;if(!$(this).find("#one_click_buy_form_button").hasClass("clicked")){$(this).find("#one_click_buy_form_button").hasClass("clicked")||$(this).find("#one_click_buy_form_button").addClass("clicked");var bSend=!0;if(window.renderRecaptchaById&&window.asproRecaptcha&&window.asproRecaptcha.key&&"invisible"==window.asproRecaptcha.params.recaptchaSize&&"undefined"!=typeof grecaptcha&&"Y"===arOptimusOptions.THEME.ONE_CLICK_BUY_CAPTCHA&&($("#one_click_buy_form").find(".g-recaptcha-response").val()?bSend=!0:(grecaptcha.execute($("#one_click_buy_form").find(".g-recaptcha").data("widgetid")),$(this).find("#one_click_buy_form_button").removeClass("clicked"),bSend=!1)),bSend){var form_url=$(this).attr("action");$.ajax({url:form_url,data:$(this).serialize(),type:"POST",dataType:"json",error:function(data){alert("Error connecting server")},success:function(data){if("Y"==data.result){if("N"!==arOptimusOptions.COUNTERS.USE_1CLICK_GOALS){var eventdata={goal:"goal_1click_success"};BX.onCustomEvent("onCounterGoals",[eventdata])}if(ocb_files.length){var obData=new FormData;$.each(ocb_files,(function(key,value){value&&obData.append(key+"_"+value.code,value[0])})),obData&&$.ajax({url:form_url+"?uploadfiles&orderID="+data.message,type:"POST",data:obData,cache:!1,dataType:"json",processData:!1,contentType:!1,error:function(data){alert("Error with files")},success:function(respond,textStatus,jqXHR){$(".one_click_buy_result").show(),$(".one_click_buy_result_success").show(),purchaseCounter(data.message,arOptimusOptions.COUNTERS.TYPE.ONE_CLICK)}})}else $(".one_click_buy_result").show(),$(".one_click_buy_result_success").show(),purchaseCounter(data.message,arOptimusOptions.COUNTERS.TYPE.ONE_CLICK)}else $(".one_click_buy_result").show(),$(".one_click_buy_result_fail").show(),"err"in data&&data.err&&(data.message=data.message+" \n"+data.err),$(".one_click_buy_result_text").html(data.message);$(".one_click_buy_modules_button",self).removeClass("disabled"),$("#one_click_buy_form").hide(),$("#one_click_buy_form_result").show()}})}}}return!1})):"one_click_buy_basket"==name&&$("#one_click_buy_form").on("submit",(function(){if($("#one_click_buy_form").valid()){if($("."+name+"_frame form input.error").length||$("."+name+"_frame form textarea.error").length)return!1;if(!$(this).find("#one_click_buy_form_button").hasClass("clicked")){$(this).find("#one_click_buy_form_button").hasClass("clicked")||$(this).find("#one_click_buy_form_button").addClass("clicked");var bSend=!0;if(window.renderRecaptchaById&&window.asproRecaptcha&&window.asproRecaptcha.key&&"invisible"==window.asproRecaptcha.params.recaptchaSize&&"undefined"!=typeof grecaptcha&&"Y"===arOptimusOptions.THEME.ONE_CLICK_BUY_CAPTCHA&&($("#one_click_buy_form").find(".g-recaptcha-response").val()?bSend=!0:(grecaptcha.execute($("#one_click_buy_form").find(".g-recaptcha").data("widgetid")),$(this).find("#one_click_buy_form_button").removeClass("clicked"),bSend=!1)),bSend){var form_url=$(this).attr("action");$.ajax({url:$(this).attr("action"),data:$(this).serialize(),type:"POST",dataType:"json",error:function(data){window.console&&console.log(data)},success:function(data){if("Y"==data.result){if("N"!==arOptimusOptions.COUNTERS.USE_FASTORDER_GOALS){var eventdata={goal:"goal_fastorder_success"};BX.onCustomEvent("onCounterGoals",[eventdata])}if(ocb_files.length){var obData=new FormData;$.each(ocb_files,(function(key,value){value&&obData.append(key+"_"+value.code,value[0])})),obData&&$.ajax({url:form_url+"?uploadfiles&orderID="+data.message,type:"POST",data:obData,cache:!1,dataType:"json",processData:!1,contentType:!1,error:function(data){alert("Error with files")},success:function(respond,textStatus,jqXHR){$(".one_click_buy_result").show(),$(".one_click_buy_result_success").show(),purchaseCounter(data.message,arOptimusOptions.COUNTERS.TYPE.ONE_CLICK)}})}else $(".one_click_buy_result").show(),$(".one_click_buy_result_success").show(),purchaseCounter(data.message,arOptimusOptions.COUNTERS.TYPE.ONE_CLICK)}else $(".one_click_buy_result").show(),$(".one_click_buy_result_fail").show(),"err"in data&&data.err&&(data.message=data.message+" \n"+data.err),$(".one_click_buy_result_text").text(data.message);$(".one_click_buy_modules_button",self).removeClass("disabled"),$("#one_click_buy_form").hide(),$("#one_click_buy_form_result").show()}})}}}return!1})):($(".to-order_frame").find('[data-sid="PRODUCT_NAME"]').val($(selector).data("name")).attr("readonly","readonly").css({overflow:"hidden","text-overflow":"ellipsis"}),$(".to-order_frame").find('[data-sid="PRODUCT_ID"]').val($(selector).attr("data-item")),$(".cheaper_frame").find('[data-sid="PRODUCT_NAME"]').val($(selector).data("name")).attr("readonly","readonly").css({overflow:"hidden","text-overflow":"ellipsis"}),$(".cheaper_frame").find('[data-sid="PRODUCT_ID"]').val($(selector).attr("data-item"))));var eventdata={action:"loadForm"};void 0!==selector&&!1!==selector?BX.onCustomEvent("onCompleteAction",[eventdata,$(selector)[0]]):BX.onCustomEvent("onCompleteAction",[eventdata,$(hash.t)[0]]),$("."+name+"_frame").show()};if(!funcDefined("onHidejqm"))var onHidejqm=function(name,hash){hash.w.find(".one_click_buy_result_success").is(":visible")&&"one_click_buy_basket"==name&&(window.location.href=window.location.href),hash.w.animate({opacity:0},200,(function(){hash.w.hide(),hash.w.empty(),hash.o.remove(),hash.w.removeClass("show"),hash.w.removeClass("scrollbar"),hash.w.removeClass("scrollbar--overflow"),$("html").removeClass("overflow_hidden_popup_forms"),hash.w.closest("#popup_iframe_wrapper").find(".jqmOverlay").length||hash.w.closest("#popup_iframe_wrapper").css({"z-index":"",display:""}),$(".jqmOverlay:not(.mobp)").length&&!$(".jqmOverlay.waiting").length||($("body").removeClass("jqm-initied"),$("body").removeClass("fast_view")),$("body").hasClass("fast_view")||$("body").css({overflow:"",height:"","padding-right":"","box-sizing":"content-box"})}))};if(!funcDefined("oneClickBuy"))var oneClickBuy=function(elementID,iblockID,that){var name="one_click_buy",elementQuantity=1,offerProps=!1,buy_btn=$(that).closest(".buy_block").find(".to-cart"),buy_btn2=$(that).closest("tr").find(".to-cart");void 0!==that&&(elementQuantity=$(that).attr("data-quantity"),offerProps=$(that).attr("data-props")),elementQuantity<0&&(elementQuantity=1);var tmp_props=buy_btn.data("props"),tmp_props2=buy_btn2.data("props"),props="",part_props="",add_props="N",fill_prop={},iblockid=buy_btn.data("iblockid"),item=buy_btn.attr("data-item");tmp_props?props=tmp_props.split(";"):tmp_props2&&(props=tmp_props2.split(";")),buy_btn.data("part_props")&&(part_props=buy_btn.data("part_props")),buy_btn.data("add_props")&&(add_props=buy_btn.data("add_props")),(fill_prop=fillBasketPropsExt(buy_btn,"prop",buy_btn.data("bakset_div"))).iblockID=iblockid,fill_prop.part_props=part_props,fill_prop.add_props=add_props,fill_prop.props=JSON.stringify(props),fill_prop.item=item,fill_prop.ocb_item="Y",$(that).hasClass("clicked")||($(that).addClass("clicked"),$("body").find("."+name+"_frame").remove(),$("body").find("."+name+"_trigger").remove(),$("body #popup_iframe_wrapper").append('<div class="'+name+'_frame popup"></div>'),$("body #popup_iframe_wrapper").append('<div class="'+name+'_trigger"></div>'),$("."+name+"_frame").jqm({trigger:"."+name+"_trigger",onHide:function(hash){onHidejqm(name,hash)},toTop:!1,onLoad:function(hash){onLoadjqm(name,hash)},ajax:arOptimusOptions.SITE_DIR+"ajax/one_click_buy.php?ELEMENT_ID="+elementID+"&IBLOCK_ID="+iblockID+"&ELEMENT_QUANTITY="+elementQuantity+"&OFFER_PROPS="+fill_prop.props}),$("."+name+"_trigger").click())};if(!funcDefined("oneClickBuyBasket"))var oneClickBuyBasket=function(){name="one_click_buy_basket",$("body").find("."+name+"_frame").remove(),$("body").find("."+name+"_trigger").remove(),$("body #popup_iframe_wrapper").append('<div class="'+name+'_frame popup"></div>'),$("body #popup_iframe_wrapper").append('<div class="'+name+'_trigger"></div>'),$("."+name+"_frame").jqm({trigger:"."+name+"_trigger",onHide:function(hash){onHidejqm(name,hash)},onLoad:function(hash){onLoadjqm(name,hash)},ajax:arOptimusOptions.SITE_DIR+"ajax/one_click_buy_basket.php"}),$("."+name+"_trigger").click()};if(!funcDefined("scroll_block"))function scroll_block(block){const topPos=block.offset().top;if($(".stores_tab").length)$("li.stores_tab").trigger("click");else if($(".prices_tab").length){$("li.prices_tab").trigger("click");const pricesTab=$(".prices_tab.current .opener");pricesTab[0]&&!pricesTab[0].querySelector(".opener_icon.opened")&&(pricesTab[0].click(),$(pricesTab[0]).parents("tr").next(".offer_stores").find(".stores_block_wrap").slideDown(200))}$("html,body").animate({scrollTop:topPos-30},150)}if(!funcDefined("jqmEd"))var jqmEd=function(name,form_id,open_trigger,requestData,selector,requestTitle,isButton,thButton){return void 0===requestData&&(requestData=""),void 0===selector&&(selector=!1),$("body #popup_iframe_wrapper").find("."+name+"_frame").remove(),$("body #popup_iframe_wrapper").append('<div class="'+name+'_frame jqmWindow popup"></div>'),void 0===open_trigger?$("."+name+"_frame").jqm({trigger:"."+name+"_frame.popup",onHide:function(hash){onHidejqm(name,hash)},onLoad:function(hash){onLoadjqm(name,hash,requestData,selector)},ajax:arOptimusOptions.SITE_DIR+"ajax/form.php?form_id="+form_id+(requestData.length?"&"+requestData:"")}):("enter"==name?$("."+name+"_frame").jqm({trigger:open_trigger,onHide:function(hash){onHidejqm(name,hash)},onLoad:function(hash){onLoadjqm(name,hash,requestData,selector)},ajax:arOptimusOptions.SITE_DIR+"ajax/auth.php"}):"basket_error"==name?$("."+name+"_frame").jqm({trigger:open_trigger,onHide:function(hash){onHidejqm(name,hash)},onLoad:function(hash){onLoadjqm(name,hash,requestData,selector,requestTitle,isButton,thButton)},ajax:arOptimusOptions.SITE_DIR+"ajax/basket_error.php"}):$("."+name+"_frame").jqm({trigger:open_trigger,onHide:function(hash){onHidejqm(name,hash)},onLoad:function(hash){onLoadjqm(name,hash,requestData,selector)},ajax:arOptimusOptions.SITE_DIR+"ajax/form.php?form_id="+form_id+(requestData.length?"&"+requestData:"")}),$(open_trigger).dblclick((function(){return!1}))),!0};if(initCalculatePreview=function(){$(".calculate-delivery.with_preview:not(.inited)").each((function(){var $this=$(this),$calculateSpan=$this.find("span[data-event=jqm]"),$preview=$this.find(".calculate-delivery-preview");$this.addClass("inited"),$this.appear((function(){if($calculateSpan.length){void 0===window["calculate-delivery-preview-index"]?window["calculate-delivery-preview-index"]=1001:++window["calculate-delivery-preview-index"];var productId=1*$calculateSpan.attr("data-param-product_id"),quantity=1*$calculateSpan.attr("data-param-quantity");if(productId>0){var areaIndexSended=window["calculate-delivery-preview-index"];$calculateSpan.data({areaIndex:areaIndexSended}),$.ajax({url:arOptimusOptions.SITE_DIR+"ajax/delivery.php",type:"POST",data:{is_preview:"Y",index:areaIndexSended,product_id:productId,quantity:quantity},beforeSend:function(){$this.addClass("loadings")},success:function(response){var areaIndex=$calculateSpan.data("areaIndex");void 0!==areaIndex&&areaIndex==areaIndexSended&&($calculateSpan.hide(),$preview.html(response),$preview.find(".catalog-delivery-preview").length||($preview.empty(),$calculateSpan.show()))},error:function(xhr,ajaxOptions,thrownError){},complete:function(){var areaIndex=$calculateSpan.data("areaIndex");void 0!==areaIndex&&areaIndex==areaIndexSended&&$this.removeClass("loadings")}})}}}),{accX:0,accY:0})}))},!funcDefined("replaceBasketPopup"))function replaceBasketPopup(hash){void 0!==hash&&(hash.w.hide(),hash.o.hide())}if(!funcDefined("waitLayer"))function waitLayer(delay,callback){"undefined"!=typeof dataLayer?"function"==typeof callback&&callback():setTimeout((function(){waitLayer(delay,callback)}),delay)}if(funcDefined("waitCounter")||(waitCounter=function(idCounter,delay,callback){var obCounter;"object"==typeof window["yaCounter"+idCounter]?"function"==typeof callback&&callback():setTimeout((function(){waitCounter(idCounter,delay,callback)}),delay)}),funcDefined("InitTopestMenuGummi")||(InitTopestMenuGummi=function(){if(!isOnceInited){function _init(){var arItems=$menuTopest.find(">li:not(.more)"),cntItems=arItems.length;if(cntItems)for(var itemsWidth=0,i=0;i<cntItems;++i){var item,itemWidth=arItems.eq(i).actual("outerWidth",{includeMargin:!0});arItemsHideWidth[i]=(itemsWidth+=itemWidth)+(i!==cntItems-1?moreWidth:0)}}function _gummi(){var rowWidth=$menuTopest.actual("innerWidth"),arItems=$menuTopest.find(">li:not(.more),li.more>.dropdown>li"),cntItems=arItems.length;if(cntItems){for(var bMore=!1,i=cntItems-1;i>=0;--i){var item,bInMore,clone;if(!(bInMore=(item=arItems.eq(i)).parents(".more").length>0))if(arItemsHideWidth[i]>rowWidth)bMore||(bMore=!0,more.removeClass("hidden")),(clone=item.clone()).find(">a").addClass("dark_font"),clone.prependTo(moreDropdown),item.addClass("cloned")}for(var i=0;i<cntItems;++i){var item,bInMore,clone;if(bInMore=(item=arItems.eq(i)).parents(".more").length>0)if(arItemsHideWidth[i]<=rowWidth)i===cntItems-1&&(bMore=!1,more.addClass("hidden")),(clone=item.clone()).find(">a").removeClass("dark_font"),clone.insertBefore(more),item.addClass("cloned")}$menuTopest.find("li.cloned").remove()}}var $menuTopest=$(".menu.topest"),more=$menuTopest.find(">.more"),moreDropdown=more.find(">.dropdown"),moreWidth=more.actual("outerWidth",{includeMargin:!0}),arItemsHideWidth=[];ignoreResize.push(!0),_init(),_gummi(),ignoreResize.pop(),$(window).resize((function(){ignoreResize.push(!0),_gummi(),ignoreResize.pop()}))}}),funcDefined("InitTopMenuGummi")||(InitTopMenuGummi=function(){function _init(){var arItems=$topMenu.closest(".wrap_menu").find(".inc_menu .menu_top_block >li:not(.more)"),cntItems=arItems.length;if(cntItems)for(var itemsWidth=0,i=0;i<cntItems;++i){var item,itemWidth=arItems.eq(i).actual("outerWidth");arItemsHideWidth[i]=(itemsWidth+=itemWidth)+(i!==cntItems-1?moreWidth:0)}}function _gummi(){var rowWidth=$wrapMenu.actual("innerWidth")-$wrapMenuLeft.actual("innerWidth"),arItems=$topMenu.find(">li:not(.more):not(.catalog),li.more>.dropdown>li"),cntItems=arItems.length;if(cntItems){for(var bMore=!1,i=cntItems-1;i>=0;--i){var item,bInMore,clone;if(!(bInMore=(item=arItems.eq(i)).parents(".more").length>0))if(arItemsHideWidth[i]>rowWidth)bMore||(bMore=!0,more.removeClass("hidden")),(clone=item.clone()).find(">.dropdown").removeAttr("style").removeClass("toleft"),clone.find(">a").addClass("dark_font").removeAttr("style"),clone.prependTo(moreDropdown),item.addClass("cloned")}for(var i=0;i<cntItems;++i){var item,bInMore,clone;if(bInMore=(item=arItems.eq(i)).parents(".more").length>0)if(arItemsHideWidth[i]<=rowWidth)i===cntItems-1&&(bMore=!1,more.addClass("hidden")),(clone=item.clone()).find(">a").removeClass("dark_font"),clone.insertBefore(more),item.addClass("cloned")}$topMenu.find("li.cloned").remove();var cntItemsVisible=$topMenu.find(">li:not(.more):not(.catalog)").length,o=rowWidth-arItemsHideWidth[cntItemsVisible-1],itemsPaddingAdd=Math.floor(o/(cntItemsVisible+(more.hasClass("hidden")?0:1))),itemsPadding_new=itemsPadding_min+itemsPaddingAdd,itemsPadding_new_l=Math.floor(itemsPadding_new/2),itemsPadding_new_r=itemsPadding_new-itemsPadding_new_l;$topMenu.find(">li:not(.catalog):visible>a").each((function(){$(this).css({"padding-left":itemsPadding_new_l+"px"}),$(this).css({"padding-right":itemsPadding_new_r+"px"})}));var lastItemPadding_new=itemsPadding_new+o-(cntItemsVisible+(more.is(":visible")?1:0))*itemsPaddingAdd,lastItemPadding_new_l=Math.floor(lastItemPadding_new/2),lastItemPadding_new_r=lastItemPadding_new-lastItemPadding_new_l;$topMenu.find(">li:visible").last().find(">a").css({"padding-left":lastItemPadding_new_l+"px"}),$topMenu.find(">li:visible").last().find(">a").css({"padding-right":lastItemPadding_new_r+"px"}),CheckTopMenuFullCatalogSubmenu()}}var $topMenu=$(".menu_top_block"),$wrapMenu=$topMenu.parents(".wrap_menu"),$wrapMenuLeft=$wrapMenu.find(".catalog_menu_ext"),more=$topMenu.find(">.more"),moreWidth=more.actual("outerWidth",{includeMargin:!0});more.addClass("hidden");var arItemsHideWidth=[],moreDropdown=more.find(">.dropdown"),itemsPadding,itemsPadding_min=2*parseInt(more.find(">a").css("padding-left"));ignoreResize.push(!0),_init(),_gummi(),ignoreResize.pop(),$(window).resize((function(){ignoreResize.push(!0),_gummi(),ignoreResize.pop()}))}),!funcDefined("checkCounters"))function checkCounters(name){return void 0!==name?"google"==name&&"Y"==arOptimusOptions.COUNTERS.GOOGLE_ECOMERCE&&arOptimusOptions.COUNTERS.GOOGLE_COUNTER>0||"yandex"==name&&"Y"==arOptimusOptions.COUNTERS.USE_YA_COUNTER&&"Y"==arOptimusOptions.COUNTERS.YANDEX_ECOMERCE&&arOptimusOptions.COUNTERS.YANDEX_COUNTER>0:"Y"==arOptimusOptions.COUNTERS.USE_YA_COUNTER&&"Y"==arOptimusOptions.COUNTERS.YANDEX_ECOMERCE&&arOptimusOptions.COUNTERS.YANDEX_COUNTER>0||"Y"==arOptimusOptions.COUNTERS.GOOGLE_ECOMERCE&&arOptimusOptions.COUNTERS.GOOGLE_COUNTER>0}if(!funcDefined("addBasketCounter"))function addBasketCounter(id){if("N"!==arOptimusOptions.COUNTERS.USE_BASKET_GOALS){var eventdata={goal:"goal_basket_add",params:{id:id}};BX.onCustomEvent("onCounterGoals",[eventdata])}checkCounters()&&$.ajax({url:arOptimusOptions.SITE_DIR+"ajax/goals.php",dataType:"json",type:"POST",data:{ID:id},success:function(item){item&&item.ID&&waitLayer(100,(function(){dataLayer.push({event:arOptimusOptions.COUNTERS.GOOGLE_EVENTS.ADD2BASKET,ecommerce:{currencyCode:item.CURRENCY,add:{products:[{id:item.ID,name:item.NAME,price:item.PRICE,brand:item.BRAND,category:item.CATEGORY,quantity:item.QUANTITY}]}}})}))}})}if(!funcDefined("purchaseCounter"))function purchaseCounter(order_id,type,callback){checkCounters()?$.ajax({url:arOptimusOptions.SITE_DIR+"ajax/goals.php",dataType:"json",type:"POST",data:{ORDER_ID:order_id,TYPE:type},success:function(order){var products=[];if(order.ITEMS)for(var i in order.ITEMS)products.push({id:order.ITEMS[i].ID,sku:order.ITEMS[i].ID,name:order.ITEMS[i].NAME,price:order.ITEMS[i].PRICE,brand:order.ITEMS[i].BRAND,category:order.ITEMS[i].CATEGORY,quantity:order.ITEMS[i].QUANTITY});order.ID?waitLayer(100,(function(){dataLayer.push({event:arOptimusOptions.COUNTERS.GOOGLE_EVENTS.PURCHASE,ecommerce:d={purchase:{actionField:{id:order.ACCOUNT_NUMBER,shipping:order.PRICE_DELIVERY,tax:order.TAX_VALUE,list:type,revenue:order.PRICE},products:products}}}),void 0!==callback&&callback(d)})):void 0!==callback&&callback(!1)},error:function(){void 0!==callback&&callback(!1)}}):void 0!==callback&&callback(!1)}if(!funcDefined("viewItemCounter"))function viewItemCounter(id,price_id){checkCounters()&&$.ajax({url:arOptimusOptions.SITE_DIR+"ajax/goals.php",dataType:"json",type:"POST",data:{PRODUCT_ID:id,PRICE_ID:price_id},success:function(item){item.ID&&waitLayer(100,(function(){dataLayer.push({ecommerce:{detail:{products:[{id:item.ID,name:item.NAME,price:item.PRICE,brand:item.BRAND,category:item.CATEGORY}]}}})}))}})}if(!funcDefined("checkoutCounter"))function checkoutCounter(step,option,callback){checkCounters("google")&&$.ajax({url:arOptimusOptions.SITE_DIR+"ajax/goals.php",dataType:"json",type:"POST",data:{BASKET:"Y"},success:function(basket){var products=[];if(basket.ITEMS)for(var i in basket.ITEMS)products.push({id:basket.ITEMS[i].ID,name:basket.ITEMS[i].NAME,price:basket.ITEMS[i].PRICE,brand:basket.ITEMS[i].BRAND,category:basket.ITEMS[i].CATEGORY,quantity:basket.ITEMS[i].QUANTITY});products&&waitLayer(100,(function(){dataLayer.push({event:arOptimusOptions.COUNTERS.GOOGLE_EVENTS.CHECKOUT_ORDER,ecommerce:{checkout:{actionField:{step:step,option:option},products:products}}})}))}})}if(!funcDefined("delFromBasketCounter"))function delFromBasketCounter(id,callback){checkCounters()&&$.ajax({url:arOptimusOptions.SITE_DIR+"ajax/goals.php",dataType:"json",type:"POST",data:{ID:id},success:function(item){item.ID&&waitLayer(100,(function(){dataLayer.push({event:arOptimusOptions.COUNTERS.GOOGLE_EVENTS.REMOVE_BASKET,ecommerce:{remove:{products:[{id:item.ID,name:item.NAME,category:item.CATEGORY}]}}}),"function"==typeof callback&&callback()}))}})}if(!funcDefined("setHeightCompany"))function setHeightCompany(){$(".md-50.img").height($(".md-50.big").outerHeight()-35)}if(!funcDefined("initSly"))function initSly(){var $frame=$(document).find(".frame"),$slidee=$frame.children("ul").eq(0),$wrap=$frame.parent();arOptimusOptions.PAGES.CATALOG_PAGE&&($frame.sly({horizontal:1,itemNav:"basic",smart:1,mouseDragging:0,touchDragging:0,releaseSwing:0,startAt:0,scrollBar:$wrap.find(".scrollbar"),scrollBy:1,speed:300,elasticBounds:0,easing:"swing",dragHandle:1,dynamicHandle:1,clickBar:1,forward:$wrap.find(".forward"),backward:$wrap.find(".backward")}),$frame.sly("reload"))}if(!funcDefined("createTableCompare"))function createTableCompare(originalTable,appendDiv,cloneTable){try{var clone=originalTable.clone().removeAttr("id").addClass("clone");cloneTable.length?(cloneTable.remove(),appendDiv.html(""),appendDiv.html(clone)):appendDiv.append(clone)}catch(e){}}if(funcDefined("fillBasketPropsExt")||(fillBasketPropsExt=function(that,prop_code,basket_prop_div){var i=0,propCollection=null,foundValues=!1,basketParams={},obBasketProps=null;if(obBasketProps=that.closest("#fast_view_item").length?that.closest("#fast_view_item").find("#"+basket_prop_div)[0]:BX(basket_prop_div)){if((propCollection=obBasketProps.getElementsByTagName("select"))&&propCollection.length)for(i=0;i<propCollection.length;i++)if(!propCollection[i].disabled)switch(propCollection[i].type.toLowerCase()){case"select-one":basketParams[propCollection[i].name]=propCollection[i].value,foundValues=!0}if((propCollection=obBasketProps.getElementsByTagName("input"))&&propCollection.length)for(i=0;i<propCollection.length;i++)if(!propCollection[i].disabled)switch(propCollection[i].type.toLowerCase()){case"hidden":basketParams[propCollection[i].name]=propCollection[i].value,foundValues=!0;break;case"radio":propCollection[i].checked&&(basketParams[propCollection[i].name]=propCollection[i].value,foundValues=!0)}}return foundValues||(basketParams[prop_code]=[],basketParams[prop_code][0]=0),basketParams}),funcDefined("showBasketError")||(showBasketError=function(mess,title,addButton,th){var title_set=title||BX.message("ERROR_BASKET_TITLE"),isButton="N",thButton="";void 0!==typeof addButton&&(isButton="Y"),void 0!==typeof th&&(thButton=th),$("body").append("<span class='add-error-bakset' style='display:none;'></span>"),jqmEd("basket_error","error-bakset",".add-error-bakset",mess,this,title_set,isButton,thButton),$("body .add-error-bakset").click(),$("body .add-error-bakset").remove()}),!funcDefined("isRealValue"))function isRealValue(obj){return obj&&"null"!==obj&&"undefined"!==obj}if(!funcDefined("rightScroll"))function rightScroll(prop,id){var el=BX("prop_"+prop+"_"+id);if(el){var curVal=parseInt(el.style.marginLeft);curVal>=0&&(el.style.marginLeft=curVal-20+"%")}}if(!funcDefined("leftScroll"))function leftScroll(prop,id){var el=BX("prop_"+prop+"_"+id);if(el){var curVal=parseInt(el.style.marginLeft);curVal<0&&(el.style.marginLeft=curVal+20+"%")}}if(funcDefined("InitOrderCustom")||(InitOrderCustom=function(){$(".ps_logo img").wrap('<div class="image"></div>'),$("#bx-soa-order .radio-inline").each((function(){"checked"==$(this).find("input").attr("checked")&&$(this).addClass("checked")})),$("#bx-soa-order .checkbox input[type=checkbox]").each((function(){"checked"==$(this).attr("checked")&&$(this).parent().addClass("checked")})),$(".bx_ordercart_coupon").each((function(){$(this).find(".bad").length?$(this).addClass("bad"):$(this).find(".good").length&&$(this).addClass("good")}))}),funcDefined("InitLabelAnimation")||(InitLabelAnimation=function(className){$(className).length&&($(className).find(".form-group").each((function(){$(this).find("input[type=text], textarea").length&&!$(this).find(".dropdown-block").length&&""!=$(this).find("input[type=text], textarea").val()&&$(this).addClass("value_y")})),$(document).on("click",className+" .form-group:not(.bx-soa-pp-field) label",(function(){$(this).parent().find("input, textarea").focus()})),$(document).on("focusout",className+" .form-group:not(.bx-soa-pp-field) input, "+className+" .form-group:not(.bx-soa-pp-field) textarea",(function(){var value;""==$(this).val()||$(this).closest(".form-group").find(".dropdown-block").length||$(this).closest(".form-group").find("#profile_change").length?$(this).closest(".form-group").removeClass("value_y"):$(this).closest(".form-group").addClass("value_y")})),$(document).on("focus",className+" .form-group:not(.bx-soa-pp-field) input, "+className+" .form-group:not(.bx-soa-pp-field) textarea",(function(){$(this).closest(".form-group").find(".dropdown-block").length||$(this).closest(".form-group").find("#profile_change").length||$(this).closest(".form-group").find("[name=PERSON_TYPE_OLD]").length||$(this).closest(".form-group").addClass("value_y")})))}),checkPopupWidth=function(){$(".popup.show").each((function(){var width_form=$(this).actual("width");$(this).css({"margin-left":$(window).width()>width_form?"-"+width_form/2+"px":"-"+$(window).width()/2+"px"})}))},checkCaptchaWidth=function(){$(".captcha-row").each((function(){var width=$(this).actual("width");$(this).hasClass("b")?width>320&&$(this).removeClass("b"):width<=320&&$(this).addClass("b")}))},checkFormWidth=function(){$(".form .form_left").each((function(){var form=$(this).parents(".form"),width=form.actual("width");form.hasClass("b")?width>417&&form.removeClass("b"):width<=417&&form.addClass("b")}))},checkFormControlWidth=function(){$(".form-control").each((function(){var width=$(this).actual("width"),labelWidth=$(this).find("label:not(.error) > span").actual("width"),errorWidth=$(this).find("label.error").actual("width");errorWidth>0?$(this).hasClass("h")?width>labelWidth+errorWidth+5&&$(this).removeClass("h"):width<=labelWidth+errorWidth+5&&$(this).addClass("h"):$(this).removeClass("h")}))},scrollToTop=function(){if("NONE"!==arOptimusOptions.THEME.SCROLLTOTOP_TYPE){var _isScrolling=!1;$("body").append($("<a />").addClass("scroll-to-top "+arOptimusOptions.THEME.SCROLLTOTOP_TYPE+" "+arOptimusOptions.THEME.SCROLLTOTOP_POSITION).attr({href:"#",id:"scrollToTop"})),$("#scrollToTop").click((function(e){return e.preventDefault(),$("body, html").animate({scrollTop:0},500),!1})),$(window).scroll((function(){_isScrolling||(_isScrolling=!0,$(window).scrollTop()>150?($("#scrollToTop").stop(!0,!0).addClass("visible"),_isScrolling=!1):($("#scrollToTop").stop(!0,!0).removeClass("visible"),_isScrolling=!1),checkScrollToTop())}))}},checkScrollToTop=function(){var bottom=55,scrollVal=$(window).scrollTop(),windowHeight=$(window).height(),footerOffset=70;$("footer").length&&(footerOffset=$("footer").offset().top+70),"CONTENT"==arOptimusOptions.THEME.SCROLLTOTOP_POSITION&&(warpperWidth=$("body > .wrapper > .wrapper_inner").width(),$("#scrollToTop").css("margin-left",Math.ceil(warpperWidth/2)+23)),scrollVal+windowHeight>footerOffset?$("#scrollToTop").css("bottom",55+scrollVal+windowHeight-footerOffset-0):parseInt($("#scrollToTop").css("bottom"))>55&&$("#scrollToTop").css("bottom",55)},CheckObjectsSizes=function(){$(".container iframe,.container object,.container video").each((function(){var height_attr=$(this).attr("height"),width_attr=$(this).attr("width");height_attr&&width_attr&&$(this).css("height",$(this).outerWidth()*height_attr/width_attr)}))},!funcDefined("reloadTopBasket"))var reloadTopBasket=function reloadTopBasket(action,basketWindow,speed,delay,slideDown,item){var obj={PARAMS:$("#top_basket_params").val(),ACTION:action};void 0!==item&&(obj.delete_top_item="Y",obj.delete_top_item_id=item.data("id")),$.post(arOptimusOptions.SITE_DIR+"ajax/show_basket_popup.php",obj,$.proxy((function(data){$(basketWindow).html(data),getActualBasket(),"N"!==arOptimusOptions.THEME.SHOW_BASKET_ONADDTOCART&&$(window).outerWidth()>520&&("Y"==slideDown&&$(basketWindow).find(".basket_popup_wrapp").stop(!0,!0).slideDown(speed),clearTimeout(basketTimeoutSlide),basketTimeoutSlide=setTimeout((function(){var _this=$("#basket_line").find(".basket_popup_wrapp");_this.is(":hover")?_this.show():$("#basket_line").find(".basket_popup_wrapp").slideUp(speed)}),delay))})))};if(!funcDefined("initCountdown"))var initCountdown=function initCountdown(){$(".view_sale_block").size()&&$(".view_sale_block").each((function(){var activeTo=$(this).find(".active_to").text(),dateTo=new Date(activeTo.replace(/(\d+)\.(\d+)\.(\d+)/,"$3/$2/$1"));$(this).find(".countdown").countdown({until:dateTo,format:"dHMS",padZeroes:!0,layout:'{d<}<span class="days item">{dnn}<div class="text">{dl}</div></span>{d>} <span class="hours item">{hnn}<div class="text">{hl}</div></span> <span class="minutes item">{mnn}<div class="text">{ml}</div></span> <span class="sec item">{snn}<div class="text">{sl}</div></span>'},$.countdown.regionalOptions.ru)}))};if(!funcDefined("initCountdownTime"))var initCountdownTime=function initCountdownTime(block,time){if(time){var dateTo=new Date(time.replace(/(\d+)\.(\d+)\.(\d+)/,"$3/$2/$1"));block.find(".countdown").countdown("destroy"),block.find(".countdown").countdown({until:dateTo,format:"dHMS",padZeroes:!0,layout:'{d<}<span class="days item">{dnn}<div class="text">{dl}</div></span>{d>} <span class="hours item">{hnn}<div class="text">{hl}</div></span> <span class="minutes item">{mnn}<div class="text">{ml}</div></span> <span class="sec item">{snn}<div class="text">{sl}</div></span>'},$.countdown.regionalOptions.ru),block.find(".view_sale_block").show()}else block.find(".view_sale_block").hide()};var isOnceInited=insertFilter=!1,animationTime=200,delayTime=200,topMenuEnterTimer=!1,isMobile=jQuery.browser.mobile;if(isMobile&&(document.documentElement.className+=" mobile"),!funcDefined("checkVerticalMobileFilter"))var checkVerticalMobileFilter=function checkVerticalMobileFilter(){if($(".right_block1.catalog.vertical").length&&!$(".left_block.filter_ajax").length){if(void 0!==window.trackBarOptions)for(key in window.trackBarValues={},window.trackBarOptions)window.trackBarValues[key]={leftPercent:window["trackBar"+key].leftPercent,leftValue:window["trackBar"+key].minInput.value,rightPercent:window["trackBar"+key].rightPercent,rightValue:window["trackBar"+key].maxInput.value};if(window.matchMedia("(max-width: 950px)").matches?insertFilter||($(".js_filter .bx_filter.bx_filter_vertical").html($(".left_block .bx_filter.bx_filter_vertical").html()),$(".left_block .bx_filter.bx_filter_vertical .bx_filter_section").remove(),insertFilter=!0):insertFilter&&($(".left_block .bx_filter.bx_filter_vertical").html($(".js_filter .bx_filter.bx_filter_vertical").html()),$(".js_filter .bx_filter.bx_filter_vertical .bx_filter_section").remove(),insertFilter=!1),void 0!==window.trackBarOptions)for(key in window.trackBarOptions)window.trackBarOptions[key].leftPercent=window.trackBarValues[key].leftPercent,window.trackBarOptions[key].rightPercent=window.trackBarValues[key].rightPercent,window.trackBarOptions[key].curMinPrice=window.trackBarValues[key].leftValue,window.trackBarOptions[key].curMaxPrice=window.trackBarValues[key].rightValue,window["trackBar"+key]=new BX.Iblock.SmartFilter(window.trackBarOptions[key]),window["trackBar"+key].minInput.value=window.trackBarValues[key].leftValue,window["trackBar"+key].maxInput.value=window.trackBarValues[key].rightValue}else if($(".left_block.filter_ajax").length){var posBlock=$(".ajax_load").position();$(".left_block.filter_ajax .bx_filter").css("top",posBlock.top-13),$(".left_block.filter_ajax .bx_filter").is(":visible")&&!$(".adaptive_filter .filter_opener").hasClass("opened")&&window.matchMedia("(max-width: 950px)").matches&&$(".adaptive_filter .filter_opener").addClass("opened")}};$(document).on("click",".menu_top_block>li .more a",(function(){$this=$(this),$this.parents(".dropdown").first().find(">.hidden").removeClass("hidden"),$this.parent().addClass("hidden"),setTimeout((function(){$this.parent().remove()}),500)})),$(document).on("mouseenter",".menu_top_block.catalogfirst>li>.dropdown>li.full",(function(){var $submenu;$(this).find(">.dropdown").length&&topMenuEnterTimer&&(clearTimeout(topMenuEnterTimer),topMenuEnterTimer=!1)})),$(document).on("mouseenter",".menu_top_block>li:not(.full)",(function(){var $submenu=$(this).find(">.dropdown");if($submenu.length&&!$submenu.hasClass("visible")){var $menu,$wrapmenu=$(this).parents(".menu").parents(".wrap_menu"),wrapMenuWidth=$wrapmenu.actual("outerWidth"),wrapMenuLeft,wrapMenuRight,left=$wrapmenu.offset().left+wrapMenuWidth-($(this).offset().left+$submenu.actual("outerWidth"));if(window.matchMedia("(min-width: 951px)").matches&&$(this).hasClass("catalog")&&($(".banner_auto").hasClass("catalog_page")||$(".banner_auto").hasClass("front_page")))return;left<0&&$submenu.css({left:left+"px"}),$submenu.stop().slideDown(animationTime,(function(){$submenu.css({height:"",overflow:"visible"})})),$(this).on("mouseleave",(function(){var leaveTimer=setTimeout((function(){$submenu.stop().slideUp(animationTime,(function(){$submenu.css({left:""})}))}),delayTime);$(this).on("mouseenter",(function(){leaveTimer&&(clearTimeout(leaveTimer),leaveTimer=!1)}))}))}})),$(document).on("mouseenter",".menu_top_block>li:not(.full)",(function(){if(!window.matchMedia("(min-width: 951px)").matches||!$(this).hasClass("catalog")||!$(".banner_auto").hasClass("catalog_page")&&!$(".banner_auto").hasClass("front_page")){var _this,$catalogNlo=$(this).find(">.dropdown").find("[data-nlo]"),isNloLoaded=!$catalogNlo.length;isNloLoaded||$catalogNlo.hasClass("nlo-loadings")||($catalogNlo.addClass("nlo-loadings"),setTimeout((function(){$.ajax({data:{nlo:$catalogNlo.attr("data-nlo")},success:function(response){pauseYmObserver(),isNloLoaded=!0,$catalogNlo[0].insertAdjacentHTML("beforebegin",$.trim(response)),$catalogNlo.remove(),setTimeout(resumeYmObserver,400)},error:function(){$catalogNlo.removeClass("nlo-loadings")}})}),300))}})),$(document).on("mouseenter",".menu_top_block>li .dropdown>li",(function(){var $this=$(this),$submenu=$this.find(">.dropdown");if($submenu.length&&(!$this.parents(".full").length&&!$this.hasClass("full")||$this.parents(".more").length)){var $menu,$wrapmenu=$this.parents(".menu").parents(".wrap_menu"),arParentSubmenuForOpacity=[];topMenuEnterTimer=setTimeout((function(){var wrapMenuWidth=$wrapmenu.actual("outerWidth"),wrapMenuLeft=$wrapmenu.offset().left,wrapMenuRight=wrapMenuLeft+wrapMenuWidth,$parentSubmenu,bToLeft=!!$this.parent().hasClass("toleft");(bToLeft=bToLeft?$this.offset().left+$this.actual("outerWidth")-$submenu.actual("outerWidth")<wrapMenuLeft:$this.offset().left+$this.actual("outerWidth")+$submenu.actual("outerWidth")>wrapMenuRight)?$this.find(">.dropdown").addClass("toleft").show():$this.find(">.dropdown").removeClass("toleft").show();var submenuLeft=$submenu.offset().left,submenuRight=submenuLeft+$submenu.actual("outerWidth");$this.parents(".dropdown").each((function(){var $this=$(this),leftOffset=$this.offset().left,rightOffset=leftOffset+$this.actual("outerWidth");(leftOffset>=submenuLeft&&leftOffset<submenuRight-1||rightOffset>submenuLeft+1&&rightOffset<=submenuRight)&&(arParentSubmenuForOpacity.push($this),$this.find(">li>a").css({opacity:"0.1"}))}))}),delayTime),$this.unbind("mouseleave"),$this.on("mouseleave",(function(){var leaveTimer=setTimeout((function(){if($this.find(".dropdown").removeClass("toleft").hide(),arParentSubmenuForOpacity.length)for(i in arParentSubmenuForOpacity)arParentSubmenuForOpacity[i].find(">li>a").css({opacity:""})}),delayTime);$this.unbind("mouseenter"),$this.on("mouseenter",(function(){leaveTimer&&(clearTimeout(leaveTimer),leaveTimer=!1)}))}))}})),getGridSize=function(counts){var counts_item=1;return window.matchMedia("(min-width: 1200px)").matches&&(counts_item=counts[0]),window.matchMedia("(max-width: 1200px)").matches&&(counts_item=counts[1]),window.matchMedia("(max-width: 992px)").matches&&(counts_item=counts[2]),counts[3]&&window.matchMedia("(max-width: 600px)").matches&&(counts_item=counts[3]),counts[4]&&window.matchMedia("(max-width: 400px)").matches&&(counts_item=counts[4]),counts_item},CheckFlexSlider=function(){$(".flexslider:not(.thmb)").each((function(){var slider=$(this);slider.resize();var counts=slider.data("flexslider").vars.counts;if(void 0!==counts){var cnt=getGridSize(counts),to0;(cnt!=slider.data("flexslider").vars.minItems||cnt!=slider.data("flexslider").vars.maxItems||cnt!=slider.data("flexslider").vars.move)&&(slider.data("flexslider").vars.minItems=cnt,slider.data("flexslider").vars.maxItems=cnt,slider.data("flexslider").vars.move=cnt,slider.flexslider(0),slider.resize(),slider.resize())}}))},InitFlexSlider=function(){$(".flexslider:not(.thmb):not(.flexslider-init)").each((function(){var slider=$(this),options,defaults={animationLoop:!1,controlNav:!1,directionNav:!0,animation:"slide"},config=$.extend({},defaults,void 0,slider.data("plugin-options"));slider.parent().hasClass("top_slider_wrapp")||(void 0!==config.counts&&"vertical"!==config.direction&&(config.maxItems=getGridSize(config.counts),config.minItems=getGridSize(config.counts),config.move=getGridSize(config.counts),config.itemWidth=200),config.after=function(slider){var eventdata={slider:slider};BX.onCustomEvent("onSlide",[eventdata])},config.start=function(slider){var eventdata={slider:slider};BX.onCustomEvent("onSlideInit",[eventdata])},config.end=function(slider){var eventdata={slider:slider};BX.onCustomEvent("onSlideEnd",[eventdata])},slider.flexslider(config).addClass("flexslider-init"),config.controlNav&&slider.addClass("flexslider-control-nav"),config.directionNav&&slider.addClass("flexslider-direction-nav"))}))},InitZoomPict=function(el){var block=$(".zoom_picture");if(void 0!==el&&(block=el),block.length){var slide=block.closest(".slides"),zoomer=block,options,defaults={zoomWidth:200,zoomHeight:200,adaptive:!1,title:!0,Xoffset:15},config=$.extend({},defaults,void 0,zoomer.data("plugin-options"));zoomer.xzoom(config),block.on("mouseleave",(function(){block.data("xzoom").movezoom(event)}))}},funcDefined("pauseYmObserver")||(pauseYmObserver=function(){"function"==typeof MutationObserver&&"object"==typeof MutationObserver.observers&&"object"==typeof MutationObserver.observers.ym&&(void 0===pauseYmObserver.cnt&&(pauseYmObserver.cnt=0),++pauseYmObserver.cnt,MutationObserver.observers.ym.paused||MutationObserver.observers.ym.pause())}),funcDefined("resumeYmObserver")||(resumeYmObserver=function(){"function"==typeof MutationObserver&&"object"==typeof MutationObserver.observers&&"object"==typeof MutationObserver.observers.ym&&(void 0===pauseYmObserver.cnt&&(pauseYmObserver.cnt=1),pauseYmObserver.cnt-=pauseYmObserver.cnt>0?1:0,!pauseYmObserver.cnt&&MutationObserver.observers.ym.paused&&MutationObserver.observers.ym.resume())});var arBasketAsproCounters={};if(SetActualBasketFlyCounters=function(){if(1==arBasketAsproCounters.DEFAULT)$.ajax({url:arOptimusOptions.SITE_DIR+"ajax/basket_fly.php",type:"post",success:function(html){$("#basket_line .basket_fly").addClass("loaded").html(html)}});else{$(".basket_fly .opener .basket_count .count").attr("class","count"+(arBasketAsproCounters.READY.COUNT>0?"":" empty_items")).find(".items span").text(arBasketAsproCounters.READY.COUNT),$(".basket_fly .opener .basket_count + a").attr("href",arBasketAsproCounters.READY.HREF),$(".basket_fly .opener .basket_count").attr("title",arBasketAsproCounters.READY.TITLE).attr("class","basket_count small clicked"+(arBasketAsproCounters.READY.COUNT>0?"":" empty")),$(".basket_fly .opener .wish_count .count").attr("class","count"+(arBasketAsproCounters.DELAY.COUNT>0?"":" empty_items")).find(".items span").text(arBasketAsproCounters.DELAY.COUNT),$(".basket_fly .opener .wish_count + a").attr("href",arBasketAsproCounters.DELAY.HREF),$(".basket_fly .opener .wish_count").attr("title",arBasketAsproCounters.DELAY.TITLE).attr("class","wish_count small clicked"+(arBasketAsproCounters.DELAY.COUNT>0?"":" empty")),$(".basket_fly .opener .compare_count .count").attr("class","count"+(arBasketAsproCounters.COMPARE.COUNT>0?"":" empty_items")).find(".items span").text(arBasketAsproCounters.COMPARE.COUNT),$(".basket_fly .opener .compare_count + a").attr("href",arBasketAsproCounters.COMPARE.HREF),$(".basket_fly .opener .user_block").attr("title",arBasketAsproCounters.PERSONAL.TITLE).find("+ a").attr("href",arBasketAsproCounters.PERSONAL.HREF),$(".basket_fly .opener .user_block .wraps_icon_block").attr("class","wraps_icon_block"+(arBasketAsproCounters.PERSONAL.ID>0?" user_auth":" user_reg")+(arBasketAsproCounters.PERSONAL.SRC?" w_img":" no_img")).attr("style",arBasketAsproCounters.PERSONAL.SRC?'background:url("'+arBasketAsproCounters.PERSONAL.SRC+'") center center no-repeat;':"");const eventdata={action:"loadActualBasket"};BX.onCustomEvent("onCompleteAction",[eventdata])}},!funcDefined("setPriceItem"))var setPriceItem=function setPriceItem(main_block,quantity,rewrite_price,check_quantity,is_sku){var old_quantity=main_block.find(".to-cart").attr("data-ratio"),value=void 0!==rewrite_price&&rewrite_price?rewrite_price:main_block.find(".to-cart").attr("data-value"),currency=main_block.find(".to-cart").attr("data-currency"),total_block='<div class="total_summ"><div>'+BX.message("TOTAL_SUMM_ITEM")+"<span></span></div></div>",price_block=main_block.find(".cost.prices"),check=void 0!==check_quantity&&check_quantity;main_block.find(".buy_block").length?main_block.find(".buy_block .total_summ").length||$(total_block).appendTo(main_block.find(".buy_block")):main_block.find(".counter_wrapp").length&&(main_block.find(".counter_wrapp .total_summ").length||$(total_block).appendTo(main_block.find(".counter_wrapp:first"))),main_block.find(".total_summ").length&&(value&&currency?(1==quantity&&old_quantity==quantity||void 0!==is_sku&&is_sku&&!check)&&"ALWAYS"!==arOptimusOptions.THEME.SHOW_TOTAL_SUMM?main_block.find(".total_summ").slideUp(200):(main_block.find(".total_summ span").html(BX.Currency.currencyFormat(value*quantity,currency,!0)),main_block.find(".total_summ").is(":hidden")&&main_block.find(".total_summ").slideDown(200)):main_block.find(".total_summ").slideUp(200))};if(!funcDefined("getCurrentPrice"))var getCurrentPrice=function getCurrentPrice(price,currency,print_price){var val="",format_value=BX.Currency.currencyFormat(price,currency);return print_price.indexOf(format_value)>=0?(val=print_price.replace(format_value,'<span class="price_value">'+format_value+'</span><span class="price_currency">'),val+="</span>"):val=print_price,val};function touchMenu(selector){$(window).outerWidth()>600?$(selector).each((function(){var th=$(this);th.on("touchend",(function(e){th.find(".child").length&&!th.hasClass("hover")&&(e.preventDefault(),e.stopPropagation(),th.siblings().removeClass("hover"),th.addClass("hover"),$(".menu .child").css({display:"none"}),th.find(".child").css({display:"block"}))}))})):$(selector).off()}function touchItemBlock(selector){$(selector).each((function(){var th=$(this),item=th.closest(".catalog_item");th.closest(".best_block").length||th.on("touchend",(function(e){if(!item.hasClass("hover")){e.preventDefault(),item.siblings().removeClass("hover"),item.siblings().blur(),item.closest(".catalog_block").find(".catalog_item").removeClass("hover"),item.addClass("hover"),item.addClass("touch");var tabsContentHover=1*th.closest(".tab").attr("data-hover"),tabsContentUnhoverHover=1*th.closest(".tab").attr("data-unhover");th.closest(".tab").stop().animate({height:tabsContentUnhoverHover},100),th.closest(".catalog_item").siblings().find(".buttons_block").stop().fadeOut(233),th.closest(".tab").fadeTo(100,1),th.closest(".tab").stop().css({height:tabsContentHover}),th.closest(".catalog_item").find(".buttons_block").fadeIn(450,"easeOutCirc")}}))}))}function touchBasket(selector){"N"!==arOptimusOptions.THEME.SHOW_BASKET_ONADDTOCART&&($(window).outerWidth()>600?$(document).find(selector).on("touchend",(function(e){$(this).parent().find(".basket_popup_wrapp").length&&!$(this).hasClass("hover")&&(e.preventDefault(),e.stopPropagation(),$(this).addClass("hover"),$(this).parent().find(".basket_popup_wrapp").slideDown())})):$(selector).off())}function showTotalSummItem(popup){if("ALWAYS"==arOptimusOptions.THEME.SHOW_TOTAL_SUMM){var parent="body ";"string"==typeof popup&&"Y"==popup&&(parent=".popup "),$(parent+".counter_wrapp .counter_block input.text").each((function(){var _th=$(this);if(_th.data("product")){var obProduct=_th.data("product");"object"==typeof window[obProduct]?window[obProduct].setPriceAction("Y"):setPriceItem(_th.closest(".main_item_wrapper"),_th.val())}else setPriceItem(_th.closest(".main_item_wrapper"),_th.val())}))}}function initFull(){initSelects(document),initHoverBlock(document),InitOrderCustom(),$("html.print").length?window.print():checkStickyFooter(),showTotalSummItem(),basketActions(),orderActions()}$(document).ready((function(){if(arOptimusOptions.PAGES.ORDER_PAGE){var arUrl=parseUrlQuery();if("ORDER_ID"in arUrl){var _id=arUrl.ORDER_ID;if("N"!==arOptimusOptions.COUNTERS.USE_FULLORDER_GOALS){var eventdata={goal:"goal_order_success",result:_id};BX.onCustomEvent("onCounterGoals",[eventdata])}if(checkCounters()&&void 0!==BX.localStorage){var d=BX.localStorage.get("gtm_e_"+_id);"object"==typeof d&&waitLayer(100,(function(){dataLayer.push({event:arOptimusOptions.COUNTERS.GOOGLE_EVENTS.PURCHASE,ecommerce:d})})),"undefined"!=typeof localStorage&&localStorage.removeItem("gtm_e_"+_id)}}}"Y"===arOptimusOptions.COUNTERS.USE_DEBUG_GOALS?$.cookie("_ym_debug",1,{path:"/"}):$.cookie("_ym_debug",null,{path:"/"}),scrollToTop(),checkVerticalMobileFilter(),checkFormWidth(),jQuery.browser.safari?setTimeout((function(){$(window).resize(),setTimeout((function(){InitTopestMenuGummi(),InitTopMenuGummi(),isOnceInited=!0,InitFlexSlider();try{$("header .wrap_menu").css({overflow:"visible"}),$(".visible_on_ready").removeClass("visible_on_ready")}catch(e){console.error(e)}setTimeout((function(){$(window).scroll()}),50)}),50)}),350):setTimeout((function(){InitTopestMenuGummi(),InitTopMenuGummi(),isOnceInited=!0,InitFlexSlider();try{$("header .wrap_menu").css({overflow:"visible"}),$(".visible_on_ready").removeClass("visible_on_ready")}catch(e){console.error(e)}}),100),InitZoomPict(),$("body").on("click",".captcha_reload",(function(e){var captcha=$(this).parents(".captcha-row");e.preventDefault(),$.ajax({url:arOptimusOptions.SITE_DIR+"ajax/captcha.php"}).done((function(text){captcha.find("input[name=captcha_sid]").val(text),captcha.find("img").attr("src","/bitrix/tools/captcha.php?captcha_sid="+text),captcha.find("input[name=captcha_word]").val("").removeClass("error"),captcha.find(".captcha_input").removeClass("error").find(".error").remove()}))})),setTimeout((function(){$(".bg_image_site").css({opacity:1})}),200),window.matchMedia("(min-width: 768px)").matches&&$(".wrapper_middle_menu.wrap_menu").removeClass("mobile"),window.matchMedia("(max-width: 767px)").matches&&$(".wrapper_middle_menu.wrap_menu").addClass("mobile"),setTimeout((function(){$(window).scroll()}),400),$(".menu_top_block .v_bottom > a").on("click",(function(e){$(e.target).hasClass("toggle_block")&&e.preventDefault()})),$(".menu_top_block .v_bottom > a .toggle_block").on("click",(function(e){$(this).closest(".v_bottom").toggleClass("opened"),$(this).closest(".v_bottom").find(">.dropdown").slideToggle()})),$(document).on("click",".show_props",(function(){$(this).prev(".props_list_wrapp").stop().slideToggle(333),$(this).find(".char_title").toggleClass("opened")})),$(document).on("mouseenter",".menu_top_block.catalog_block >.dropdown>li.m_line, .menu_top_block.catalogfirst > li >.dropdown>li.m_line",(function(){var _this=$(this);window.dropdownTimeout&&window.dropdownTimeout[_this.index()]&&clearTimeout(window.dropdownTimeout[_this.index()]);var dropdown=_this.find("> ul");if(dropdown.length){var offset=dropdown[0].getBoundingClientRect(),offsetLi=_this[0].getBoundingClientRect(),offsetUl=_this.closest("ul")[0].getBoundingClientRect(),bottomOuter;if(document.documentElement.clientHeight-offset.y-offset.height<0){if(offset.height>document.documentElement.clientHeight&&offsetUl.y<0)var dropdownTopMax=-offsetLi.y;else var dropdownTopMax=offsetUl.y-offsetLi.y;var dropdownBottom=document.documentElement.clientHeight-offset.y-offsetLi.height,dropdownTop=dropdownBottom+offsetLi.height-offset.height;dropdownTop<dropdownTopMax&&(dropdownTop=dropdownTopMax),dropdown.css({top:dropdownTop+"px",bottom:-dropdownBottom+"px",overflow:"auto"})}}})),$(document).on("mouseleave",".menu_top_block.catalog_block >.dropdown>li.m_line, .menu_top_block.catalogfirst > li >.dropdown>li.m_line",(function(){var _this=$(this),dropdown=_this.find("> ul");dropdown.length&&(window.dropdownTimeout||(window.dropdownTimeout={}),window.dropdownTimeout[_this.index()]=setTimeout((function(){dropdown.css({top:"",bottom:""})}),300))})),$(document).on("click",".see_more",(function(e){e.preventDefault();var see_more=$(this).is(".see_more")?$(this):$(this).parents(".see_more").first(),see_moreText=see_more.find("> a").length?see_more.find("> a"):see_more,see_moreHiden=see_more.parent().find("> .d");return see_more.hasClass("open")?(see_moreText.text(BX.message("CATALOG_VIEW_MORE")),see_more.removeClass("open"),see_moreHiden.hide()):(see_moreText.text(BX.message("CATALOG_VIEW_LESS")),see_more.addClass("open"),see_moreHiden.show()),!1})),$(".button.faq_button").click((function(e){e.preventDefault(),$(this).toggleClass("opened"),$(".faq_ask .form").slideToggle()})),$(".staff.list .staff_section .staff_section_title a").click((function(e){e.preventDefault(),$(this).parents(".staff_section").toggleClass("opened"),$(this).parents(".staff_section").find(".staff_section_items").stop().slideToggle(600),$(this).parents(".staff_section_title").find(".opener_icon").toggleClass("opened")})),$(".jobs_wrapp .item .name").click((function(e){$(this).closest(".item").toggleClass("opened"),$(this).closest(".item").find(".description_wrapp").stop().slideToggle(600),$(this).closest(".item").find(".opener_icon").toggleClass("opened")})),$(document).on("click",".faq.list .item .q a",(function(e){e.preventDefault(),$(this).parents(".item").toggleClass("opened"),$(this).parents(".item").find(".a").stop().slideToggle(),$(this).parents(".item").find(".q .opener_icon").toggleClass("opened")})),$(".opener_icon").click((function(e){e.preventDefault(),$(this).parent().find("a").trigger("click")})),$(document).on("click",".to-order",(function(e){e.preventDefault(),$("body").append("<span class='evb-toorder' style='display:none;'></span>"),jqmEd("to-order",arOptimusOptions.FORM.TOORDER_FORM_ID,".evb-toorder","",this),$("body .evb-toorder").click(),$("body .evb-toorder").remove()})),$(document).on("click",".cheaper",(function(e){e.preventDefault(),$("body").append("<span class='evb-cheaper' style='display:none;'></span>"),jqmEd("cheaper",arOptimusOptions.FORM.CHEAPER_FORM_ID,".evb-cheaper","",this),$("body .evb-cheaper").click(),$("body .evb-cheaper").remove()})),$(document).on("click",".delivery",(function(e){e.preventDefault();var dataProductId=$(this).data("param-product_id"),dataQuantity=$(this).data("param-quantity");$("body").append("<span class='evb-delivery' style='display:none;'></span>"),jqmEd("delivery",arOptimusOptions.FORM.DELIVERY_FORM_ID.toLowerCase(),".evb-delivery","product_id="+dataProductId+"&quantity="+dataQuantity,this),$("body .evb-delivery").click(),$("body .evb-delivery").remove()})),$(".animate-load").on("click",(function(){jQuery.browser.mobile||$(this).parent().addClass("loadings")})),initCalculatePreview(),$(document).on("click",".more_block",(function(){var content_offset=$(".catalog_detail .tabs_section").offset();$("html, body").animate({scrollTop:content_offset.top-23},400)})),$(document).on("click",".counter_block:not(.basket) .plus",(function(){if(!$(this).parents(".basket_wrapp").length&&"Y"!=$(this).parent().data("offers")){var isDetailSKU2=$(this).parents(".counter_block_wr").length,input=$(this).parents(".counter_block").find("input[type=text]"),tmp_ratio=isDetailSKU2?$(this).parents(".counter_block_wr").find(".button_block .to-cart").data("ratio"):$(this).parents(".counter_wrapp").find(".to-cart").data("ratio"),isDblQuantity=isDetailSKU2?$(this).parents(".counter_block_wr").find(".button_block .to-cart").data("float_ratio"):$(this).parents(".counter_wrapp").find(".to-cart").data("float_ratio"),ratio=isDblQuantity?parseFloat(tmp_ratio):parseInt(tmp_ratio,10),max_value="";currentValue=input.val(),isDblQuantity&&(ratio=Math.round(ratio*arOptimusOptions.JS_ITEM_CLICK.precisionFactor)/arOptimusOptions.JS_ITEM_CLICK.precisionFactor),curValue=isDblQuantity?parseFloat(currentValue):parseInt(currentValue,10),curValue+=ratio,isDblQuantity&&(curValue=Math.round(curValue*arOptimusOptions.JS_ITEM_CLICK.precisionFactor)/arOptimusOptions.JS_ITEM_CLICK.precisionFactor),parseFloat($(this).data("max"))>0?input.val()<=$(this).data("max")&&(curValue<=$(this).data("max")&&input.val(curValue),input.change()):(input.val(curValue),input.change())}})),$(document).on("click",".counter_block:not(.basket) .minus",(function(){if(!$(this).parents(".basket_wrapp").length&&"Y"!=$(this).parent().data("offers")){var isDetailSKU2=$(this).parents(".counter_block_wr").length;input=$(this).parents(".counter_block").find("input[type=text]"),tmp_ratio=isDetailSKU2?$(this).parents(".counter_block_wr").find(".button_block .to-cart").data("ratio"):$(this).parents(".counter_wrapp").find(".to-cart").data("ratio"),isDblQuantity=isDetailSKU2?$(this).parents(".counter_block_wr").find(".button_block .to-cart").data("float_ratio"):$(this).parents(".counter_wrapp").find(".to-cart").data("float_ratio"),ratio=isDblQuantity?parseFloat(tmp_ratio):parseInt(tmp_ratio,10),max_value="",currentValue=input.val(),isDblQuantity&&(ratio=Math.round(ratio*arOptimusOptions.JS_ITEM_CLICK.precisionFactor)/arOptimusOptions.JS_ITEM_CLICK.precisionFactor),curValue=isDblQuantity?parseFloat(currentValue):parseInt(currentValue,10),curValue-=ratio,isDblQuantity&&(curValue=Math.round(curValue*arOptimusOptions.JS_ITEM_CLICK.precisionFactor)/arOptimusOptions.JS_ITEM_CLICK.precisionFactor),parseFloat($(this).parents(".counter_block").find(".plus").data("max"))>0?currentValue>ratio&&(curValue<ratio?input.val(ratio):input.val(curValue),input.change()):(curValue>ratio?input.val(curValue):ratio?input.val(ratio):currentValue>1&&input.val(curValue),input.change())}})),$(".counter_block input[type=text]").numeric({allow:"."}),$(".counter_block input[type=text]").on("focus",(function(){$(this).addClass("focus")})),$(".counter_block input[type=text]").on("blur",(function(){$(this).removeClass("focus")}));var timerInitCalculateDelivery=!1,hoveredTrs;$(document).on("change",".counter_block input[type=text]",(function(e){if(!$(this).parents(".basket_wrapp").length){var val=$(this).val(),tmp_ratio=$(this).parents(".counter_wrapp").find(".to-cart").data("ratio")?$(this).parents(".counter_wrapp").find(".to-cart").data("ratio"):$(this).parents(".counter_block_wr").find(".button_block .to-cart").data("ratio"),isDblQuantity=$(this).parents(".counter_wrapp").find(".to-cart").data("float_ratio")?$(this).parents(".counter_wrapp").find(".to-cart").data("float_ratio"):$(this).parents(".counter_block_wr").find(".button_block .to-cart").data("float_ratio"),ratio=isDblQuantity?parseFloat(tmp_ratio):parseInt(tmp_ratio,10),diff=val%ratio;if(isDblQuantity&&(ratio=Math.round(ratio*arOptimusOptions.JS_ITEM_CLICK.precisionFactor)/arOptimusOptions.JS_ITEM_CLICK.precisionFactor,Math.round(diff*arOptimusOptions.JS_ITEM_CLICK.precisionFactor)/arOptimusOptions.JS_ITEM_CLICK.precisionFactor==ratio&&(diff=0)),$(this).hasClass("focus")){const intCount=Math.round(Math.round(val*arOptimusOptions.JS_ITEM_CLICK.precisionFactor/ratio)/arOptimusOptions.JS_ITEM_CLICK.precisionFactor)||1;val=intCount<=1?ratio:intCount*ratio,val=Math.round(val*arOptimusOptions.JS_ITEM_CLICK.precisionFactor)/arOptimusOptions.JS_ITEM_CLICK.precisionFactor}parseFloat($(this).parents(".counter_block").find(".plus").data("max"))>0&&val>parseFloat($(this).parents(".counter_block").find(".plus").data("max"))&&(val=parseFloat($(this).parents(".counter_block").find(".plus").data("max"))),val<ratio?val=ratio:parseFloat(val)||(val=1),$(this).parents(".counter_block").parent().parent().find(".to-cart").attr("data-quantity",val),$(this).parents(".counter_block").parent().parent().find(".one_click").attr("data-quantity",val),$(this).parents(".counter_block_wr").find(".one_click").attr("data-quantity",val),$(this).val(val);var $calculate=$(this).closest(".item").length?$(this).closest(".item").find(".calculate-delivery"):$(this).closest(".catalog_detail").find(".calculate-delivery");$calculate.length&&$calculate.each((function(){var $calculateSpan=$(this).find("span[data-event=jqm]").first();if($calculateSpan.length){var $clone=$calculateSpan.clone();$clone.attr("data-param-quantity",val).removeClass("clicked"),$clone.insertAfter($calculateSpan).on("click",(function(){jQuery.browser.mobile||$(this).parent().addClass("loadings")})),$calculateSpan.remove()}$(this).hasClass("with_preview")&&($(this).removeClass("inited"),timerInitCalculateDelivery&&clearTimeout(timerInitCalculateDelivery),timerInitCalculateDelivery=setTimeout((function(){initCalculatePreview(),timerInitCalculateDelivery=!1}),1e3))}));var eventdata={type:"change",params:{id:$(this),value:val}};BX.onCustomEvent("onCounterProductAction",[eventdata])}})),BX.addCustomEvent("onCounterProductAction",(function(eventdata){"object"!=typeof eventdata&&(eventdata={type:"undefined"});try{if(void 0!==eventdata.type&&!eventdata.params.id.closest(".gifts").length){var obProduct=eventdata.params.id.data("product");if(eventdata.params.id.closest(".item_info").find(".sku_props").length){void 0===window.obSkuQuantys&&(window.obSkuQuantys={});const offerID=eventdata.params.id.closest(".offer_buy_block").find(".to-cart").data("item");window.obSkuQuantys[offerID]=eventdata.params.value}"object"==typeof window[obProduct]?"obOffers"===obProduct?setPriceAction("","","Y"):window[obProduct].setPriceAction("Y"):eventdata.params.id.length&&eventdata.params.id.closest(".main_item_wrapper").length&&"N"!=arOptimusOptions.THEME.SHOW_TOTAL_SUMM&&setPriceItem(eventdata.params.id.closest(".main_item_wrapper"),eventdata.params.value),BX.onCustomEvent("onCounterProductActionResize")}}catch(e){console.error(e)}})),$(document).on("mouseenter","#basket_line .basket_normal:not(.empty_cart):not(.bcart) .basket_block ",(function(){$(this).closest(".basket_normal").find(".popup").addClass("block"),$(this).closest(".basket_normal").find(".basket_popup_wrapp").stop(!0,!0).slideDown(150)})),$(document).on("mouseleave","#basket_line .basket_normal .basket_block ",(function(){var th=$(this);$(this).closest(".basket_normal").find(".basket_popup_wrapp").stop(!0,!0).slideUp(150,(function(){th.closest(".basket_normal").find(".popup").removeClass("block")}))})),$(document).on("click",".fast_view_block",(function(){var _th=$(this),iblockid=_th.data("param-iblock_id"),href=_th.data("param-item_href"),name=_th.data("param-form_id");$("body #popup_iframe_wrapper").find("."+name+"_frame").remove(),$("body #popup_iframe_wrapper").find("."+name+"_trigger").remove(),$("body #popup_iframe_wrapper").append('<div class="'+name+'_frame popup"></div>'),$("body #popup_iframe_wrapper").append('<div class="'+name+'_trigger"></div>'),$("."+name+"_frame").jqm({trigger:"."+name+"_trigger",onHide:function(hash){onHidejqm(name,hash)},onLoad:function(hash){onLoadjqm(name,hash)},ajax:arOptimusOptions.SITE_DIR+"ajax/form.php?form_id=fast_view&iblock_id="+iblockid+"&item_href="+href}),$("."+name+"_trigger").click()})),$(document).on("click",".popup_button_basket",(function(){var th=$(".to-cart[data-item="+$(this).data("item")+"]"),val=th.attr("data-quantity");val||($val=1);var tmp_props=th.data("props"),props="",part_props="",add_props="N",fill_prop={},iblockid=th.data("iblockid"),offer=th.data("offers"),rid="",basket_props="",item=th.attr("data-item");"Y"!=offer?offer="N":basket_props=th.closest(".prices_tab").find(".bx_sku_props input").val(),tmp_props&&(props=tmp_props.split(";")),th.data("part_props")&&(part_props=th.data("part_props")),th.data("add_props")&&(add_props=th.data("add_props")),$(".rid_item").length?rid=$(".rid_item").data("rid"):th.data("rid")&&(rid=th.data("rid")),(fill_prop=fillBasketPropsExt(th,"prop","bx_ajax_text")).quantity=val,fill_prop.add_item="Y",fill_prop.rid=rid,fill_prop.offers=offer,fill_prop.iblockID=iblockid,fill_prop.part_props=part_props,fill_prop.add_props=add_props,fill_prop.props=JSON.stringify(props),fill_prop.item=item,fill_prop.basket_props=basket_props,$.ajax({type:"POST",url:arOptimusOptions.SITE_DIR+"ajax/item.php",data:fill_prop,dataType:"json",success:function(data){$(".basket_error_frame").jqmHide(),"STATUS"in data?(getActualBasket(fill_prop.iblockID),"OK"===data.STATUS?(th.hide(),th.closest(".counter_wrapp").find(".counter_block").hide(),th.parents("tr").find(".counter_block_wr .counter_block").hide(),th.closest(".button_block").addClass("wide"),th.parent().find(".in-cart").show(),addBasketCounter(item),$(".wish_item[data-item="+item+"]").removeClass("added"),$(".wish_item[data-item="+item+"]").find(".value").show(),$(".wish_item[data-item="+item+"]").find(".value.added").hide(),$("#basket_line .cart").length?($("#basket_line .cart").is(".empty_cart")&&($("#basket_line .cart").removeClass("empty_cart").find(".cart_wrapp a.basket_link").removeAttr("href").addClass("cart-call"),$("#basket_line .cart").removeClass("ecart"),touchBasket(".cart:not(.empty_cart) .basket_block .link")),reloadTopBasket("add",$("#basket_line"),200,5e3,"Y")):$("#basket_line .basket_fly").length&&($(window).outerWidth()>768?basketFly("open"):basketFly("refresh"))):showBasketError(BX.message(data.MESSAGE))):showBasketError(BX.message("CATALOG_PARTIAL_BASKET_PROPERTIES_ERROR"))}})})),$(document).on("click",".to-cart:not(.read_more)",(function(e){e.preventDefault();var th=$(this),val=$(this).attr("data-quantity");val||($val=1);var tmp_props=$(this).data("props"),props="",part_props="",add_props="N",fill_prop={},iblockid=$(this).data("iblockid"),offer=$(this).data("offers"),rid="",basket_props="",item=$(this).attr("data-item");"Y"!=offer?offer="N":basket_props=$(this).closest(".prices_tab").find(".bx_sku_props input").val(),tmp_props&&(props=tmp_props.split(";")),$(this).data("part_props")&&(part_props=$(this).data("part_props")),$(this).data("add_props")&&(add_props=$(this).data("add_props")),$(".rid_item").length?rid=$(".rid_item").data("rid"):$(this).data("rid")&&(rid=$(this).data("rid")),(fill_prop=fillBasketPropsExt(th,"prop",th.data("bakset_div"))).quantity=val,fill_prop.add_item="Y",fill_prop.rid=rid,fill_prop.offers=offer,fill_prop.iblockID=iblockid,fill_prop.part_props=part_props,fill_prop.add_props=add_props,fill_prop.props=JSON.stringify(props),fill_prop.item=item,fill_prop.basket_props=basket_props,"N"==th.data("empty_props")?showBasketError($("#"+th.data("bakset_div")).html(),BX.message("ERROR_BASKET_PROP_TITLE"),"Y",th):$.ajax({type:"POST",url:arOptimusOptions.SITE_DIR+"ajax/item.php",data:fill_prop,dataType:"json",success:function(data){getActualBasket(fill_prop.iblockID),null!==data?"STATUS"in data?(null===data.MESSAGE_EXT&&(data.MESSAGE_EXT=""),"OK"===data.STATUS?($(".to-cart[data-item="+item+"]").hide(),$(".to-cart[data-item="+item+"]").closest(".counter_wrapp").find(".counter_block").hide(),$(".to-cart[data-item="+item+"]").parents("tr").find(".counter_block_wr .counter_block").hide(),$(".to-cart[data-item="+item+"]").closest(".button_block").addClass("wide"),$(".to-cart[data-item="+item+"]").parent().find(".in-cart").show(),addBasketCounter(item),$(".wish_item[data-item="+item+"]").removeClass("added"),$(".wish_item[data-item="+item+"]").find(".value").show(),$(".wish_item[data-item="+item+"]").find(".value.added").hide(),$("#basket_line .cart").length?($("#basket_line .cart").is(".empty_cart")&&($("#basket_line .cart").removeClass("empty_cart").find(".cart_wrapp a.basket_link").removeAttr("href").addClass("cart-call"),$("#basket_line .cart").removeClass("ecart"),touchBasket(".cart:not(.empty_cart) .basket_block .link")),reloadTopBasket("add",$("#basket_line"),200,5e3,"Y")):$("#basket_line .basket_fly").length&&($(window).outerWidth()>768?basketFly("open"):basketFly("refresh"))):showBasketError(BX.message(data.MESSAGE)+" <br/>"+data.MESSAGE_EXT)):showBasketError(BX.message("CATALOG_PARTIAL_BASKET_PROPERTIES_ERROR")):($(".to-cart[data-item="+item+"]").hide(),$(".to-cart[data-item="+item+"]").closest(".counter_wrapp").find(".counter_block").hide(),$(".to-cart[data-item="+item+"]").parents("tr").find(".counter_block_wr .counter_block").hide(),$(".to-cart[data-item="+item+"]").closest(".button_block").addClass("wide"),$(".to-cart[data-item="+item+"]").parent().find(".in-cart").show(),addBasketCounter(item),$(".wish_item[data-item="+item+"]").removeClass("added"),$(".wish_item[data-item="+item+"]").find(".value").show(),$(".wish_item[data-item="+item+"]").find(".value.added").hide(),$("#basket_line .cart").length?($("#basket_line .cart").is(".empty_cart")&&($("#basket_line .cart").removeClass("empty_cart").find(".cart_wrapp a.basket_link").removeAttr("href").addClass("cart-call"),$("#basket_line .cart").removeClass("ecart"),touchBasket(".cart:not(.empty_cart) .basket_block .link")),reloadTopBasket("add",$("#basket_line"),200,5e3,"Y")):$("#basket_line .basket_fly").length&&$(window).outerWidth()>768&&basketFly("open"))}})})),$(document).on("click",".to-subscribe",(function(e){if(e.preventDefault(),$(this).is(".auth"))$(this).hasClass("nsubsc")?($("body").append("<span class='evb-subs' style='display:none;'></span>"),jqmEd("subscribe","subscribe",".evb-subs","id="+$(this).data("item"),this),$("body .evb-subs").click(),$("body .evb-subs").remove()):location.href=arOptimusOptions.SITE_DIR+"auth/?backurl="+location.pathname;else{var item=$(this).attr("data-item"),iblockid=$(this).attr("data-iblockid");$(this).hide(),$(this).parent().find(".in-subscribe").show(),$.get(arOptimusOptions.SITE_DIR+"ajax/item.php?item="+item+"&subscribe_item=Y",$.proxy((function(data){$(".wish_item[data-item="+item+"]").removeClass("added"),getActualBasket(iblockid)})))}})),$(document).on("click",".in-subscribe",(function(e){e.preventDefault();var item=$(this).attr("data-item"),iblockid=$(this).attr("data-iblockid");$(this).hide(),$(this).parent().find(".to-subscribe").show(),$.get(arOptimusOptions.SITE_DIR+"ajax/item.php?item="+item+"&subscribe_item=Y",$.proxy((function(data){getActualBasket(iblockid)})))})),$(document).on("keyup",(function(e){27==e.keyCode&&$(".jqmWindow").length&&$(".jqmWindow").jqmHide()})),$(document).on("click",".wish_item",(function(e){e.preventDefault();var val=$(this).attr("data-quantity"),offer=$(this).data("offers"),iblockid=$(this).data("iblock"),tmp_props=$(this).data("props"),props="",item=$(this).attr("data-item");item2=$(this).attr("data-item"),val||($val=1),"Y"!=offer&&(offer="N"),tmp_props&&(props=tmp_props.split(";")),$(this).hasClass("text")?$(this).hasClass("added")?($(".wish_item[data-item="+item+"]").removeClass("added"),$(".wish_item[data-item="+item+"]").find(".value").show(),$(".wish_item[data-item="+item+"]").find(".value.added").hide(),$(".like_icons").each((function(){$(this).find(".wish_item_button").length&&($(this).find(".wish_item_button").find('.wish_item[data-item="'+item+'"]').removeClass("added"),$(this).find(".wish_item_button").find('.wish_item[data-item="'+item+'"]').find(".value").show(),$(this).find(".wish_item_button").find('.wish_item[data-item="'+item+'"]').find(".value.added").hide())}))):($(".wish_item[data-item="+item+"]").addClass("added"),$(".wish_item[data-item="+item+"]").find(".value").hide(),$(".wish_item[data-item="+item+"]").find(".value.added").css("display","block"),$(".like_icons").each((function(){$(this).find(".wish_item_button").length&&($(this).find(".wish_item_button").find('.wish_item[data-item="'+item+'"]').addClass("added"),$(this).find(".wish_item_button").find('.wish_item[data-item="'+item+'"]').find(".value").hide(),$(this).find(".wish_item_button").find('.wish_item[data-item="'+item+'"]').find(".value.added").show())}))):$(this).hasClass("added")?($(this).hide(),$(this).closest(".wish_item_button").find(".to").show(),$(".like_icons").each((function(){$(this).find('.wish_item.text[data-item="'+item+'"]').length&&($(this).find('.wish_item.text[data-item="'+item+'"]').removeClass("added"),$(this).find('.wish_item.text[data-item="'+item+'"]').find(".value").show(),$(this).find('.wish_item.text[data-item="'+item+'"]').find(".value.added").hide()),$(this).find(".wish_item_button").length&&($(this).find(".wish_item_button").find('.wish_item[data-item="'+item+'"]').removeClass("added"),$(this).find(".wish_item_button").find('.wish_item[data-item="'+item+'"]').find(".value").show(),$(this).find(".wish_item_button").find('.wish_item[data-item="'+item+'"]').find(".value.added").hide())}))):($(this).hide(),$(this).closest(".wish_item_button").find(".in").addClass("added").show(),$(".like_icons").each((function(){$(this).find('.wish_item.text[data-item="'+item+'"]').length&&($(this).find('.wish_item.text[data-item="'+item+'"]').addClass("added"),$(this).find('.wish_item.text[data-item="'+item+'"]').find(".value").hide(),$(this).find('.wish_item.text[data-item="'+item+'"]').find(".value.added").css({display:"block"})),$(this).find(".wish_item_button").length&&($(this).find(".wish_item_button").find('.wish_item[data-item="'+item+'"]').addClass("added"),$(this).find(".wish_item_button").find('.wish_item[data-item="'+item+'"]').find(".value").hide(),$(this).find(".wish_item_button").find('.wish_item[data-item="'+item+'"]').find(".value.added").show())}))),$(".in-cart[data-item="+item+"]").hide(),$(".to-cart[data-item="+item+"]").parent().removeClass("wide"),$(".to-cart[data-item="+item+"]").show(),$(".counter_block[data-item="+item+"]").show(),$(".counter_block[data-item="+item+"]").closest(".counter_wrapp").find(".to-order").length||($(".to-cart[data-item="+item+"]").show(),$(".counter_block[data-item="+item+"]").show()),$(this).closest(".module-cart").size()||$.ajax({type:"GET",url:arOptimusOptions.SITE_DIR+"ajax/item.php",data:"item="+item2+"&quantity="+val+"&wish_item=Y&offers="+offer+"&iblockID="+iblockid+"&props="+JSON.stringify(props),dataType:"json",success:function(data){if(getActualBasket(iblockid),null!==data)if(null===data.MESSAGE_EXT&&(data.MESSAGE_EXT=""),"STATUS"in data)if("OK"===data.STATUS){if("N"!==arOptimusOptions.COUNTERS.USE_BASKET_GOALS){var eventdata={goal:"goal_wish_add",params:{id:item2}};BX.onCustomEvent("onCounterGoals",[eventdata])}$("#basket_line .cart").size()?reloadTopBasket("wish",$("#basket_line"),200,5e3,"N"):basketFly("wish")}else showBasketError(BX.message(data.MESSAGE)+" <br/>"+data.MESSAGE_EXT,BX.message("ERROR_ADD_DELAY_ITEM"));else showBasketError(BX.message(data.MESSAGE)+" <br/>"+data.MESSAGE_EXT,BX.message("ERROR_ADD_DELAY_ITEM"));else $("#basket_line .cart").size()?reloadTopBasket("wish",$("#basket_line"),200,5e3,"N"):basketFly("wish")}})})),$(document).on("click",".compare_item",(function(e){e.preventDefault();var item=$(this).attr("data-item"),iblockID=$(this).attr("data-iblock");$(this).hasClass("text")?$(this).hasClass("added")?($(".compare_item[data-item="+item+"]").removeClass("added"),$(".compare_item[data-item="+item+"]").find(".value").show(),$(".compare_item[data-item="+item+"]").find(".value.added").hide(),$(".like_icons").each((function(){$(this).find(".compare_item_button").length&&($(this).find(".compare_item_button").find('.compare_item[data-item="'+item+'"]').removeClass("added"),$(this).find(".compare_item_button").find('.compare_item[data-item="'+item+'"]').find(".value").show(),$(this).find(".compare_item_button").find('.compare_item[data-item="'+item+'"]').find(".value.added").hide())}))):($(".compare_item[data-item="+item+"]").addClass("added"),$(".compare_item[data-item="+item+"]").find(".value").hide(),$(".compare_item[data-item="+item+"]").find(".value.added").css("display","block"),$(".like_icons").each((function(){$(this).find(".compare_item_button").length&&($(this).find(".compare_item_button").find('.compare_item[data-item="'+item+'"]').addClass("added"),$(this).find(".compare_item_button").find('.compare_item[data-item="'+item+'"]').find(".value.added").show(),$(this).find(".compare_item_button").find('.compare_item[data-item="'+item+'"]').find(".value").hide())}))):$(this).hasClass("added")?($(this).hide(),$(this).closest(".compare_item_button").find(".to").show(),$(".like_icons").each((function(){$(this).find('.compare_item.text[data-item="'+item+'"]').length&&($(this).find('.compare_item.text[data-item="'+item+'"]').removeClass("added"),$(this).find('.compare_item.text[data-item="'+item+'"]').find(".value").show(),$(this).find('.compare_item.text[data-item="'+item+'"]').find(".value.added").hide()),$(this).find(".compare_item_button").length&&($(this).find(".compare_item_button").find('.compare_item[data-item="'+item+'"]').removeClass("added"),$(this).find(".compare_item_button").find('.compare_item[data-item="'+item+'"]').find(".value").show(),$(this).find(".compare_item_button").find('.compare_item[data-item="'+item+'"]').find(".value.added").hide())}))):($(this).hide(),$(this).closest(".compare_item_button").find(".in").show(),$(".like_icons").each((function(){$(this).find('.compare_item.text[data-item="'+item+'"]').length&&($(this).find('.compare_item.text[data-item="'+item+'"]').addClass("added"),$(this).find('.compare_item.text[data-item="'+item+'"]').find(".value").hide(),$(this).find('.compare_item.text[data-item="'+item+'"]').find(".value.added").css({display:"block"})),$(this).find(".compare_item_button").length&&($(this).find(".compare_item_button").find('.compare_item[data-item="'+item+'"]').addClass("added"),$(this).find(".compare_item_button").find('.compare_item[data-item="'+item+'"]').find(".value.added").show(),$(this).find(".compare_item_button").find('.compare_item[data-item="'+item+'"]').find(".value").hide())}))),$.get(arOptimusOptions.SITE_DIR+"ajax/item.php?item="+item+"&compare_item=Y&iblock_id="+iblockID,$.proxy((function(data){getActualBasket(iblockID,"Comapre"),jsAjaxUtil.InsertDataToNode(arOptimusOptions.SITE_DIR+"ajax/show_compare_preview_top.php","compare_line",!1),$("#compare_fly").length&&jsAjaxUtil.InsertDataToNode(arOptimusOptions.SITE_DIR+"ajax/show_compare_preview_fly.php","compare_fly",!1)})))})),$(".fancy").fancybox({openEffect:"fade",closeEffect:"fade",nextEffect:"fade",prevEffect:"fade",tpl:{closeBtn:'<a title="'+BX.message("FANCY_CLOSE")+'" class="fancybox-item fancybox-close" href="javascript:;"></a>',next:'<a title="'+BX.message("FANCY_NEXT")+'" class="fancybox-nav fancybox-next" href="javascript:;"><span></span></a>',prev:'<a title="'+BX.message("FANCY_PREV")+'" class="fancybox-nav fancybox-prev" href="javascript:;"><span></span></a>'}}),$(".tabs>li").on("click",(function(){if(!$(this).hasClass("active")){var sliderIndex=$(this).index(),curLiNav=$(this).closest(".top_blocks").find(".slider_navigation").find(">li:eq("+sliderIndex+")"),curLi=$(this).closest(".top_blocks").siblings(".tabs_content").find(">li:eq("+sliderIndex+")");$(this).addClass("active").addClass("cur").siblings().removeClass("active").removeClass("cur"),curLi.addClass("cur").siblings().removeClass("cur"),curLiNav.addClass("cur").siblings().removeClass("cur"),curLi.find(".catalog_block .catalog_item_wrapp .catalog_item .item_info:visible .item-title").sliceHeight({item:".catalog_item:visible",resize:!1,mobile:!0}),curLi.find(".catalog_block .catalog_item_wrapp .catalog_item .item_info:visible").sliceHeight({classNull:".footer_button",item:".catalog_item:visible",resize:!1,mobile:!0}),curLi.find(".catalog_block .catalog_item_wrapp .catalog_item:visible").sliceHeight({classNull:".footer_button",item:".catalog_item:visible",resize:!1,mobile:!0})}})),$(".search_block .icon").on("click",(function(){var th=$(this);$(this).hasClass("open")?($(this).closest(".center_block").find(".search_middle_block").removeClass("active"),$(this).removeClass("open"),$(this).closest(".center_block").find(".search_middle_block").find(".noborder").hide()):(setTimeout((function(){th.closest(".center_block").find(".search_middle_block").find(".noborder").show()}),100),$(this).closest(".center_block").find(".search_middle_block").addClass("active"),$(this).addClass("open"))})),$(document).on("mouseenter",".display_list .item_wrap",(function(){$(this).prev().addClass("prev")})),$(document).on("mouseleave",".display_list .item_wrap",(function(){$(this).prev().removeClass("prev")})),$(document).on("mouseenter",".catalog_block .item_wrap",(function(){$(this).addClass("shadow_delay")})),$(document).on("mouseleave",".catalog_block .item_wrap",(function(){$(this).removeClass("shadow_delay")})),$(document).on("click",".no_goods .button",(function(){$(".bx_filter .smartfilter .bx_filter_search_reset").trigger("click")})),$(document).on("click",".ajax_load_btn",(function(){var url=$(this).closest(".container").find(".module-pagination .flex-direction-nav .flex-next").attr("href"),th=$(this).find(".more_text_ajax"),objUrl=parseUrlQuery(),add_url="",bTabsBlock=!1,obGetData={ajax_get:"Y",AJAX_REQUEST:"Y"};if(th.addClass("loading"),th.closest(".tab_slider_wrapp.specials").length){var curLi=$(this).closest(".tab"),url=th.closest(".tabs_content").data("url");bTabsBlock=!0,obGetData.AJAX_POST="Y",obGetData.FILTER_HIT_PROP=curLi.data("code"),obGetData.AJAX_PARAMS=$(this).closest(".tab_slider_wrapp").find(".request-data").data("value"),obGetData.GLOBAL_FILTER=curLi.data("filter"),add_url="?PAGEN_1="+curLi.find(".nav-inner-wrapper").data("page")}"clear_cache"in objUrl&&"Y"==objUrl.clear_cache&&(add_url+=(add_url.length?"&":"?")+"clear_cache=Y"),$.ajax({url:url+add_url,data:obGetData,type:bTabsBlock?"POST":"GET",success:function(html){var new_html=$.parseHTML(html);th.removeClass("loading"),th.closest(".tab_slider_wrapp.specials").length?(curLi.find(".catalog_block").append(html),curLi.find(".catalog_block .wrap_nav").remove(),curLi.find(".catalog_block .catalog_item_wrapp .catalog_item .item_info:visible .item-title").sliceHeight({item:".catalog_item:visible",mobile:!0}),curLi.find(".catalog_block .catalog_item_wrapp .catalog_item .item_info:visible").sliceHeight({item:".catalog_item:visible",mobile:!0}),curLi.find(".catalog_block .catalog_item_wrapp .catalog_item:visible").sliceHeight({classNull:".footer_button",item:".catalog_item:visible",mobile:!0}),curLi.find(".bottom_nav").html($(html).find(".bottom_nav").html())):($(".display_list").length?$(".display_list").append(html):$(".block_list").length?($(".block_list").append(html),touchItemBlock(".catalog_item a")):$(".module_products_list").length&&$(".module_products_list > tbody").append(html),$(".bottom_nav").html($(html).find(".bottom_nav").html())),setStatusButton(),initCountdown(),showTotalSummItem(),BX.onCustomEvent("onAjaxSuccess")}})})),$(document).on("click",".bx_compare .tabs-head li",(function(){var url=$(this).find(".sortbutton").data("href");BX.showWait(BX("bx_catalog_compare_block")),$.ajax({url:url,data:{ajax_action:"Y"},success:function(html){history.pushState(null,null,url),$("#bx_catalog_compare_block").html(html),BX.closeWait()}})})),$(document).on({mouseover:function(e){var _=$(this),tbodyIndex=_.closest("tbody").index()+1,trIndex=_.index()+1;hoveredTrs=$(e.delegateTarget).find(".data_table_props").children(":nth-child("+tbodyIndex+")").children(":nth-child("+trIndex+")").addClass("hovered")},mouseleave:function(e){hoveredTrs&&hoveredTrs.removeClass("hovered")}},".bx_compare .data_table_props tbody>tr"),$(document).on("click",".fancy_offer",(function(e){e.preventDefault();var arPict=[];$(".sliders .slides_block li").each((function(){var obImg={};obImg={title:$(this).find("img").attr("alt"),href:$(this).data("big")},$(this).hasClass("current")?arPict.unshift(obImg):arPict.push(obImg)})),$.fancybox(arPict,{openEffect:"fade",closeEffect:"fade",nextEffect:"fade",prevEffect:"fade",type:"image",tpl:{closeBtn:'<a title="'+BX.message("FANCY_CLOSE")+'" class="fancybox-item fancybox-close" href="javascript:;"></a>',next:'<a title="'+BX.message("FANCY_NEXT")+'" class="fancybox-nav fancybox-next" href="javascript:;"><span></span></a>',prev:'<a title="'+BX.message("FANCY_PREV")+'" class="fancybox-nav fancybox-prev" href="javascript:;"><span></span></a>'}})})),$(document).on("click",".tabs_section .tabs-head li",(function(e,s){var container,container,container;if($(this).is(".current")){if("slide"===s){var container;(container=$(".tabs_section ul.tabs_content > li:eq("+$(this).index()+")")).find("> div + div").slideUp(200,(function(){$(".tabs_section .tabs-head li").removeClass("current"),$(".tabs_section ul.tabs_content li").removeClass("current")}))}}else $(".tabs_section .tabs-head li").removeClass("current"),$(this).addClass("current"),$(".tabs_section ul.tabs_content li").removeClass("current"),"product_reviews_tab"==$(this).attr("id")?($(".shadow.common").hide(),"slide"===s?($("#reviews_content").slideDown(200,(function(){})),$(".tabs_section ul.tabs_content > li").not(":eq("+$(this).index()+")").find("> div + div").slideUp(200,(function(){})),(container=$(".tabs_section ul.tabs_content > li:eq("+$(this).index()+")")).find("> div + div").slideDown(200,(function(){container.addClass("current")}))):($(".tabs_section ul.tabs_content > li:eq("+$(this).index()+")").addClass("current"),$(".tabs_section ul.tabs_content > li").not(":eq("+$(this).index()+")").find("> div + div").hide(),$("#for_product_reviews_tab").show(),$("#reviews_content").show())):($(".shadow.common").show(),"slide"===s?($(".tabs_section ul.tabs_content > li").not(":eq("+$(this).index()+")").find("> div + div").slideUp(200,(function(){})),(container=$(".tabs_section ul.tabs_content > li:eq("+$(this).index()+")")).find("> div + div").slideDown(200,(function(){container.addClass("current")}))):($("#reviews_content").hide(),$(".tabs_section ul.tabs_content > li > div + div").hide(),(container=$(".tabs_section ul.tabs_content > li:eq("+$(this).index()+")")).addClass("current"),container.find("> div + div").show()))})),$(document).on("click",".tabs_section .tabs-body li .title-tab-heading",(function(){$(".tabs_section .tabs-head li:eq("+$(this).parent("li").index()+")").trigger("click","slide")})),setTimeout((function(){$(".jobs_wrapp .item:first .name tr").trigger("click")}),300),$(document).on("click",".buy_block .slide_offer",(function(){scroll_block($(".tabs_section"))})),$(".share_wrapp .text").on("click",(function(){$(this).parent().find(".shares").fadeToggle()})),$(document).on("mousedown","html, body",(function(e){e.stopPropagation(),$(".shares").fadeOut(),$(".search_middle_block").removeClass("active_wide")})),$(document).on("mousedown",".share_wrapp *",(function(e){e.stopPropagation()})),$(document).on("click",".reviews-collapse-link",(function(){$(".reviews-reply-form").slideToggle()})),initCountdown(),$(".menu.adaptive").on("click",(function(){$(this).toggleClass("opened"),$(this).hasClass("opened")?$(".mobile_menu").toggleClass("opened").slideDown():$(".mobile_menu").toggleClass("opened").slideUp()})),$(".mobile_menu .has-child >div.toggle_mobile_menu").on("click",(function(e){var parentLi=$(this).parent();e.preventDefault(),parentLi.toggleClass("opened"),parentLi.find(".dropdown").slideToggle()})),$(document).on("keyup",".mobile_menu .search-input-div input",(function(e){var inputValue=$(this).val();$(".center_block .stitle_form input").val(inputValue),13==e.keyCode&&$(".center_block .stitle_form form").submit()})),$(document).on("keyup",".center_block .stitle_form input",(function(e){var inputValue=$(this).val();$(".mobile_menu .search-input-div input").val(inputValue),13==e.keyCode&&$(".center_block .stitle_form form").submit()})),$(document).on("click",".mobile_menu .search-button-div button",(function(e){e.preventDefault();var inputValue=$(this).parents().find("input").val();$(".center_block .stitle_form input").val(inputValue),$(".center_block .stitle_form form").submit()})),$(".btn.btn-add").on("click",(function(){$.ajax({type:"GET",url:arOptimusOptions.SITE_DIR+"ajax/clearBasket.php",success:function(data){}})})),$(document).on("click",".bx_ordercart_order_table_container .control > a, .basket-item-actions-remove, a[data-entity=basket-item-remove-delayed]",(function(e){$.removeCookie("click_basket",{path:"/"}),$.cookie("click_basket","Y",{path:"/"})})),$(".sale-order-detail-payment-options-methods-info-change-link").on("click",(function(){$(this).closest(".sale-order-detail-payment-options-methods-info").addClass("opened").siblings().addClass("opened")})),$(document).on("click",".expand_block",(function(){togglePropBlock($(this))})),document.addEventListener("touchend",(function(event){if($(event.target).closest(".menu_item_l1").length||($(".menu .menu_item_l1 .child").css({display:"none"}),$(".menu_item_l1").removeClass("hover")),$(event.target).closest(".basket_block").length||($(".basket_block .link").removeClass("hover"),$(".basket_block .basket_popup_wrapp").slideUp()),!$(event.target).closest(".catalog_item").length){var tabsContentUnhoverHover=1*$(".tab:visible").attr("data-unhover");tabsContentUnhoverHover&&$(".tab:visible").stop().animate({height:tabsContentUnhoverHover},100),$(".tab:visible").find(".catalog_item").removeClass("hover"),$(".tab:visible").find(".catalog_item .buttons_block").stop().fadeOut(233),$(".catalog_block").length&&$(".catalog_block").find(".catalog_item").removeClass("hover")}}),!1),$(document).on("keyup",".coupon .input_coupon input",(function(){$(this).val().length?($(this).removeClass("error"),$(this).closest(".input_coupon").find(".error").remove()):($(this).addClass("error"),$("<label class='error'>"+BX.message("INPUT_COUPON")+"</label>").insertBefore($(this)))})),showPhoneMask("input[autocomplete=tel]"),BX.addCustomEvent(window,"onAjaxSuccess",(function(e){"OK"!=e&&(initSelects(document),InitOrderCustom(),showPhoneMask("input[autocomplete=tel]"),$("#content > .catalog_detail").length&&$(".bx_filter").remove(),InitFlexSlider(),arOptimusOptions.PAGES.CATALOG_PAGE&&(setStatusButton(),initCountdown()),arOptimusOptions.PAGES.ORDER_PAGE&&orderActions(e))})),BX.addCustomEvent(window,"onFrameDataRequestFail",(function(response){console.log(response)}))})),funcDefined("togglePropBlock")||(togglePropBlock=function(className){var all_props_block=className.closest(".bx_filter_parameters_box_container").find(".hidden_values");all_props_block.length&&(className.hasClass("inner_text")||className.hasClass("expand_block"))&&(all_props_block.is(":visible")?(className.text(BX.message("FILTER_EXPAND_VALUES")),all_props_block.hide()):(className.text(BX.message("FILTER_HIDE_VALUES")),all_props_block.show()))}),funcDefined("showPhoneMask")||(showPhoneMask=function(className){$(className).inputmask("mask",{mask:arOptimusOptions.THEME.PHONE_MASK,showMaskOnHover:!1})}),funcDefined("parseUrlQuery")||(parseUrlQuery=function(){var data={};if(location.search)for(var pair=location.search.substr(1).split("&"),i=0;i<pair.length;i++){var param=pair[i].split("=");data[param[0]]=param[1]}return data}),funcDefined("getActualBasket")||(getActualBasket=function(iblockID,type){var data="";void 0!==iblockID&&(data={iblockID:iblockID}),$.ajax({type:"GET",url:arOptimusOptions.SITE_DIR+"ajax/actualBasket.php",data:data,success:function(data){$(".js_ajax").length||$("body").append('<div class="js_ajax"></div>'),$(".js_ajax").html(data);const eventdata={action:"loadActualBasket"};BX.onCustomEvent("onCompleteAction",[eventdata])}})}),funcDefined("orderActions")||(orderActions=function(e){if(arOptimusOptions.PAGES.ORDER_PAGE){if($("#bx-soa-order input[autocomplete=tel]").length){for(var i=0;i<BX.Sale.OrderAjaxComponent.result.ORDER_PROP.properties.length;++i)if("Y"==BX.Sale.OrderAjaxComponent.result.ORDER_PROP.properties[i].IS_PHONE)var arPropertyPhone=BX.Sale.OrderAjaxComponent.result.ORDER_PROP.properties[i];if(void 0!==BX.Sale.OrderAjaxComponent&&"object"==typeof BX.Sale.OrderAjaxComponent&&"object"==typeof arPropertyPhone&&arPropertyPhone){BX.Sale.OrderAjaxComponent.validatePhone=function(input,arProperty,fieldName){if(!input||!arProperty)return[];var value=input.value,errors=[],name=BX.util.htmlspecialchars(arProperty.NAME),field=BX.message("SOA_FIELD")+' "'+name+'"',re;if("Y"==arProperty.REQUIRED&&0==value.length&&errors.push(field+" "+BX.message("SOA_REQUIRED")),"Y"==arProperty.IS_PHONE&&value.length>0){function regexpPhone(value,element,regexp){var re;return new RegExp(regexp).test(value)}var validPhone;regexpPhone($(input).val(),$(input),arOptimusOptions.THEME.VALIDATE_PHONE_MASK)||errors.push(field+" "+BX.message("JS_FORMAT_ORDER"))}return errors},BX.Sale.OrderAjaxComponent.getValidationDataPhone=function(arProperty,propContainer){var data={},inputs;switch(arProperty.TYPE){case"STRING":if(data.action="blur",data.func=BX.delegate((function(input,fieldName){return this.validatePhone(input,arProperty,fieldName)}),this),inputs=propContainer.querySelectorAll("input[type=tel]"),$(inputs).length){data.inputs=inputs;break}}return data},BX.Sale.OrderAjaxComponent.bindValidationPhone=function(id,propContainer){if(this.validation.properties&&this.validation.properties[id]){var arProperty=this.validation.properties[id],data=this.getValidationDataPhone(arProperty,propContainer),i,k;if(data&&data.inputs&&data.action)for(i=0;i<$(data.inputs).length;i++)if(BX.type.isElementNode(data.inputs[i]))BX.bind(data.inputs[i],data.action,BX.delegate((function(){this.isValidProperty(data)}),this));else for(k=0;k<$(data.inputs[i]).length;k++)BX.bind(data.inputs[i][k],data.action,BX.delegate((function(){this.isValidProperty(data)}),this))}},BX.Sale.OrderAjaxComponent.isValidPropertiesBlock=function(excludeLocation){if(!this.options.propertyValidation)return[];var props=this.orderBlockNode.querySelectorAll(".bx-soa-customer-field[data-property-id-row]"),propsErrors=[],id,propContainer,arProperty,data,i;for(i=0;i<props.length;i++)id=props[i].getAttribute("data-property-id-row"),excludeLocation&&this.locations[id]||(propContainer=props[i].querySelector(".soa-property-container"))&&(arProperty=this.validation.properties[id],data=this.getValidationData(arProperty,propContainer),dataPhone=this.getValidationDataPhone(arProperty,propContainer),data=$.extend({},data,dataPhone),propsErrors=propsErrors.concat(this.isValidProperty(data,!0)));return propsErrors};var input,inputHTML=(input=$("input[autocomplete=tel]"))[0].outerHTML,value=input.val(),newInput=input[0].outerHTML.replace('type="text"','type="tel" value="'+value+'"');$(input).length<2&&(input.hide(),$(newInput).insertAfter(input)),showPhoneMask("input[autocomplete=tel][type=tel]"),$("input[autocomplete=tel][type=tel]").on("blur",(function(){var $this=$(this),value=$this.val();$this.parent().find("input[autocomplete=tel][type=text]").val(value)})),BX.Sale.OrderAjaxComponent.bindValidationPhone(arPropertyPhone.ID,$("input[autocomplete=tel]").parent()[0])}}if($(".bx-soa-cart-total").length){if($(".change_basket").length||$(".bx-soa-cart-total").prepend('<div class="change_basket">'+BX.message("BASKET_CHANGE_TITLE")+'<a href="'+arOptimusOptions.SITE_DIR+'basket/" class="change_link">'+BX.message("BASKET_CHANGE_LINK")+"</a></div>"),"object"==typeof BX.Sale.OrderAjaxComponent){if("N"!==arOptimusOptions.COUNTERS.USE_FULLORDER_GOALS&&void 0===BX.Sale.OrderAjaxComponent.reachgoalbegin){BX.Sale.OrderAjaxComponent.reachgoalbegin=!0;var eventdata={goal:"goal_order_begin"}}if($(".bx-soa-section-content.reg").length&&!$(".bx-soa-section-content.reg .redisigned").length){var bRebindRegSubmit=!1;if("Y"===arOptimusOptions.THEME.LOGIN_EQUAL_EMAIL&&(bRebindRegSubmit=!0,$('input[name="NEW_LOGIN"]').length&&$('input[name="NEW_LOGIN"]').closest(".bx-authform-formgroup-container").hide()),bRebindRegSubmit){var $regSubmit=$("#do_register~input[type=submit]");$regSubmit.length&&(BX.unbindAll($regSubmit[0]),$(document).on("click","#do_register~input[type=submit]",(function(e){if(e.preventDefault(),e.stopImmediatePropagation(),"Y"===arOptimusOptions.THEME.LOGIN_EQUAL_EMAIL){var email=BX.findChild(BX("bx-soa-auth"),{attribute:{name:"NEW_EMAIL"}},!0,!1),login=BX.findChild(BX("bx-soa-auth"),{attribute:{name:"NEW_LOGIN"}},!0,!1);login&&email&&(login.value=email.value)}BX("do_register").value="Y",BX.Sale.OrderAjaxComponent.sendRequest("showAuthForm")})))}var $captcha=$(".bx-soa-section-content.reg").find(".bx-captcha");if($captcha.length&&($captcha.addClass("captcha_image"),$captcha.append('<div class="captcha_reload"></div>'),$captcha.closest(".bx-authform-formgroup-container").addClass("captcha-row").find("input[name=captcha_word]").closest(".bx-authform-input-container").addClass("captcha_input")),$("input[name=NEW_NAME]").length&&$("input[name=NEW_LAST_NAME]").length&&!$("input[name=NEW_NAME]").closest(".bx-authform-formgroup-container.col-md-6").length){$("input[name=NEW_NAME],input[name=NEW_LAST_NAME]").closest(".bx-authform-formgroup-container").addClass("col-md-6");var html=$("input[name=NEW_LAST_NAME]").closest(".bx-authform-formgroup-container").wrap('<div id="trem_"></div>').parent().html();$("#trem_").remove(),$(html).insertAfter($("input[name=NEW_NAME]").closest(".bx-authform-formgroup-container").wrap('<div class="row"></div>'))}if($("input[name=NEW_EMAIL]").length&&$("input[name=PHONE_NUMBER]").length&&!$("input[name=PHONE_NUMBER]").closest(".bx-authform-formgroup-container.col-md-6").length){$("input[name=NEW_EMAIL],input[name=PHONE_NUMBER]").closest(".bx-authform-formgroup-container").addClass("col-md-6");var html=$("input[name=PHONE_NUMBER]").closest(".bx-authform-formgroup-container").wrap('<div id="trem_"></div>').parent().html();$("#trem_").remove(),$(html).insertAfter($("input[name=NEW_EMAIL]").closest(".bx-authform-formgroup-container").wrap('<div class="row"></div>'))}if($("input[name=NEW_PASSWORD]").length&&$("input[name=NEW_PASSWORD_CONFIRM]").length&&!$("input[name=NEW_PASSWORD]").closest(".bx-authform-formgroup-container.col-md-6").length){$("input[name=NEW_PASSWORD],input[name=NEW_PASSWORD_CONFIRM]").closest(".bx-authform-formgroup-container").addClass("col-md-6");var html=$("input[name=NEW_PASSWORD_CONFIRM]").closest(".bx-authform-formgroup-container").wrap('<div id="trem_"></div>').parent().html();$("#trem_").remove(),$(html).insertAfter($("input[name=NEW_PASSWORD]").closest(".bx-authform-formgroup-container").wrap('<div class="row"></div>'))}if($("input[name=PHONE_NUMBER]").length){var input,inputHTML=(input=$("input[name=PHONE_NUMBER]"))[0].outerHTML,value=input.val(),newInput=input[0].outerHTML.replace('type="text"','type="tel" value="'+value+'"');if($(input).length<2){input.hide(),$(newInput).insertAfter(input),showPhoneMask("input[name=PHONE_NUMBER][type=tel]"),$("input[name=PHONE_NUMBER][type=tel]").on("blur",(function(){var $this=$(this),value=$this.val();$this.parent().find("input[name=PHONE_NUMBER][type=text]").val(value)}));var $label=$("input[name=PHONE_NUMBER][type=tel]").closest(".bx-authform-formgroup-container").find(".bx-authform-label-container");$label.html(BX.message("ORDER_PHONE_LABEL")+($label.find(".bx-authform-starrequired").length?'<span class="bx-authform-starrequired"> *</span>':""))}}$(".bx-soa-section-content.reg").append('<div class="redisigned hidden></div>')}const asproLicenceShow="Y"===arOptimusOptions.THEME.SHOW_LICENCE,asproLicenceChecked="Y"===arOptimusOptions.THEME.LICENCE_CHECKED,asproOfferShow="Y"===arOptimusOptions.THEME.SHOW_OFFER,asproOfferChecked="Y"===arOptimusOptions.THEME.OFFER_CHECKED;if($(".bx-soa-cart-total-line-total").length&&(asproLicenceShow||asproOfferShow)&&(void 0===e&&(BX.Sale.OrderAjaxComponent.state_licence=asproLicenceChecked?"checked":"",BX.Sale.OrderAjaxComponent.state_offer=asproOfferChecked?"checked":""),(!$(".licence_block.filter").length&&asproLicenceShow||!$(".offer_block.filter").length&&asproOfferShow)&&($('<div class="form"><div class="license_order_wrap"></div></div>').insertBefore($("#bx-soa-orderSave")),!$(".licence_block.filter").length&&asproLicenceShow&&$('<div class="licence_block filter label_block"><label data-for="licenses_order" class="hidden error">'+BX.message("JS_REQUIRED_LICENSES")+'</label><input type="checkbox" name="licenses_order" required '+BX.Sale.OrderAjaxComponent.state_licence+' value="Y"><label data-for="licenses_order" class="license">'+BX.message("LICENSES_TEXT")+"</label></div>").appendTo($(".license_order_wrap")),!$(".offer_block.filter").length&&asproOfferShow&&$('<div class="offer_block filter label_block"><label data-for="offer_order" class="hidden error">'+BX.message("JS_REQUIRED_OFFER")+'</label><input type="checkbox" name="offer_order" required '+BX.Sale.OrderAjaxComponent.state_offer+' value="Y"><label data-for="offer_order" class="offer_pub">'+BX.message("OFFER_TEXT")+"</label></div>").appendTo($(".license_order_wrap")),asproLicenceShow&&$(document).on("click",".bx-soa .licence_block label.license",(function(){const id=$(this).data("for");$(".bx-soa .licence_block label.error").addClass("hidden"),$("input[name="+id+"]").prop("checked")?($("input[name="+id+"]").prop("checked",""),BX.Sale.OrderAjaxComponent.state_licence=""):($("input[name="+id+"]").prop("checked","checked"),BX.Sale.OrderAjaxComponent.state_licence="checked")})),asproOfferShow&&$(document).on("click",".bx-soa .offer_block label.offer_pub",(function(){const id=$(this).data("for");$(".bx-soa .offer_block label.error").addClass("hidden"),$("input[name="+id+"]").prop("checked")?($("input[name="+id+"]").prop("checked",""),BX.Sale.OrderAjaxComponent.state_licence=""):($("input[name="+id+"]").prop("checked","checked"),BX.Sale.OrderAjaxComponent.state_licence="checked")})),$(document).on("click",".lic_condition a",(function(){if(BX.hasClass(BX("bx-soa-order"),"orderform--v1"))BX.Sale.OrderAjaxComponent.isValidForm()&&BX.Sale.OrderAjaxComponent.animateScrollTo($(".licence_block, .offer_block")[0],800,50);else{const iCountErrors=BX.Sale.OrderAjaxComponent.isValidPropertiesBlock().length;BX.Sale.OrderAjaxComponent.activeSectionId&&iCountErrors||BX.Sale.OrderAjaxComponent.animateScrollTo($(".licence_block, .offer_block")[0],800,50)}}))),$("#bx-soa-orderSave, .bx-soa-cart-total-button-container").addClass("lic_condition"),void 0===BX.Sale.OrderAjaxComponent.oldClickOrderSaveAction&&void 0!==BX.Sale.OrderAjaxComponent.clickOrderSaveAction&&(BX.Sale.OrderAjaxComponent.oldClickOrderSaveAction=BX.Sale.OrderAjaxComponent.clickOrderSaveAction,BX.Sale.OrderAjaxComponent.clickOrderSaveAction=function(event){!$('input[name="licenses_order"]').prop("checked")&&!1!==asproLicenceShow||!$('input[name="offer_order"]').prop("checked")&&!1!==asproOfferShow?($('input[name="licenses_order"]').prop("checked")||$(".bx-soa .licence_block label.error").removeClass("hidden"),$('input[name="offer_order"]').prop("checked")||$(".bx-soa .offer_block label.error").removeClass("hidden")):($(".bx-soa .licence_block label.error").addClass("hidden"),$(".bx-soa .offer_block label.error").addClass("hidden"),BX.Sale.OrderAjaxComponent.isValidForm()&&("function"==typeof BX.Sale.OrderAjaxComponent.allowOrderSave&&BX.Sale.OrderAjaxComponent.allowOrderSave(),"function"==typeof BX.Sale.OrderAjaxComponent.doSaveAction?BX.Sale.OrderAjaxComponent.doSaveAction():BX.Sale.OrderAjaxComponent.oldClickOrderSaveAction(event)))},BX.Sale.OrderAjaxComponent.orderSaveBlockNode.querySelector(".checkbox")&&"object"==typeof browser&&("msie"in browser&&browser.msie?$(BX.Sale.OrderAjaxComponent.orderSaveBlockNode.querySelector(".checkbox")).remove():BX.Sale.OrderAjaxComponent.orderSaveBlockNode.querySelector(".checkbox").remove()),BX.unbindAll(BX.Sale.OrderAjaxComponent.totalInfoBlockNode.querySelector("a.btn-order-save")),BX.unbindAll(BX.Sale.OrderAjaxComponent.mobileTotalBlockNode.querySelector("a.btn-order-save")),BX.unbindAll(BX.Sale.OrderAjaxComponent.orderSaveBlockNode.querySelector("a")),BX.bind(BX.Sale.OrderAjaxComponent.totalInfoBlockNode.querySelector("a.btn-order-save"),"click",BX.proxy(BX.Sale.OrderAjaxComponent.clickOrderSaveAction,BX.Sale.OrderAjaxComponent)),BX.bind(BX.Sale.OrderAjaxComponent.mobileTotalBlockNode.querySelector("a.btn-order-save"),"click",BX.proxy(BX.Sale.OrderAjaxComponent.clickOrderSaveAction,BX.Sale.OrderAjaxComponent)),BX.bind(BX.Sale.OrderAjaxComponent.orderSaveBlockNode.querySelector("a"),"click",BX.proxy(BX.Sale.OrderAjaxComponent.clickOrderSaveAction,BX.Sale.OrderAjaxComponent)))),BX.Sale.OrderAjaxComponent.hasOwnProperty("params")&&($(".bx-soa-cart-total .change_link").attr("href",BX.Sale.OrderAjaxComponent.params.PATH_TO_BASKET),arOptimusOptions.PRICES.MIN_PRICE&&arOptimusOptions.PRICES.MIN_PRICE>Number(BX.Sale.OrderAjaxComponent.result.TOTAL.ORDER_PRICE)&&($('<div class="fademask_ext"></div>').appendTo($("body")),location.href=BX.Sale.OrderAjaxComponent.params.PATH_TO_BASKET)),$(window).scroll(),checkCounters()&&void 0===BX.Sale.OrderAjaxComponent.oldSaveOrder){var saveFunc=void 0!==BX.Sale.OrderAjaxComponent.saveOrder?"saveOrder":"saveOrderWithJson";void 0!==BX.Sale.OrderAjaxComponent[saveFunc]&&(BX.Sale.OrderAjaxComponent.oldSaveOrder=BX.Sale.OrderAjaxComponent[saveFunc],BX.Sale.OrderAjaxComponent[saveFunc]=function(result){var res=BX.parseJSON(result);res&&res.order?res.order.SHOW_AUTH?BX.Sale.OrderAjaxComponent.oldSaveOrder(result):res.order.REDIRECT_URL&&res.order.REDIRECT_URL.length&&(!res.order.ERROR||BX.util.object_keys(res.order.ERROR).length<1)&&(arMatch=res.order.REDIRECT_URL.match(/ORDER_ID\=[^&=]*/g))&&arMatch.length&&(_id=arMatch[0].replace(/ORDER_ID\=/g,"",arMatch[0]))?$.ajax({url:arOptimusOptions.SITE_DIR+"ajax/check_order.php",dataType:"json",type:"POST",data:{ID:_id},success:function(id){parseInt(id)?purchaseCounter(parseInt(id),BX.message("FULL_ORDER"),(function(d){"object"==typeof d&&void 0!==BX.localStorage&&BX.localStorage.set("gtm_e_"+_id,d,60),BX.Sale.OrderAjaxComponent.oldSaveOrder(result)})):BX.Sale.OrderAjaxComponent.oldSaveOrder(result)},error:function(){BX.Sale.OrderAjaxComponent.oldSaveOrder(result)}}):BX.Sale.OrderAjaxComponent.oldSaveOrder(result):BX.Sale.OrderAjaxComponent.oldSaveOrder(result)})}}$(".bx-ui-sls-quick-locations.quick-locations").on("click",(function(){$(this).siblings().removeClass("active"),$(this).addClass("active")}))}}}),funcDefined("basketActions")||(basketActions=function(){if(arOptimusOptions.PAGES.BASKET_PAGE){if(checkMinPrice(),void 0!==BX.Sale&&"object"==typeof BX.Sale&&void 0!==BX.Sale.BasketComponent&&"object"==typeof BX.Sale.BasketComponent&&$(document).on("click",".basket-item-actions-remove",(function(){var basketID=$(this).closest(".basket-items-list-item-container").data("id");delFromBasketCounter(BX.Sale.BasketComponent.items[basketID].PRODUCT_ID)})),location.hash){var hash=location.hash.substring(1);$("#basket_toolbar_button_"+hash).length&&$("#basket_toolbar_button_"+hash).trigger("click")}if($(".bx_sort_container").append('<div class="top_control basket_sort"><span style="display:none;" class="delete_all button grey_br transparent remove_all_basket">'+BX.message("BASKET_CLEAR_ALL_BUTTON")+"</span></div>"),$(".basket-items-list-header-filter").length){var cur_index;$(".basket-items-list-header-filter").append('<div class="top_control basket_sort"><span style="opacity:1;" class="delete_all button grey_br transparent remove_all_basket">'+BX.message("BASKET_CLEAR_ALL_BUTTON")+"</span></div>"),3==(cur_index=$(".basket-items-list-header-filter > a.active").index())&&(cur_index=2),"all"==$(".basket-items-list-header-filter > a.active").data("filter")&&(cur_index="all"),$(".basket-items-list-header-filter .top_control .delete_all").data("type",cur_index),$(".basket-items-list-header-filter > a").on("click",(function(){var index=$(this).index();3==index&&(index=2),"all"==$(this).data("filter")&&(index="all"),$(".basket-items-list-header-filter .top_control .delete_all").data("type",index)})),"Y"==arOptimusOptions.THEME.SHOW_BASKET_PRINT&&$('<span class="basket_sort"><span class="basket_print button grey_br transparent">'+BX.message("BASKET_PRINT_BUTTON")+"</span></span>").insertAfter($("#pagetitle"))}else{"Y"==arOptimusOptions.THEME.SHOW_BASKET_PRINT&&$(".bx_sort_container .top_control").prepend('<span class="basket_print button grey_br transparent">'+BX.message("BASKET_PRINT_BUTTON")+"</span>");var cur_index=$(".bx_sort_container a.current").index();$(".bx_sort_container .top_control .delete_all").data("type",cur_index),$(".bx_ordercart > div:eq("+cur_index+") table tbody tr td.item").length&&$(".bx_sort_container .top_control .delete_all").css("display","block"),$(".bx_ordercart .bx_ordercart_coupon #coupon").wrap('<div class="input"></div>'),$(".bx_sort_container > a").on("click",(function(){var index=$(this).index();$(".bx_sort_container .top_control .delete_all").data("type",index),$(".bx_ordercart > div:eq("+index+") table tbody tr td.item").length?$(".bx_sort_container .top_control .delete_all").css("display","block"):$(".bx_sort_container .top_control .delete_all").css("display","none")}))}$(".basket_print").on("click",(function(){window.print()})),$(".delete_all").on("click",(function(){if("N"!==arOptimusOptions.COUNTERS.USE_BASKET_GOALS){var eventdata={goal:"goal_basket_clear",params:{type:$(this).data("type")}};BX.onCustomEvent("onCounterGoals",[eventdata])}$.post(arOptimusOptions.SITE_DIR+"ajax/action_basket.php","TYPE="+$(this).data("type")+"&CLEAR_ALL=Y",$.proxy((function(data){location.reload()})))})),$(".bx_item_list_section .bx_catalog_item").sliceHeight({row:".bx_item_list_slide",item:".bx_catalog_item"}),$(document).on("click",".bx_ordercart_order_pay_center .checkout, .basket-checkout-section-inner .basket-btn-checkout",(function(){checkCounters("google")&&checkoutCounter(1,"start order")})),BX.addCustomEvent("onAjaxSuccess",(function(){checkMinPrice();var errorText=$.trim($("#warning_message").text());$("#basket_items_list .error_text").detach(),""!=errorText&&($("#warning_message").hide().text(""),$("#basket_items_list").prepend('<div class="error_text">'+errorText+"</div>"))}))}}),funcDefined("checkMinPrice")||(checkMinPrice=function(){if(arOptimusOptions.PAGES.BASKET_PAGE){var summ_raw=0,summ=0;if($("#allSum_FORMATED").length){if(summ_raw=$("#allSum_FORMATED").text().replace(/[^0-9\.,]/g,""),summ=parseFloat(summ_raw),$("#basket_items").length){var summ=0;$("#basket_items tr").each((function(){void 0!==$(this).data("item-price")&&$(this).data("item-price")&&(summ+=$(this).data("item-price")*$(this).find("#QUANTITY_INPUT_"+$(this).attr("id")).val())}))}$(".catalog_back").length||$(".bx_ordercart_order_pay_center").prepend('<a href="'+arOptimusOptions.PAGES.CATALOG_PAGE_URL+'" class="catalog_back button transparent big_btn grey_br">'+BX.message("BASKET_CONTINUE_BUTTON")+"</a>")}"Y"==arOptimusOptions.THEME.SHOW_ONECLICKBUY_ON_BASKET_PAGE&&$(".basket-coupon-section").addClass("smallest"),void 0!==BX.Sale&&void 0!==BX.Sale.BasketComponent&&"result"in BX.Sale.BasketComponent&&(summ=BX.Sale.BasketComponent.result.allSum),arOptimusOptions.PRICES.MIN_PRICE?arOptimusOptions.PRICES.MIN_PRICE>summ?($(".oneclickbuy.fast_order").length&&$(".oneclickbuy.fast_order").remove(),$(".basket-checkout-container").length?$(".icon_error_wrapper").length||$(".basket-checkout-block.basket-checkout-block-btn").html('<div class="icon_error_wrapper"><div class="icon_error_block">'+BX.message("MIN_ORDER_PRICE_TEXT").replace("#PRICE#",jsPriceFormat(arOptimusOptions.PRICES.MIN_PRICE))+"</div></div>"):($(".icon_error_wrapper").length||$(".bx_ordercart_order_pay_center").prepend('<div class="icon_error_wrapper"><div class="icon_error_block">'+BX.message("MIN_ORDER_PRICE_TEXT").replace("#PRICE#",jsPriceFormat(arOptimusOptions.PRICES.MIN_PRICE))+"</div></div>"),$(".bx_ordercart_order_pay .checkout").length&&$(".bx_ordercart_order_pay .checkout").remove())):($(".icon_error_wrapper").length&&$(".icon_error_wrapper").remove(),$(".basket-checkout-container").length?$(".oneclickbuy.fast_order").length||"Y"!=arOptimusOptions.THEME.SHOW_ONECLICKBUY_ON_BASKET_PAGE||$(".basket-btn-checkout.disabled").length||$(".basket-checkout-section-inner").append('<div class="fastorder"><span class="oneclickbuy button big_btn fast_order" onclick="oneClickBuyBasket()">'+BX.message("BASKET_QUICK_ORDER_BUTTON")+"</span></div>"):($(".bx_ordercart_order_pay .checkout").length?$(".bx_ordercart .bx_ordercart_order_pay .checkout").css("opacity","1"):$(".bx_ordercart_order_pay_center").append('<a href="javascript:void(0)" onclick="checkOut();" class="checkout" style="opacity: 1;">'+BX.message("BASKET_ORDER_BUTTON")+"</a>"),$(".oneclickbuy.fast_order").length||"Y"!=arOptimusOptions.THEME.SHOW_ONECLICKBUY_ON_BASKET_PAGE||$(".bx_ordercart_order_pay_center").append('<span class="oneclickbuy button big_btn fast_order" onclick="oneClickBuyBasket()">'+BX.message("BASKET_QUICK_ORDER_BUTTON")+"</span>"))):$(".basket-checkout-container").length?$(".oneclickbuy.fast_order").length||"Y"!=arOptimusOptions.THEME.SHOW_ONECLICKBUY_ON_BASKET_PAGE||$(".basket-btn-checkout.disabled").length||$(".basket-checkout-section-inner").append('<div class="fastorder"><span class="oneclickbuy button big_btn fast_order" onclick="oneClickBuyBasket()">'+BX.message("BASKET_QUICK_ORDER_BUTTON")+"</span></div>"):($(".bx_ordercart .bx_ordercart_order_pay .checkout").css("opacity","1"),$(".oneclickbuy.fast_order").length||"Y"!=arOptimusOptions.THEME.SHOW_ONECLICKBUY_ON_BASKET_PAGE||$(".bx_ordercart_order_pay_center").append('<span class="oneclickbuy button big_btn fast_order" onclick="oneClickBuyBasket()">'+BX.message("BASKET_QUICK_ORDER_BUTTON")+"</span>")),$("#basket-root .basket-checkout-container").addClass("visible")}});var isFrameDataReceived=!1;void 0!==window.frameCacheVars?BX.addCustomEvent("onFrameDataReceived",(function(json){initFull(),isFrameDataReceived=!0})):$(document).ready(initFull),funcDefined("setHeightBlockSlider")||(setHeightBlockSlider=function(){var sliderWidth=$(document).find(".specials.tab_slider_wrapp").outerWidth();$(document).find(".specials.tab_slider_wrapp .tabs_content > li.cur").css("height",""),$(document).find(".specials.tab_slider_wrapp .tabs_content .tab.cur .tabs_slider .buttons_block").hide(),$(document).find(".specials.tab_slider_wrapp .tabs_content > li.cur").equalize({children:".item-title"}),$(document).find(".specials.tab_slider_wrapp .tabs_content > li.cur").equalize({children:".item_info"}),$(document).find(".specials.tab_slider_wrapp .tabs_content > li.cur").equalize({children:".catalog_item"});var itemsButtonsHeight=$(document).find(".specials.tab_slider_wrapp .tabs_content .tab.cur .tabs_slider li .buttons_block").height(),tabsContentUnhover=1*$(document).find(".specials.tab_slider_wrapp .tabs_content .tab.cur").height(),tabsContentHover=tabsContentUnhover+itemsButtonsHeight+50;$(document).find(".specials.tab_slider_wrapp .tabs_content .tab.cur").attr("data-unhover",tabsContentUnhover),$(document).find(".specials.tab_slider_wrapp .tabs_content .tab.cur").attr("data-hover",tabsContentHover),$(document).find(".specials.tab_slider_wrapp .tabs_content").height(tabsContentUnhover),$(document).find(".specials.tab_slider_wrapp .tabs_content .tabs_slider").each((function(index,el){const height=$(this).find(".catalog_item").height();$(el).attr("data-height",height)}))}),funcDefined("checkStickyFooter")||(checkStickyFooter=function(){try{ignoreResize.push(!0),$("#content").css("min-height","");var contentTop=0;$("#content").length&&(contentTop=$("#content").offset().top);var contentBottom=contentTop+$("#content").outerHeight(),footerTop=0;$("footer").length&&(footerTop=$("footer").offset().top),$("#content").css("min-height",$(window).height()-contentTop-(footerTop-contentBottom)-$("footer").outerHeight()+"px"),ignoreResize.pop()}catch(e){console.error(e)}});var timerResize=!1,ignoreResize=[];$(window).resize((function(){$("html.print").length||checkStickyFooter(),ignoreResize.length||(timerResize&&(clearTimeout(timerResize),timerResize=!1),timerResize=setTimeout((function(){BX.onCustomEvent("onWindowResize",!1)}),50))}));var timerScroll=!1,ignoreScroll=[],documentScrollTopLast=$(document).scrollTop();$(window).scroll((function(){documentScrollTopLast=$(document).scrollTop(),ignoreScroll.length||(timerScroll&&(clearTimeout(timerScroll),timerScroll=!1),timerScroll=setTimeout((function(){BX.onCustomEvent("onWindowScroll",!1)}),50))})),BX.addCustomEvent("onWindowResize",(function(eventdata){try{ignoreResize.push(!0),checkScrollToTop(),checkCaptchaWidth(),checkFormWidth(),checkFormControlWidth(),touchMenu("ul.menu:not(.opened) > li.menu_item_l1"),touchBasket(".cart:not(.empty_cart) .basket_block .link"),CheckObjectsSizes(),funcDefined("checkMobileFilter")&&checkMobileFilter(),CheckFlexSlider(),initSly(),window.matchMedia("(min-width: 767px)").matches&&$(".wrapper_middle_menu.wrap_menu").removeClass("mobile"),window.matchMedia("(max-width: 767px)").matches&&$(".wrapper_middle_menu.wrap_menu").addClass("mobile"),$(window).outerWidth()>600?($("#header ul.menu").removeClass("opened").css("display",""),$(".authorization-cols").length&&($(".authorization-cols").equalize({children:".col .auth-title",reset:!0}),$(".authorization-cols").equalize({children:".col .form-block",reset:!0}))):($(".authorization-cols .auth-title").css("height",""),$(".authorization-cols .form-block").css("height","")),$("#basket_form").length&&$(window).outerWidth()<=600&&$("#basket_form .tabs_content.basket > li.cur td").each((function(){$(this).css("width","")})),$(".front_slider_wrapp").length&&$(".extended_pagination li i").each((function(){$(this).css({borderBottomWidth:$(this).parent("li").outerHeight()/2,borderTopWidth:$(this).parent("li").outerHeight()/2})})),setHeightCompany(),$(".bx_filter_section .bx_filter_select_container").each((function(){var prop_id=$(this).closest(".bx_filter_parameters_box").attr("property_id");$("#smartFilterDropDown"+prop_id).length&&$("#smartFilterDropDown"+prop_id).css("max-width",$(this).width())})),setTimeout((function(){checkVerticalMobileFilter()}),100)}catch(e){}finally{ignoreResize.pop()}})),BX.addCustomEvent("onWindowScroll",(function(eventdata){try{ignoreScroll.push(!0)}catch(e){}finally{ignoreScroll.pop()}})),BX.addCustomEvent("onSlideInit",(function(eventdata){try{if(ignoreResize.push(!0),eventdata){var slider=eventdata.slider;slider&&slider.hasClass("viewed")&&($(".viewed_block .rows_block .item .item-title").sliceHeight({outer:!0,slice:8,autoslicecount:!1}),$(".viewed_block .rows_block .item").sliceHeight({slice:8,autoslicecount:!1}))}}catch(e){}finally{ignoreResize.pop()}})),BX.addCustomEvent("onCounterGoals",(function(eventdata){if("Y"===arOptimusOptions.COUNTERS.USE_YA_COUNTER){var idCounter=arOptimusOptions.COUNTERS.YA_COUNTER_ID;if(idCounter=parseInt(idCounter),"object"!=typeof eventdata&&(eventdata={goal:"undefined"}),"string"!=typeof eventdata.goal&&(eventdata.goal="undefined"),idCounter)try{waitCounter(idCounter,50,(function(){var obCounter=window["yaCounter"+idCounter];"object"==typeof obCounter&&obCounter.reachGoal(eventdata.goal)}))}catch(e){console.error(e)}else console.info("Bad counter id!",idCounter)}}));var onCaptchaVerifyinvisible=function(response){$(".g-recaptcha:last").each((function(){var id;void 0!==$(this).attr("data-widgetid")&&response&&($(this).closest("form").find(".g-recaptcha-response").val()||$(this).closest("form").find(".g-recaptcha-response").val(response),$("iframe[src*=recaptcha]").length&&$("iframe[src*=recaptcha]").each((function(){var block=$(this).parent().parent();block.hasClass("grecaptcha-badge")||block.remove()})),$(this).closest("form").submit())}))},onCaptchaVerifynormal=function(response){$(".g-recaptcha").each((function(){var id=$(this).attr("data-widgetid");void 0!==id&&""!=grecaptcha.getResponse(id)&&$(this).closest("form").find(".recaptcha").valid()}))};if(BX.addCustomEvent("onSubmitForm",(function(eventdata){try{return window.renderRecaptchaById&&window.asproRecaptcha&&window.asproRecaptcha.key?("invisible"==window.asproRecaptcha.params.recaptchaSize&&"undefined"!=typeof grecaptcha?$(eventdata.form).find(".g-recaptcha-response").val()?(eventdata.form.submit(),$(eventdata.form).closest(".form").addClass("sending")):grecaptcha.execute($(eventdata.form).find(".g-recaptcha").data("widgetid")):(eventdata.form.submit(),$(eventdata.form).closest(".form").addClass("sending")),!0):(eventdata.form.submit(),$(eventdata.form).closest(".form").addClass("sending"),!0)}catch(e){return console.error(e),!0}})),$(document).ready((function(){var $mobilefilter=$("#mobilefilter"),$mobileMenu=$("#mobilemenu, #mobileheadersimple");if($mobilefilter.length&&window.matchMedia("(max-width: 768px)").matches){$mobilefilter.isOpen=$mobileMenu.hasClass("show"),$mobilefilter.isAppendLeft=!1,$mobilefilter.isWrapFilter=!1,$mobilefilter.isHorizontalOrCompact=$(".filter_horizontal").length||$(".bx_filter_vertical.compact").length,$mobilefilter.close='<i class="svg svg-close close-icons"></i>',$(document).on("click",".filter_opener",(function(){OpenMobileFilter()})),$(document).on("click","#mobilefilter .svg-close.close-icons",(function(){CloseMobileFilter()})),$(document).on("click",".bx_filter_select_block",(function(e){var bx_filter_select_container=$(e.target).parents(".bx_filter_select_container");if(bx_filter_select_container.length){var prop_id=bx_filter_select_container.closest(".bx_filter_parameters_box").attr("data-property_id");$("#smartFilterDropDown"+prop_id).length&&$("#smartFilterDropDown"+prop_id).css({"max-width":bx_filter_select_container.width(),"z-index":"3020"})}})),$(document).on("mouseup",".bx_filter_section",(function(e){$(e.target).hasClass("bx_filter_search_button")&&CloseMobileFilter()})),$(document).on("mouseup",".bx_filter_parameters_box_title",(function(e){$("[id^='smartFilterDropDown']").hide(),$(e.target).hasClass("close-icons")&&CloseMobileFilter()})),$mobilefilter.parent().append('<div id="mobilefilter-overlay"></div>');var $mobilefilterOverlay=$("#mobilefilter-overlay");$mobilefilterOverlay.click((function(){$mobilefilter.isOpen&&CloseMobileFilter()})),mobileFilterNum=function(num,def){if(def)$(".bx_filter_search_button").val(num.data("f"));else{var str="",$prosLeng=$(".bx_filter_parameters_box > span");str+=$prosLeng.data("f")+" "+num+" "+declOfNumFilter(num,[$prosLeng.data("fi"),$prosLeng.data("fr"),$prosLeng.data("frm")]),$(".bx_filter_search_button").val(str)}},declOfNumFilter=function(number,titles){return cases=[2,0,1,1,1,2],titles[number%100>4&&number%100<20?2:cases[number%10<5?number%10:5]]},OpenMobileFilter=function(){var init;$mobilefilter.isOpen||($mobilefilter.isAppendLeft||($mobilefilter.isWrapFilter||($(".bx_filter").wrap("<div id='wrapInlineFilter'></div>"),$mobilefilter.isWrapFilter=!0),$(".bx_filter").css("top",""),$(".bx_filter").appendTo($("#mobilefilter")).find(".title .bx_filter_parameters_box_title").append($mobilefilter.close),$mobilefilter.isAppendLeft=!0),setTimeout((function(){$mobilefilterOverlay.fadeIn("fast")}),100),$("body").css({"overflow-y":"hidden"}),$mobilefilter.addClass("show"),$mobilefilter.find(".bx_filter").css({display:"block"}),$mobilefilter.isOpen=!0,void 0===$mobilefilter.data("init")&&($mobilefilter.scroll((function(){$(".bx_filter_section .bx_filter_select_container").each((function(){var prop_id=$(this).closest(".bx_filter_parameters_box").attr("data-property_id");$("#smartFilterDropDown"+prop_id).length&&$("#smartFilterDropDown"+prop_id).hide()}))})),$mobilefilter.data("init","Y")))},CloseMobileFilter=function(append){$(".bx_filter").css("display",""),$mobilefilter.isOpen&&($mobilefilter.find(".bx_filter_parameters").scrollTop(0),$("body").css({"overflow-y":"auto"}),setTimeout((function(){$mobilefilterOverlay.fadeOut("fast")}),100),$mobilefilter.removeClass("show"),$mobilefilter.isOpen=!1),append&&$mobilefilter.isAppendLeft&&($(".bx_filter").appendTo($("#wrapInlineFilter")).show().find(".svg-close").remove(),$mobilefilter.isAppendLeft=!1,$mobilefilter.removeData("init"),mobileFilterNum($("#modef_num_mobile"),!0))},checkMobileFilter=function(){(!window.matchMedia("(max-width: 991px)").matches&&!$mobilefilter.isHorizontalOrCompact||!window.matchMedia("(max-width: 767px)").matches&&$mobilefilter.isHorizontalOrCompact)&&CloseMobileFilter(!0)}}else checkVerticalMobileFilter(),$(document).on("click",".filter_opener",(function(){$(this).toggleClass("opened"),$(".visible_mobile_filter").length?($(".visible_mobile_filter").show(),$(".bx_filter_vertical, .bx_filter").slideToggle(333)):($(".bx_filter_vertical").closest("div[id^=bx_incl]").show(),$(".bx_filter_vertical, .bx_filter").slideToggle(333))}))})),InitScrollBar=function(el,initOptions){var block=$(".scrollbar:not(.mobile-scroll)");if(void 0!==el&&(block=el),block.length){var options,defaults={mouseWheel:{scrollAmount:150,preventDefault:!0}},config=$.extend({},defaults,void 0,block.data("plugin-options"),initOptions);config.callbacks={onScroll:function(){$(this).find(".mCSB_buttonLeft").hasClass("disabled")&&$(this).find(".mCSB_buttonLeft").removeClass("disabled"),$(this).find(".mCSB_buttonRight").hasClass("disabled")&&$(this).find(".mCSB_buttonRight").removeClass("disabled")},onTotalScrollBack:function(){$(this).find(".mCSB_buttonLeft").addClass("disabled")},onTotalScroll:function(){$(this).find(".mCSB_buttonRight").addClass("disabled")},onInit:function(){$(this).find(".mCSB_buttonLeft").addClass("disabled")}},block.mCustomScrollbar(config)}},AjaxClickLink=function(e){var _this="",container=$("#right_block_ajax .inner_wrapper"),container_inner=container.find(".ajax_load"),dopAction="";if(url="","preventDefault"in e?(e.preventDefault(),_this=$(e.target).hasClass("js-load-link")?$(e.target):$(e.target).closest(".js-load-link")):(_this=$(e),dopAction="Y"),container.length){var objUrl=parseUrlQuery(),obGetData={ajax_get_filter:"Y",control_ajax:"Y",bitrix_include_areas:"N"};"clear_cache"in objUrl&&"Y"==objUrl.clear_cache&&(obGetData.clear_cache="Y"),container_inner.length?container_inner.addClass("loading-state"):container.addClass("loading-state"),_this.data("url")&&(url=_this.data("url")),dopAction&&(BX.PopupWindowManager.getCurrentPopup().close(),$(".bx_filter_select_popup ul li .sort_btn").removeClass("current"),_this.addClass("current"),_this.closest(".bx_filter_block").find(".bx_filter_select_text").text(_this.text())),$(".bx_filter .bx_sort_filter .bx_filter_select_text").text(_this.text()),$(".bx_filter .bx_sort_filter .bx_filter_select_popup ul li span.current").removeClass("current"),$(".bx_filter .bx_sort_filter .bx_filter_select_popup ul li").eq(_this.parent().index()).find("span").addClass("current"),$.ajax({url:url,data:obGetData,success:function(html){container.html(html),container_inner.length?container_inner.removeClass("loading-state"):container.removeClass("loading-state");var eventdata={action:"jsLoadBlock"};BX.onCustomEvent("onCompleteAction",[eventdata,_this]),initCountdown(),InitScrollBar()}})}},!funcDefined("throttle"))function throttle(func,wait,debounce){var timeout;return function(){var context=this,args=arguments,throttler=function(){timeout=null,func.apply(context,args)};debounce&&clearTimeout(timeout),!debounce&&timeout||(timeout=setTimeout(throttler,wait))}}$((function(){BX.addCustomEvent("onCompleteAction",(function(eventdata,_this){try{if("loadForm"===eventdata.action)$(_this).parent().removeClass("loadings"),$(_this).removeClass("clicked"),$(_this).hasClass("one_click_buy_trigger")?($(".wrapp_one_click > span").removeClass("clicked"),$(".one_click").removeClass("clicked")):$(_this).hasClass("one_click_buy_basket_trigger")&&$(".fast_order").removeClass("clicked");else if("loadActualBasket"===eventdata.action){const basketCount=Object.keys(arBasketAspro.BASKET).length,wishCount=Object.keys(arBasketAspro.DELAY).length,compareCount=Object.keys(arBasketAspro.COMPARE).length;wishCount>0?($(".basket-link.delay .count").removeClass("hidden"),$(".basket-link.delay").removeClass("no-items")):($(".basket-link.delay .count").addClass("hidden"),$(".basket-link.delay").addClass("no-items")),basketCount>0?($(".basket-link.basket .count").removeClass("hidden"),$(".basket-link.basket").removeClass("no-items")):($(".basket-link.basket .count").addClass("hidden"),$(".basket-link.basket").addClass("no-items")),compareCount>0?($(".basket-link.compare .count").length||$(".basket-link.compare .wraps_icon_block").append($('<div class="count"><span><div class="items"><a href="'+$(".basket-link.compare .link").attr("href")+'">'+compareCount+"</a></div></span></div>")),$(".basket-link.compare .count").removeClass("hidden"),$(".basket-link.compare").removeClass("no-items")):($(".basket-link.compare .count").addClass("hidden"),$(".basket-link.compare").addClass("no-items")),$(".basket-link.basket .count .text").text(basketCount),$(".basket-link.delay .count .text").text(wishCount),$(".basket-link.compare .count a, .basket-link.comapre > .link").text(compareCount)}}catch(e){console.error(e)}})),checkHeaderFixed(),$(".menu-block.mobile .title").on("click",(function(){const $menuWrapper=$(".menu-block.mobile"),$menuBlock=$(".menu-block.mobile .navs");$menuWrapper.toggleClass("opened"),$menuBlock.toggleClass("opened"),$menuWrapper.hasClass("opened")?$menuBlock.slideDown():$menuBlock.slideUp()}))}));const checkHeaderFixed=function(){const isMobile=jQuery.browser.mobile||window.matchMedia("(max-width: 991px)").matches,mfixed=$("#headerfixed_mobile"),menu=$("header .main-nav");var startScroll=0,$mobileHeaderFixedNlo=mfixed.find("[data-nlo]"),isMobileNloLoaded=!$mobileHeaderFixedNlo.length,OnMobileHeaderFixedScrollHandler,header_fixed=$("#headerfixed");if(header=$("header").first(),header_fixed.length&&header.length){var isHeaderFixed=!1,isTabsFixed=!1,headerCanFix=!0,headerFixedHeight=header_fixed.actual("outerHeight"),headerNormalHeight=header.actual("outerHeight"),headerDiffHeight=headerNormalHeight-headerFixedHeight,mobileBtnMenu=$(".btn.btn-responsive-nav"),headerTop=$("#panel:visible").actual("outerHeight");topBlock=$(".TOP_HEADER").first();var $headerFixedNlo=header_fixed.find("[data-nlo]"),isNloLoaded=!$headerFixedNlo.length,OnHeaderFixedScrollHandler;headerDiffHeight<=0&&(headerDiffHeight=0),topBlock.length&&(headerTop+=topBlock.actual("outerHeight")),$(window).scroll(OnHeaderFixedScrollHandler=function(){var tabs_fixed=$(".product-item-detail-tabs-container-fixed");if(window.matchMedia("(min-width:992px)").matches){var scrollTop=$(window).scrollTop();headerCanFix=!mobileBtnMenu.is(":visible");var tabs_offset=$(".tabs_section .tabs1").offset(),current_is=$(".search-wrapper .search-input:visible"),title_search_result=$(".title-search-result."+current_is.attr("id")),pos,pos_input;isHeaderFixed?!isHeaderFixed&&headerCanFix||(scrollTop<=headerDiffHeight+headerTop||!headerCanFix)&&(isHeaderFixed=!1,header_fixed.removeClass("fixed"),$(".title-search-result.title-search-input2_fixed").css("display","none")):scrollTop>headerNormalHeight+headerTop&&headerCanFix&&(isNloLoaded?(isHeaderFixed=!0,header_fixed.addClass("fixed"),$("nav.mega-menu.sliced").length&&$("nav.mega-menu.sliced").removeClass("initied")):$headerFixedNlo.hasClass("nlo-loadings")||($headerFixedNlo.addClass("nlo-loadings"),setTimeout((function(){$.ajax({data:{nlo:$headerFixedNlo.attr("data-nlo")},success:function(response){pauseYmObserver(),isNloLoaded=!0,$headerFixedNlo[0].insertAdjacentHTML("beforebegin",$.trim(response)),$headerFixedNlo.remove(),OnHeaderFixedScrollHandler(),setTimeout(resumeYmObserver,400)},error:function(){$headerFixedNlo.removeClass("nlo-loadings")}})}),300))),tabs_fixed.length&&(scrollTop+headerFixedHeight>tabs_offset.top?(tabs_fixed.css({top:header_fixed.actual("outerHeight")}),tabs_fixed.addClass("fixed")):tabs_fixed.hasClass("fixed")&&(tabs_fixed.removeAttr("style"),tabs_fixed.removeClass("fixed")))}})}if(mfixed.length&&isMobile){var isMHeaderFixed=!1,mheaderCanFix=!0,mheaderFixedHeight=mfixed.actual("outerHeight"),mheaderNormalHeight,mheaderDiffHeight=header.actual("outerHeight")+menu.actual("outerHeight")-mheaderFixedHeight,mheaderTop=$("#panel:visible").actual("outerHeight");headerDiffHeight<=0&&(headerDiffHeight=0),$(window).scroll(OnMobileHeaderFixedScrollHandler=function(){var scrollTop=$(window).scrollTop();window.matchMedia("(max-width:991px)").matches?isMHeaderFixed?isMHeaderFixed&&scrollTop<=mheaderDiffHeight+mheaderTop&&(isMHeaderFixed=!1,mfixed.removeClass("fixed"),$("#headerfixed_mobile .menu.adaptive, #headerfixed_mobile .menu.full").removeClass("opened"),$("#headerfixed_mobile .menu.full").css("display","none")):scrollTop>mheaderDiffHeight+mheaderTop&&(isMobileNloLoaded?(isMHeaderFixed=!0,mfixed.addClass("fixed")):$mobileHeaderFixedNlo.hasClass("nlo-loadings")||($mobileHeaderFixedNlo.addClass("nlo-loadings"),setTimeout((function(){$.ajax({data:{nlo:$mobileHeaderFixedNlo.attr("data-nlo")},success:function(response){pauseYmObserver(),isMobileNloLoaded=!0,$mobileHeaderFixedNlo[0].insertAdjacentHTML("beforebegin",$.trim(response)),$mobileHeaderFixedNlo.remove(),OnMobileHeaderFixedScrollHandler(),setTimeout(resumeYmObserver,400)},error:function(){$mobileHeaderFixedNlo.removeClass("nlo-loadings")}})}),300))):mfixed.removeClass("fixed")})}};
//# sourceMappingURL=main.min.js.map100  222675|/aspro.optimus/install/wizards/aspro/optimus/site/templates/aspro_optimus/js/main.js|d797000fvar basketTimeoutSlide;
var resizeEventTimer;

var funcDefined = function (func) {
  try {
    if (typeof func == "function") {
      return true;
    } else {
      return typeof window[func] === "function";
    }
  } catch (e) {
    return false;
  }
};

if (!funcDefined("setLocationSKU")) {
  function setLocationSKU(ID, offerID) {
    if (offerID === undefined) offerID = "oid";
    if (offerID) {
      var objUrl = parseUrlQuery(),
        j = 0,
        prefix = "",
        query_string = "",
        url = "";
      objUrl[offerID] = ID;
      for (var i in objUrl) {
        if (parseInt(j) > 0) {
          prefix = "&";
        }
        query_string += prefix + i + "=" + objUrl[i];
        j++;
      }
      if (query_string) {
        url = location.pathname + "?" + query_string;
      }
      try {
        history.replaceState(null, null, url);
        return;
      } catch (e) {}
      location.hash = "#" + url.substr(1);
    }
  }
}

/*sku change props*/
if (!("SelectOfferProp" in window) && typeof window.SelectOfferProp != "function") {
  SelectOfferProp = function () {
    // return false;
    var _this = $(this),
      obParams = {},
      obSelect = {},
      objUrl = parseUrlQuery(),
      add_url = "",
      selectMode = !_this.hasClass("item") ? true : false,
      container = _this.closest(".bx_catalog_item_scu"),
      img = _this.closest(".item-parent").find(".thumb img");

    /* request params */
    obParams = {
      PARAMS: _this.closest(".js-wrapper-block").data("params"),
      ID: container.data("offer_id"),
      SITE_ID: container.data("site_id"),
      LINK_ID: container.data("id") + "_" + _this.closest(".cur").data("code"),
      IBLOCK_ID: container.data("offer_iblockid"),
      PROPERTY_ID: container.data("propertyid"),
      DEPTH: _this.closest(".item_wrapper").index(),
      VALUE: selectMode ? _this.find("option:selected").data("onevalue") : _this.data("onevalue"),
      CLASS: "inner_content",
      PICTURE: img.data("src") ? img.data("src") : img.attr("src"),
      ARTICLE_NAME: _this.closest(".item_wrapper").find(".article_block").data("name"),
      ARTICLE_VALUE: _this.closest(".item_wrapper").find(".article_block").data("value"),
    };
    /**/

    if ("clear_cache" in objUrl) {
      if (objUrl.clear_cache == "Y") add_url += "?clear_cache=Y";
    }

    /* save selected values */
    for (i = 0; i < obParams.DEPTH + 1; i++) {
      strName = "PROP_" + container.find(".item_wrapper:eq(" + i + ") > div").data("id");
      if (container.find(".item_wrapper:eq(" + i + ") select").length) {
        obSelect[strName] = container.find(".item_wrapper:eq(" + i + ") select option:selected").data("onevalue");
        obParams[strName] = container.find(".item_wrapper:eq(" + i + ") select option:selected").data("onevalue");

        if (container.find(".item_wrapper:eq(" + i + ") select option:selected").attr("title")) {
          _this
            .closest(".item_wrapper")
            .find(".show_class")
            .text(container.find(".item_wrapper:eq(" + i + ") select option:selected").attr("title"));
        }
      } else {
        obSelect[strName] = container.find(".item_wrapper:eq(" + i + ") li.item.active").data("onevalue");
        obParams[strName] = container.find(".item_wrapper:eq(" + i + ") li.item.active").data("onevalue");
      }
    }
    // obParams.SELECTED = JSON.stringify(obSelect);
    /**/

    if (!selectMode) {
      _this.siblings().removeClass("active");
      _this.addClass("active");
    }

    if (_this.attr("title")) {
      var skuVal = _this.attr("title"); //.split(':')[1];
      _this.closest(".item_wrapper").find(".show_class").text(skuVal);
    } else {
      var img_row = _this.find(" > i");
      if (img_row.length && img_row.attr("title")) {
        var skuVal = img_row.attr("title"); //.split(':')[1];
        _this.closest(".item_wrapper").find(".show_class").text(skuVal);
      }
    }

    /* get sku */
    $.ajax({
      url: arOptimusOptions["SITE_DIR"] + "ajax/js_item_detail.php" + add_url,
      type: "POST",
      data: obParams,
    }).success(function (html) {
      var ob = BX.processHTML(html);
      BX.ajax.processScripts(ob.SCRIPT);
      if (funcDefined("sliceItemBlock")) {
        sliceItemBlock({ resize: false });
      }

      if ($(".counter_wrapp.list")) {
        $(".counter_wrapp.list .counter_block.big").removeClass("big");
      }
    });
  };
  $(document).on("click", ".ajax_load .bx_catalog_item_scu li.item:not(.active)", SelectOfferProp);
  $(document).on("change", ".ajax_load .bx_catalog_item_scu select", SelectOfferProp);
}

if (!funcDefined("trimPrice")) {
  var trimPrice = function trimPrice(s) {
    s = s.split(" ").join("");
    s = s.split("&nbsp;").join("");
    return s;
  };
}

if (!funcDefined("markProductRemoveBasket")) {
  var markProductRemoveBasket = function markProductRemoveBasket(id) {
    $(".in-cart[data-item=" + id + "]").hide();
    $(".to-cart[data-item=" + id + "]").show();
    $(".to-cart[data-item=" + id + "]")
      .closest(".button_block")
      .removeClass("wide");
    $(".to-cart[data-item=" + id + "]")
      .closest(".counter_wrapp")
      .find(".counter_block")
      .show();
    $(".counter_block[data-item=" + id + "]").show();
    $(".in-subscribe[data-item=" + id + "]").hide();
    $(".to-subscribe[data-item=" + id + "]").show();
    $(".wish_item[data-item=" + id + "]").removeClass("added");
    $(".wish_item[data-item=" + id + "] .value:not(.added)").show();
    $(".wish_item[data-item=" + id + "] .value.added").hide();
  };
}

if (!funcDefined("markProductAddBasket")) {
  var markProductAddBasket = function markProductAddBasket(id) {
    $(".to-cart[data-item=" + id + "]").hide();
    $(".to-cart[data-item=" + id + "]")
      .closest(".counter_wrapp")
      .find(".counter_block")
      .hide();
    $(".to-cart[data-item=" + id + "]")
      .closest(".button_block")
      .addClass("wide");
    $(".in-cart[data-item=" + id + "]").show();
    $(".wish_item[data-item=" + id + "]").removeClass("added");
    $(".wish_item[data-item=" + id + "] .value:not(.added)").show();
    $(".wish_item[data-item=" + id + "] .value.added").hide();
  };
}

if (!funcDefined("markProductDelay")) {
  var markProductDelay = function markProductDelay(id) {
    $(".in-cart[data-item=" + id + "]").hide();
    $(".to-cart[data-item=" + id + "]").show();
    $(".to-cart[data-item=" + id + "]")
      .closest(".counter_wrapp")
      .find(".counter_block")
      .show();
    $(".to-cart[data-item=" + id + "]")
      .closest(".button_block")
      .removeClass("wide");
    $(".wish_item[data-item=" + id + "]").addClass("added");
    $(".wish_item[data-item=" + id + "] .value:not(.added)").hide();
    // $('.wish_item[data-item='+id+'] .value.added').show();
    $(".wish_item[data-item=" + id + "] .value.added").css("display", "block");
  };
}

if (!funcDefined("markProductSubscribe")) {
  var markProductSubscribe = function markProductSubscribe(id) {
    $(".to-subscribe[data-item=" + id + "]").hide();
    $(".in-subscribe[data-item=" + id + "]").css("display", "block");
  };
}

if (!funcDefined("basketFly")) {
  var basketFly = function basketFly(action) {
    if (typeof obOptimusPredictions === "object") {
      obOptimusPredictions.updateAll();
    }

    $.post(
      arOptimusOptions["SITE_DIR"] + "ajax/basket_fly.php",
      "PARAMS=" + $("#basket_form").find("input#fly_basket_params").val(),
      $.proxy(function (data) {
        var small = $(".opener .basket_count").hasClass("small"),
          basket_count = $(data).find(".basket_count").find(".items div").text();
        $("#basket_line .basket_fly").addClass("loaded").html(data);

        if (action == "refresh") {
          $("li[data-type=AnDelCanBuy]").trigger("click");
        }

        if (window.matchMedia("(min-width: 769px)").matches) {
          if (action == "open") {
            if (small) {
              if (arOptimusOptions["THEME"]["SHOW_BASKET_ONADDTOCART"] !== "N") {
                $(".opener .basket_count").click();
              }
            } else {
              $(".opener .basket_count").removeClass("small");
              $('.tabs_content.basket li[item-section="AnDelCanBuy"]').addClass("cur");
              $('#basket_line ul.tabs li[item-section="AnDelCanBuy"]').addClass("cur");
            }
          } else if (action == "wish") {
            if (small) {
              if (arOptimusOptions["THEME"]["SHOW_BASKET_ONADDTOCART"] !== "N") {
                $(".opener .wish_count").click();
              }
            } else {
              $(".opener .wish_count").removeClass("small");
              $('.tabs_content.basket li[item-section="DelDelCanBuy"]').addClass("cur");
              $('#basket_line ul.tabs li[item-section="DelDelCanBuy"]').addClass("cur");
            }
          } else {
            if (arOptimusOptions["THEME"]["SHOW_BASKET_ONADDTOCART"] !== "N") {
              $(".opener .basket_count").click();
            }
          }
        }
      })
    );
  };
}

if (!funcDefined("clearViewedProduct")) {
  function clearViewedProduct() {
    try {
      var siteID = arOptimusOptions.SITE_ID;
      var localKey = "OPTIMUS_VIEWED_ITEMS_" + siteID;
      var cookieParams = { path: "/", expires: 30 };
      if (typeof BX.localStorage !== "undefined") {
        // remove local storage
        BX.localStorage.set(localKey, {}, 0);
      }
      // remove cookie
      $.removeCookie(localKey, cookieParams);
    } catch (e) {
      console.error(e);
    }
  }
}

if (!funcDefined("setViewedProduct")) {
  function setViewedProduct(id, arData) {
    try {
      // save $.cookie option
      var bCookieJson = $.cookie.json;
      $.cookie.json = true;

      var siteID = arOptimusOptions.SITE_ID;
      var localKey = "OPTIMUS_VIEWED_ITEMS_" + siteID;
      var cookieParams = { path: "/", expires: 30 };

      if (typeof BX.localStorage !== "undefined" && typeof id !== "undefined" && typeof arData !== "undefined") {
        var PRODUCT_ID = typeof arData.PRODUCT_ID !== "undefined" ? arData.PRODUCT_ID : id;
        var arViewedLocal = BX.localStorage.get(localKey) ? BX.localStorage.get(localKey) : {};
        var arViewedCookie = $.cookie(localKey) ? $.cookie(localKey) : {};
        var count = 0;

        // delete some items (sync cookie & local storage)
        for (var _id in arViewedLocal) {
          arViewedLocal[_id].IS_LAST = false;
          if (typeof arViewedCookie[_id] === "undefined") {
            delete arViewedLocal[_id];
          }
        }
        for (var _id in arViewedCookie) {
          if (typeof arViewedLocal[_id] === "undefined") {
            delete arViewedCookie[_id];
          }
        }

        for (var _id in arViewedCookie) {
          count++;
        }

        // delete item if other item (offer) of that PRODUCT_ID is exists
        if (typeof arViewedLocal[PRODUCT_ID] !== "undefined") {
          if (arViewedLocal[PRODUCT_ID].ID != id) {
            delete arViewedLocal[PRODUCT_ID];
            delete arViewedCookie[PRODUCT_ID];
          }
        }

        delete arViewedLocal[2243];
        delete arViewedCookie[2243];

        var time = new Date().getTime();
        arData.ID = id;
        arData.ACTIVE_FROM = time;
        arData.IS_LAST = true;
        arViewedLocal[PRODUCT_ID] = arData;
        arViewedCookie[PRODUCT_ID] = [time.toString(), arData.PICTURE_ID];

        $.cookie(localKey, arViewedCookie, cookieParams);
        BX.localStorage.set(localKey, arViewedLocal, 2592000); // 30 days
      }
    } catch (e) {
      console.error(e);
    } finally {
      // restore $.cookie option
      $.cookie.json = bCookieJson;
    }
  }
}

if (!funcDefined("initSelects")) {
  function initSelects(target) {
    var iOS = navigator.userAgent.match(/(iPad|iPhone|iPod)/g) ? true : false;
    if (iOS) return;
    if ($("#bx-soa-order").length) return;
    // SELECT STYLING
    $(target)
      .find(".wrapper select:visible")
      .ikSelect({
        syntax:
          '<div class="ik_select_link"> \
						<span class="ik_select_link_text"></span> \
						<div class="trigger"></div> \
					</div> \
					<div class="ik_select_dropdown"> \
						<div class="ik_select_list"> \
						</div> \
					</div>',
        dynamicWidth: true,
        ddMaxHeight: 112,
        customClass: "common_select",
        //equalWidths: true,
        onShow: function (inst) {
          inst.$dropdown.css("top", parseFloat(inst.$dropdown.css("top")) - 5 + "px");
          if (inst.$dropdown.outerWidth() < inst.$link.outerWidth()) {
            inst.$dropdown.css("width", inst.$link.outerWidth());
          }
          if (inst.$dropdown.outerWidth() > inst.$link.outerWidth()) {
            inst.$dropdown.css("width", inst.$link.outerWidth());
          }
          var count = 0,
            client_height = 0;
          inst.$dropdown.css("left", inst.$link.offset().left);
          $(inst.$listInnerUl)
            .find("li")
            .each(function () {
              if (!$(this).hasClass("ik_select_option_disabled")) {
                ++count;
                client_height += $(this).outerHeight();
              }
            });
          if (client_height < 112) {
            inst.$listInner.css("height", "auto");
          } else {
            inst.$listInner.css("height", "112px");
          }
          inst.$link.addClass("opened");
          inst.$listInner.addClass("scroller");
        },
        onHide: function (inst) {
          inst.$link.removeClass("opened");
        },
      });
    // END OF SELECT STYLING

    var timeout;
    $(window).on("resize", function () {
      clearTimeout(timeout);
      timeout = setTimeout(function () {
        //$('select:visible').ikSelect('redraw');
        var inst = "";
        if ((inst = $(".common_select-link.opened + select").ikSelect().data("plugin_ikSelect"))) {
          inst.$dropdown.css("left", inst.$link.offset().left + "px");
        }
      }, 20);
    });
  }
}

if (!funcDefined("CheckTopMenuFullCatalogSubmenu")) {
  CheckTopMenuFullCatalogSubmenu = function () {
    if (arOptimusOptions["THEME"]["MENU_TYPE_VIEW"] != "hover") return;
    var $menu = $(".menu_top_block");
    var $wrapmenu = $menu.parents(".wrap_menu");
    var wrapMenuWidth = $wrapmenu.actual("outerWidth");
    var wrapMenuLeft = $wrapmenu.offset().left;
    var wrapMenuRight = wrapMenuLeft + wrapMenuWidth;
    var bCatalogFirst = $menu.hasClass("catalogfirst");
    var findMenuLi = $(".menu_top_block:visible li.full");
    var parentSubmenuWidth = $menu.actual("outerWidth");

    if ($(".catalog_block.menu_top_block").length) {
      if ($(".catalog_block.menu_top_block").is(":visible")) findMenuLi = $(".menu_top_block.catalog_block li.full");
    }

    findMenuLi.each(function () {
      var $this = $(this);
      var $submenu = $this.find(">.dropdown");

      if ($submenu.length) {
        if (bCatalogFirst) {
          $submenu.css({
            left: parentSubmenuWidth + "px",
            width: wrapMenuWidth - parentSubmenuWidth + "px",
            "padding-left": "0px",
            "padding-right": "0px",
          });
        } else {
          $submenu.css({
            left: $this.offset().left * -1 + "px",
            width: $(window).width() - 1 + "px",
            "padding-left": wrapMenuLeft + "px",
            "padding-right": $(window).width() - wrapMenuRight + "px",
          });
        }
        if (!isOnceInited && bCatalogFirst && arOptimusOptions["THEME"]["MENU_POSITION"] == "top") {
          $this.on("mouseenter", function () {
            $submenu.css("min-height", $this.closest(".dropdown").actual("outerHeight") + "px");
          });
        }
      }
    });
  };
}

$.fn.getMaxHeights = function (outer, classNull, minHeight) {
  var maxHeight = this.map(function (i, e) {
    var calc_height = 0;

    $(e).css("height", "");

    if (outer == true) {
      calc_height = $(e).actual("outerHeight");
    } else {
      calc_height = $(e).actual("height");
    }
    return calc_height;
  }).get();
  for (var i = 0, c = maxHeight.length; i < c; ++i) {
    if (maxHeight[i] % 2) {
      --maxHeight[i];
    }
  }
  return Math.max.apply(this, maxHeight);
};

$.fn.equalizeHeights = function (outer, classNull, minHeight) {
  var maxHeight = this.map(function (i, e) {
    var minus_height = 0,
      calc_height = 0;
    if (classNull !== false) {
      if (!isMobile) {
        minus_height = parseInt($(e).find(classNull).actual("outerHeight"));
      }
    }
    if (minus_height) minus_height += 12;
    $(e).css("height", "");
    if (outer == true) {
      calc_height = $(e).actual("outerHeight") - minus_height;
    } else {
      calc_height = $(e).actual("height") - minus_height;
    }
    if (minHeight !== false) {
      if (calc_height < minHeight) {
        calc_height += minHeight - calc_height;
      }
      if (window.matchMedia("(max-width: 520px)").matches) {
        calc_height = 300;
      }
      if (window.matchMedia("(max-width: 400px)").matches) {
        calc_height = 200;
      }
    }
    return calc_height;
  }).get();

  for (var i = 0, c = maxHeight.length; i < c; ++i) {
    if (maxHeight[i] % 2) {
      --maxHeight[i];
    }
  }
  return this.height(Math.max.apply(this, maxHeight));
};

$.fn.getFloatWidth = function () {
  var width = 0;

  if ($(this).length) {
    var rect = $(this)[0].getBoundingClientRect();
    if (!(width = rect.width)) {
      width = rect.right - rect.left;
    }
  }

  return width;
};

$.fn.sliceHeight = function (options) {
  function _slice(el) {
    el.each(function () {
      $(this).css("line-height", "");
      $(this).css("height", "");
    });

    if (options.mobile == true) {
      if (window.matchMedia("(max-width: 520px)").matches) {
        return;
      }
    }

    if (typeof options.autoslicecount == "undefined" || options.autoslicecount !== false) {
      var row =
          typeof options.row !== "undefined" && options.row.length
            ? el.first().parents(options.row).getFloatWidth()
            : el.first().parents(".items").getFloatWidth(),
        elw =
          typeof options.item !== "undefined" && options.item.length
            ? $(options.item).first().getFloatWidth()
            : el.first().hasClass("item")
            ? el.first().getFloatWidth()
            : el.first().parents(".item").getFloatWidth();
      if (!row) {
        row = el.first().parents(".row").getFloatWidth();
      }
      if (row && elw) {
        options.slice = Math.floor(row / elw);
      }
    }
    if (options.slice) {
      for (var i = 0; i < el.length; i += options.slice) {
        $(el.slice(i, i + options.slice)).equalizeHeights(options.outer, options.classNull, options.minHeight);
      }
    }
    if (options.lineheight) {
      var lineheightAdd = parseInt(options.lineheight);
      if (isNaN(lineheightAdd)) {
        lineheightAdd = 0;
      }
      el.each(function () {
        $(this).css("line-height", $(this).actual("height") + lineheightAdd + "px");
      });
    }
  }

  var options = $.extend(
    {
      slice: null,
      outer: false,
      lineheight: false,
      autoslicecount: true,
      classNull: false,
      minHeight: false,
      options: false,
      resize: true,
      row: false,
      item: false,
      mobile: false,
    },
    options
  );

  var el = $(this);

  if (options.mobile == true) {
    if (
      typeof arOptimusOptions === "object" &&
      typeof arOptimusOptions.THEME.MOBILE_CATALOG_BLOCK_COMPACT === "string" &&
      arOptimusOptions.THEME.MOBILE_CATALOG_BLOCK_COMPACT.toUpperCase() === "Y" &&
      el.first().parents(".catalog_block.items").length
    ) {
      options.mobile = false;
    }
  }
  _slice(el);

  if (options.resize) {
    if (!window.sliceResizeElements) {
      window.sliceResizeElements = [];
      BX.addCustomEvent("onWindowResize", function () {
        ignoreResize.push(true);
        window.sliceResizeElements.forEach(function (el) {
          _slice(el);
        });
        ignoreResize.pop();
      });
    }

    window.sliceResizeElements.push(el);
  } else {
    if (!ignoreResize.length) {
      // ignoreResize.push(true);
      _slice(el);
      // ignoreResize.pop();
    }
  }
};

$.fn.sliceHeightNoResize = function (options) {
  function _slice(el) {
    el.each(function () {
      $(this).css("line-height", "");
      $(this).css("height", "");
    });
    if (typeof options.autoslicecount == "undefined" || options.autoslicecount !== false) {
      var elw = el.first().hasClass("item") ? el.first().getFloatWidth() : el.first().parents(".item").getFloatWidth();
      var elsw = el.first().parents(".items").getFloatWidth();
      if (!elsw) {
        elsw = el.first().parents(".row").getFloatWidth();
      }
      if (elsw && elw) {
        options.slice = Math.floor(elsw / elw);
      }
    }

    if (options.slice) {
      for (var i = 0; i < el.length; i += options.slice) {
        $(el.slice(i, i + options.slice)).equalizeHeights(options.outer, options.classNull, options.minHeight);
      }
    }
    if (options.lineheight) {
      var lineheightAdd = parseInt(options.lineheight);
      if (isNaN(lineheightAdd)) {
        lineheightAdd = 0;
      }
      el.each(function () {
        $(this).css("line-height", $(this).actual("height") + lineheightAdd + "px");
      });
    }
  }

  var options = $.extend(
    {
      slice: null,
      outer: false,
      lineheight: false,
      autoslicecount: true,
      classNull: false,
      minHeight: false,
      options: false,
      resize: true,
    },
    options
  );

  var el = $(this);
  _slice(el);
};

if (!funcDefined("initHoverBlock")) {
  function initHoverBlock(target) {
    /*$(target).find('.catalog_item.item_wrap').on('mouseenter', function(){
			$(this).addClass('hover');
		})
		$(target).find('.catalog_item.item_wrap').on('mouseleave', function(){
			$(this).removeClass('hover');
		})*/
  }
}

if (!funcDefined("setStatusButton")) {
  function setStatusButton() {
    $.ajax({
      url: arOptimusOptions["SITE_DIR"] + "ajax/getAjaxBasket.php",
      type: "POST",
      success: function (data) {
        if (data.BASKET) {
          for (var i in data.BASKET) {
            $(".to-cart[data-item=" + data.BASKET[i] + "]").hide();
            $(".counter_block[data-item=" + data.BASKET[i] + "]").hide();
            $(".in-cart[data-item=" + data.BASKET[i] + "]").show();
            $(".in-cart[data-item=" + data.BASKET[i] + "]")
              .closest(".button_block")
              .addClass("wide");
          }
        }
        if (data.DELAY) {
          for (var i in data.DELAY) {
            $(".wish_item.to[data-item=" + data.DELAY[i] + "]").hide();
            $(".wish_item.in[data-item=" + data.DELAY[i] + "]").show();
            if ($(".wish_item[data-item=" + data.DELAY[i] + "]").find(".value.added").length) {
              $(".wish_item[data-item=" + data.DELAY[i] + "]").addClass("added");
              $(".wish_item[data-item=" + data.DELAY[i] + "]")
                .find(".value")
                .hide();
              $(".wish_item[data-item=" + data.DELAY[i] + "]")
                .find(".value.added")
                .show();
            }
          }
        }
        if (data.SUBSCRIBE) {
          for (var i in data.SUBSCRIBE) {
            $(".to-subscribe[data-item=" + data.SUBSCRIBE[i] + "]").hide();
            $(".in-subscribe[data-item=" + data.SUBSCRIBE[i] + "]").show();
          }
        }
        if (data.COMPARE) {
          for (var i in data.COMPARE) {
            $(".compare_item.to[data-item=" + data.COMPARE[i] + "]").hide();
            $(".compare_item.in[data-item=" + data.COMPARE[i] + "]").show();
            if ($(".compare_item[data-item=" + data.COMPARE[i] + "]").find(".value.added").length) {
              $(".compare_item[data-item=" + data.COMPARE[i] + "]")
                .find(".value")
                .hide();
              $(".compare_item[data-item=" + data.COMPARE[i] + "]")
                .find(".value.added")
                .show();
            }
          }
        }
      },
    });
  }
}

window.onload = function () {
  window.dataLayer = window.dataLayer || [];
};

if (!funcDefined("onLoadjqm")) {
  var onLoadjqm = function (name, hash, requestData, selector, requestTitle, isButton, thButton) {

    if ( hash.c.noOverlay === undefined || (hash.c.noOverlay !== undefined && !hash.c.noOverlay) ) {
      let diffWidth;
      $("body").addClass("jqm-initied");

      if ((diffWidth = window.innerWidth - document.documentElement.clientWidth)) {
        $("body").css({ "padding-right": diffWidth + "px", "box-sizing": "border-box"});
      }

      hash.w
        .closest("#popup_iframe_wrapper")
        .css({ "z-index": 3000, display: "flex" });
    }

    hash.w.addClass("show").css({
      opacity: 1,
    });

    hash.w.addClass("scrollbar scrollbar--overflow"); 

    $("body").css({ overflow: "hidden", /*height: "100vh"*/});

    if(!$("body").hasClass("fast_view") && name === "fast_view") {
      $("body").addClass(name);
    }  

    if (typeof requestData == "undefined") {
      requestData = "";
    }
    if (typeof selector == "undefined") {
      selector = false;
    }
    //var width = $("." + name + "_frame").width();
    //$("." + name + "_frame").css("margin-left", "-" + width / 2 + "px");

    if (name == "order-popup-call") {
    } else if (name == "order-button") {
      $(".order-button_frame")
        .find("div[product_name]")
        .find("input")
        .val(hash.t.title)
        .attr("readonly", "readonly")
        .css({ overflow: "hidden", "text-overflow": "ellipsis" });
    } else if ((name == "to-order" || name == "cheaper") && selector) {
      $(".to-order_frame")
        .find('[data-sid="PRODUCT_NAME"]')
        .val($(selector).data("name"))
        .attr("readonly", "readonly")
        .css({ overflow: "hidden", "text-overflow": "ellipsis" });
      $(".to-order_frame").find('[data-sid="PRODUCT_ID"]').val($(selector).attr("data-item"));
      $(".cheaper_frame")
        .find('[data-sid="PRODUCT_NAME"]')
        .val($(selector).data("name"))
        .attr("readonly", "readonly")
        .css({ overflow: "hidden", "text-overflow": "ellipsis" });
      $(".cheaper_frame").find('[data-sid="PRODUCT_ID"]').val($(selector).attr("data-item"));
    } else if (name == "services" && selector) {
      $(".services_frame").find('[data-sid="SERVICE"]').val($(selector).attr("data-title"));
    } else if (name == "resume" && selector) {
      if ($(selector).attr("data-jobs")) {
        $(".resume_frame").find('[data-sid="POST"]').attr("readonly", "readonly").val($(selector).attr("data-jobs"));
      }
    } else if (name == "basket_error") {
      /*else if(name == "subscribe" && selector) {
			if($(selector).attr('data-item')){
				$(".subscribe_frame").find('[data-sid="POST"]').attr("readonly", "readonly").val($(selector).attr('data-jobs'));
			}
		}*/
      $(".basket_error_frame .pop-up-title").text(requestTitle);
      $(".basket_error_frame .ajax_text").html(requestData);
      // $('.basket_error_frame .ajax_text select').ikSelect('redraw');
      initSelects(document);
      if (isButton == "Y" && thButton) {
        $(
          "<div class='popup_button_basket_wr'><span class='popup_button_basket big_btn button' data-item=" +
            thButton.data("item") +
            "><span>" +
            BX.message("ERROR_BASKET_BUTTON") +
            "</span></span></div>"
        ).insertAfter($(".basket_error_frame .ajax_text"));
      }
    } else if (name == "one_click_buy") {
      $("#one_click_buy_form").submit(function () {
        if ($("#one_click_buy_form").valid()) {
          if ($("." + name + "_frame form input.error").length || $("." + name + "_frame form textarea.error").length) {
            return false;
          } else if (!$(this).find("#one_click_buy_form_button").hasClass("clicked")) {
            if (!$(this).find("#one_click_buy_form_button").hasClass("clicked"))
              $(this).find("#one_click_buy_form_button").addClass("clicked");
            var bSend = true;
            if (window.renderRecaptchaById && window.asproRecaptcha && window.asproRecaptcha.key) {
              if (
                window.asproRecaptcha.params.recaptchaSize == "invisible" &&
                typeof grecaptcha != "undefined" &&
                arOptimusOptions.THEME.ONE_CLICK_BUY_CAPTCHA === "Y"
              ) {
                if ($("#one_click_buy_form").find(".g-recaptcha-response").val()) {
                  // eventdata.form.submit();
                  bSend = true;
                } else {
                  grecaptcha.execute($("#one_click_buy_form").find(".g-recaptcha").data("widgetid"));
                  $(this).find("#one_click_buy_form_button").removeClass("clicked");
                  bSend = false;
                }
              }
            }

            if (bSend) {
              var form_url = $(this).attr("action");
              $.ajax({
                url: form_url,
                data: $(this).serialize(),
                type: "POST",
                dataType: "json",
                error: function (data) {
                  alert("Error connecting server");
                },
                success: function (data) {
                  if (data.result == "Y") {
                    if (arOptimusOptions["COUNTERS"]["USE_1CLICK_GOALS"] !== "N") {
                      var eventdata = { goal: "goal_1click_success" };
                      BX.onCustomEvent("onCounterGoals", [eventdata]);
                    }

                    if (ocb_files.length) {
                      var obData = new FormData();
                      $.each(ocb_files, function (key, value) {
                        if (value) obData.append(key + "_" + value.code, value[0]);
                      });
                      if (obData) {
                        $.ajax({
                          url: form_url + "?uploadfiles&orderID=" + data.message,
                          type: "POST",
                          data: obData,
                          cache: false,
                          dataType: "json",
                          processData: false, // Don't process the files
                          contentType: false, // this is string query
                          error: function (data) {
                            alert("Error with files");
                          },
                          success: function (respond, textStatus, jqXHR) {
                            $(".one_click_buy_result").show();
                            $(".one_click_buy_result_success").show();
                            purchaseCounter(data.message, arOptimusOptions["COUNTERS"]["TYPE"]["ONE_CLICK"]);
                          },
                        });
                      }
                    } else {
                      $(".one_click_buy_result").show();
                      $(".one_click_buy_result_success").show();
                      purchaseCounter(data.message, arOptimusOptions["COUNTERS"]["TYPE"]["ONE_CLICK"]);
                    }
                  } else {
                    $(".one_click_buy_result").show();
                    $(".one_click_buy_result_fail").show();
                    if ("err" in data && data.err) data.message = data.message + " \n" + data.err;
                    $(".one_click_buy_result_text").html(data.message);
                  }
                  $(".one_click_buy_modules_button", self).removeClass("disabled");
                  $("#one_click_buy_form").hide();
                  $("#one_click_buy_form_result").show();
                },
              });
            }
          }
        }
        return false;
      });
    } else if (name == "one_click_buy_basket") {
      $("#one_click_buy_form").on("submit", function () {
        if ($("#one_click_buy_form").valid()) {
          if ($("." + name + "_frame form input.error").length || $("." + name + "_frame form textarea.error").length) {
            return false;
          } else if (!$(this).find("#one_click_buy_form_button").hasClass("clicked")) {
            if (!$(this).find("#one_click_buy_form_button").hasClass("clicked"))
              $(this).find("#one_click_buy_form_button").addClass("clicked");
            var bSend = true;
            if (window.renderRecaptchaById && window.asproRecaptcha && window.asproRecaptcha.key) {
              if (
                window.asproRecaptcha.params.recaptchaSize == "invisible" &&
                typeof grecaptcha != "undefined" &&
                arOptimusOptions.THEME.ONE_CLICK_BUY_CAPTCHA === "Y"
              ) {
                if ($("#one_click_buy_form").find(".g-recaptcha-response").val()) {
                  // eventdata.form.submit();
                  bSend = true;
                } else {
                  grecaptcha.execute($("#one_click_buy_form").find(".g-recaptcha").data("widgetid"));
                  $(this).find("#one_click_buy_form_button").removeClass("clicked");
                  bSend = false;
                }
              }
            }
            if (bSend) {
              var form_url = $(this).attr("action");
              $.ajax({
                url: $(this).attr("action"),
                data: $(this).serialize(),
                type: "POST",
                dataType: "json",
                error: function (data) {
                  window.console && console.log(data);
                },
                success: function (data) {
                  if (data.result == "Y") {
                    if (arOptimusOptions["COUNTERS"]["USE_FASTORDER_GOALS"] !== "N") {
                      var eventdata = { goal: "goal_fastorder_success" };
                      BX.onCustomEvent("onCounterGoals", [eventdata]);
                    }

                    if (ocb_files.length) {
                      var obData = new FormData();
                      $.each(ocb_files, function (key, value) {
                        if (value) obData.append(key + "_" + value.code, value[0]);
                      });
                      if (obData) {
                        $.ajax({
                          url: form_url + "?uploadfiles&orderID=" + data.message,
                          type: "POST",
                          data: obData,
                          cache: false,
                          dataType: "json",
                          processData: false, // Don't process the files
                          contentType: false, // this is string query
                          error: function (data) {
                            alert("Error with files");
                          },
                          success: function (respond, textStatus, jqXHR) {
                            $(".one_click_buy_result").show();
                            $(".one_click_buy_result_success").show();
                            purchaseCounter(data.message, arOptimusOptions["COUNTERS"]["TYPE"]["ONE_CLICK"]);
                          },
                        });
                      }
                    } else {
                      $(".one_click_buy_result").show();
                      $(".one_click_buy_result_success").show();
                      purchaseCounter(data.message, arOptimusOptions["COUNTERS"]["TYPE"]["ONE_CLICK"]);
                    }
                  } else {
                    $(".one_click_buy_result").show();
                    $(".one_click_buy_result_fail").show();
                    if ("err" in data && data.err) data.message = data.message + " \n" + data.err;
                    $(".one_click_buy_result_text").text(data.message);
                  }
                  $(".one_click_buy_modules_button", self).removeClass("disabled");
                  $("#one_click_buy_form").hide();
                  $("#one_click_buy_form_result").show();
                },
              });
            }
          }
        }
        return false;
      });
    }

    var eventdata = { action: "loadForm" };

		if(typeof selector !== 'undefined' && selector !== false ){
			BX.onCustomEvent("onCompleteAction", [eventdata, $(selector)[0]]);
		} else {
			BX.onCustomEvent("onCompleteAction", [eventdata, $(hash.t)[0]]);
		}

    $("." + name + "_frame").show();
  };
}

if (!funcDefined("onHidejqm")) {
  var onHidejqm = function (name, hash) {

    if (hash.w.find(".one_click_buy_result_success").is(":visible") && name == "one_click_buy_basket") {
      window.location.href = window.location.href;
    }

    hash.w.animate({ opacity: 0 }, 200, function () {
      hash.w.hide();
      hash.w.empty();
      hash.o.remove();
      hash.w.removeClass("show");
      hash.w.removeClass("scrollbar");
      hash.w.removeClass("scrollbar--overflow");
      $("html").removeClass("overflow_hidden_popup_forms");

      if (!hash.w.closest("#popup_iframe_wrapper").find(".jqmOverlay").length) {
        hash.w
          .closest("#popup_iframe_wrapper")
          .css({ "z-index": "", display: "" });
      }

      if (
        !$(".jqmOverlay:not(.mobp)").length ||
        $(".jqmOverlay.waiting").length
      ) {
        $("body").removeClass("jqm-initied");
        $("body").removeClass("fast_view");
      }

      if (!$("body").hasClass("fast_view")) {
        $("body").css({ overflow: "", height: "", "padding-right": "", "box-sizing": "content-box" });
      }
    });
  };
}

if (!funcDefined("oneClickBuy")) {
  var oneClickBuy = function (elementID, iblockID, that) {
    var name = "one_click_buy";
    var elementQuantity = 1;
    var offerProps = false;
    var buy_btn = $(that).closest(".buy_block").find(".to-cart");
    var buy_btn2 = $(that).closest("tr").find(".to-cart");

    if (typeof that !== "undefined") {
      elementQuantity = $(that).attr("data-quantity");
      offerProps = $(that).attr("data-props");
    }

    if (elementQuantity < 0) {
      elementQuantity = 1;
    }

    var tmp_props = buy_btn.data("props"),
      tmp_props2 = buy_btn2.data("props"),
      props = "",
      part_props = "",
      add_props = "N",
      fill_prop = {},
      iblockid = buy_btn.data("iblockid"),
      item = buy_btn.attr("data-item");

    if (tmp_props) {
      props = tmp_props.split(";");
    } else if (tmp_props2) {
      props = tmp_props2.split(";");
    }
    if (buy_btn.data("part_props")) {
      part_props = buy_btn.data("part_props");
    }
    if (buy_btn.data("add_props")) {
      add_props = buy_btn.data("add_props");
    }

    fill_prop = fillBasketPropsExt(buy_btn, "prop", buy_btn.data("bakset_div"));
    fill_prop.iblockID = iblockid;
    fill_prop.part_props = part_props;
    fill_prop.add_props = add_props;
    fill_prop.props = JSON.stringify(props);
    fill_prop.item = item;
    fill_prop.ocb_item = "Y";    

    if (!$(that).hasClass("clicked")) {
      $(that).addClass("clicked");
      $("body")
        .find("." + name + "_frame")
        .remove();
      $("body")
        .find("." + name + "_trigger")
        .remove();
      $("body #popup_iframe_wrapper").append(
        '<div class="' + name + '_frame popup"></div>'
      );
      $("body #popup_iframe_wrapper").append(
        '<div class="' + name + '_trigger"></div>'
      );
      $("." + name + "_frame").jqm({
        trigger: "." + name + "_trigger",
        onHide: function (hash) {
          onHidejqm(name, hash);
        },
        toTop: false,
        onLoad: function (hash) {
          onLoadjqm(name, hash);
        },
        ajax:
        arOptimusOptions["SITE_DIR"] +
          "ajax/one_click_buy.php?ELEMENT_ID=" +
          elementID +
          "&IBLOCK_ID=" +
          iblockID +
          "&ELEMENT_QUANTITY=" +
          elementQuantity +
          "&OFFER_PROPS=" +
          fill_prop.props,
      });
      $("." + name + "_trigger").click();
    }
  };
}

if (!funcDefined("oneClickBuyBasket")) {
  var oneClickBuyBasket = function () {
    name = "one_click_buy_basket";
    $("body")
      .find("." + name + "_frame")
      .remove();
    $("body")
      .find("." + name + "_trigger")
      .remove();
    // $("body").append('<div class="' + name + '_frame popup"></div>');
    // $("body").append('<div class="' + name + '_trigger"></div>');

    $("body #popup_iframe_wrapper").append(
      '<div class="' + name + '_frame popup"></div>'
    );
    $("body #popup_iframe_wrapper").append(
      '<div class="' + name + '_trigger"></div>'
    );

    $("." + name + "_frame").jqm({
      trigger: "." + name + "_trigger",
      onHide: function (hash) {
        onHidejqm(name, hash);
      },
      onLoad: function (hash) {
        onLoadjqm(name, hash);
      },
      ajax: arOptimusOptions["SITE_DIR"] + "ajax/one_click_buy_basket.php",
    });
    $("." + name + "_trigger").click();
  };
}

if (!funcDefined("scroll_block")) {
  function scroll_block(block) {
    const topPos = block.offset().top;
    // const headerH = $('header').outerHeight(true,true);

    if ($(".stores_tab").length) {
      $("li.stores_tab").trigger("click");
    } else if ($(".prices_tab").length) {
      $("li.prices_tab").trigger("click");
      const pricesTab = $(".prices_tab.current .opener");

      if (pricesTab[0] && !pricesTab[0].querySelector(".opener_icon.opened")) {
        pricesTab[0].click();

        $(pricesTab[0]).parents("tr").next(".offer_stores").find(".stores_block_wrap").slideDown(200);
      }
    }
    $("html,body").animate({ scrollTop: topPos - 30 }, 150);
  }
}

if (!funcDefined("jqmEd")) {
  var jqmEd = function (
    name,
    form_id,
    open_trigger,
    requestData,
    selector,
    requestTitle,
    isButton,
    thButton
  ) {
    if (typeof requestData == "undefined") {
      requestData = "";
    }

    if (typeof selector == "undefined") {
      selector = false;
    }

    // $("body")
    //   .find("." + name + "_frame")
    //   .remove();
    // $("body").append('<div class="' + name + '_frame popup"></div>');

    $("body #popup_iframe_wrapper")
      .find("." + name + "_frame")
      .remove();
    $("body #popup_iframe_wrapper").append(
      '<div class="' + name + '_frame jqmWindow popup"></div>'
    );

    if (typeof open_trigger == "undefined") {
      $("." + name + "_frame").jqm({
        trigger: "." + name + "_frame.popup",
        onHide: function (hash) {
          onHidejqm(name, hash);
        },
        onLoad: function (hash) {
          onLoadjqm(name, hash, requestData, selector);
        },
        ajax:
          arOptimusOptions["SITE_DIR"] +
          "ajax/form.php?form_id=" +
          form_id +
          (requestData.length ? "&" + requestData : ""),
      });
    } else {
      if (name == "enter") {
        $("." + name + "_frame").jqm({
          trigger: open_trigger,
          onHide: function (hash) {
            onHidejqm(name, hash);
          },
          onLoad: function (hash) {
            onLoadjqm(name, hash, requestData, selector);
          },
          ajax: arOptimusOptions["SITE_DIR"] + "ajax/auth.php",
        });
      } else if (name == "basket_error") {
        $("." + name + "_frame").jqm({
          trigger: open_trigger,
          onHide: function (hash) {
            onHidejqm(name, hash);
          },
          onLoad: function (hash) {
            onLoadjqm(name, hash, requestData, selector, requestTitle, isButton, thButton);
          },
          ajax: arOptimusOptions["SITE_DIR"] + "ajax/basket_error.php",
        });
      } else {
        $("." + name + "_frame").jqm({
          trigger: open_trigger,
          onHide: function (hash) {
            onHidejqm(name, hash);
          },
          onLoad: function (hash) {
            onLoadjqm(name, hash, requestData, selector);
          },
          ajax:
            arOptimusOptions["SITE_DIR"] +
            "ajax/form.php?form_id=" +
            form_id +
            (requestData.length ? "&" + requestData : ""),
        });

      }

      $(open_trigger).dblclick(function () {
        return false;
      });
    }
    return true;
  };
}

initCalculatePreview = function () {
	$(".calculate-delivery.with_preview:not(.inited)").each(function () {
	  var $this = $(this);
	  var $calculateSpan = $this.find("span[data-event=jqm]");
	  var $preview = $this.find(".calculate-delivery-preview");
  
	  $this.addClass("inited");
	  $this.appear(
		function () {
		  if ($calculateSpan.length) {
			if (
			  typeof window["calculate-delivery-preview-index"] === "undefined"
			) {
			  window["calculate-delivery-preview-index"] = 1001;
			} else {
			  ++window["calculate-delivery-preview-index"];
			}
  
			var productId = $calculateSpan.attr("data-param-product_id") * 1;
			var quantity = $calculateSpan.attr("data-param-quantity") * 1;
  
			if (productId > 0) {
			  var areaIndexSended = window["calculate-delivery-preview-index"];
			  $calculateSpan.data({ areaIndex: areaIndexSended });
  
			  $.ajax({
				url: arOptimusOptions["SITE_DIR"] + "ajax/delivery.php",
				type: "POST",
				data: {
				  is_preview: "Y",
				  index: areaIndexSended,
				  product_id: productId,
				  quantity: quantity,
				},
				beforeSend: function () {
				  $this.addClass("loadings");
				},
				success: function (response) {
				  var areaIndex = $calculateSpan.data("areaIndex");
				  if (
					typeof areaIndex !== "undefined" &&
					areaIndex == areaIndexSended
				  ) {
					$calculateSpan.hide();
					$preview.html(response);
					if (!$preview.find(".catalog-delivery-preview").length) {
					  $preview.empty();
					  $calculateSpan.show();
					}
				  }
				},
				error: function (xhr, ajaxOptions, thrownError) {},
				complete: function () {
				  var areaIndex = $calculateSpan.data("areaIndex");
				  if (
					typeof areaIndex !== "undefined" &&
					areaIndex == areaIndexSended
				  ) {
					$this.removeClass("loadings");
				  }
				},
			  });
			}
		  }
		},
		{ accX: 0, accY: 0 }
	  );
	});
};

if (!funcDefined("replaceBasketPopup")) {
  function replaceBasketPopup(hash) {
    if (typeof hash != "undefined") {
      hash.w.hide();
      hash.o.hide();
    }
  }
}

if (!funcDefined("waitLayer")) {
  function waitLayer(delay, callback) {
    if (typeof dataLayer != "undefined") {
      if (typeof callback == "function") {
        callback();
      }
    } else {
      setTimeout(function () {
        waitLayer(delay, callback);
      }, delay);
    }
  }
}

if (!funcDefined("waitCounter")) {
  waitCounter = function (idCounter, delay, callback) {
    var obCounter = window["yaCounter" + idCounter];
    if (typeof obCounter == "object") {
      if (typeof callback == "function") {
        callback();
      }
    } else {
      setTimeout(function () {
        waitCounter(idCounter, delay, callback);
      }, delay);
    }
  };
}

if (!funcDefined("InitTopestMenuGummi")) {
  InitTopestMenuGummi = function () {
    if (!isOnceInited) {
      function _init() {
        var arItems = $menuTopest.find(">li:not(.more)");
        var cntItems = arItems.length;
        if (cntItems) {
          var itemsWidth = 0;
          for (var i = 0; i < cntItems; ++i) {
            var item = arItems.eq(i);
            var itemWidth = item.actual("outerWidth", { includeMargin: true });
            arItemsHideWidth[i] = (itemsWidth += itemWidth) + (i !== cntItems - 1 ? moreWidth : 0);
          }
        }
      }

      function _gummi() {
        var rowWidth = $menuTopest.actual("innerWidth");
        var arItems = $menuTopest.find(">li:not(.more),li.more>.dropdown>li");
        var cntItems = arItems.length;
        if (cntItems) {
          var bMore = false;
          for (var i = cntItems - 1; i >= 0; --i) {
            var item = arItems.eq(i);
            var bInMore = item.parents(".more").length > 0;
            if (!bInMore) {
              if (arItemsHideWidth[i] > rowWidth) {
                if (!bMore) {
                  bMore = true;
                  more.removeClass("hidden");
                }
                var clone = item.clone();
                clone.find(">a").addClass("dark_font");
                clone.prependTo(moreDropdown);
                item.addClass("cloned");
              }
            }
          }
          for (var i = 0; i < cntItems; ++i) {
            var item = arItems.eq(i);
            var bInMore = item.parents(".more").length > 0;
            if (bInMore) {
              if (arItemsHideWidth[i] <= rowWidth) {
                if (i === cntItems - 1) {
                  bMore = false;
                  more.addClass("hidden");
                }
                var clone = item.clone();
                clone.find(">a").removeClass("dark_font");
                clone.insertBefore(more);
                item.addClass("cloned");
              }
            }
          }
          $menuTopest.find("li.cloned").remove();
        }
      }

      var $menuTopest = $(".menu.topest");
      var more = $menuTopest.find(">.more");
      var moreDropdown = more.find(">.dropdown");
      var moreWidth = more.actual("outerWidth", { includeMargin: true });
      var arItemsHideWidth = [];
      ignoreResize.push(true);
      _init();
      _gummi();
      ignoreResize.pop();

      $(window).resize(function () {
        ignoreResize.push(true);
        _gummi();
        ignoreResize.pop();
      });
    }
  };
}

if (!funcDefined("InitTopMenuGummi")) {
  InitTopMenuGummi = function () {
    function _init() {
      var arItems = $topMenu.closest(".wrap_menu").find(".inc_menu .menu_top_block >li:not(.more)");
      var cntItems = arItems.length;
      if (cntItems) {
        var itemsWidth = 0;
        for (var i = 0; i < cntItems; ++i) {
          var item = arItems.eq(i);
          var itemWidth = item.actual("outerWidth");
          arItemsHideWidth[i] = (itemsWidth += itemWidth) + (i !== cntItems - 1 ? moreWidth : 0);
        }
      }
    }

    function _gummi() {
      var rowWidth = $wrapMenu.actual("innerWidth") - $wrapMenuLeft.actual("innerWidth");
      var arItems = $topMenu.find(">li:not(.more):not(.catalog),li.more>.dropdown>li");
      var cntItems = arItems.length;

      if (cntItems) {
        var bMore = false;
        for (var i = cntItems - 1; i >= 0; --i) {
          var item = arItems.eq(i);
          var bInMore = item.parents(".more").length > 0;
          if (!bInMore) {
            if (arItemsHideWidth[i] > rowWidth) {
              if (!bMore) {
                bMore = true;
                more.removeClass("hidden");
              }
              var clone = item.clone();
              clone.find(">.dropdown").removeAttr("style").removeClass("toleft");
              clone.find(">a").addClass("dark_font").removeAttr("style");
              clone.prependTo(moreDropdown);
              item.addClass("cloned");
            }
          }
        }
        for (var i = 0; i < cntItems; ++i) {
          var item = arItems.eq(i);
          var bInMore = item.parents(".more").length > 0;
          if (bInMore) {
            if (arItemsHideWidth[i] <= rowWidth) {
              if (i === cntItems - 1) {
                bMore = false;
                more.addClass("hidden");
              }
              var clone = item.clone();
              clone.find(">a").removeClass("dark_font");
              clone.insertBefore(more);
              item.addClass("cloned");
            }
          }
        }
        $topMenu.find("li.cloned").remove();

        var cntItemsVisible = $topMenu.find(">li:not(.more):not(.catalog)").length;
        var o = rowWidth - arItemsHideWidth[cntItemsVisible - 1];
        var itemsPaddingAdd = Math.floor(o / (cntItemsVisible + (more.hasClass("hidden") ? 0 : 1)));
        var itemsPadding_new = itemsPadding_min + itemsPaddingAdd;
        var itemsPadding_new_l = Math.floor(itemsPadding_new / 2);
        var itemsPadding_new_r = itemsPadding_new - itemsPadding_new_l;

        $topMenu.find(">li:not(.catalog):visible>a").each(function () {
          $(this).css({ "padding-left": itemsPadding_new_l + "px" });
          $(this).css({ "padding-right": itemsPadding_new_r + "px" });
        });

        var lastItemPadding_new =
          itemsPadding_new + o - (cntItemsVisible + (more.is(":visible") ? 1 : 0)) * itemsPaddingAdd;
        var lastItemPadding_new_l = Math.floor(lastItemPadding_new / 2);
        var lastItemPadding_new_r = lastItemPadding_new - lastItemPadding_new_l;
        $topMenu
          .find(">li:visible")
          .last()
          .find(">a")
          .css({ "padding-left": lastItemPadding_new_l + "px" });
        $topMenu
          .find(">li:visible")
          .last()
          .find(">a")
          .css({ "padding-right": lastItemPadding_new_r + "px" });
        CheckTopMenuFullCatalogSubmenu();
      }
    }

    var $topMenu = $(".menu_top_block");
    var $wrapMenu = $topMenu.parents(".wrap_menu");
    var $wrapMenuLeft = $wrapMenu.find(".catalog_menu_ext");
    var more = $topMenu.find(">.more");
    var moreWidth = more.actual("outerWidth", { includeMargin: true });
    more.addClass("hidden");
    var arItemsHideWidth = [];
    var moreDropdown = more.find(">.dropdown");
    var itemsPadding = parseInt(more.find(">a").css("padding-left")) * 2;
    var itemsPadding_min = itemsPadding;

    // setTimeout(function(){
    ignoreResize.push(true);
    _init();
    _gummi();
    ignoreResize.pop();
    // }, 100)

    $(window).resize(function () {
      ignoreResize.push(true);
      _gummi();
      ignoreResize.pop();
    });

    /*BX.addCustomEvent('onTopPanelFixUnfix', function(eventdata) {
			ignoreResize.push(true);
			_gummi();
			ignoreResize.pop();
		});*/
  };
}

if (!funcDefined("checkCounters")) {
  function checkCounters(name) {
    if (typeof name !== "undefined") {
      if (
        name == "google" &&
        arOptimusOptions["COUNTERS"]["GOOGLE_ECOMERCE"] == "Y" &&
        arOptimusOptions["COUNTERS"]["GOOGLE_COUNTER"] > 0
      ) {
        return true;
      } else if (
        name == "yandex" &&
        arOptimusOptions["COUNTERS"]["USE_YA_COUNTER"] == "Y" &&
        arOptimusOptions["COUNTERS"]["YANDEX_ECOMERCE"] == "Y" &&
        arOptimusOptions["COUNTERS"]["YANDEX_COUNTER"] > 0
      ) {
        return true;
      } else {
        return false;
      }
    } else if (
      (arOptimusOptions["COUNTERS"]["USE_YA_COUNTER"] == "Y" &&
        arOptimusOptions["COUNTERS"]["YANDEX_ECOMERCE"] == "Y" &&
        arOptimusOptions["COUNTERS"]["YANDEX_COUNTER"] > 0) ||
      (arOptimusOptions["COUNTERS"]["GOOGLE_ECOMERCE"] == "Y" && arOptimusOptions["COUNTERS"]["GOOGLE_COUNTER"] > 0)
    ) {
      return true;
    } else {
      return false;
    }
  }
}

if (!funcDefined("addBasketCounter")) {
  function addBasketCounter(id) {
    if (arOptimusOptions["COUNTERS"]["USE_BASKET_GOALS"] !== "N") {
      var eventdata = { goal: "goal_basket_add", params: { id: id } };
      BX.onCustomEvent("onCounterGoals", [eventdata]);
    }
    if (checkCounters()) {
      $.ajax({
        url: arOptimusOptions["SITE_DIR"] + "ajax/goals.php",
        dataType: "json",
        type: "POST",
        data: { ID: id },
        success: function (item) {
          if (!!item && !!item.ID) {
            waitLayer(100, function () {
              dataLayer.push({
                event: arOptimusOptions["COUNTERS"]["GOOGLE_EVENTS"]["ADD2BASKET"],
                ecommerce: {
                  currencyCode: item.CURRENCY,
                  add: {
                    products: [
                      {
                        id: item.ID,
                        name: item.NAME,
                        price: item.PRICE,
                        brand: item.BRAND,
                        category: item.CATEGORY,
                        quantity: item.QUANTITY,
                      },
                    ],
                  },
                },
              });
            });
          }
        },
      });
    }
  }
}

if (!funcDefined("purchaseCounter")) {
  function purchaseCounter(order_id, type, callback) {
    if (checkCounters()) {
      $.ajax({
        url: arOptimusOptions["SITE_DIR"] + "ajax/goals.php",
        dataType: "json",
        type: "POST",
        data: { ORDER_ID: order_id, TYPE: type },
        success: function (order) {
          var products = [];
          if (order.ITEMS) {
            for (var i in order.ITEMS) {
              products.push({
                id: order.ITEMS[i].ID,
                sku: order.ITEMS[i].ID,
                name: order.ITEMS[i].NAME,
                price: order.ITEMS[i].PRICE,
                brand: order.ITEMS[i].BRAND,
                category: order.ITEMS[i].CATEGORY,
                quantity: order.ITEMS[i].QUANTITY,
              });
            }
          }
          if (order.ID) {
            waitLayer(100, function () {
              dataLayer.push({
                event: arOptimusOptions["COUNTERS"]["GOOGLE_EVENTS"]["PURCHASE"],
                ecommerce: (d = {
                  purchase: {
                    actionField: {
                      id: order.ACCOUNT_NUMBER,
                      shipping: order.PRICE_DELIVERY,
                      tax: order.TAX_VALUE,
                      list: type,
                      revenue: order.PRICE,
                    },
                    products: products,
                  },
                }),
              });

              if (typeof callback !== "undefined") {
                callback(d);
              }
            });
          } else {
            if (typeof callback !== "undefined") {
              callback(false);
            }
          }
        },
        error: function () {
          if (typeof callback !== "undefined") {
            callback(false);
          }
        },
      });
    } else {
      if (typeof callback !== "undefined") {
        callback(false);
      }
    }
  }
}

if (!funcDefined("viewItemCounter")) {
  function viewItemCounter(id, price_id) {
    if (checkCounters()) {
      $.ajax({
        url: arOptimusOptions["SITE_DIR"] + "ajax/goals.php",
        dataType: "json",
        type: "POST",
        data: { PRODUCT_ID: id, PRICE_ID: price_id },
        success: function (item) {
          if (item.ID) {
            waitLayer(100, function () {
              dataLayer.push({
                //"event": "",
                ecommerce: {
                  detail: {
                    products: [
                      {
                        id: item.ID,
                        name: item.NAME,
                        price: item.PRICE,
                        brand: item.BRAND,
                        category: item.CATEGORY,
                      },
                    ],
                  },
                },
              });
            });
          }
        },
      });
    }
  }
}

if (!funcDefined("checkoutCounter")) {
  function checkoutCounter(step, option, callback) {
    if (checkCounters("google")) {
      $.ajax({
        url: arOptimusOptions["SITE_DIR"] + "ajax/goals.php",
        dataType: "json",
        type: "POST",
        data: { BASKET: "Y" },
        success: function (basket) {
          var products = [];
          if (basket.ITEMS) {
            for (var i in basket.ITEMS) {
              products.push({
                id: basket.ITEMS[i].ID,
                name: basket.ITEMS[i].NAME,
                price: basket.ITEMS[i].PRICE,
                brand: basket.ITEMS[i].BRAND,
                category: basket.ITEMS[i].CATEGORY,
                quantity: basket.ITEMS[i].QUANTITY,
              });
            }
          }
          if (products) {
            waitLayer(100, function () {
              dataLayer.push({
                event: arOptimusOptions["COUNTERS"]["GOOGLE_EVENTS"]["CHECKOUT_ORDER"],
                ecommerce: {
                  checkout: {
                    actionField: {
                      step: step,
                      option: option,
                    },
                    products: products,
                  },
                },
                /*"eventCallback": function() {
							    	if((typeof callback !== 'undefined') && (typeof callback === 'function')){
							    		callback();
							    	}
							   }*/
              });
            });
          }
        },
      });
    }
  }
}

if (!funcDefined("delFromBasketCounter")) {
  function delFromBasketCounter(id, callback) {
    if (checkCounters()) {
      $.ajax({
        url: arOptimusOptions["SITE_DIR"] + "ajax/goals.php",
        dataType: "json",
        type: "POST",
        data: { ID: id },
        success: function (item) {
          if (item.ID) {
            waitLayer(100, function () {
              dataLayer.push({
                event: arOptimusOptions["COUNTERS"]["GOOGLE_EVENTS"]["REMOVE_BASKET"],
                ecommerce: {
                  remove: {
                    products: [
                      {
                        id: item.ID,
                        name: item.NAME,
                        category: item.CATEGORY,
                      },
                    ],
                  },
                },
              });
              if (typeof callback == "function") {
                callback();
              }
            });
          }
        },
      });
    }
  }
}

if (!funcDefined("setHeightCompany")) {
  function setHeightCompany() {
    $(".md-50.img").height($(".md-50.big").outerHeight() - 35);
  }
}

if (!funcDefined("initSly")) {
  function initSly() {
    var $frame = $(document).find(".frame");
    var $slidee = $frame.children("ul").eq(0);
    var $wrap = $frame.parent();

    if (arOptimusOptions["PAGES"]["CATALOG_PAGE"]) {
      $frame.sly({
        horizontal: 1,
        itemNav: "basic",
        smart: 1,
        mouseDragging: 0,
        touchDragging: 0,
        releaseSwing: 0,
        startAt: 0,
        scrollBar: $wrap.find(".scrollbar"),
        scrollBy: 1,
        speed: 300,
        elasticBounds: 0,
        easing: "swing",
        dragHandle: 1,
        dynamicHandle: 1,
        clickBar: 1,

        // Buttons
        forward: $wrap.find(".forward"),
        backward: $wrap.find(".backward"),
      });
      $frame.sly("reload");
    }
  }
}

if (!funcDefined("createTableCompare")) {
  function createTableCompare(originalTable, appendDiv, cloneTable) {
    try {
      var clone = originalTable.clone().removeAttr("id").addClass("clone");
      if (cloneTable.length) {
        cloneTable.remove();
        appendDiv.html("");
        appendDiv.html(clone);
      } else {
        appendDiv.append(clone);
      }
    } catch (e) {
    } finally {
    }
  }
}

if (!funcDefined("fillBasketPropsExt")) {
  fillBasketPropsExt = function (that, prop_code, basket_prop_div) {
    var i = 0,
      propCollection = null,
      foundValues = false,
      basketParams = {},
      obBasketProps = null;

    // obBasketProps = that.closest('.catalog_detail').find('.basket_props_block');
    if (that.closest("#fast_view_item").length)
      obBasketProps = that.closest("#fast_view_item").find("#" + basket_prop_div)[0];
    else obBasketProps = BX(basket_prop_div);

    if (!!obBasketProps) {
      propCollection = obBasketProps.getElementsByTagName("select");
      if (!!propCollection && !!propCollection.length) {
        for (i = 0; i < propCollection.length; i++) {
          if (!propCollection[i].disabled) {
            switch (propCollection[i].type.toLowerCase()) {
              case "select-one":
                basketParams[propCollection[i].name] = propCollection[i].value;
                foundValues = true;
                break;
              default:
                break;
            }
          }
        }
      }
      propCollection = obBasketProps.getElementsByTagName("input");
      if (!!propCollection && !!propCollection.length) {
        for (i = 0; i < propCollection.length; i++) {
          if (!propCollection[i].disabled) {
            switch (propCollection[i].type.toLowerCase()) {
              case "hidden":
                basketParams[propCollection[i].name] = propCollection[i].value;
                foundValues = true;
                break;
              case "radio":
                if (propCollection[i].checked) {
                  basketParams[propCollection[i].name] = propCollection[i].value;
                  foundValues = true;
                }
                break;
              default:
                break;
            }
          }
        }
      }
    }
    if (!foundValues) {
      basketParams[prop_code] = [];
      basketParams[prop_code][0] = 0;
    }
    return basketParams;
  };
}
if (!funcDefined("showBasketError")) {
  showBasketError = function (mess, title, addButton, th) {
    var title_set = title ? title : BX.message("ERROR_BASKET_TITLE"),
      isButton = "N",
      thButton = "";
    if (typeof addButton !== undefined) {
      isButton = "Y";
    }
    if (typeof th !== undefined) {
      thButton = th;
    }
    $("body").append("<span class='add-error-bakset' style='display:none;'></span>");
    jqmEd("basket_error", "error-bakset", ".add-error-bakset", mess, this, title_set, isButton, thButton);
    $("body .add-error-bakset").click();
    $("body .add-error-bakset").remove();
  };
}

if (!funcDefined("isRealValue")) {
  function isRealValue(obj) {
    return obj && obj !== "null" && obj !== "undefined";
  }
}

if (!funcDefined("rightScroll")) {
  function rightScroll(prop, id) {
    var el = BX("prop_" + prop + "_" + id);
    if (el) {
      var curVal = parseInt(el.style.marginLeft);
      if (curVal >= 0) el.style.marginLeft = curVal - 20 + "%";
    }
  }
}

if (!funcDefined("leftScroll")) {
  function leftScroll(prop, id) {
    var el = BX("prop_" + prop + "_" + id);
    if (el) {
      var curVal = parseInt(el.style.marginLeft);
      if (curVal < 0) el.style.marginLeft = curVal + 20 + "%";
    }
  }
}

if (!funcDefined("InitOrderCustom")) {
  InitOrderCustom = function () {
    $(".ps_logo img").wrap('<div class="image"></div>');

    $("#bx-soa-order .radio-inline").each(function () {
      if ($(this).find("input").attr("checked") == "checked") {
        $(this).addClass("checked");
      }
    });

    $("#bx-soa-order .checkbox input[type=checkbox]").each(function () {
      if ($(this).attr("checked") == "checked") $(this).parent().addClass("checked");
    });

    // $('#bx-soa-order .bx-authform-starrequired').each(function() {
    // 	var html = $(this).html();
    // 	$(this).closest('label').append('<span class="bx-authform-starrequired"> '+ html + '</span>');
    // 	$(this).detach();
    // });
    $(".bx_ordercart_coupon").each(function () {
      if ($(this).find(".bad").length) $(this).addClass("bad");
      else if ($(this).find(".good").length) $(this).addClass("good");
    });
    /*if (typeof(propsMap) !== 'undefined') {
			$(propsMap).on('click', function () {
				var value = $('#orderDescription').val();
				if ($('#orderDescription')) {
					if (value != '') {
						$('#orderDescription').closest('.form-group').addClass('value_y');
					}
				}
			});
		}*/
  };
}

if (!funcDefined("InitLabelAnimation")) {
  InitLabelAnimation = function (className) {
    // Fix order labels
    if (!$(className).length) {
      return;
    }
    $(className)
      .find(".form-group")
      .each(function () {
        if (
          $(this).find("input[type=text], textarea").length &&
          !$(this).find(".dropdown-block").length &&
          $(this).find("input[type=text], textarea").val() != ""
        ) {
          $(this).addClass("value_y");
        }
      });

    $(document).on("click", className + " .form-group:not(.bx-soa-pp-field) label", function () {
      $(this).parent().find("input, textarea").focus();
    });

    $(document).on(
      "focusout",
      className +
        " .form-group:not(.bx-soa-pp-field) input, " +
        className +
        " .form-group:not(.bx-soa-pp-field) textarea",
      function () {
        var value = $(this).val();
        if (
          value != "" &&
          !$(this).closest(".form-group").find(".dropdown-block").length &&
          !$(this).closest(".form-group").find("#profile_change").length
        ) {
          $(this).closest(".form-group").addClass("value_y");
        } else {
          $(this).closest(".form-group").removeClass("value_y");
        }
      }
    );

    $(document).on(
      "focus",
      className +
        " .form-group:not(.bx-soa-pp-field) input, " +
        className +
        " .form-group:not(.bx-soa-pp-field) textarea",
      function () {
        if (
          !$(this).closest(".form-group").find(".dropdown-block").length &&
          !$(this).closest(".form-group").find("#profile_change").length &&
          !$(this).closest(".form-group").find("[name=PERSON_TYPE_OLD]").length
        ) {
          $(this).closest(".form-group").addClass("value_y");
        }
      }
    );
  };
}

checkPopupWidth = function () {
  $(".popup.show").each(function () {
    var width_form = $(this).actual("width");
    $(this).css({
      "margin-left": $(window).width() > width_form ? "-" + width_form / 2 + "px" : "-" + $(window).width() / 2 + "px",
    });
  });
};

checkCaptchaWidth = function () {
  $(".captcha-row").each(function () {
    var width = $(this).actual("width");
    if ($(this).hasClass("b")) {
      if (width > 320) {
        $(this).removeClass("b");
      }
    } else {
      if (width <= 320) {
        $(this).addClass("b");
      }
    }
  });
};

checkFormWidth = function () {
  $(".form .form_left").each(function () {
    var form = $(this).parents(".form");
    var width = form.actual("width");
    if (form.hasClass("b")) {
      if (width > 417) {
        form.removeClass("b");
      }
    } else {
      if (width <= 417) {
        form.addClass("b");
      }
    }
  });
};

checkFormControlWidth = function () {
  $(".form-control").each(function () {
    var width = $(this).actual("width");
    var labelWidth = $(this).find("label:not(.error) > span").actual("width");
    var errorWidth = $(this).find("label.error").actual("width");
    if (errorWidth > 0) {
      if ($(this).hasClass("h")) {
        if (width > labelWidth + errorWidth + 5) {
          $(this).removeClass("h");
        }
      } else {
        if (width <= labelWidth + errorWidth + 5) {
          $(this).addClass("h");
        }
      }
    } else {
      $(this).removeClass("h");
    }
  });
};

scrollToTop = function () {
  if (arOptimusOptions["THEME"]["SCROLLTOTOP_TYPE"] !== "NONE") {
    var _isScrolling = false;
    // Append Button
    $("body").append(
      $("<a />")
        .addClass(
          "scroll-to-top " +
            arOptimusOptions["THEME"]["SCROLLTOTOP_TYPE"] +
            " " +
            arOptimusOptions["THEME"]["SCROLLTOTOP_POSITION"]
        )
        .attr({ href: "#", id: "scrollToTop" })
    );
    $("#scrollToTop").click(function (e) {
      e.preventDefault();
      $("body, html").animate({ scrollTop: 0 }, 500);
      return false;
    });
    // Show/Hide Button on Window Scroll event.
    $(window).scroll(function () {
      if (!_isScrolling) {
        _isScrolling = true;
        if ($(window).scrollTop() > 150) {
          $("#scrollToTop").stop(true, true).addClass("visible");
          _isScrolling = false;
        } else {
          $("#scrollToTop").stop(true, true).removeClass("visible");
          _isScrolling = false;
        }
        checkScrollToTop();
      }
    });
  }
};

checkScrollToTop = function () {
  var bottom = 55,
    scrollVal = $(window).scrollTop(),
    windowHeight = $(window).height(),
    footerOffset = 70;
  if ($("footer").length) footerOffset = $("footer").offset().top + 70;

  if (arOptimusOptions["THEME"]["SCROLLTOTOP_POSITION"] == "CONTENT") {
    warpperWidth = $("body > .wrapper > .wrapper_inner").width();
    $("#scrollToTop").css("margin-left", Math.ceil(warpperWidth / 2) + 23);
  }

  if (scrollVal + windowHeight > footerOffset) {
    $("#scrollToTop").css("bottom", bottom + scrollVal + windowHeight - footerOffset - 0);
  } else if (parseInt($("#scrollToTop").css("bottom")) > bottom) {
    $("#scrollToTop").css("bottom", bottom);
  }
};

CheckObjectsSizes = function () {
  $(".container iframe,.container object,.container video").each(function () {
    var height_attr = $(this).attr("height");
    var width_attr = $(this).attr("width");
    if (height_attr && width_attr) {
      $(this).css("height", ($(this).outerWidth() * height_attr) / width_attr);
    }
  });
};

if (!funcDefined("reloadTopBasket")) {
  var reloadTopBasket = function reloadTopBasket(action, basketWindow, speed, delay, slideDown, item) {
    var obj = {
      PARAMS: $("#top_basket_params").val(),
      ACTION: action,
    };
    if (typeof item !== "undefined") {
      obj.delete_top_item = "Y";
      obj.delete_top_item_id = item.data("id");
    }
    $.post(
      arOptimusOptions["SITE_DIR"] + "ajax/show_basket_popup.php",
      obj,
      $.proxy(function (data) {
        $(basketWindow).html(data);

        getActualBasket();

        if (arOptimusOptions["THEME"]["SHOW_BASKET_ONADDTOCART"] !== "N") {
          if ($(window).outerWidth() > 520) {
            if (slideDown == "Y") $(basketWindow).find(".basket_popup_wrapp").stop(true, true).slideDown(speed);
            clearTimeout(basketTimeoutSlide);
            basketTimeoutSlide = setTimeout(function () {
              var _this = $("#basket_line").find(".basket_popup_wrapp");
              if (_this.is(":hover")) {
                _this.show();
              } else {
                $("#basket_line").find(".basket_popup_wrapp").slideUp(speed);
              }
            }, delay);
          }
        }
      })
    );
  };
}

/*countdown start*/

if (!funcDefined("initCountdown")) {
  var initCountdown = function initCountdown() {
    if ($(".view_sale_block").size()) {
      $(".view_sale_block").each(function () {
        var activeTo = $(this).find(".active_to").text(),
          dateTo = new Date(activeTo.replace(/(\d+)\.(\d+)\.(\d+)/, "$3/$2/$1"));
        $(this).find(".countdown").countdown(
          {
            until: dateTo,
            format: "dHMS",
            padZeroes: true,
            layout:
              '{d<}<span class="days item">{dnn}<div class="text">{dl}</div></span>{d>} <span class="hours item">{hnn}<div class="text">{hl}</div></span> <span class="minutes item">{mnn}<div class="text">{ml}</div></span> <span class="sec item">{snn}<div class="text">{sl}</div></span>',
          },
          $.countdown.regionalOptions["ru"]
        );
      });
    }
  };
}

if (!funcDefined("initCountdownTime")) {
  var initCountdownTime = function initCountdownTime(block, time) {
    if (time) {
      var dateTo = new Date(time.replace(/(\d+)\.(\d+)\.(\d+)/, "$3/$2/$1"));
      block.find(".countdown").countdown("destroy");
      block.find(".countdown").countdown(
        {
          until: dateTo,
          format: "dHMS",
          padZeroes: true,
          layout:
            '{d<}<span class="days item">{dnn}<div class="text">{dl}</div></span>{d>} <span class="hours item">{hnn}<div class="text">{hl}</div></span> <span class="minutes item">{mnn}<div class="text">{ml}</div></span> <span class="sec item">{snn}<div class="text">{sl}</div></span>',
        },
        $.countdown.regionalOptions["ru"]
      );
      block.find(".view_sale_block").show();
    } else {
      block.find(".view_sale_block").hide();
    }
  };
}

/*countdown end*/

var isOnceInited = (insertFilter = false);
var animationTime = 200;
var delayTime = 200;
var topMenuEnterTimer = false;
var isMobile = jQuery.browser.mobile;

if (isMobile) {
  document.documentElement.className += " mobile";
}

/*filter start*/
if (!funcDefined("checkVerticalMobileFilter")) {
  var checkVerticalMobileFilter = function checkVerticalMobileFilter() {
    if ($(".right_block1.catalog.vertical").length && !$(".left_block.filter_ajax").length) {
      if (typeof window["trackBarOptions"] !== "undefined") {
        window["trackBarValues"] = {};
        for (key in window["trackBarOptions"]) {
          window["trackBarValues"][key] = {
            leftPercent: window["trackBar" + key].leftPercent,
            leftValue: window["trackBar" + key].minInput.value,
            rightPercent: window["trackBar" + key].rightPercent,
            rightValue: window["trackBar" + key].maxInput.value,
          };
        }
      }

      if (window.matchMedia("(max-width: 950px)").matches) {
        if (!insertFilter) {
          $(".js_filter .bx_filter.bx_filter_vertical").html($(".left_block .bx_filter.bx_filter_vertical").html());
          $(".left_block .bx_filter.bx_filter_vertical .bx_filter_section").remove();
          insertFilter = true;
        }
      } else {
        if (insertFilter) {
          $(".left_block .bx_filter.bx_filter_vertical").html($(".js_filter .bx_filter.bx_filter_vertical").html());
          $(".js_filter .bx_filter.bx_filter_vertical .bx_filter_section").remove();
          insertFilter = false;
        }
      }

      if (typeof window["trackBarOptions"] !== "undefined") {
        for (key in window["trackBarOptions"]) {
          window["trackBarOptions"][key].leftPercent = window["trackBarValues"][key].leftPercent;
          window["trackBarOptions"][key].rightPercent = window["trackBarValues"][key].rightPercent;
          window["trackBarOptions"][key].curMinPrice = window["trackBarValues"][key].leftValue;
          window["trackBarOptions"][key].curMaxPrice = window["trackBarValues"][key].rightValue;
          window["trackBar" + key] = new BX.Iblock.SmartFilter(window["trackBarOptions"][key]);
          window["trackBar" + key].minInput.value = window["trackBarValues"][key].leftValue;
          window["trackBar" + key].maxInput.value = window["trackBarValues"][key].rightValue;
        }
      }
    } else if ($(".left_block.filter_ajax").length) {
      var posBlock = $(".ajax_load").position();

      $(".left_block.filter_ajax .bx_filter").css("top", posBlock.top - 13);
      if (
        $(".left_block.filter_ajax .bx_filter").is(":visible") &&
        !$(".adaptive_filter .filter_opener").hasClass("opened") &&
        window.matchMedia("(max-width: 950px)").matches
      ) {
        $(".adaptive_filter .filter_opener").addClass("opened");
      }
    }
  };
}
/*filter end*/

// TOP MENU ANIMATION
$(document).on("click", ".menu_top_block>li .more a", function () {
  $this = $(this);
  $this.parents(".dropdown").first().find(">.hidden").removeClass("hidden");
  $this.parent().addClass("hidden");
  setTimeout(function () {
    $this.parent().remove();
  }, 500);
});

$(document).on("mouseenter", ".menu_top_block.catalogfirst>li>.dropdown>li.full", function () {
  var $submenu = $(this).find(">.dropdown");

  if ($submenu.length) {
    if (topMenuEnterTimer) {
      clearTimeout(topMenuEnterTimer);
      topMenuEnterTimer = false;
    }
  }
});

$(document).on("mouseenter", ".menu_top_block>li:not(.full)", function () {
  var $submenu = $(this).find(">.dropdown");

  if ($submenu.length && !$submenu.hasClass("visible")) {
    var $menu = $(this).parents(".menu");
    var $wrapmenu = $menu.parents(".wrap_menu");
    var wrapMenuWidth = $wrapmenu.actual("outerWidth");
    var wrapMenuLeft = $wrapmenu.offset().left;
    var wrapMenuRight = wrapMenuLeft + wrapMenuWidth;
    var left = wrapMenuRight - ($(this).offset().left + $submenu.actual("outerWidth"));
    if (
      window.matchMedia("(min-width: 951px)").matches &&
      $(this).hasClass("catalog") &&
      ($(".banner_auto").hasClass("catalog_page") || $(".banner_auto").hasClass("front_page"))
    ) {
      return;
    }
    if (left < 0) {
      $submenu.css({ left: left + "px" });
    }
    $submenu.stop().slideDown(animationTime, function () {
      $submenu.css({ height: "", overflow: "visible" });
    });

    $(this).on("mouseleave", function () {
      var leaveTimer = setTimeout(function () {
        $submenu.stop().slideUp(animationTime, function () {
          $submenu.css({ left: "" });
        });
      }, delayTime);

      $(this).on("mouseenter", function () {
        if (leaveTimer) {
          clearTimeout(leaveTimer);
          leaveTimer = false;
        }
      });
    });
  }
});

$(document).on("mouseenter", ".menu_top_block>li:not(.full)", function () {
  if (
    window.matchMedia("(min-width: 951px)").matches &&
    $(this).hasClass("catalog") &&
    ($(".banner_auto").hasClass("catalog_page") || $(".banner_auto").hasClass("front_page"))
  ) {
    return;
  }

  var _this = $(this).find(">.dropdown");
  var $catalogNlo = _this.find("[data-nlo]");
  var isNloLoaded = !$catalogNlo.length;

  if (!isNloLoaded) {
    if (!$catalogNlo.hasClass("nlo-loadings")) {
      $catalogNlo.addClass("nlo-loadings");
      setTimeout(function () {
        $.ajax({
          data: { nlo: $catalogNlo.attr("data-nlo") },
          success: function (response) {
            // stop ya metrika webvisor DOM indexer
            pauseYmObserver();

            isNloLoaded = true;
            $catalogNlo[0].insertAdjacentHTML("beforebegin", $.trim(response));
            $catalogNlo.remove();

            // resume ya metrika webvisor
            // (300ms transition) + (100ms scroll handler)
            setTimeout(resumeYmObserver, 400);
          },
          error: function () {
            $catalogNlo.removeClass("nlo-loadings");
          },
        });
      }, 300);
    }
  }
});

$(document).on("mouseenter", ".menu_top_block>li .dropdown>li", function () {
  var $this = $(this);
  var $submenu = $this.find(">.dropdown");

  if (
    $submenu.length &&
    ((!$this.parents(".full").length && !$this.hasClass("full")) || $this.parents(".more").length)
  ) {
    var $menu = $this.parents(".menu");
    var $wrapmenu = $menu.parents(".wrap_menu");
    var arParentSubmenuForOpacity = [];
    topMenuEnterTimer = setTimeout(function () {
      var wrapMenuWidth = $wrapmenu.actual("outerWidth");
      var wrapMenuLeft = $wrapmenu.offset().left;
      var wrapMenuRight = wrapMenuLeft + wrapMenuWidth;
      var $parentSubmenu = $this.parent();
      var bToLeft = $parentSubmenu.hasClass("toleft") ? true : false;
      if (!bToLeft) {
        bToLeft = $this.offset().left + $this.actual("outerWidth") + $submenu.actual("outerWidth") > wrapMenuRight;
      } else {
        bToLeft = $this.offset().left + $this.actual("outerWidth") - $submenu.actual("outerWidth") < wrapMenuLeft;
      }

      if (bToLeft) {
        $this.find(">.dropdown").addClass("toleft").show();
      } else {
        $this.find(">.dropdown").removeClass("toleft").show();
      }
      var submenuLeft = $submenu.offset().left;
      var submenuRight = submenuLeft + $submenu.actual("outerWidth");

      $this.parents(".dropdown").each(function () {
        var $this = $(this);
        var leftOffset = $this.offset().left;
        var rightOffset = leftOffset + $this.actual("outerWidth");
        if (
          (leftOffset >= submenuLeft && leftOffset < submenuRight - 1) ||
          (rightOffset > submenuLeft + 1 && rightOffset <= submenuRight)
        ) {
          arParentSubmenuForOpacity.push($this);
          $this.find(">li>a").css({ opacity: "0.1" });
        }
      });
    }, delayTime);

    $this.unbind("mouseleave");
    $this.on("mouseleave", function () {
      var leaveTimer = setTimeout(function () {
        $this.find(".dropdown").removeClass("toleft").hide();
        if (arParentSubmenuForOpacity.length) {
          for (i in arParentSubmenuForOpacity) {
            arParentSubmenuForOpacity[i].find(">li>a").css({ opacity: "" });
          }
        }
      }, delayTime);

      $this.unbind("mouseenter");
      $this.on("mouseenter", function () {
        if (leaveTimer) {
          clearTimeout(leaveTimer);
          leaveTimer = false;
        }
      });
    });
  }
});

getGridSize = function (counts) {
  var counts_item = 1;
  //wide
  if (window.matchMedia("(min-width: 1200px)").matches) {
    counts_item = counts[0];
  }

  //large
  if (window.matchMedia("(max-width: 1200px)").matches) {
    counts_item = counts[1];
  }

  //middle
  if (window.matchMedia("(max-width: 992px)").matches) {
    counts_item = counts[2];
  }

  //small
  if (counts[3]) {
    if (window.matchMedia("(max-width: 600px)").matches) {
      counts_item = counts[3];
    }
  }

  //exsmall
  if (counts[4]) {
    if (window.matchMedia("(max-width: 400px)").matches) {
      counts_item = counts[4];
    }
  }

  return counts_item;
};

CheckFlexSlider = function () {
  $(".flexslider:not(.thmb)").each(function () {
    var slider = $(this);
    slider.resize();
    var counts = slider.data("flexslider").vars.counts;
    if (typeof counts != "undefined") {
      var cnt = getGridSize(counts);
      var to0 =
        cnt != slider.data("flexslider").vars.minItems ||
        cnt != slider.data("flexslider").vars.maxItems ||
        cnt != slider.data("flexslider").vars.move;
      if (to0) {
        slider.data("flexslider").vars.minItems = cnt;
        slider.data("flexslider").vars.maxItems = cnt;
        slider.data("flexslider").vars.move = cnt;
        slider.flexslider(0);
        slider.resize();
        slider.resize(); // twise!
      }
    }
  });
};

InitFlexSlider = function () {
  $(".flexslider:not(.thmb):not(.flexslider-init)").each(function () {
    var slider = $(this);
    var options;
    var defaults = {
      animationLoop: false,
      controlNav: false,
      directionNav: true,
      animation: "slide",
    };
    var config = $.extend({}, defaults, options, slider.data("plugin-options"));
    if (!slider.parent().hasClass("top_slider_wrapp")) {
      if (typeof config.counts != "undefined" && config.direction !== "vertical") {
        config.maxItems = getGridSize(config.counts);
        config.minItems = getGridSize(config.counts);
        config.move = getGridSize(config.counts);
        config.itemWidth = 200;
      }

      config.after = function (slider) {
        var eventdata = { slider: slider };
        BX.onCustomEvent("onSlide", [eventdata]);
      };
      config.start = function (slider) {
        var eventdata = { slider: slider };
        BX.onCustomEvent("onSlideInit", [eventdata]);
      };

      config.end = function (slider) {
        var eventdata = { slider: slider };
        BX.onCustomEvent("onSlideEnd", [eventdata]);
      };

      slider.flexslider(config).addClass("flexslider-init");
      if (config.controlNav) slider.addClass("flexslider-control-nav");
      if (config.directionNav) slider.addClass("flexslider-direction-nav");
    }
  });
};

InitZoomPict = function (el) {
  var block = $(".zoom_picture");
  if (typeof el !== "undefined") block = el;
  if (block.length) {
    var slide = block.closest(".slides");
    var zoomer = block,
      options,
      defaults = {
        zoomWidth: 200,
        zoomHeight: 200,
        adaptive: false,
        title: true,
        Xoffset: 15,
      };
    var config = $.extend({}, defaults, options, zoomer.data("plugin-options"));
    zoomer.xzoom(config);

    block.on("mouseleave", function () {
      block.data("xzoom").movezoom(event);
      /*
			if($('.xzoom-lens').length)
				block.data('xzoom').closezoom();
			*/
    });
  }
};

if (!funcDefined("pauseYmObserver")) {
  // pause ya metrika webvisor MutationObserver callback (DOM indexer)
  // use before insert html with some animation
  pauseYmObserver = function () {
    if (
      typeof MutationObserver === "function" &&
      typeof MutationObserver.observers === "object" &&
      typeof MutationObserver.observers.ym === "object"
    ) {
      if (typeof pauseYmObserver.cnt === "undefined") {
        pauseYmObserver.cnt = 0;
      }

      ++pauseYmObserver.cnt;

      if (!MutationObserver.observers.ym.paused) {
        MutationObserver.observers.ym.pause();
      }
    }
  };
}

if (!funcDefined("resumeYmObserver")) {
  // resume ya metrika webvisor MutationObserver callback
  // use when animation finished
  resumeYmObserver = function () {
    if (
      typeof MutationObserver === "function" &&
      typeof MutationObserver.observers === "object" &&
      typeof MutationObserver.observers.ym === "object"
    ) {
      if (typeof pauseYmObserver.cnt === "undefined") {
        pauseYmObserver.cnt = 1;
      }

      pauseYmObserver.cnt -= pauseYmObserver.cnt > 0 ? 1 : 0;

      if (!pauseYmObserver.cnt && MutationObserver.observers.ym.paused) {
        MutationObserver.observers.ym.resume();
      }
    }
  };
}

var arBasketAsproCounters = {};
SetActualBasketFlyCounters = function () {
  if (arBasketAsproCounters.DEFAULT == true) {
    $.ajax({
      url: arOptimusOptions["SITE_DIR"] + "ajax/basket_fly.php",
      type: "post",
      success: function (html) {
        $("#basket_line .basket_fly").addClass("loaded").html(html);
      },
    });
  } else {
    $(".basket_fly .opener .basket_count .count")
      .attr("class", "count" + (arBasketAsproCounters.READY.COUNT > 0 ? "" : " empty_items"))
      .find(".items span")
      .text(arBasketAsproCounters.READY.COUNT);
    $(".basket_fly .opener .basket_count + a").attr("href", arBasketAsproCounters["READY"]["HREF"]);
    $(".basket_fly .opener .basket_count")
      .attr("title", arBasketAsproCounters.READY.TITLE)
      .attr("class", "basket_count small clicked" + (arBasketAsproCounters.READY.COUNT > 0 ? "" : " empty"));

    $(".basket_fly .opener .wish_count .count")
      .attr("class", "count" + (arBasketAsproCounters.DELAY.COUNT > 0 ? "" : " empty_items"))
      .find(".items span")
      .text(arBasketAsproCounters.DELAY.COUNT);
    $(".basket_fly .opener .wish_count + a").attr("href", arBasketAsproCounters.DELAY.HREF);
    $(".basket_fly .opener .wish_count")
      .attr("title", arBasketAsproCounters.DELAY.TITLE)
      .attr("class", "wish_count small clicked" + (arBasketAsproCounters.DELAY.COUNT > 0 ? "" : " empty"));

    $(".basket_fly .opener .compare_count .count")
      .attr("class", "count" + (arBasketAsproCounters.COMPARE.COUNT > 0 ? "" : " empty_items"))
      .find(".items span")
      .text(arBasketAsproCounters.COMPARE.COUNT);
    $(".basket_fly .opener .compare_count + a").attr("href", arBasketAsproCounters.COMPARE.HREF);

    $(".basket_fly .opener .user_block")
      .attr("title", arBasketAsproCounters.PERSONAL.TITLE)
      .find("+ a")
      .attr("href", arBasketAsproCounters.PERSONAL.HREF);
    $(".basket_fly .opener .user_block .wraps_icon_block")
      .attr(
        "class",
        "wraps_icon_block" +
          (arBasketAsproCounters.PERSONAL.ID > 0 ? " user_auth" : " user_reg") +
          (arBasketAsproCounters.PERSONAL.SRC ? " w_img" : " no_img")
      )
      .attr(
        "style",
        arBasketAsproCounters.PERSONAL.SRC
          ? 'background:url("' + arBasketAsproCounters.PERSONAL.SRC + '") center center no-repeat;'
          : ""
      );

    const eventdata = { action: "loadActualBasket" };
    BX.onCustomEvent("onCompleteAction", [eventdata]);
  }
};

/*set price item*/
if (!funcDefined("setPriceItem")) {
  var setPriceItem = function setPriceItem(main_block, quantity, rewrite_price, check_quantity, is_sku) {
    var old_quantity = main_block.find(".to-cart").attr("data-ratio"),
      value =
        typeof rewrite_price !== "undefined" && rewrite_price
          ? rewrite_price
          : main_block.find(".to-cart").attr("data-value"),
      currency = main_block.find(".to-cart").attr("data-currency"),
      total_block = '<div class="total_summ"><div>' + BX.message("TOTAL_SUMM_ITEM") + "<span></span></div></div>",
      price_block = main_block.find(".cost.prices"),
      check = typeof check_quantity !== "undefined" && check_quantity;

    if (main_block.find(".buy_block").length) {
      if (!main_block.find(".buy_block .total_summ").length) $(total_block).appendTo(main_block.find(".buy_block"));
    } else if (main_block.find(".counter_wrapp").length) {
      if (!main_block.find(".counter_wrapp .total_summ").length)
        $(total_block).appendTo(main_block.find(".counter_wrapp:first"));
    }
    if (main_block.find(".total_summ").length) {
      if (value && currency) {
        if (
          ((1 == quantity && old_quantity == quantity) || (typeof is_sku !== "undefined" && is_sku && !check)) &&
          arOptimusOptions.THEME.SHOW_TOTAL_SUMM !== "ALWAYS"
        ) {
          main_block.find(".total_summ").slideUp(200);
        } else {
          main_block.find(".total_summ span").html(BX.Currency.currencyFormat(value * quantity, currency, true));
          if (main_block.find(".total_summ").is(":hidden")) main_block.find(".total_summ").slideDown(200);
        }
      } else main_block.find(".total_summ").slideUp(200);
    }
  };
}

if (!funcDefined("getCurrentPrice")) {
  var getCurrentPrice = function getCurrentPrice(price, currency, print_price) {
    var val = "";
    var format_value = BX.Currency.currencyFormat(price, currency);
    if (print_price.indexOf(format_value) >= 0) {
      val = print_price.replace(
        format_value,
        '<span class="price_value">' + format_value + '</span><span class="price_currency">'
      );
      val += "</span>";
    } else {
      val = print_price;
    }

    return val;
  };
}

$(document).ready(function () {
  //ecommerce order
  if (arOptimusOptions["PAGES"]["ORDER_PAGE"]) {
    var arUrl = parseUrlQuery();
    if ("ORDER_ID" in arUrl) {
      var _id = arUrl["ORDER_ID"];
      if (arOptimusOptions["COUNTERS"]["USE_FULLORDER_GOALS"] !== "N") {
        var eventdata = { goal: "goal_order_success", result: _id };
        BX.onCustomEvent("onCounterGoals", [eventdata]);
      }

      if (checkCounters()) {
        if (typeof BX.localStorage !== "undefined") {
          var d = BX.localStorage.get("gtm_e_" + _id);
          if (typeof d === "object") {
            waitLayer(100, function () {
              dataLayer.push({ event: arOptimusOptions["COUNTERS"]["GOOGLE_EVENTS"]["PURCHASE"], ecommerce: d });
            });
          }

          if (typeof localStorage !== "undefined") {
            localStorage.removeItem("gtm_e_" + _id);
          }
        }
      }
    }
  }

  // ya.metrika debug
  if (arOptimusOptions["COUNTERS"]["USE_DEBUG_GOALS"] === "Y") {
    $.cookie("_ym_debug", 1, { path: "/" });
  } else {
    $.cookie("_ym_debug", null, { path: "/" });
  }

  scrollToTop();
  checkVerticalMobileFilter();
  checkFormWidth();

  if (!jQuery.browser.safari) {
    setTimeout(function () {
      InitTopestMenuGummi();
      InitTopMenuGummi();
      isOnceInited = true;

      InitFlexSlider();

      // setTimeout(function() {$(window).resize();}, 150); // need to check resize flexslider & menu

      try {
        // SHOW TOP MENU ON READY AFTER GUMMI
        $("header .wrap_menu").css({ overflow: "visible" });
        $(".visible_on_ready").removeClass("visible_on_ready");
      } catch (e) {
        console.error(e);
      }
    }, 100);
  } else {
    setTimeout(function () {
      $(window).resize(); // need to check resize flexslider & menu
      setTimeout(function () {
        InitTopestMenuGummi();
        InitTopMenuGummi();
        isOnceInited = true;

        InitFlexSlider();

        try {
          // SHOW TOP MENU ON READY AFTER GUMMI
          $("header .wrap_menu").css({ overflow: "visible" });
          $(".visible_on_ready").removeClass("visible_on_ready");
        } catch (e) {
          console.error(e);
        }

        setTimeout(function () {
          $(window).scroll();
        }, 50);
      }, 50);
    }, 350);
  }

  InitZoomPict();

  $("body").on("click", ".captcha_reload", function (e) {
    var captcha = $(this).parents(".captcha-row");
    e.preventDefault();
    $.ajax({
      url: arOptimusOptions["SITE_DIR"] + "ajax/captcha.php",
    }).done(function (text) {
      captcha.find("input[name=captcha_sid]").val(text);
      captcha.find("img").attr("src", "/bitrix/tools/captcha.php?captcha_sid=" + text);
      captcha.find("input[name=captcha_word]").val("").removeClass("error");
      captcha.find(".captcha_input").removeClass("error").find(".error").remove();
    });
  });

  setTimeout(function () {
    $(".bg_image_site").css({
      opacity: 1,
    });
  }, 200);

  if (window.matchMedia("(min-width: 768px)").matches) {
    $(".wrapper_middle_menu.wrap_menu").removeClass("mobile");
  }

  if (window.matchMedia("(max-width: 767px)").matches) {
    $(".wrapper_middle_menu.wrap_menu").addClass("mobile");
  }

  setTimeout(function () {
    $(window).scroll();
  }, 400);

  $(".menu_top_block .v_bottom > a").on("click", function (e) {
    if ($(e.target).hasClass("toggle_block")) e.preventDefault();
  });
  $(".menu_top_block .v_bottom > a .toggle_block").on("click", function (e) {
    $(this).closest(".v_bottom").toggleClass("opened");
    $(this).closest(".v_bottom").find(">.dropdown").slideToggle();
  });

  $(document).on("click", ".show_props",  function() {
    $(this).prev(".props_list_wrapp").stop().slideToggle(333);
    $(this).find(".char_title").toggleClass("opened");
  });

  $(document).on(
    "mouseenter",
    ".menu_top_block.catalog_block >.dropdown>li.m_line, .menu_top_block.catalogfirst > li >.dropdown>li.m_line",
    function () {
      var _this = $(this);
      if (window.dropdownTimeout && window.dropdownTimeout[_this.index()]) {
        clearTimeout(window.dropdownTimeout[_this.index()]);
      }

      var dropdown = _this.find("> ul");
      if (dropdown.length) {
        var offset = dropdown[0].getBoundingClientRect();
        var offsetLi = _this[0].getBoundingClientRect();
        var offsetUl = _this.closest("ul")[0].getBoundingClientRect();
        var bottomOuter = document.documentElement.clientHeight - offset.y - offset.height;
        if (bottomOuter < 0) {
          if (offset.height > document.documentElement.clientHeight && offsetUl.y < 0) {
            var dropdownTopMax = -offsetLi.y;
          } else {
            var dropdownTopMax = offsetUl.y - offsetLi.y;
          }
          var dropdownBottom = document.documentElement.clientHeight - offset.y - offsetLi.height;
          var dropdownTop = dropdownBottom + offsetLi.height - offset.height;
          if (dropdownTop < dropdownTopMax) {
            dropdownTop = dropdownTopMax;
          }
          dropdown.css({
            top: dropdownTop + "px",
            bottom: -dropdownBottom + "px",
            overflow: "auto",
          });
        }
      }
    }
  );

  $(document).on(
    "mouseleave",
    ".menu_top_block.catalog_block >.dropdown>li.m_line, .menu_top_block.catalogfirst > li >.dropdown>li.m_line",
    function () {
      var _this = $(this);
      var dropdown = _this.find("> ul");
      if (dropdown.length) {
        if (!window.dropdownTimeout) {
          window.dropdownTimeout = {};
        }
        window.dropdownTimeout[_this.index()] = setTimeout(function () {
          dropdown.css({
            top: "",
            bottom: "",
          });
        }, 300);
      }
    }
  );

  $(document).on("click", ".see_more",  function(e) {
    e.preventDefault();
    var see_more = $(this).is(".see_more") ? $(this) : $(this).parents(".see_more").first();
    var see_moreText = see_more.find("> a").length ? see_more.find("> a") : see_more;
    var see_moreHiden = see_more.parent().find("> .d");
    if (see_more.hasClass("open")) {
      see_moreText.text(BX.message("CATALOG_VIEW_MORE"));
      see_more.removeClass("open");
      see_moreHiden.hide();
    } else {
      see_moreText.text(BX.message("CATALOG_VIEW_LESS"));
      see_more.addClass("open");
      see_moreHiden.show();
    }
    return false;
  });

  $(".button.faq_button").click(function (e) {
    e.preventDefault();
    $(this).toggleClass("opened");
    $(".faq_ask .form").slideToggle();
  });

  $(".staff.list .staff_section .staff_section_title a").click(function (e) {
    e.preventDefault();
    $(this).parents(".staff_section").toggleClass("opened");
    $(this).parents(".staff_section").find(".staff_section_items").stop().slideToggle(600);
    $(this).parents(".staff_section_title").find(".opener_icon").toggleClass("opened");
  });

  $(".jobs_wrapp .item .name").click(function (e) {
    $(this).closest(".item").toggleClass("opened");
    $(this).closest(".item").find(".description_wrapp").stop().slideToggle(600);
    $(this).closest(".item").find(".opener_icon").toggleClass("opened");
  });

  $(document).on("click", ".faq.list .item .q a",  function(e) {
    e.preventDefault();
    $(this).parents(".item").toggleClass("opened");
    $(this).parents(".item").find(".a").stop().slideToggle();
    $(this).parents(".item").find(".q .opener_icon").toggleClass("opened");
  });

  $(".opener_icon").click(function (e) {
    e.preventDefault();
    $(this).parent().find("a").trigger("click");
  });

  $(document).on("click", ".to-order",  function(e) {
    e.preventDefault();
    $("body").append("<span class='evb-toorder' style='display:none;'></span>");
    jqmEd("to-order", arOptimusOptions["FORM"]["TOORDER_FORM_ID"], ".evb-toorder", "", this);
    $("body .evb-toorder").click();
    $("body .evb-toorder").remove();
  });

  $(document).on("click", ".cheaper",  function(e) {
    e.preventDefault();
    $("body").append("<span class='evb-cheaper' style='display:none;'></span>");
    jqmEd("cheaper", arOptimusOptions["FORM"]["CHEAPER_FORM_ID"], ".evb-cheaper", "", this);
    $("body .evb-cheaper").click();
    $("body .evb-cheaper").remove();
  });

  $(document).on('click', '.delivery', function(e){
		e.preventDefault();
		var dataProductId = $(this).data('param-product_id');
		var dataQuantity = $(this).data('param-quantity');
		$("body").append("<span class='evb-delivery' style='display:none;'></span>");
		jqmEd('delivery', arOptimusOptions['FORM']['DELIVERY_FORM_ID'].toLowerCase(), '.evb-delivery', 'product_id='+dataProductId+'&quantity='+dataQuantity, this);
		$("body .evb-delivery").click();
		$("body .evb-delivery").remove();
	
	});
	$(".animate-load").on("click", function () {
		if (!jQuery.browser.mobile) {
			$(this).parent().addClass("loadings");
		}
  });
	 
	// init calculate delivery with preview
	initCalculatePreview(); 

  //$(".dotdot").dotdotdot();

  $(document).on("click", ".more_block",  function() {
    var content_offset = $(".catalog_detail .tabs_section").offset();
    $("html, body").animate({ scrollTop: content_offset.top - 23 }, 400);
  });

  $(document).on("click", ".counter_block:not(.basket) .plus", function () {
    if (!$(this).parents(".basket_wrapp").length) {
      if ($(this).parent().data("offers") != "Y") {
        var isDetailSKU2 = $(this).parents(".counter_block_wr").length,
          input = $(this).parents(".counter_block").find("input[type=text]"),
          tmp_ratio = !isDetailSKU2
            ? $(this).parents(".counter_wrapp").find(".to-cart").data("ratio")
            : $(this).parents(".counter_block_wr").find(".button_block .to-cart").data("ratio"),
          isDblQuantity = !isDetailSKU2
            ? $(this).parents(".counter_wrapp").find(".to-cart").data("float_ratio")
            : $(this).parents(".counter_block_wr").find(".button_block .to-cart").data("float_ratio"),
          ratio = isDblQuantity ? parseFloat(tmp_ratio) : parseInt(tmp_ratio, 10),
          max_value = "";
        currentValue = input.val();

        if (isDblQuantity)
          ratio =
            Math.round(ratio * arOptimusOptions.JS_ITEM_CLICK.precisionFactor) /
            arOptimusOptions.JS_ITEM_CLICK.precisionFactor;

        curValue = isDblQuantity ? parseFloat(currentValue) : parseInt(currentValue, 10);

        curValue += ratio;
        if (isDblQuantity) {
          curValue =
            Math.round(curValue * arOptimusOptions.JS_ITEM_CLICK.precisionFactor) /
            arOptimusOptions.JS_ITEM_CLICK.precisionFactor;
        }
        if (parseFloat($(this).data("max")) > 0) {
          if (input.val() <= $(this).data("max")) {
            if (curValue <= $(this).data("max")) input.val(curValue);

            input.change();
          }
        } else {
          input.val(curValue);
          input.change();
        }
      }
    }
  });

  $(document).on("click", ".counter_block:not(.basket) .minus", function () {
    if (!$(this).parents(".basket_wrapp").length) {
      if ($(this).parent().data("offers") != "Y") {
        var isDetailSKU2 = $(this).parents(".counter_block_wr").length;
        input = $(this).parents(".counter_block").find("input[type=text]");
        (tmp_ratio = !isDetailSKU2
          ? $(this).parents(".counter_wrapp").find(".to-cart").data("ratio")
          : $(this).parents(".counter_block_wr").find(".button_block .to-cart").data("ratio")),
          (isDblQuantity = !isDetailSKU2
            ? $(this).parents(".counter_wrapp").find(".to-cart").data("float_ratio")
            : $(this).parents(".counter_block_wr").find(".button_block .to-cart").data("float_ratio")),
          (ratio = isDblQuantity ? parseFloat(tmp_ratio) : parseInt(tmp_ratio, 10)),
          (max_value = "");
        currentValue = input.val();

        if (isDblQuantity)
          ratio =
            Math.round(ratio * arOptimusOptions.JS_ITEM_CLICK.precisionFactor) /
            arOptimusOptions.JS_ITEM_CLICK.precisionFactor;

        curValue = isDblQuantity ? parseFloat(currentValue) : parseInt(currentValue, 10);

        curValue -= ratio;
        if (isDblQuantity) {
          curValue =
            Math.round(curValue * arOptimusOptions.JS_ITEM_CLICK.precisionFactor) /
            arOptimusOptions.JS_ITEM_CLICK.precisionFactor;
        }

        if (parseFloat($(this).parents(".counter_block").find(".plus").data("max")) > 0) {
          if (currentValue > ratio) {
            if (curValue < ratio) {
              input.val(ratio);
            } else {
              input.val(curValue);
            }
            input.change();
          }
        } else {
          if (curValue > ratio) {
            input.val(curValue);
          } else {
            if (ratio) {
              input.val(ratio);
            } else if (currentValue > 1) {
              input.val(curValue);
            }
          }
          input.change();
        }
      }
    }
  });

  $(".counter_block input[type=text]").numeric({ allow: "." });
  $(".counter_block input[type=text]").on("focus", function () {
    $(this).addClass("focus");
  });
  $(".counter_block input[type=text]").on("blur", function () {
    $(this).removeClass("focus");
  });

  var timerInitCalculateDelivery = false;

  $(document).on("change", ".counter_block input[type=text]", function (e) {
    if (!$(this).parents(".basket_wrapp").length) {
      var val = $(this).val(),
        tmp_ratio = $(this).parents(".counter_wrapp").find(".to-cart").data("ratio")
          ? $(this).parents(".counter_wrapp").find(".to-cart").data("ratio")
          : $(this).parents(".counter_block_wr").find(".button_block .to-cart").data("ratio"),
        isDblQuantity = $(this).parents(".counter_wrapp").find(".to-cart").data("float_ratio")
          ? $(this).parents(".counter_wrapp").find(".to-cart").data("float_ratio")
          : $(this).parents(".counter_block_wr").find(".button_block .to-cart").data("float_ratio"),
        ratio = isDblQuantity ? parseFloat(tmp_ratio) : parseInt(tmp_ratio, 10),
        diff = val % ratio;
      if (isDblQuantity) {
        ratio =
          Math.round(ratio * arOptimusOptions.JS_ITEM_CLICK.precisionFactor) /
          arOptimusOptions.JS_ITEM_CLICK.precisionFactor;
        if (
          Math.round(diff * arOptimusOptions.JS_ITEM_CLICK.precisionFactor) /
            arOptimusOptions.JS_ITEM_CLICK.precisionFactor ==
          ratio
        )
          diff = 0;
      }

      if ($(this).hasClass("focus")) {
        const intCount =
          Math.round(
            Math.round((val * arOptimusOptions.JS_ITEM_CLICK.precisionFactor) / ratio) /
              arOptimusOptions.JS_ITEM_CLICK.precisionFactor
          ) || 1;
        val = intCount <= 1 ? ratio : intCount * ratio;
        val =
          Math.round(val * arOptimusOptions.JS_ITEM_CLICK.precisionFactor) /
          arOptimusOptions.JS_ITEM_CLICK.precisionFactor;
      }

      if (parseFloat($(this).parents(".counter_block").find(".plus").data("max")) > 0) {
        if (val > parseFloat($(this).parents(".counter_block").find(".plus").data("max"))) {
          val = parseFloat($(this).parents(".counter_block").find(".plus").data("max"));
        }
      }

      if (val < ratio) {
        val = ratio;
      } else if (!parseFloat(val)) {
        val = 1;
      }

      $(this).parents(".counter_block").parent().parent().find(".to-cart").attr("data-quantity", val);
      $(this).parents(".counter_block").parent().parent().find(".one_click").attr("data-quantity", val);
      $(this).parents(".counter_block_wr").find(".one_click").attr("data-quantity", val);
      $(this).val(val);

      var $calculate = $(this).closest(".item").length
			? $(this).closest(".item").find(".calculate-delivery")
			: $(this).closest(".catalog_detail").find(".calculate-delivery");
			if ($calculate.length) {
				$calculate.each(function () {
				var $calculateSpan = $(this).find("span[data-event=jqm]").first();
		
				if ($calculateSpan.length) {
					var $clone = $calculateSpan.clone();
					$clone.attr("data-param-quantity", val).removeClass("clicked");
					$clone.insertAfter($calculateSpan).on("click", function () {
					if (!jQuery.browser.mobile) {
						$(this).parent().addClass("loadings");
					}
					});
					$calculateSpan.remove();
				}
		
				if ($(this).hasClass("with_preview")) {
					$(this).removeClass("inited");
		
					if (timerInitCalculateDelivery) {
					clearTimeout(timerInitCalculateDelivery);
					}
		
					timerInitCalculateDelivery = setTimeout(function () {
					initCalculatePreview();
					timerInitCalculateDelivery = false;
					}, 1000);
				}
				});
			}

      var eventdata = { type: "change", params: { id: $(this), value: val } };
      BX.onCustomEvent("onCounterProductAction", [eventdata]);
    }
  });

  BX.addCustomEvent("onCounterProductAction", function (eventdata) {
    if (typeof eventdata != "object") {
      eventdata = { type: "undefined" };
    }
    try {
      if (typeof eventdata.type != "undefined") {
        if (!eventdata.params.id.closest(".gifts").length) {
          // no gift
          var obProduct = eventdata.params.id.data("product");
          if (eventdata.params.id.closest(".item_info").find(".sku_props").length) {
            if (typeof window.obSkuQuantys === "undefined") window.obSkuQuantys = {};

            const offerID = eventdata.params.id.closest(".offer_buy_block").find(".to-cart").data("item");
            window.obSkuQuantys[offerID] = eventdata.params.value;
          }

          if (typeof window[obProduct] === "object") {
            if (obProduct === "obOffers") {
              setPriceAction("", "", "Y");
            } else {
              window[obProduct].setPriceAction("Y");
            }
          } else if (eventdata.params.id.length) {
            if (
              eventdata.params.id.closest(".main_item_wrapper").length &&
              arOptimusOptions["THEME"]["SHOW_TOTAL_SUMM"] != "N"
            ) {
              setPriceItem(eventdata.params.id.closest(".main_item_wrapper"), eventdata.params.value);
            }
          }
          BX.onCustomEvent("onCounterProductActionResize");
        }
      }
    } catch (e) {
      console.error(e);
    }
  });

  /*slide cart*/
  $(document).on("mouseenter", "#basket_line .basket_normal:not(.empty_cart):not(.bcart) .basket_block ", function () {
    $(this).closest(".basket_normal").find(".popup").addClass("block");
    $(this).closest(".basket_normal").find(".basket_popup_wrapp").stop(true, true).slideDown(150);
  });
  $(document).on("mouseleave", "#basket_line .basket_normal .basket_block ", function () {
    var th = $(this);
    $(this)
      .closest(".basket_normal")
      .find(".basket_popup_wrapp")
      .stop(true, true)
      .slideUp(150, function () {
        th.closest(".basket_normal").find(".popup").removeClass("block");
      });
  });

  $(document).on("click", ".fast_view_block",  function() {
    var _th = $(this),
      iblockid = _th.data("param-iblock_id"),
      href = _th.data("param-item_href"),
      name = _th.data("param-form_id");

    $("body #popup_iframe_wrapper")
      .find("." + name + "_frame")
      .remove();
    $("body #popup_iframe_wrapper")
      .find("." + name + "_trigger")
      .remove();
    $("body #popup_iframe_wrapper").append('<div class="' + name + '_frame popup"></div>');
    $("body #popup_iframe_wrapper").append('<div class="' + name + '_trigger"></div>');
    $("." + name + "_frame").jqm({
      trigger: "." + name + "_trigger",
      onHide: function (hash) {
        onHidejqm(name, hash);
      },
      onLoad: function (hash) {
        onLoadjqm(name, hash);
      },
      ajax:
        arOptimusOptions["SITE_DIR"] + "ajax/form.php?form_id=fast_view&iblock_id=" + iblockid + "&item_href=" + href,
    });
    $("." + name + "_trigger").click();
  });

  $(document).on("click", ".popup_button_basket", function () {
    var th = $(".to-cart[data-item=" + $(this).data("item") + "]");

    var val = th.attr("data-quantity");

    if (!val) $val = 1;

    var tmp_props = th.data("props"),
      props = "",
      part_props = "",
      add_props = "N",
      fill_prop = {},
      iblockid = th.data("iblockid"),
      offer = th.data("offers"),
      rid = "",
      basket_props = "",
      item = th.attr("data-item");

    if (offer != "Y") {
      offer = "N";
    } else {
      basket_props = th.closest(".prices_tab").find(".bx_sku_props input").val();
    }
    if (tmp_props) {
      props = tmp_props.split(";");
    }
    if (th.data("part_props")) {
      part_props = th.data("part_props");
    }
    if (th.data("add_props")) {
      add_props = th.data("add_props");
    }
    if ($(".rid_item").length) {
      rid = $(".rid_item").data("rid");
    } else if (th.data("rid")) {
      rid = th.data("rid");
    }

    fill_prop = fillBasketPropsExt(th, "prop", "bx_ajax_text");

    fill_prop.quantity = val;
    fill_prop.add_item = "Y";
    fill_prop.rid = rid;
    fill_prop.offers = offer;
    fill_prop.iblockID = iblockid;
    fill_prop.part_props = part_props;
    fill_prop.add_props = add_props;
    fill_prop.props = JSON.stringify(props);
    fill_prop.item = item;
    fill_prop.basket_props = basket_props;

    $.ajax({
      type: "POST",
      url: arOptimusOptions["SITE_DIR"] + "ajax/item.php",
      data: fill_prop,
      dataType: "json",
      success: function (data) {
        $(".basket_error_frame").jqmHide();
        if ("STATUS" in data) {
          getActualBasket(fill_prop.iblockID);
          if (data.STATUS === "OK") {
            th.hide();
            th.closest(".counter_wrapp").find(".counter_block").hide();
            th.parents("tr").find(".counter_block_wr .counter_block").hide();
            th.closest(".button_block").addClass("wide");
            th.parent().find(".in-cart").show();

            addBasketCounter(item);
            $(".wish_item[data-item=" + item + "]").removeClass("added");
            $(".wish_item[data-item=" + item + "]")
              .find(".value")
              .show();
            $(".wish_item[data-item=" + item + "]")
              .find(".value.added")
              .hide();
            if ($("#basket_line .cart").length) {
              if ($("#basket_line .cart").is(".empty_cart")) {
                $("#basket_line .cart")
                  .removeClass("empty_cart")
                  .find(".cart_wrapp a.basket_link")
                  .removeAttr("href")
                  .addClass("cart-call");
                $("#basket_line .cart").removeClass("ecart");
                touchBasket(".cart:not(.empty_cart) .basket_block .link");
              }

              reloadTopBasket("add", $("#basket_line"), 200, 5000, "Y");
            } else if ($("#basket_line .basket_fly").length) {
              if ($(window).outerWidth() > 768) {
                basketFly("open");
              } else {
                basketFly("refresh");
              }
            }
          } else {
            showBasketError(BX.message(data.MESSAGE));
          }
        } else {
          showBasketError(BX.message("CATALOG_PARTIAL_BASKET_PROPERTIES_ERROR"));
        }
      },
    });
  });

  $(document).on("click", ".to-cart:not(.read_more)", function (e) {
    e.preventDefault();
    var th = $(this);

    var val = $(this).attr("data-quantity");

    if (!val) $val = 1;

    var tmp_props = $(this).data("props"),
      props = "",
      part_props = "",
      add_props = "N",
      fill_prop = {},
      iblockid = $(this).data("iblockid"),
      offer = $(this).data("offers"),
      rid = "",
      basket_props = "",
      item = $(this).attr("data-item");

    if (offer != "Y") {
      offer = "N";
    } else {
      basket_props = $(this).closest(".prices_tab").find(".bx_sku_props input").val();
    }
    if (tmp_props) {
      props = tmp_props.split(";");
    }
    if ($(this).data("part_props")) {
      part_props = $(this).data("part_props");
    }
    if ($(this).data("add_props")) {
      add_props = $(this).data("add_props");
    }
    if ($(".rid_item").length) {
      rid = $(".rid_item").data("rid");
    } else if ($(this).data("rid")) {
      rid = $(this).data("rid");
    }

    fill_prop = fillBasketPropsExt(th, "prop", th.data("bakset_div"));

    fill_prop.quantity = val;
    fill_prop.add_item = "Y";
    fill_prop.rid = rid;
    fill_prop.offers = offer;
    fill_prop.iblockID = iblockid;
    fill_prop.part_props = part_props;
    fill_prop.add_props = add_props;
    fill_prop.props = JSON.stringify(props);
    fill_prop.item = item;
    fill_prop.basket_props = basket_props;

    if (th.data("empty_props") == "N") {
      showBasketError($("#" + th.data("bakset_div")).html(), BX.message("ERROR_BASKET_PROP_TITLE"), "Y", th);
    } else {
      $.ajax({
        type: "POST",
        url: arOptimusOptions["SITE_DIR"] + "ajax/item.php",
        data: fill_prop,
        dataType: "json",
        success: function (data) {
          getActualBasket(fill_prop.iblockID);
          if (data !== null) {
            if ("STATUS" in data) {
              if (data.MESSAGE_EXT === null) data.MESSAGE_EXT = "";
              if (data.STATUS === "OK") {
                /*th.hide();
								th.closest('.counter_wrapp').find('.counter_block').hide();
								th.parents('tr').find('.counter_block_wr .counter_block').hide();
								th.closest('.button_block').addClass('wide');
								th.parent().find('.in-cart').show();*/

                $(".to-cart[data-item=" + item + "]").hide();
                $(".to-cart[data-item=" + item + "]")
                  .closest(".counter_wrapp")
                  .find(".counter_block")
                  .hide();
                $(".to-cart[data-item=" + item + "]")
                  .parents("tr")
                  .find(".counter_block_wr .counter_block")
                  .hide();
                $(".to-cart[data-item=" + item + "]")
                  .closest(".button_block")
                  .addClass("wide");
                $(".to-cart[data-item=" + item + "]")
                  .parent()
                  .find(".in-cart")
                  .show();

                addBasketCounter(item);
                $(".wish_item[data-item=" + item + "]").removeClass("added");
                $(".wish_item[data-item=" + item + "]")
                  .find(".value")
                  .show();
                $(".wish_item[data-item=" + item + "]")
                  .find(".value.added")
                  .hide();
                if ($("#basket_line .cart").length) {
                  if ($("#basket_line .cart").is(".empty_cart")) {
                    $("#basket_line .cart")
                      .removeClass("empty_cart")
                      .find(".cart_wrapp a.basket_link")
                      .removeAttr("href")
                      .addClass("cart-call");
                    $("#basket_line .cart").removeClass("ecart");
                    touchBasket(".cart:not(.empty_cart) .basket_block .link");
                  }

                  reloadTopBasket("add", $("#basket_line"), 200, 5000, "Y");
                } else if ($("#basket_line .basket_fly").length) {
                  if ($(window).outerWidth() > 768) {
                    basketFly("open");
                  } else {
                    basketFly("refresh");
                  }
                }
              } else {
                showBasketError(BX.message(data.MESSAGE) + " <br/>" + data.MESSAGE_EXT);
              }
            } else {
              showBasketError(BX.message("CATALOG_PARTIAL_BASKET_PROPERTIES_ERROR"));
            }
          } else {
            /*th.hide();
						th.closest('.counter_wrapp').find('.counter_block').hide();
						th.parents('tr').find('.counter_block_wr .counter_block').hide();
						th.closest('.button_block').addClass('wide');
						th.parent().find('.in-cart').show();*/

            $(".to-cart[data-item=" + item + "]").hide();
            $(".to-cart[data-item=" + item + "]")
              .closest(".counter_wrapp")
              .find(".counter_block")
              .hide();
            $(".to-cart[data-item=" + item + "]")
              .parents("tr")
              .find(".counter_block_wr .counter_block")
              .hide();
            $(".to-cart[data-item=" + item + "]")
              .closest(".button_block")
              .addClass("wide");
            $(".to-cart[data-item=" + item + "]")
              .parent()
              .find(".in-cart")
              .show();

            addBasketCounter(item);
            $(".wish_item[data-item=" + item + "]").removeClass("added");
            $(".wish_item[data-item=" + item + "]")
              .find(".value")
              .show();
            $(".wish_item[data-item=" + item + "]")
              .find(".value.added")
              .hide();
            if ($("#basket_line .cart").length) {
              if ($("#basket_line .cart").is(".empty_cart")) {
                $("#basket_line .cart")
                  .removeClass("empty_cart")
                  .find(".cart_wrapp a.basket_link")
                  .removeAttr("href")
                  .addClass("cart-call");
                $("#basket_line .cart").removeClass("ecart");
                touchBasket(".cart:not(.empty_cart) .basket_block .link");
              }

              reloadTopBasket("add", $("#basket_line"), 200, 5000, "Y");
            } else if ($("#basket_line .basket_fly").length && $(window).outerWidth() > 768) {
              basketFly("open");
            }
          }
        },
      });
    }
  });

  $(document).on("click", ".to-subscribe", function (e) {
    e.preventDefault();
    if ($(this).is(".auth")) {
      if ($(this).hasClass("nsubsc")) {
        $("body").append("<span class='evb-subs' style='display:none;'></span>");
        jqmEd("subscribe", "subscribe", ".evb-subs", "id=" + $(this).data("item"), this);
        $("body .evb-subs").click();
        $("body .evb-subs").remove();
      } else {
        location.href = arOptimusOptions["SITE_DIR"] + "auth/?backurl=" + location.pathname;
      }
    } else {
      var item = $(this).attr("data-item"),
        iblockid = $(this).attr("data-iblockid");
      $(this).hide();
      $(this).parent().find(".in-subscribe").show();
      $.get(
        arOptimusOptions["SITE_DIR"] + "ajax/item.php?item=" + item + "&subscribe_item=Y",
        $.proxy(function (data) {
          $(".wish_item[data-item=" + item + "]").removeClass("added");
          getActualBasket(iblockid);
        })
      );
    }
  });

  $(document).on("click", ".in-subscribe", function (e) {
    e.preventDefault();
    var item = $(this).attr("data-item"),
      iblockid = $(this).attr("data-iblockid");
    $(this).hide();
    $(this).parent().find(".to-subscribe").show();
    $.get(
      arOptimusOptions["SITE_DIR"] + "ajax/item.php?item=" + item + "&subscribe_item=Y",
      $.proxy(function (data) {
        getActualBasket(iblockid);
      })
    );
  });

  $(document).on("keyup", function (e) {
    if (e.keyCode == 27) {
      if ($(".jqmWindow").length) {
        $(".jqmWindow").jqmHide();
      }
    }
  });

  $(document).on("click", ".wish_item", function (e) {
    e.preventDefault();
    var val = $(this).attr("data-quantity"),
      offer = $(this).data("offers"),
      iblockid = $(this).data("iblock"),
      tmp_props = $(this).data("props"),
      props = "",
      item = $(this).attr("data-item");
    item2 = $(this).attr("data-item");
    if (!val) $val = 1;
    if (offer != "Y") offer = "N";
    if (tmp_props) {
      props = tmp_props.split(";");
    }
    if (!$(this).hasClass("text")) {
      if ($(this).hasClass("added")) {
        $(this).hide();
        $(this).closest(".wish_item_button").find(".to").show();

        $(".like_icons").each(function () {
          if ($(this).find('.wish_item.text[data-item="' + item + '"]').length) {
            $(this)
              .find('.wish_item.text[data-item="' + item + '"]')
              .removeClass("added");
            $(this)
              .find('.wish_item.text[data-item="' + item + '"]')
              .find(".value")
              .show();
            $(this)
              .find('.wish_item.text[data-item="' + item + '"]')
              .find(".value.added")
              .hide();
          }
          if ($(this).find(".wish_item_button").length) {
            $(this)
              .find(".wish_item_button")
              .find('.wish_item[data-item="' + item + '"]')
              .removeClass("added");
            $(this)
              .find(".wish_item_button")
              .find('.wish_item[data-item="' + item + '"]')
              .find(".value")
              .show();
            $(this)
              .find(".wish_item_button")
              .find('.wish_item[data-item="' + item + '"]')
              .find(".value.added")
              .hide();
          }
        });
      } else {
        $(this).hide();
        $(this).closest(".wish_item_button").find(".in").addClass("added").show();

        $(".like_icons").each(function () {
          if ($(this).find('.wish_item.text[data-item="' + item + '"]').length) {
            $(this)
              .find('.wish_item.text[data-item="' + item + '"]')
              .addClass("added");
            $(this)
              .find('.wish_item.text[data-item="' + item + '"]')
              .find(".value")
              .hide();
            $(this)
              .find('.wish_item.text[data-item="' + item + '"]')
              .find(".value.added")
              .css({ display: "block" });
          }
          if ($(this).find(".wish_item_button").length) {
            $(this)
              .find(".wish_item_button")
              .find('.wish_item[data-item="' + item + '"]')
              .addClass("added");
            $(this)
              .find(".wish_item_button")
              .find('.wish_item[data-item="' + item + '"]')
              .find(".value")
              .hide();
            $(this)
              .find(".wish_item_button")
              .find('.wish_item[data-item="' + item + '"]')
              .find(".value.added")
              .show();
          }
        });
      }
    } else {
      if (!$(this).hasClass("added")) {
        $(".wish_item[data-item=" + item + "]").addClass("added");
        $(".wish_item[data-item=" + item + "]")
          .find(".value")
          .hide();
        $(".wish_item[data-item=" + item + "]")
          .find(".value.added")
          .css("display", "block");

        $(".like_icons").each(function () {
          if ($(this).find(".wish_item_button").length) {
            $(this)
              .find(".wish_item_button")
              .find('.wish_item[data-item="' + item + '"]')
              .addClass("added");
            $(this)
              .find(".wish_item_button")
              .find('.wish_item[data-item="' + item + '"]')
              .find(".value")
              .hide();
            $(this)
              .find(".wish_item_button")
              .find('.wish_item[data-item="' + item + '"]')
              .find(".value.added")
              .show();
          }
        });
      } else {
        $(".wish_item[data-item=" + item + "]").removeClass("added");
        $(".wish_item[data-item=" + item + "]")
          .find(".value")
          .show();
        $(".wish_item[data-item=" + item + "]")
          .find(".value.added")
          .hide();

        $(".like_icons").each(function () {
          if ($(this).find(".wish_item_button").length) {
            $(this)
              .find(".wish_item_button")
              .find('.wish_item[data-item="' + item + '"]')
              .removeClass("added");
            $(this)
              .find(".wish_item_button")
              .find('.wish_item[data-item="' + item + '"]')
              .find(".value")
              .show();
            $(this)
              .find(".wish_item_button")
              .find('.wish_item[data-item="' + item + '"]')
              .find(".value.added")
              .hide();
          }
        });
      }
    }

    $(".in-cart[data-item=" + item + "]").hide();
    $(".to-cart[data-item=" + item + "]")
      .parent()
      .removeClass("wide");
    $(".to-cart[data-item=" + item + "]").show();
    $(".counter_block[data-item=" + item + "]").show();
    if (
      !$(".counter_block[data-item=" + item + "]")
        .closest(".counter_wrapp")
        .find(".to-order").length
    ) {
      $(".to-cart[data-item=" + item + "]").show();
      $(".counter_block[data-item=" + item + "]").show();
    }
    if (!$(this).closest(".module-cart").size()) {
      $.ajax({
        type: "GET",
        url: arOptimusOptions["SITE_DIR"] + "ajax/item.php",
        data:
          "item=" +
          item2 +
          "&quantity=" +
          val +
          "&wish_item=Y" +
          "&offers=" +
          offer +
          "&iblockID=" +
          iblockid +
          "&props=" +
          JSON.stringify(props),
        dataType: "json",
        success: function (data) {
          getActualBasket(iblockid);
          if (data !== null) {
            if (data.MESSAGE_EXT === null) data.MESSAGE_EXT = "";
            if ("STATUS" in data) {
              if (data.STATUS === "OK") {
                if (arOptimusOptions["COUNTERS"]["USE_BASKET_GOALS"] !== "N") {
                  var eventdata = { goal: "goal_wish_add", params: { id: item2 } };
                  BX.onCustomEvent("onCounterGoals", [eventdata]);
                }
                if ($("#basket_line .cart").size()) {
                  reloadTopBasket("wish", $("#basket_line"), 200, 5000, "N");
                } else {
                  basketFly("wish");
                }
              } else {
                showBasketError(
                  BX.message(data.MESSAGE) + " <br/>" + data.MESSAGE_EXT,
                  BX.message("ERROR_ADD_DELAY_ITEM")
                );
              }
            } else {
              showBasketError(
                BX.message(data.MESSAGE) + " <br/>" + data.MESSAGE_EXT,
                BX.message("ERROR_ADD_DELAY_ITEM")
              );
            }
          } else {
            if ($("#basket_line .cart").size()) {
              reloadTopBasket("wish", $("#basket_line"), 200, 5000, "N");
            } else {
              basketFly("wish");
            }
          }
        },
      });
    }
  });

  $(document).on("click", ".compare_item", function (e) {
    e.preventDefault();
    var item = $(this).attr("data-item");
    var iblockID = $(this).attr("data-iblock");
    if (!$(this).hasClass("text")) {
      if ($(this).hasClass("added")) {
        $(this).hide();
        $(this).closest(".compare_item_button").find(".to").show();

        /*sync other button*/
        $(".like_icons").each(function () {
          if ($(this).find('.compare_item.text[data-item="' + item + '"]').length) {
            $(this)
              .find('.compare_item.text[data-item="' + item + '"]')
              .removeClass("added");
            $(this)
              .find('.compare_item.text[data-item="' + item + '"]')
              .find(".value")
              .show();
            $(this)
              .find('.compare_item.text[data-item="' + item + '"]')
              .find(".value.added")
              .hide();
          }
          if ($(this).find(".compare_item_button").length) {
            $(this)
              .find(".compare_item_button")
              .find('.compare_item[data-item="' + item + '"]')
              .removeClass("added");
            $(this)
              .find(".compare_item_button")
              .find('.compare_item[data-item="' + item + '"]')
              .find(".value")
              .show();
            $(this)
              .find(".compare_item_button")
              .find('.compare_item[data-item="' + item + '"]')
              .find(".value.added")
              .hide();
          }
        });
      } else {
        $(this).hide();
        $(this).closest(".compare_item_button").find(".in").show();

        /*sync other button*/
        $(".like_icons").each(function () {
          if ($(this).find('.compare_item.text[data-item="' + item + '"]').length) {
            $(this)
              .find('.compare_item.text[data-item="' + item + '"]')
              .addClass("added");
            $(this)
              .find('.compare_item.text[data-item="' + item + '"]')
              .find(".value")
              .hide();
            $(this)
              .find('.compare_item.text[data-item="' + item + '"]')
              .find(".value.added")
              .css({ display: "block" });
          }
          if ($(this).find(".compare_item_button").length) {
            $(this)
              .find(".compare_item_button")
              .find('.compare_item[data-item="' + item + '"]')
              .addClass("added");
            $(this)
              .find(".compare_item_button")
              .find('.compare_item[data-item="' + item + '"]')
              .find(".value.added")
              .show();
            $(this)
              .find(".compare_item_button")
              .find('.compare_item[data-item="' + item + '"]')
              .find(".value")
              .hide();
          }
        });
      }
    } else {
      if (!$(this).hasClass("added")) {
        $(".compare_item[data-item=" + item + "]").addClass("added");
        $(".compare_item[data-item=" + item + "]")
          .find(".value")
          .hide();
        $(".compare_item[data-item=" + item + "]")
          .find(".value.added")
          .css("display", "block");

        /*sync other button*/
        $(".like_icons").each(function () {
          if ($(this).find(".compare_item_button").length) {
            $(this)
              .find(".compare_item_button")
              .find('.compare_item[data-item="' + item + '"]')
              .addClass("added");
            $(this)
              .find(".compare_item_button")
              .find('.compare_item[data-item="' + item + '"]')
              .find(".value.added")
              .show();
            $(this)
              .find(".compare_item_button")
              .find('.compare_item[data-item="' + item + '"]')
              .find(".value")
              .hide();
          }
        });
      } else {
        $(".compare_item[data-item=" + item + "]").removeClass("added");
        $(".compare_item[data-item=" + item + "]")
          .find(".value")
          .show();
        $(".compare_item[data-item=" + item + "]")
          .find(".value.added")
          .hide();

        /*sync other button*/
        $(".like_icons").each(function () {
          if ($(this).find(".compare_item_button").length) {
            $(this)
              .find(".compare_item_button")
              .find('.compare_item[data-item="' + item + '"]')
              .removeClass("added");
            $(this)
              .find(".compare_item_button")
              .find('.compare_item[data-item="' + item + '"]')
              .find(".value")
              .show();
            $(this)
              .find(".compare_item_button")
              .find('.compare_item[data-item="' + item + '"]')
              .find(".value.added")
              .hide();
          }
        });
      }
    }

    $.get(
      arOptimusOptions["SITE_DIR"] + "ajax/item.php?item=" + item + "&compare_item=Y&iblock_id=" + iblockID,
      $.proxy(function (data) {
        getActualBasket(iblockID, "Comapre");
        jsAjaxUtil.InsertDataToNode(
          arOptimusOptions["SITE_DIR"] + "ajax/show_compare_preview_top.php",
          "compare_line",
          false
        );
        if ($("#compare_fly").length) {
          jsAjaxUtil.InsertDataToNode(
            arOptimusOptions["SITE_DIR"] + "ajax/show_compare_preview_fly.php",
            "compare_fly",
            false
          );
        }
      })
    );
  });

  $(".fancy").fancybox({
    openEffect: "fade",
    closeEffect: "fade",
    nextEffect: "fade",
    prevEffect: "fade",
    tpl: {
      closeBtn:
        '<a title="' + BX.message("FANCY_CLOSE") + '" class="fancybox-item fancybox-close" href="javascript:;"></a>',
      next:
        '<a title="' +
        BX.message("FANCY_NEXT") +
        '" class="fancybox-nav fancybox-next" href="javascript:;"><span></span></a>',
      prev:
        '<a title="' +
        BX.message("FANCY_PREV") +
        '" class="fancybox-nav fancybox-prev" href="javascript:;"><span></span></a>',
    },
  });

  $(".tabs>li").on("click", function () {
    if (!$(this).hasClass("active")) {
      var sliderIndex = $(this).index(),
        curLiNav = $(this)
          .closest(".top_blocks")
          .find(".slider_navigation")
          .find(">li:eq(" + sliderIndex + ")"),
        curLi = $(this)
          .closest(".top_blocks")
          .siblings(".tabs_content")
          .find(">li:eq(" + sliderIndex + ")");
      $(this).addClass("active").addClass("cur").siblings().removeClass("active").removeClass("cur");
      curLi.addClass("cur").siblings().removeClass("cur");
      curLiNav.addClass("cur").siblings().removeClass("cur");

      //equal height
      curLi
        .find(".catalog_block .catalog_item_wrapp .catalog_item .item_info:visible .item-title")
        .sliceHeight({ item: ".catalog_item:visible", resize: false, mobile: true });
      curLi
        .find(".catalog_block .catalog_item_wrapp .catalog_item .item_info:visible")
        .sliceHeight({ classNull: ".footer_button", item: ".catalog_item:visible", resize: false, mobile: true });
      curLi
        .find(".catalog_block .catalog_item_wrapp .catalog_item:visible")
        .sliceHeight({ classNull: ".footer_button", item: ".catalog_item:visible", resize: false, mobile: true });
    }
  });

  /*search click*/
  $(".search_block .icon").on("click", function () {
    var th = $(this);
    if ($(this).hasClass("open")) {
      $(this).closest(".center_block").find(".search_middle_block").removeClass("active");
      $(this).removeClass("open");
      $(this).closest(".center_block").find(".search_middle_block").find(".noborder").hide();
    } else {
      setTimeout(function () {
        th.closest(".center_block").find(".search_middle_block").find(".noborder").show();
      }, 100);
      $(this).closest(".center_block").find(".search_middle_block").addClass("active");
      $(this).addClass("open");
    }
  });
  $(document).on("mouseenter", ".display_list .item_wrap", function () {
    $(this).prev().addClass("prev");
  });
  $(document).on("mouseleave", ".display_list .item_wrap", function () {
    $(this).prev().removeClass("prev");
  });
  $(document).on("mouseenter", ".catalog_block .item_wrap", function () {
    $(this).addClass("shadow_delay");
  });
  $(document).on("mouseleave", ".catalog_block .item_wrap", function () {
    $(this).removeClass("shadow_delay");
  });
  $(document).on("click", ".no_goods .button", function () {
    $(".bx_filter .smartfilter .bx_filter_search_reset").trigger("click");
  });

  $(document).on("click", ".ajax_load_btn", function () {
    var url = $(this).closest(".container").find(".module-pagination .flex-direction-nav .flex-next").attr("href"),
      th = $(this).find(".more_text_ajax");

    var objUrl = parseUrlQuery(),
      add_url = "",
      bTabsBlock = false,
      obGetData = { ajax_get: "Y", AJAX_REQUEST: "Y" };

    th.addClass("loading");

    /*hit on front*/
    if (th.closest(".tab_slider_wrapp.specials").length) {
      var curLi = $(this).closest(".tab"),
        url = th.closest(".tabs_content").data("url");

      bTabsBlock = true;
      obGetData.AJAX_POST = "Y";
      obGetData.FILTER_HIT_PROP = curLi.data("code");
      obGetData.AJAX_PARAMS = $(this).closest(".tab_slider_wrapp").find(".request-data").data("value");
      obGetData.GLOBAL_FILTER = curLi.data("filter");

      add_url = "?PAGEN_1=" + curLi.find(".nav-inner-wrapper").data("page");
    }
    /**/

    if ("clear_cache" in objUrl) {
      if (objUrl.clear_cache == "Y") {
        add_url += (add_url.length ? "&" : "?") + "clear_cache=Y";
      }
    }

    $.ajax({
      url: url + add_url,
      // data: {"ajax_get": "Y"},
      data: obGetData,
      type: bTabsBlock ? "POST" : "GET",
      success: function (html) {
        var new_html = $.parseHTML(html);
        th.removeClass("loading");

        /*hit on front*/
        if (th.closest(".tab_slider_wrapp.specials").length) {
          curLi.find(".catalog_block").append(html);
          curLi.find(".catalog_block .wrap_nav").remove();

          curLi
            .find(".catalog_block .catalog_item_wrapp .catalog_item .item_info:visible .item-title")
            .sliceHeight({ item: ".catalog_item:visible", mobile: true });
          curLi
            .find(".catalog_block .catalog_item_wrapp .catalog_item .item_info:visible")
            .sliceHeight({ item: ".catalog_item:visible", mobile: true });
          curLi
            .find(".catalog_block .catalog_item_wrapp .catalog_item:visible")
            .sliceHeight({ classNull: ".footer_button", item: ".catalog_item:visible", mobile: true });

          curLi.find(".bottom_nav").html($(html).find(".bottom_nav").html());
        } else {
          if ($(".display_list").length) {
            $(".display_list").append(html);
          } else if ($(".block_list").length) {
            $(".block_list").append(html);
            touchItemBlock(".catalog_item a");
          } else if ($(".module_products_list").length) {
            $(".module_products_list > tbody").append(html);
          }
          $(".bottom_nav").html($(html).find(".bottom_nav").html());
        }
        setStatusButton();
        initCountdown();
        showTotalSummItem();
        BX.onCustomEvent("onAjaxSuccess");
      },
    });
  });

  $(document).on("click", ".bx_compare .tabs-head li", function () {
    var url = $(this).find(".sortbutton").data("href");
    BX.showWait(BX("bx_catalog_compare_block"));
    $.ajax({
      url: url,
      data: { ajax_action: "Y" },
      success: function (html) {
        history.pushState(null, null, url);
        $("#bx_catalog_compare_block").html(html);
        BX.closeWait();
      },
    });
  });
  var hoveredTrs;
  $(document).on(
    {
      mouseover: function (e) {
        var _ = $(this);
        var tbodyIndex = _.closest("tbody").index() + 1; //+1 for nth-child
        var trIndex = _.index() + 1; // +1 for nth-child
        hoveredTrs = $(e.delegateTarget)
          .find(".data_table_props")
          .children(":nth-child(" + tbodyIndex + ")")
          .children(":nth-child(" + trIndex + ")")
          .addClass("hovered");
      },
      mouseleave: function (e) {
        if (hoveredTrs) hoveredTrs.removeClass("hovered");
      },
    },
    ".bx_compare .data_table_props tbody>tr"
  );
  $(document).on("click", ".fancy_offer", function (e) {
    e.preventDefault();
    var arPict = [];
    $(".sliders .slides_block li").each(function () {
      var obImg = {};
      obImg = {
        title: $(this).find("img").attr("alt"),
        href: $(this).data("big"),
      };
      if ($(this).hasClass("current")) {
        arPict.unshift(obImg);
      } else {
        arPict.push(obImg);
      }
    });
    $.fancybox(arPict, {
      openEffect: "fade",
      closeEffect: "fade",
      nextEffect: "fade",
      prevEffect: "fade",
      type: "image",
      tpl: {
        closeBtn:
          '<a title="' + BX.message("FANCY_CLOSE") + '" class="fancybox-item fancybox-close" href="javascript:;"></a>',
        next:
          '<a title="' +
          BX.message("FANCY_NEXT") +
          '" class="fancybox-nav fancybox-next" href="javascript:;"><span></span></a>',
        prev:
          '<a title="' +
          BX.message("FANCY_PREV") +
          '" class="fancybox-nav fancybox-prev" href="javascript:;"><span></span></a>',
      },
    });
  });

  /*tabs*/
  $(document).on("click", ".tabs_section .tabs-head li",  function(e, s) {
    if (!$(this).is(".current")) {
      $(".tabs_section .tabs-head li").removeClass("current");
      $(this).addClass("current");
      $(".tabs_section ul.tabs_content li").removeClass("current");
      if ($(this).attr("id") == "product_reviews_tab") {
        $(".shadow.common").hide();
        if (s === "slide") {
          $("#reviews_content").slideDown(200, function () {});
          $(".tabs_section ul.tabs_content > li")
            .not(":eq(" + $(this).index() + ")")
            .find("> div + div")
            .slideUp(200, function () {});
          var container = $(".tabs_section ul.tabs_content > li:eq(" + $(this).index() + ")");
          container.find("> div + div").slideDown(200, function () {
            container.addClass("current");
          });
        } else {
          $(".tabs_section ul.tabs_content > li:eq(" + $(this).index() + ")").addClass("current");
          $(".tabs_section ul.tabs_content > li")
            .not(":eq(" + $(this).index() + ")")
            .find("> div + div")
            .hide();
          $("#for_product_reviews_tab").show();
          $("#reviews_content").show();
        }
      } else {
        $(".shadow.common").show();
        if (s === "slide") {
          $(".tabs_section ul.tabs_content > li")
            .not(":eq(" + $(this).index() + ")")
            .find("> div + div")
            .slideUp(200, function () {});
          var container = $(".tabs_section ul.tabs_content > li:eq(" + $(this).index() + ")");
          container.find("> div + div").slideDown(200, function () {
            container.addClass("current");
          });
        } else {
          $("#reviews_content").hide();
          $(".tabs_section ul.tabs_content > li > div + div").hide();
          var container = $(".tabs_section ul.tabs_content > li:eq(" + $(this).index() + ")");
          container.addClass("current");
          container.find("> div + div").show();
        }
      }
    } else if (s === "slide") {
      var container = $(".tabs_section ul.tabs_content > li:eq(" + $(this).index() + ")");
      container.find("> div + div").slideUp(200, function () {
        $(".tabs_section .tabs-head li").removeClass("current");
        $(".tabs_section ul.tabs_content li").removeClass("current");
      });
    }
  });
  $(document).on("click", ".tabs_section .tabs-body li .title-tab-heading",  function () {
    $(".tabs_section .tabs-head li:eq(" + $(this).parent("li").index() + ")").trigger("click", "slide");
  });
  /*open first section slide*/
  setTimeout(function () {
    $(".jobs_wrapp .item:first .name tr").trigger("click");
  }, 300);

  $(document).on("click", ".buy_block .slide_offer", function () {
    scroll_block($(".tabs_section"));
  });
  $(".share_wrapp .text").on("click", function () {
    $(this).parent().find(".shares").fadeToggle();
  });
  $(document).on("mousedown", "html, body",  function (e) {
    e.stopPropagation();
    $(".shares").fadeOut();
    $(".search_middle_block").removeClass("active_wide");
  });
  // $(".share_wrapp")
  //   .find("*")
  //   .on("mousedown", function (e) {
  //     e.stopPropagation();
  //   });
  
  $(document).on("mousedown", ".share_wrapp *", function (e) { 
    e.stopPropagation();
  });

  $(document).on("click", ".reviews-collapse-link", function () {
    $(".reviews-reply-form").slideToggle();
  });

  initCountdown();

  /*adaptive menu start*/
  $(".menu.adaptive").on("click", function () {
    $(this).toggleClass("opened");
    if ($(this).hasClass("opened")) {
      $(".mobile_menu").toggleClass("opened").slideDown();
    } else {
      $(".mobile_menu").toggleClass("opened").slideUp();
    }
  });
  /*$('.mobile_menu .has-child >a').on('click', function(e){
		var parentLi=$(this).parent();
		e.preventDefault();
		parentLi.toggleClass('opened');
		parentLi.find('.dropdown').slideToggle();
	})*/

  $(".mobile_menu .has-child >div.toggle_mobile_menu").on("click", function (e) {
    var parentLi = $(this).parent();
    e.preventDefault();
    parentLi.toggleClass("opened");
    parentLi.find(".dropdown").slideToggle();
  });

  $(document).on("keyup", ".mobile_menu .search-input-div input",  function (e) {
    var inputValue = $(this).val();
    $(".center_block .stitle_form input").val(inputValue);
    if (e.keyCode == 13) {
      $(".center_block .stitle_form form").submit();
    }
  });

  $(document).on("keyup", ".center_block .stitle_form input",  function (e) {
    var inputValue = $(this).val();
    $(".mobile_menu .search-input-div input").val(inputValue);
    if (e.keyCode == 13) {
      $(".center_block .stitle_form form").submit();
    }
  });

  $(document).on("click", ".mobile_menu .search-button-div button",  function (e) {
    e.preventDefault();
    var inputValue = $(this).parents().find("input").val();
    $(".center_block .stitle_form input").val(inputValue);
    $(".center_block .stitle_form form").submit();
  });
  /*adaptive menu end*/

  $(".btn.btn-add").on("click", function () {
    $.ajax({
      type: "GET",
      url: arOptimusOptions["SITE_DIR"] + "ajax/clearBasket.php",
      success: function (data) {},
    });
  });

  //set cookie for basket link click
  $(document).on(
    "click",
    ".bx_ordercart_order_table_container .control > a, .basket-item-actions-remove, a[data-entity=basket-item-remove-delayed]",
    function (e) {
      $.removeCookie("click_basket", { path: "/" });
      $.cookie("click_basket", "Y", { path: "/" });
    }
  );

  /*detail order show payments*/
  $(".sale-order-detail-payment-options-methods-info-change-link").on("click", function () {
    $(this).closest(".sale-order-detail-payment-options-methods-info").addClass("opened").siblings().addClass("opened");
  });

  /*expand/hide filter values*/
  $(document).on("click", ".expand_block", function () {
    togglePropBlock($(this));
  });

  /*touch event*/
  document.addEventListener(
    "touchend",
    function (event) {
      if (!$(event.target).closest(".menu_item_l1").length) {
        $(".menu .menu_item_l1 .child").css({ display: "none" });
        $(".menu_item_l1").removeClass("hover");
      }
      if (!$(event.target).closest(".basket_block").length) {
        $(".basket_block .link").removeClass("hover");
        $(".basket_block .basket_popup_wrapp").slideUp();
      }
      if (!$(event.target).closest(".catalog_item").length) {
        var tabsContentUnhoverHover = $(".tab:visible").attr("data-unhover") * 1;
        if (tabsContentUnhoverHover) $(".tab:visible").stop().animate({ height: tabsContentUnhoverHover }, 100);
        $(".tab:visible").find(".catalog_item").removeClass("hover");
        $(".tab:visible").find(".catalog_item .buttons_block").stop().fadeOut(233);
        if ($(".catalog_block").length) {
          $(".catalog_block").find(".catalog_item").removeClass("hover");
          //$('.catalog_block').find('.catalog_item').blur();
        }
      }
      //togglePropBlock($(event.target));
    },
    false
  );

  //touchItemBlock('.catalog_item a');

  $(document).on("keyup", ".coupon .input_coupon input", function () {
    if ($(this).val().length) {
      $(this).removeClass("error");
      $(this).closest(".input_coupon").find(".error").remove();
    } else {
      $(this).addClass("error");
      $("<label class='error'>" + BX.message("INPUT_COUPON") + "</label>").insertBefore($(this));
    }
  });
  showPhoneMask("input[autocomplete=tel]");
  BX.addCustomEvent(window, "onAjaxSuccess", function (e) {
    if (e != "OK") {
      initSelects(document);
      // InitLabelAnimation('#bx-soa-order-form');
      InitOrderCustom();
      showPhoneMask("input[autocomplete=tel]");
      if ($("#content > .catalog_detail").length) {
        $(".bx_filter").remove();
      }

      InitFlexSlider();

      if (arOptimusOptions["PAGES"]["CATALOG_PAGE"]) {
        setStatusButton();
        initCountdown();
      }

      if (arOptimusOptions["PAGES"]["ORDER_PAGE"]) {
        orderActions(e);
      }
    }
  });
  BX.addCustomEvent(window, "onFrameDataRequestFail", function (response) {
    console.log(response);
  });
});

if (!funcDefined("togglePropBlock")) {
  togglePropBlock = function (className) {
    var all_props_block = className.closest(".bx_filter_parameters_box_container").find(".hidden_values");
    if (all_props_block.length && (className.hasClass("inner_text") || className.hasClass("expand_block"))) {
      if (all_props_block.is(":visible")) {
        className.text(BX.message("FILTER_EXPAND_VALUES"));
        all_props_block.hide();
      } else {
        className.text(BX.message("FILTER_HIDE_VALUES"));
        all_props_block.show();
      }
    }
  };
}

if (!funcDefined("showPhoneMask")) {
  showPhoneMask = function (className) {
    $(className).inputmask("mask", { mask: arOptimusOptions["THEME"]["PHONE_MASK"], showMaskOnHover: false });
  };
}

if (!funcDefined("parseUrlQuery")) {
  parseUrlQuery = function () {
    var data = {};
    if (location.search) {
      var pair = location.search.substr(1).split("&");
      for (var i = 0; i < pair.length; i++) {
        var param = pair[i].split("=");
        data[param[0]] = param[1];
      }
    }
    return data;
  };
}

if (!funcDefined("getActualBasket")) {
  getActualBasket = function (iblockID, type) {
    var data = "";
    if (typeof iblockID !== "undefined") {
      data = { iblockID: iblockID };
    }
    $.ajax({
      type: "GET",
      url: arOptimusOptions["SITE_DIR"] + "ajax/actualBasket.php",
      data: data,
      success: function (data) {
        if (!$(".js_ajax").length) $("body").append('<div class="js_ajax"></div>');
        $(".js_ajax").html(data);

        const eventdata = { action: "loadActualBasket" };
        BX.onCustomEvent("onCompleteAction", [eventdata]);
      },
    });
  };
}

function touchMenu(selector) {
  if ($(window).outerWidth() > 600) {
    $(selector).each(function () {
      var th = $(this);
      th.on("touchend", function (e) {
        if (th.find(".child").length && !th.hasClass("hover")) {
          e.preventDefault();
          e.stopPropagation();
          th.siblings().removeClass("hover");
          th.addClass("hover");
          $(".menu .child").css({ display: "none" });
          th.find(".child").css({ display: "block" });
        }
      });
    });
  } else {
    $(selector).off();
  }
}
function touchItemBlock(selector) {
  $(selector).each(function () {
    var th = $(this),
      item = th.closest(".catalog_item");
    if (!th.closest(".best_block").length) {
      th.on("touchend", function (e) {
        if (!item.hasClass("hover")) {
          e.preventDefault();
          // e.stopPropagation();
          item.siblings().removeClass("hover");
          item.siblings().blur();
          item.closest(".catalog_block").find(".catalog_item").removeClass("hover");
          item.addClass("hover");
          item.addClass("touch");

          var tabsContentHover = th.closest(".tab").attr("data-hover") * 1,
            tabsContentUnhoverHover = th.closest(".tab").attr("data-unhover") * 1;

          th.closest(".tab").stop().animate({ height: tabsContentUnhoverHover }, 100);
          th.closest(".catalog_item").siblings().find(".buttons_block").stop().fadeOut(233);

          th.closest(".tab").fadeTo(100, 1);
          th.closest(".tab").stop().css({ height: tabsContentHover });
          th.closest(".catalog_item").find(".buttons_block").fadeIn(450, "easeOutCirc");
        }
      });
    }
  });
}
function touchBasket(selector) {
  if (arOptimusOptions["THEME"]["SHOW_BASKET_ONADDTOCART"] !== "N") {
    if ($(window).outerWidth() > 600) {
      $(document)
        .find(selector)
        .on("touchend", function (e) {
          if ($(this).parent().find(".basket_popup_wrapp").length && !$(this).hasClass("hover")) {
            e.preventDefault();
            e.stopPropagation();
            $(this).addClass("hover");
            $(this).parent().find(".basket_popup_wrapp").slideDown();
          }
        });
    } else {
      $(selector).off();
    }
  }
}

function showTotalSummItem(popup) {
  //show total summ
  if (arOptimusOptions["THEME"]["SHOW_TOTAL_SUMM"] == "ALWAYS") {
    var parent = "body ";
    if (typeof popup === "string" && popup == "Y") parent = ".popup ";
    $(parent + ".counter_wrapp .counter_block input.text").each(function () {
      var _th = $(this);

      if (_th.data("product")) {
        var obProduct = _th.data("product");
        if (typeof window[obProduct] == "object") window[obProduct].setPriceAction("Y");
        else setPriceItem(_th.closest(".main_item_wrapper"), _th.val());
      } else setPriceItem(_th.closest(".main_item_wrapper"), _th.val());
    });
  }
}

function initFull() {
  initSelects(document);
  initHoverBlock(document);
  // touchItemBlock('.catalog_item a');
  // InitLabelAnimation('#bx-soa-order-form');
  InitOrderCustom();
  if (!$("html.print").length) checkStickyFooter();
  else window.print();

  showTotalSummItem();
  basketActions();
  orderActions();
}
if (!funcDefined("orderActions")) {
  orderActions = function (e) {
    if (arOptimusOptions["PAGES"]["ORDER_PAGE"]) {
      //phone
      if ($("#bx-soa-order input[autocomplete=tel]").length) {
        // get property phone
        for (var i = 0; i < BX.Sale.OrderAjaxComponent.result.ORDER_PROP.properties.length; ++i) {
          if (BX.Sale.OrderAjaxComponent.result.ORDER_PROP.properties[i].IS_PHONE == "Y") {
            var arPropertyPhone = BX.Sale.OrderAjaxComponent.result.ORDER_PROP.properties[i];
          }
        }

        // validate input type=tel
        if (
          typeof BX.Sale.OrderAjaxComponent !== "undefined" &&
          typeof BX.Sale.OrderAjaxComponent === "object" &&
          typeof arPropertyPhone == "object" &&
          arPropertyPhone
        ) {
          BX.Sale.OrderAjaxComponent.validatePhone = function (input, arProperty, fieldName) {
            if (!input || !arProperty) return [];

            var value = input.value,
              errors = [],
              name = BX.util.htmlspecialchars(arProperty.NAME),
              field = BX.message("SOA_FIELD") + ' "' + name + '"',
              re;

            if (arProperty.REQUIRED == "Y" && value.length == 0) {
              errors.push(field + " " + BX.message("SOA_REQUIRED"));
            }

            if (arProperty.IS_PHONE == "Y" && value.length > 0) {
              function regexpPhone(value, element, regexp) {
                var re = new RegExp(regexp);
                return re.test(value);
              }

              var validPhone = regexpPhone($(input).val(), $(input), arOptimusOptions["THEME"]["VALIDATE_PHONE_MASK"]);

              if (!validPhone) {
                errors.push(field + " " + BX.message("JS_FORMAT_ORDER"));
              }
            }

            return errors;
          };

          BX.Sale.OrderAjaxComponent.getValidationDataPhone = function (arProperty, propContainer) {
            var data = {},
              inputs;
            switch (arProperty.TYPE) {
              case "STRING":
                data.action = "blur";
                data.func = BX.delegate(function (input, fieldName) {
                  return this.validatePhone(input, arProperty, fieldName);
                }, this);

                inputs = propContainer.querySelectorAll("input[type=tel]");
                if ($(inputs).length) {
                  data.inputs = inputs;
                  break;
                }
            }

            return data;
          };

          BX.Sale.OrderAjaxComponent.bindValidationPhone = function (id, propContainer) {
            if (!this.validation.properties || !this.validation.properties[id]) return;

            var arProperty = this.validation.properties[id],
              data = this.getValidationDataPhone(arProperty, propContainer),
              i,
              k;

            if (data && data.inputs && data.action) {
              for (i = 0; i < $(data.inputs).length; i++) {
                if (BX.type.isElementNode(data.inputs[i])) {
                  BX.bind(
                    data.inputs[i],
                    data.action,
                    BX.delegate(function () {
                      this.isValidProperty(data);
                    }, this)
                  );
                } else {
                  for (k = 0; k < $(data.inputs[i]).length; k++)
                    BX.bind(
                      data.inputs[i][k],
                      data.action,
                      BX.delegate(function () {
                        this.isValidProperty(data);
                      }, this)
                    );
                }
              }
            }
          };

          BX.Sale.OrderAjaxComponent.isValidPropertiesBlock = function (excludeLocation) {
            if (!this.options.propertyValidation) return [];

            var props = this.orderBlockNode.querySelectorAll(".bx-soa-customer-field[data-property-id-row]"),
              propsErrors = [],
              id,
              propContainer,
              arProperty,
              data,
              i;

            for (i = 0; i < props.length; i++) {
              id = props[i].getAttribute("data-property-id-row");

              if (!!excludeLocation && this.locations[id]) continue;

              propContainer = props[i].querySelector(".soa-property-container");
              if (propContainer) {
                arProperty = this.validation.properties[id];
                data = this.getValidationData(arProperty, propContainer);
                dataPhone = this.getValidationDataPhone(arProperty, propContainer);
                data = $.extend({}, data, dataPhone);

                propsErrors = propsErrors.concat(this.isValidProperty(data, true));
              }
            }

            return propsErrors;
          };

          // create input type=tel
          var input = $("input[autocomplete=tel]"),
            inputHTML = input[0].outerHTML,
            value = input.val(),
            newInput = input[0].outerHTML.replace('type="text"', 'type="tel" value="' + value + '"');

          if ($(input).length < 2) {
            input.hide();
            $(newInput).insertAfter(input);
          }
          showPhoneMask("input[autocomplete=tel][type=tel]");

          // change value input type=text when change input type=tel
          $("input[autocomplete=tel][type=tel]").on("blur", function () {
            var $this = $(this);

            var value = $this.val();
            $this.parent().find("input[autocomplete=tel][type=text]").val(value);
          });

          BX.Sale.OrderAjaxComponent.bindValidationPhone(arPropertyPhone.ID, $("input[autocomplete=tel]").parent()[0]);
        }
      }

      if ($(".bx-soa-cart-total").length) {
        if (!$(".change_basket").length)
          $(".bx-soa-cart-total").prepend(
            '<div class="change_basket">' +
              BX.message("BASKET_CHANGE_TITLE") +
              '<a href="' +
              arOptimusOptions["SITE_DIR"] +
              'basket/" class="change_link">' +
              BX.message("BASKET_CHANGE_LINK") +
              "</a></div>"
          );
        if (typeof BX.Sale.OrderAjaxComponent == "object") {
          if (arOptimusOptions["COUNTERS"]["USE_FULLORDER_GOALS"] !== "N") {
            if (typeof BX.Sale.OrderAjaxComponent.reachgoalbegin === "undefined") {
              BX.Sale.OrderAjaxComponent.reachgoalbegin = true;
              var eventdata = { goal: "goal_order_begin" };
              // BX.onCustomEvent('onCounterGoals', [eventdata])
            }
          }

          // update oreder register form
          if ($(".bx-soa-section-content.reg").length && !$(".bx-soa-section-content.reg .redisigned").length) {
            var bRebindRegSubmit = false;

            if (arOptimusOptions.THEME.LOGIN_EQUAL_EMAIL === "Y") {
              bRebindRegSubmit = true;

              // update input NEW_LOGIN
              if ($('input[name="NEW_LOGIN"]').length) {
                $('input[name="NEW_LOGIN"]').closest(".bx-authform-formgroup-container").hide();
              }
            }

            if (bRebindRegSubmit) {
              // bind new handler for submit button
              var $regSubmit = $("#do_register~input[type=submit]");
              if ($regSubmit.length) {
                BX.unbindAll($regSubmit[0]);
                $(document).on("click", "#do_register~input[type=submit]", function (e) {
                  e.preventDefault();
                  e.stopImmediatePropagation();

                  if (arOptimusOptions.THEME.LOGIN_EQUAL_EMAIL === "Y") {
                    var email = BX.findChild(BX("bx-soa-auth"), { attribute: { name: "NEW_EMAIL" } }, true, false);
                    var login = BX.findChild(BX("bx-soa-auth"), { attribute: { name: "NEW_LOGIN" } }, true, false);

                    if (login && email) {
                      login.value = email.value;
                    }
                  }

                  BX("do_register").value = "Y";
                  BX.Sale.OrderAjaxComponent.sendRequest("showAuthForm");
                });
              }
            }

            // update captcha
            var $captcha = $(".bx-soa-section-content.reg").find(".bx-captcha");
            if ($captcha.length) {
              $captcha.addClass("captcha_image");
              $captcha.append('<div class="captcha_reload"></div>');
              $captcha
                .closest(".bx-authform-formgroup-container")
                .addClass("captcha-row")
                .find("input[name=captcha_word]")
                .closest(".bx-authform-input-container")
                .addClass("captcha_input");
            }

            // update input NEW_NAME && NEW_LAST_NAME
            if ($("input[name=NEW_NAME]").length && $("input[name=NEW_LAST_NAME]").length) {
              if (!$("input[name=NEW_NAME]").closest(".bx-authform-formgroup-container.col-md-6").length) {
                $("input[name=NEW_NAME],input[name=NEW_LAST_NAME]")
                  .closest(".bx-authform-formgroup-container")
                  .addClass("col-md-6");
                var html = $("input[name=NEW_LAST_NAME]")
                  .closest(".bx-authform-formgroup-container")
                  .wrap('<div id="trem_"></div>')
                  .parent()
                  .html();
                $("#trem_").remove();
                $(html).insertAfter(
                  $("input[name=NEW_NAME]").closest(".bx-authform-formgroup-container").wrap('<div class="row"></div>')
                );
              }
            }

            // update input NEW_EMAIL && PHONE_NUMBER
            if ($("input[name=NEW_EMAIL]").length && $("input[name=PHONE_NUMBER]").length) {
              if (!$("input[name=PHONE_NUMBER]").closest(".bx-authform-formgroup-container.col-md-6").length) {
                $("input[name=NEW_EMAIL],input[name=PHONE_NUMBER]")
                  .closest(".bx-authform-formgroup-container")
                  .addClass("col-md-6");
                var html = $("input[name=PHONE_NUMBER]")
                  .closest(".bx-authform-formgroup-container")
                  .wrap('<div id="trem_"></div>')
                  .parent()
                  .html();
                $("#trem_").remove();
                $(html).insertAfter(
                  $("input[name=NEW_EMAIL]").closest(".bx-authform-formgroup-container").wrap('<div class="row"></div>')
                );
              }
            }

            // update input NEW_PASSWORD && NEW_PASSWORD_CONFIRM
            if ($("input[name=NEW_PASSWORD]").length && $("input[name=NEW_PASSWORD_CONFIRM]").length) {
              if (!$("input[name=NEW_PASSWORD]").closest(".bx-authform-formgroup-container.col-md-6").length) {
                $("input[name=NEW_PASSWORD],input[name=NEW_PASSWORD_CONFIRM]")
                  .closest(".bx-authform-formgroup-container")
                  .addClass("col-md-6");
                var html = $("input[name=NEW_PASSWORD_CONFIRM]")
                  .closest(".bx-authform-formgroup-container")
                  .wrap('<div id="trem_"></div>')
                  .parent()
                  .html();
                $("#trem_").remove();
                $(html).insertAfter(
                  $("input[name=NEW_PASSWORD]")
                    .closest(".bx-authform-formgroup-container")
                    .wrap('<div class="row"></div>')
                );
              }
            }

            // update input PHONE_NUMBER
            if ($("input[name=PHONE_NUMBER]").length) {
              var input = $("input[name=PHONE_NUMBER]"),
                inputHTML = input[0].outerHTML,
                value = input.val(),
                newInput = input[0].outerHTML.replace('type="text"', 'type="tel" value="' + value + '"');

              if ($(input).length < 2) {
                input.hide();
                $(newInput).insertAfter(input);

                showPhoneMask("input[name=PHONE_NUMBER][type=tel]");

                $("input[name=PHONE_NUMBER][type=tel]").on("blur", function () {
                  var $this = $(this);
                  var value = $this.val();
                  $this.parent().find("input[name=PHONE_NUMBER][type=text]").val(value);
                });

                var $label = $("input[name=PHONE_NUMBER][type=tel]")
                  .closest(".bx-authform-formgroup-container")
                  .find(".bx-authform-label-container");
                $label.html(
                  BX.message("ORDER_PHONE_LABEL") +
                    ($label.find(".bx-authform-starrequired").length
                      ? '<span class="bx-authform-starrequired"> *</span>'
                      : "")
                );
              }
            }

            $(".bx-soa-section-content.reg").append('<div class="redisigned hidden></div>');
          }

          const asproLicenceShow = arOptimusOptions["THEME"]["SHOW_LICENCE"] === "Y",
            asproLicenceChecked = arOptimusOptions["THEME"]["LICENCE_CHECKED"] === "Y";

          const asproOfferShow = arOptimusOptions["THEME"]["SHOW_OFFER"] === "Y",
            asproOfferChecked = arOptimusOptions["THEME"]["OFFER_CHECKED"] === "Y";

          if ($(".bx-soa-cart-total-line-total").length && (asproLicenceShow || asproOfferShow)) {
            if (typeof e === "undefined") {
              BX.Sale.OrderAjaxComponent.state_licence = asproLicenceChecked ? "checked" : "";
              BX.Sale.OrderAjaxComponent.state_offer = asproOfferChecked ? "checked" : "";
            }

            if (
              (!$(".licence_block.filter").length && asproLicenceShow) ||
              (!$(".offer_block.filter").length && asproOfferShow)
            ) {
              $('<div class="form"><div class="license_order_wrap"></div></div>').insertBefore($("#bx-soa-orderSave"));

              if (!$(".licence_block.filter").length && asproLicenceShow)
                $(
                  '<div class="licence_block filter label_block"><label data-for="licenses_order" class="hidden error">' +
                    BX.message("JS_REQUIRED_LICENSES") +
                    '</label><input type="checkbox" name="licenses_order" required ' +
                    BX.Sale.OrderAjaxComponent.state_licence +
                    ' value="Y"><label data-for="licenses_order" class="license">' +
                    BX.message("LICENSES_TEXT") +
                    "</label></div>"
                ).appendTo($(".license_order_wrap"));

              if (!$(".offer_block.filter").length && asproOfferShow)
                $(
                  '<div class="offer_block filter label_block"><label data-for="offer_order" class="hidden error">' +
                    BX.message("JS_REQUIRED_OFFER") +
                    '</label><input type="checkbox" name="offer_order" required ' +
                    BX.Sale.OrderAjaxComponent.state_offer +
                    ' value="Y"><label data-for="offer_order" class="offer_pub">' +
                    BX.message("OFFER_TEXT") +
                    "</label></div>"
                ).appendTo($(".license_order_wrap"));

              if (asproLicenceShow) {
                $(document).on("click", ".bx-soa .licence_block label.license", function () {
                  const id = $(this).data("for");
                  $(".bx-soa .licence_block label.error").addClass("hidden");
                  if (!$("input[name=" + id + "]").prop("checked")) {
                    $("input[name=" + id + "]").prop("checked", "checked");
                    BX.Sale.OrderAjaxComponent.state_licence = "checked";
                  } else {
                    $("input[name=" + id + "]").prop("checked", "");
                    BX.Sale.OrderAjaxComponent.state_licence = "";
                  }
                });
              }

              if (asproOfferShow) {
                $(document).on("click", ".bx-soa .offer_block label.offer_pub", function () {
                  const id = $(this).data("for");

                  $(".bx-soa .offer_block label.error").addClass("hidden");

                  if (!$("input[name=" + id + "]").prop("checked")) {
                    $("input[name=" + id + "]").prop("checked", "checked");
                    BX.Sale.OrderAjaxComponent.state_licence = "checked";
                  } else {
                    $("input[name=" + id + "]").prop("checked", "");
                    BX.Sale.OrderAjaxComponent.state_licence = "";
                  }
                });
              }

              $(document).on("click", ".lic_condition a", function () {
                if (BX.hasClass(BX("bx-soa-order"), "orderform--v1")) {
                  if (BX.Sale.OrderAjaxComponent.isValidForm()) {
                    BX.Sale.OrderAjaxComponent.animateScrollTo($(".licence_block, .offer_block")[0], 800, 50);
                  }
                } else {
                  const iCountErrors = BX.Sale.OrderAjaxComponent.isValidPropertiesBlock().length;

                  if (!BX.Sale.OrderAjaxComponent.activeSectionId || !iCountErrors) {
                    BX.Sale.OrderAjaxComponent.animateScrollTo($(".licence_block, .offer_block")[0], 800, 50);
                  }
                }
              });
            }
            $("#bx-soa-orderSave, .bx-soa-cart-total-button-container").addClass("lic_condition");

            if (
              typeof BX.Sale.OrderAjaxComponent.oldClickOrderSaveAction === "undefined" &&
              typeof BX.Sale.OrderAjaxComponent.clickOrderSaveAction !== "undefined"
            ) {
              BX.Sale.OrderAjaxComponent.oldClickOrderSaveAction = BX.Sale.OrderAjaxComponent.clickOrderSaveAction;
              BX.Sale.OrderAjaxComponent.clickOrderSaveAction = function (event) {
                if (
                  ($('input[name="licenses_order"]').prop("checked") || asproLicenceShow === false) &&
                  ($('input[name="offer_order"]').prop("checked") || asproOfferShow === false)
                ) {
                  $(".bx-soa .licence_block label.error").addClass("hidden");
                  $(".bx-soa .offer_block label.error").addClass("hidden");

                  if (BX.Sale.OrderAjaxComponent.isValidForm()) {
                    if (typeof BX.Sale.OrderAjaxComponent.allowOrderSave == "function")
                      BX.Sale.OrderAjaxComponent.allowOrderSave();
                    if (typeof BX.Sale.OrderAjaxComponent.doSaveAction == "function")
                      BX.Sale.OrderAjaxComponent.doSaveAction();
                    else BX.Sale.OrderAjaxComponent.oldClickOrderSaveAction(event);
                  }
                } else {
                  if (!$('input[name="licenses_order"]').prop("checked"))
                    $(".bx-soa .licence_block label.error").removeClass("hidden");

                  if (!$('input[name="offer_order"]').prop("checked"))
                    $(".bx-soa .offer_block label.error").removeClass("hidden");
                }
              };
              if (BX.Sale.OrderAjaxComponent.orderSaveBlockNode.querySelector(".checkbox")) {
                if (typeof browser == "object") {
                  if ("msie" in browser && browser.msie)
                    $(BX.Sale.OrderAjaxComponent.orderSaveBlockNode.querySelector(".checkbox")).remove();
                  else BX.Sale.OrderAjaxComponent.orderSaveBlockNode.querySelector(".checkbox").remove();
                }
              }
              BX.unbindAll(BX.Sale.OrderAjaxComponent.totalInfoBlockNode.querySelector("a.btn-order-save"));
              BX.unbindAll(BX.Sale.OrderAjaxComponent.mobileTotalBlockNode.querySelector("a.btn-order-save"));
              BX.unbindAll(BX.Sale.OrderAjaxComponent.orderSaveBlockNode.querySelector("a"));
              BX.bind(
                BX.Sale.OrderAjaxComponent.totalInfoBlockNode.querySelector("a.btn-order-save"),
                "click",
                BX.proxy(BX.Sale.OrderAjaxComponent.clickOrderSaveAction, BX.Sale.OrderAjaxComponent)
              );
              BX.bind(
                BX.Sale.OrderAjaxComponent.mobileTotalBlockNode.querySelector("a.btn-order-save"),
                "click",
                BX.proxy(BX.Sale.OrderAjaxComponent.clickOrderSaveAction, BX.Sale.OrderAjaxComponent)
              );
              BX.bind(
                BX.Sale.OrderAjaxComponent.orderSaveBlockNode.querySelector("a"),
                "click",
                BX.proxy(BX.Sale.OrderAjaxComponent.clickOrderSaveAction, BX.Sale.OrderAjaxComponent)
              );
            }

            /*$('.bx-soa-cart-total .licence_block label.license').on('click', function(){
							var id = $(this).data('for');
							$('.bx-soa-cart-total .licence_block label.error').addClass('hidden');
							if(!$('input[name='+id+']').prop('checked')){
								$('input[name='+id+']').prop('checked', 'checked');
								BX.Sale.OrderAjaxComponent.state_licence = 'checked';
							}
							else{
								$('input[name='+id+']').prop('checked', '');
								BX.Sale.OrderAjaxComponent.state_licence = '';
							}
						})*/
          }
          if (BX.Sale.OrderAjaxComponent.hasOwnProperty("params")) {
            $(".bx-soa-cart-total .change_link").attr("href", BX.Sale.OrderAjaxComponent.params.PATH_TO_BASKET);
            if (arOptimusOptions["PRICES"]["MIN_PRICE"]) {
              if (
                arOptimusOptions["PRICES"]["MIN_PRICE"] > Number(BX.Sale.OrderAjaxComponent.result.TOTAL.ORDER_PRICE)
              ) {
                $('<div class="fademask_ext"></div>').appendTo($("body"));
                location.href = BX.Sale.OrderAjaxComponent.params.PATH_TO_BASKET;
              }
            }
          }

          // fix hide total block
          //BX.removeClass(BX.Sale.OrderAjaxComponent.totalInfoBlockNode, 'bx-soa-cart-total-fixed');
          $(window).scroll();

          if (checkCounters() && typeof BX.Sale.OrderAjaxComponent.oldSaveOrder === "undefined") {
            var saveFunc =
              typeof BX.Sale.OrderAjaxComponent.saveOrder !== "undefined" ? "saveOrder" : "saveOrderWithJson";
            if (typeof BX.Sale.OrderAjaxComponent[saveFunc] !== "undefined") {
              BX.Sale.OrderAjaxComponent.oldSaveOrder = BX.Sale.OrderAjaxComponent[saveFunc];
              BX.Sale.OrderAjaxComponent[saveFunc] = function (result) {
                var res = BX.parseJSON(result);
                if (res && res.order) {
                  if (!res.order.SHOW_AUTH) {
                    if (
                      res.order.REDIRECT_URL &&
                      res.order.REDIRECT_URL.length &&
                      (!res.order.ERROR || BX.util.object_keys(res.order.ERROR).length < 1)
                    ) {
                      if (
                        (arMatch = res.order.REDIRECT_URL.match(/ORDER_ID\=[^&=]*/g)) &&
                        arMatch.length &&
                        (_id = arMatch[0].replace(/ORDER_ID\=/g, "", arMatch[0]))
                      ) {
                        $.ajax({
                          url: arOptimusOptions["SITE_DIR"] + "ajax/check_order.php",
                          dataType: "json",
                          type: "POST",
                          data: { ID: _id },
                          success: function (id) {
                            if (parseInt(id)) {
                              purchaseCounter(parseInt(id), BX.message("FULL_ORDER"), function (d) {
                                if (typeof d == "object") {
                                  if (typeof BX.localStorage !== "undefined") {
                                    BX.localStorage.set("gtm_e_" + _id, d, 60);
                                  }
                                }
                                BX.Sale.OrderAjaxComponent.oldSaveOrder(result);
                              });
                            } else {
                              BX.Sale.OrderAjaxComponent.oldSaveOrder(result);
                            }
                          },
                          error: function () {
                            BX.Sale.OrderAjaxComponent.oldSaveOrder(result);
                          },
                        });
                      } else {
                        BX.Sale.OrderAjaxComponent.oldSaveOrder(result);
                      }
                    } else {
                      BX.Sale.OrderAjaxComponent.oldSaveOrder(result);
                    }
                  } else {
                    BX.Sale.OrderAjaxComponent.oldSaveOrder(result);
                  }
                } else {
                  BX.Sale.OrderAjaxComponent.oldSaveOrder(result);
                }
              };
            }
          }
        }
        $(".bx-ui-sls-quick-locations.quick-locations").on("click", function () {
          $(this).siblings().removeClass("active");
          $(this).addClass("active");
        });
      }
    }
  };
}

if (!funcDefined("basketActions")) {
  basketActions = function () {
    if (arOptimusOptions["PAGES"]["BASKET_PAGE"]) {
      checkMinPrice();

      //remove4Cart
      if (typeof BX.Sale !== "undefined" && typeof BX.Sale === "object") {
        if (typeof BX.Sale.BasketComponent !== "undefined" && typeof BX.Sale.BasketComponent === "object") {
          $(document).on("click", ".basket-item-actions-remove", function () {
            var basketID = $(this).closest(".basket-items-list-item-container").data("id");
            delFromBasketCounter(BX.Sale.BasketComponent.items[basketID].PRODUCT_ID);
          });
        }
      }

      if (location.hash) {
        var hash = location.hash.substring(1);
        if ($("#basket_toolbar_button_" + hash).length) {
          $("#basket_toolbar_button_" + hash).trigger("click");
        }
      }

      $(".bx_sort_container").append(
        '<div class="top_control basket_sort"><span style="display:none;" class="delete_all button grey_br transparent remove_all_basket">' +
          BX.message("BASKET_CLEAR_ALL_BUTTON") +
          "</span></div>"
      );
      if ($(".basket-items-list-header-filter").length) {
        $(".basket-items-list-header-filter").append(
          '<div class="top_control basket_sort"><span style="opacity:1;" class="delete_all button grey_br transparent remove_all_basket">' +
            BX.message("BASKET_CLEAR_ALL_BUTTON") +
            "</span></div>"
        );

        var cur_index = $(".basket-items-list-header-filter > a.active").index();
        //fix delayed
        if (cur_index == 3) cur_index = 2;

        if ($(".basket-items-list-header-filter > a.active").data("filter") == "all") cur_index = "all";

        $(".basket-items-list-header-filter .top_control .delete_all").data("type", cur_index);

        $(".basket-items-list-header-filter > a").on("click", function () {
          var index = $(this).index();

          //fix delayed
          if (index == 3) index = 2;

          if ($(this).data("filter") == "all") index = "all";

          $(".basket-items-list-header-filter .top_control .delete_all").data("type", index);
        });

        if (arOptimusOptions["THEME"]["SHOW_BASKET_PRINT"] == "Y") {
          $(
            '<span class="basket_sort"><span class="basket_print button grey_br transparent">' +
              BX.message("BASKET_PRINT_BUTTON") +
              "</span></span>"
          ).insertAfter($("#pagetitle"));
        }
      } else {
        if (arOptimusOptions["THEME"]["SHOW_BASKET_PRINT"] == "Y") {
          $(".bx_sort_container .top_control").prepend(
            '<span class="basket_print button grey_br transparent">' + BX.message("BASKET_PRINT_BUTTON") + "</span>"
          );
        }

        var cur_index = $(".bx_sort_container a.current").index();
        $(".bx_sort_container .top_control .delete_all").data("type", cur_index);
        if ($(".bx_ordercart > div:eq(" + cur_index + ") table tbody tr td.item").length)
          $(".bx_sort_container .top_control .delete_all").css("display", "block");

        $(".bx_ordercart .bx_ordercart_coupon #coupon").wrap('<div class="input"></div>');

        $(".bx_sort_container > a").on("click", function () {
          var index = $(this).index();
          $(".bx_sort_container .top_control .delete_all").data("type", index);

          if ($(".bx_ordercart > div:eq(" + index + ") table tbody tr td.item").length)
            $(".bx_sort_container .top_control .delete_all").css("display", "block");
          else $(".bx_sort_container .top_control .delete_all").css("display", "none");
        });
      }

      $(".basket_print").on("click", function () {
        // window.open(location.pathname+"?print=Y",'_blank');
        window.print();
      });

      $(".delete_all").on("click", function () {
        if (arOptimusOptions["COUNTERS"]["USE_BASKET_GOALS"] !== "N") {
          var eventdata = { goal: "goal_basket_clear", params: { type: $(this).data("type") } };
          BX.onCustomEvent("onCounterGoals", [eventdata]);
        }
        $.post(
          arOptimusOptions["SITE_DIR"] + "ajax/action_basket.php",
          "TYPE=" + $(this).data("type") + "&CLEAR_ALL=Y",
          $.proxy(function (data) {
            location.reload();
          })
        );
      });

      $(".bx_item_list_section .bx_catalog_item").sliceHeight({ row: ".bx_item_list_slide", item: ".bx_catalog_item" });

      $(document).on(
        "click",
        ".bx_ordercart_order_pay_center .checkout, .basket-checkout-section-inner .basket-btn-checkout",
        function () {
          if (checkCounters("google")) {
            checkoutCounter(1, "start order");
          }
        }
      );

      BX.addCustomEvent("onAjaxSuccess", function () {
        checkMinPrice();

        var errorText = $.trim($("#warning_message").text());
        $("#basket_items_list .error_text").detach();
        if (errorText != "") {
          $("#warning_message").hide().text("");
          $("#basket_items_list").prepend('<div class="error_text">' + errorText + "</div>");
        }
      });
    }
  };
}

if (!funcDefined("checkMinPrice")) {
  checkMinPrice = function () {
    if (arOptimusOptions["PAGES"]["BASKET_PAGE"]) {
      var summ_raw = 0,
        summ = 0;
      if ($("#allSum_FORMATED").length) {
        summ_raw = $("#allSum_FORMATED")
          .text()
          .replace(/[^0-9\.,]/g, "");
        summ = parseFloat(summ_raw);
        if ($("#basket_items").length) {
          var summ = 0;
          $("#basket_items tr").each(function () {
            if (typeof $(this).data("item-price") !== "undefined" && $(this).data("item-price"))
              summ +=
                $(this).data("item-price") *
                $(this)
                  .find("#QUANTITY_INPUT_" + $(this).attr("id"))
                  .val();
          });
        }
        if (!$(".catalog_back").length)
          $(".bx_ordercart_order_pay_center").prepend(
            '<a href="' +
              arOptimusOptions["PAGES"]["CATALOG_PAGE_URL"] +
              '" class="catalog_back button transparent big_btn grey_br">' +
              BX.message("BASKET_CONTINUE_BUTTON") +
              "</a>"
          );
      }

      if (arOptimusOptions["THEME"]["SHOW_ONECLICKBUY_ON_BASKET_PAGE"] == "Y")
        $(".basket-coupon-section").addClass("smallest");

      if (typeof BX.Sale !== "undefined") {
        if (typeof BX.Sale.BasketComponent !== "undefined" && "result" in BX.Sale.BasketComponent)
          summ = BX.Sale.BasketComponent.result.allSum;
      }

      if (arOptimusOptions["PRICES"]["MIN_PRICE"]) {
        if (arOptimusOptions["PRICES"]["MIN_PRICE"] > summ) {
          if ($(".oneclickbuy.fast_order").length) $(".oneclickbuy.fast_order").remove();

          if ($(".basket-checkout-container").length) {
            if (!$(".icon_error_wrapper").length) {
              $(".basket-checkout-block.basket-checkout-block-btn").html(
                '<div class="icon_error_wrapper"><div class="icon_error_block">' +
                  BX.message("MIN_ORDER_PRICE_TEXT").replace(
                    "#PRICE#",
                    jsPriceFormat(arOptimusOptions["PRICES"]["MIN_PRICE"])
                  ) +
                  "</div></div>"
              );
            }
          } else {
            if (!$(".icon_error_wrapper").length) {
              $(".bx_ordercart_order_pay_center").prepend(
                '<div class="icon_error_wrapper"><div class="icon_error_block">' +
                  BX.message("MIN_ORDER_PRICE_TEXT").replace(
                    "#PRICE#",
                    jsPriceFormat(arOptimusOptions["PRICES"]["MIN_PRICE"])
                  ) +
                  "</div></div>"
              );
            }
            if ($(".bx_ordercart_order_pay .checkout").length) $(".bx_ordercart_order_pay .checkout").remove();
          }
        } else {
          if ($(".icon_error_wrapper").length) $(".icon_error_wrapper").remove();

          if ($(".basket-checkout-container").length) {
            if (
              !$(".oneclickbuy.fast_order").length &&
              arOptimusOptions["THEME"]["SHOW_ONECLICKBUY_ON_BASKET_PAGE"] == "Y" &&
              !$(".basket-btn-checkout.disabled").length
            )
              $(".basket-checkout-section-inner").append(
                '<div class="fastorder"><span class="oneclickbuy button big_btn fast_order" onclick="oneClickBuyBasket()">' +
                  BX.message("BASKET_QUICK_ORDER_BUTTON") +
                  "</span></div>"
              );
          } else {
            if ($(".bx_ordercart_order_pay .checkout").length)
              $(".bx_ordercart .bx_ordercart_order_pay .checkout").css("opacity", "1");
            else
              $(".bx_ordercart_order_pay_center").append(
                '<a href="javascript:void(0)" onclick="checkOut();" class="checkout" style="opacity: 1;">' +
                  BX.message("BASKET_ORDER_BUTTON") +
                  "</a>"
              );
            if (
              !$(".oneclickbuy.fast_order").length &&
              arOptimusOptions["THEME"]["SHOW_ONECLICKBUY_ON_BASKET_PAGE"] == "Y"
            )
              $(".bx_ordercart_order_pay_center").append(
                '<span class="oneclickbuy button big_btn fast_order" onclick="oneClickBuyBasket()">' +
                  BX.message("BASKET_QUICK_ORDER_BUTTON") +
                  "</span>"
              );
          }
        }
      } else {
        if ($(".basket-checkout-container").length) {
          if (
            !$(".oneclickbuy.fast_order").length &&
            arOptimusOptions["THEME"]["SHOW_ONECLICKBUY_ON_BASKET_PAGE"] == "Y" &&
            !$(".basket-btn-checkout.disabled").length
          )
            $(".basket-checkout-section-inner").append(
              '<div class="fastorder"><span class="oneclickbuy button big_btn fast_order" onclick="oneClickBuyBasket()">' +
                BX.message("BASKET_QUICK_ORDER_BUTTON") +
                "</span></div>"
            );
        } else {
          $(".bx_ordercart .bx_ordercart_order_pay .checkout").css("opacity", "1");
          if (
            !$(".oneclickbuy.fast_order").length &&
            arOptimusOptions["THEME"]["SHOW_ONECLICKBUY_ON_BASKET_PAGE"] == "Y"
          )
            $(".bx_ordercart_order_pay_center").append(
              '<span class="oneclickbuy button big_btn fast_order" onclick="oneClickBuyBasket()">' +
                BX.message("BASKET_QUICK_ORDER_BUTTON") +
                "</span>"
            );
        }
      }
      $("#basket-root .basket-checkout-container").addClass("visible");
    }
  };
}

var isFrameDataReceived = false;
if (typeof window.frameCacheVars !== "undefined") {
  BX.addCustomEvent("onFrameDataReceived", function (json) {
    initFull();
    isFrameDataReceived = true;
  });
} else {
  $(document).ready(initFull);
}

if (!funcDefined("setHeightBlockSlider")) {
  setHeightBlockSlider = function () {
    var sliderWidth = $(document).find(".specials.tab_slider_wrapp").outerWidth();

    $(document).find(".specials.tab_slider_wrapp .tabs_content > li.cur").css("height", "");
    $(document).find(".specials.tab_slider_wrapp .tabs_content .tab.cur .tabs_slider .buttons_block").hide();
    $(document).find(".specials.tab_slider_wrapp .tabs_content > li.cur").equalize({ children: ".item-title" });
    $(document).find(".specials.tab_slider_wrapp .tabs_content > li.cur").equalize({ children: ".item_info" });
    $(document).find(".specials.tab_slider_wrapp .tabs_content > li.cur").equalize({ children: ".catalog_item" });
    var itemsButtonsHeight = $(document)
      .find(".specials.tab_slider_wrapp .tabs_content .tab.cur .tabs_slider li .buttons_block")
      .height();
    var tabsContentUnhover = $(document).find(".specials.tab_slider_wrapp .tabs_content .tab.cur").height() * 1;
    var tabsContentHover = tabsContentUnhover + itemsButtonsHeight + 50;
    $(document).find(".specials.tab_slider_wrapp .tabs_content .tab.cur").attr("data-unhover", tabsContentUnhover);
    $(document).find(".specials.tab_slider_wrapp .tabs_content .tab.cur").attr("data-hover", tabsContentHover);
    $(document).find(".specials.tab_slider_wrapp .tabs_content").height(tabsContentUnhover);

    $(document)
      .find(".specials.tab_slider_wrapp .tabs_content .tabs_slider")
      .each(function (index, el) {
        const height = $(this).find(".catalog_item").height();
        $(el).attr("data-height", height);
      });
  };
}

if (!funcDefined("checkStickyFooter")) {
  checkStickyFooter = function () {
    try {
      ignoreResize.push(true);
      $("#content").css("min-height", "");
      var contentTop = 0;
      if ($("#content").length) contentTop = $("#content").offset().top;

      var contentBottom = contentTop + $("#content").outerHeight();

      var footerTop = 0;
      if ($("footer").length) footerTop = $("footer").offset().top;

      $("#content").css(
        "min-height",
        $(window).height() - contentTop - (footerTop - contentBottom) - $("footer").outerHeight() + "px"
      );
      ignoreResize.pop();
    } catch (e) {
      console.error(e);
    }
  };
}

/* EVENTS */
var timerResize = false,
  ignoreResize = [];
$(window).resize(function () {
  if (!$("html.print").length) checkStickyFooter();

  // here immediate functions
  if (!ignoreResize.length) {
    if (timerResize) {
      clearTimeout(timerResize);
      timerResize = false;
    }
    timerResize = setTimeout(function () {
      // here delayed functions in event
      BX.onCustomEvent("onWindowResize", false);
    }, 50);
  }
});

var timerScroll = false,
  ignoreScroll = [],
  documentScrollTopLast = $(document).scrollTop();
$(window).scroll(function () {
  // here immediate functions
  documentScrollTopLast = $(document).scrollTop();
  if (!ignoreScroll.length) {
    if (timerScroll) {
      clearTimeout(timerScroll);
      timerScroll = false;
    }
    timerScroll = setTimeout(function () {
      // here delayed functions in event
      BX.onCustomEvent("onWindowScroll", false);
    }, 50);
  }
});

BX.addCustomEvent("onWindowResize", function (eventdata) {
  try {
    ignoreResize.push(true);

    // CheckTopMenuFullCatalogSubmenu();

    checkScrollToTop();
    //checkPopupWidth();
    checkCaptchaWidth();
    checkFormWidth();
    checkFormControlWidth();
    touchMenu("ul.menu:not(.opened) > li.menu_item_l1");
    touchBasket(".cart:not(.empty_cart) .basket_block .link");
    CheckObjectsSizes();

    if (funcDefined("checkMobileFilter")) {
      checkMobileFilter();
    }

    CheckFlexSlider();

    // InitZoomPict();
    initSly();

    if (window.matchMedia("(min-width: 767px)").matches) {
      $(".wrapper_middle_menu.wrap_menu").removeClass("mobile");
    }
    if (window.matchMedia("(max-width: 767px)").matches) {
      $(".wrapper_middle_menu.wrap_menu").addClass("mobile");
    }

    if ($(window).outerWidth() > 600) {
      $("#header ul.menu").removeClass("opened").css("display", "");

      if ($(".authorization-cols").length) {
        $(".authorization-cols").equalize({ children: ".col .auth-title", reset: true });
        $(".authorization-cols").equalize({ children: ".col .form-block", reset: true });
      }
    } else {
      $(".authorization-cols .auth-title").css("height", "");
      $(".authorization-cols .form-block").css("height", "");
    }

    if ($("#basket_form").length && $(window).outerWidth() <= 600) {
      $("#basket_form .tabs_content.basket > li.cur td").each(function () {
        $(this).css("width", "");
      });
    }

    if ($(".front_slider_wrapp").length) {
      $(".extended_pagination li i").each(function () {
        $(this).css({
          borderBottomWidth: $(this).parent("li").outerHeight() / 2,
          borderTopWidth: $(this).parent("li").outerHeight() / 2,
        });
      });
    }

    setHeightCompany();
    $(".bx_filter_section .bx_filter_select_container").each(function () {
      var prop_id = $(this).closest(".bx_filter_parameters_box").attr("property_id");
      if ($("#smartFilterDropDown" + prop_id).length) {
        $("#smartFilterDropDown" + prop_id).css("max-width", $(this).width());
      }
    });
    setTimeout(function () {
      checkVerticalMobileFilter();
    }, 100);
  } catch (e) {
  } finally {
    ignoreResize.pop();
  }
});

BX.addCustomEvent("onWindowScroll", function (eventdata) {
  try {
    ignoreScroll.push(true);
  } catch (e) {
  } finally {
    ignoreScroll.pop();
  }
});

BX.addCustomEvent("onSlideInit", function (eventdata) {
  try {
    ignoreResize.push(true);
    if (eventdata) {
      var slider = eventdata.slider;
      if (slider) {
        if (slider.hasClass("viewed")) {
          $(".viewed_block .rows_block .item .item-title").sliceHeight({
            outer: true,
            slice: 8,
            autoslicecount: false,
          });
          $(".viewed_block .rows_block .item").sliceHeight({ slice: 8, autoslicecount: false });
        }
      }
    }
  } catch (e) {
  } finally {
    ignoreResize.pop();
  }
});

BX.addCustomEvent("onCounterGoals", function (eventdata) {
  if (arOptimusOptions["COUNTERS"]["USE_YA_COUNTER"] === "Y") {
    var idCounter = arOptimusOptions["COUNTERS"]["YA_COUNTER_ID"];
    idCounter = parseInt(idCounter);

    if (typeof eventdata != "object") {
      eventdata = { goal: "undefined" };
    }
    if (typeof eventdata.goal != "string") {
      eventdata.goal = "undefined";
    }

    if (idCounter) {
      try {
        waitCounter(idCounter, 50, function () {
          var obCounter = window["yaCounter" + idCounter];
          if (typeof obCounter == "object") {
            obCounter.reachGoal(eventdata.goal);
          }
        });
      } catch (e) {
        console.error(e);
      }
    } else {
      console.info("Bad counter id!", idCounter);
    }
  }
});

var onCaptchaVerifyinvisible = function (response) {
  $(".g-recaptcha:last").each(function () {
    var id = $(this).attr("data-widgetid");
    if (typeof id !== "undefined" && response) {
      if (!$(this).closest("form").find(".g-recaptcha-response").val())
        $(this).closest("form").find(".g-recaptcha-response").val(response);
      if ($("iframe[src*=recaptcha]").length) {
        $("iframe[src*=recaptcha]").each(function () {
          var block = $(this).parent().parent();
          if (!block.hasClass("grecaptcha-badge")) block.remove();
        });
      }
      $(this).closest("form").submit();
    }
  });
};

var onCaptchaVerifynormal = function (response) {
  $(".g-recaptcha").each(function () {
    var id = $(this).attr("data-widgetid");
    if (typeof id !== "undefined") {
      if (grecaptcha.getResponse(id) != "") {
        $(this).closest("form").find(".recaptcha").valid();
      }
    }
  });
};

BX.addCustomEvent("onSubmitForm", function (eventdata) {
  try {
    if (!window.renderRecaptchaById || !window.asproRecaptcha || !window.asproRecaptcha.key) {
      eventdata.form.submit();
      $(eventdata.form).closest(".form").addClass("sending");
      return true;
    }
    if (window.asproRecaptcha.params.recaptchaSize == "invisible" && typeof grecaptcha != "undefined") {
      if ($(eventdata.form).find(".g-recaptcha-response").val()) {
        eventdata.form.submit();
        $(eventdata.form).closest(".form").addClass("sending");
      } else {
        grecaptcha.execute($(eventdata.form).find(".g-recaptcha").data("widgetid"));
      }
    } else {
      eventdata.form.submit();
      $(eventdata.form).closest(".form").addClass("sending");
    }

    return true;
  } catch (e) {
    console.error(e);
    return true;
  }
});

$(document).ready(function () {
  /*  --- Bind mobile filter  --- */
  var $mobilefilter = $("#mobilefilter");
  var $mobileMenu = $("#mobilemenu, #mobileheadersimple");
  if ($mobilefilter.length && window.matchMedia("(max-width: 768px)").matches) {
    $mobilefilter.isOpen = $mobileMenu.hasClass("show");
    $mobilefilter.isAppendLeft = false;
    $mobilefilter.isWrapFilter = false;
    $mobilefilter.isHorizontalOrCompact = $(".filter_horizontal").length || $(".bx_filter_vertical.compact").length;
    $mobilefilter.close = '<i class="svg svg-close close-icons"></i>';

    $(document).on("click", ".filter_opener", function () {
      OpenMobileFilter();
    });

    $(document).on("click", "#mobilefilter .svg-close.close-icons", function () {
      CloseMobileFilter();
    });

    $(document).on("click", ".bx_filter_select_block", function (e) {
      var bx_filter_select_container = $(e.target).parents(".bx_filter_select_container");
      if (bx_filter_select_container.length) {
        var prop_id = bx_filter_select_container.closest(".bx_filter_parameters_box").attr("data-property_id");
        if ($("#smartFilterDropDown" + prop_id).length) {
          $("#smartFilterDropDown" + prop_id).css({
            "max-width": bx_filter_select_container.width(),
            "z-index": "3020",
          });
        }
      }
    });

    $(document).on("mouseup", ".bx_filter_section", function (e) {
      if ($(e.target).hasClass("bx_filter_search_button")) {
        CloseMobileFilter();
      }
    });

    $(document).on("mouseup", ".bx_filter_parameters_box_title", function (e) {
      $("[id^='smartFilterDropDown']").hide();
      if ($(e.target).hasClass("close-icons")) {
        CloseMobileFilter();
      }
    });

    $mobilefilter.parent().append('<div id="mobilefilter-overlay"></div>');
    var $mobilefilterOverlay = $("#mobilefilter-overlay");

    $mobilefilterOverlay.click(function () {
      if ($mobilefilter.isOpen) {
        CloseMobileFilter();
        //e.stopPropagation();
      }
    });

    mobileFilterNum = function (num, def) {
      if (def) {
        $(".bx_filter_search_button").val(num.data("f"));
      } else {
        var str = "";
        var $prosLeng = $(".bx_filter_parameters_box > span");

        str +=
          $prosLeng.data("f") +
          " " +
          num +
          " " +
          declOfNumFilter(num, [$prosLeng.data("fi"), $prosLeng.data("fr"), $prosLeng.data("frm")]);
        $(".bx_filter_search_button").val(str);
      }
    };

    declOfNumFilter = function (number, titles) {
      cases = [2, 0, 1, 1, 1, 2];
      return titles[number % 100 > 4 && number % 100 < 20 ? 2 : cases[number % 10 < 5 ? number % 10 : 5]];
    };

    OpenMobileFilter = function () {
      if (!$mobilefilter.isOpen) {
        if (!$mobilefilter.isAppendLeft) {
          if (!$mobilefilter.isWrapFilter) {
            $(".bx_filter").wrap("<div id='wrapInlineFilter'></div>");
            $mobilefilter.isWrapFilter = true;
          }
          $(".bx_filter").css("top", "");
          $(".bx_filter")
            .appendTo($("#mobilefilter"))
            .find(".title .bx_filter_parameters_box_title")
            .append($mobilefilter.close);
          $mobilefilter.isAppendLeft = true;
        }

        // show overlay
        setTimeout(function () {
          $mobilefilterOverlay.fadeIn("fast");
        }, 100);

        // fix body
        $("body").css({ "overflow-y": "hidden" });

        // show mobile filter
        $mobilefilter.addClass("show");
        $mobilefilter.find(".bx_filter").css({ display: "block" });
        $mobilefilter.isOpen = true;

        var init = $mobilefilter.data("init");
        if (typeof init === "undefined") {
          $mobilefilter.scroll(function () {
            $(".bx_filter_section .bx_filter_select_container").each(function () {
              var prop_id = $(this).closest(".bx_filter_parameters_box").attr("data-property_id");
              if ($("#smartFilterDropDown" + prop_id).length) {
                $("#smartFilterDropDown" + prop_id).hide();
              }
            });
          });

          $mobilefilter.data("init", "Y");
        }
      }
    };

    CloseMobileFilter = function (append) {
      $(".bx_filter").css("display", "");
      if ($mobilefilter.isOpen) {
        // scroll to top
        $mobilefilter.find(".bx_filter_parameters").scrollTop(0);

        // unfix body
        $("body").css({ "overflow-y": "auto" });

        // hide overlay
        setTimeout(function () {
          $mobilefilterOverlay.fadeOut("fast");
        }, 100);

        // hide mobile filter
        $mobilefilter.removeClass("show");
        $mobilefilter.isOpen = false;
      }

      if (append && $mobilefilter.isAppendLeft) {
        $(".bx_filter").appendTo($("#wrapInlineFilter")).show().find(".svg-close").remove();
        $mobilefilter.isAppendLeft = false;
        $mobilefilter.removeData("init");
        mobileFilterNum($("#modef_num_mobile"), true);
      }
    };

    checkMobileFilter = function () {
      if (
        (!window.matchMedia("(max-width: 991px)").matches && !$mobilefilter.isHorizontalOrCompact) ||
        (!window.matchMedia("(max-width: 767px)").matches && $mobilefilter.isHorizontalOrCompact)
      ) {
        CloseMobileFilter(true);
      }
    };
  } else {
    checkVerticalMobileFilter();
    $(document).on("click", ".filter_opener", function () {
      $(this).toggleClass("opened");
      if ($(".visible_mobile_filter").length) {
        $(".visible_mobile_filter").show();
        $(".bx_filter_vertical, .bx_filter").slideToggle(333);
      } else {
        $(".bx_filter_vertical").closest("div[id^=bx_incl]").show();
        $(".bx_filter_vertical, .bx_filter").slideToggle(333);
      }
    });
  }
  /*  --- END Bind mobile filter  --- */
});

/*custom event for sku prices*/

/*BX.addCustomEvent('onAsproSkuSetPrice', function(eventdata){
	console.log(eventdata);
})*/

/*BX.addCustomEvent('onAsproSkuSetPriceMatrix', function(eventdata){
	console.log(eventdata);
})*/

InitScrollBar = function (el, initOptions) {
  var block = $(".scrollbar:not(.mobile-scroll)");
  if (typeof el !== "undefined") block = el;
  if (block.length) {
    var options,
      defaults = {
        mouseWheel: {
          scrollAmount: 150,
          preventDefault: true,
        },
      };
    var config = $.extend({}, defaults, options, block.data("plugin-options"), initOptions);

    config.callbacks = {
      onScroll: function () {
        if ($(this).find(".mCSB_buttonLeft").hasClass("disabled"))
          $(this).find(".mCSB_buttonLeft").removeClass("disabled");
        if ($(this).find(".mCSB_buttonRight").hasClass("disabled"))
          $(this).find(".mCSB_buttonRight").removeClass("disabled");
      },
      onTotalScrollBack: function () {
        $(this).find(".mCSB_buttonLeft").addClass("disabled");
      },
      onTotalScroll: function () {
        $(this).find(".mCSB_buttonRight").addClass("disabled");
      },
      onInit: function () {
        $(this).find(".mCSB_buttonLeft").addClass("disabled");
      },
    };
    block.mCustomScrollbar(config);
  }
};

AjaxClickLink = function (e) {
  var _this = "",
    container = $("#right_block_ajax .inner_wrapper"),
    container_inner = container.find(".ajax_load"),
    dopAction = "";
  url = "";
  if ("preventDefault" in e) {
    e.preventDefault();
    _this = $(e.target).hasClass("js-load-link") ? $(e.target) : $(e.target).closest(".js-load-link");
  } else {
    _this = $(e);
    dopAction = "Y";
  }

  if (container.length) {
    var objUrl = parseUrlQuery(),
      obGetData = { ajax_get_filter: "Y", control_ajax: "Y" };

    obGetData.bitrix_include_areas = "N";

    if ("clear_cache" in objUrl) {
      if (objUrl.clear_cache == "Y") {
        obGetData.clear_cache = "Y";
      }
    }

    if (container_inner.length) container_inner.addClass("loading-state");
    else container.addClass("loading-state");

    if (_this.data("url")) url = _this.data("url");

    if (dopAction) {
      BX.PopupWindowManager.getCurrentPopup().close();
      $(".bx_filter_select_popup ul li .sort_btn").removeClass("current");
      _this.addClass("current");
      _this.closest(".bx_filter_block").find(".bx_filter_select_text").text(_this.text());
    }

    $(".bx_filter .bx_sort_filter .bx_filter_select_text").text(_this.text());
    $(".bx_filter .bx_sort_filter .bx_filter_select_popup ul li span.current").removeClass("current");
    $(".bx_filter .bx_sort_filter .bx_filter_select_popup ul li")
      .eq(_this.parent().index())
      .find("span")
      .addClass("current");

    $.ajax({
      url: url,
      data: obGetData,
      success: function (html) {
        container.html(html);

        if (container_inner.length) container_inner.removeClass("loading-state");
        else container.removeClass("loading-state");

        var eventdata = { action: "jsLoadBlock" };
        BX.onCustomEvent("onCompleteAction", [eventdata, _this]);

        initCountdown();
        InitScrollBar();
      },
    });
  }
};

if (!funcDefined("throttle")) {
  function throttle(func, wait, debounce) {
    var timeout;
    return function () {
      var context = this,
        args = arguments;
      var throttler = function () {
        timeout = null;
        func.apply(context, args);
      };
      if (debounce) clearTimeout(timeout);
      if (debounce || !timeout) timeout = setTimeout(throttler, wait);
    };
  }
}

// document ready
$(function () {
  BX.addCustomEvent("onCompleteAction", function (eventdata, _this) {
    try {
      if (eventdata.action === "loadForm") {
        $(_this).parent().removeClass("loadings");
        $(_this).removeClass("clicked");
        
        if ($(_this).hasClass("one_click_buy_trigger")) {
          $(".wrapp_one_click > span").removeClass("clicked");
          $(".one_click").removeClass("clicked");
        } else if ($(_this).hasClass("one_click_buy_basket_trigger")) {
          $(".fast_order").removeClass("clicked");
        }
      } else if (eventdata.action === "loadActualBasket") {
        const basketCount = Object.keys(arBasketAspro.BASKET).length;
        const wishCount = Object.keys(arBasketAspro.DELAY).length;
        const compareCount = Object.keys(arBasketAspro.COMPARE).length;

        if (wishCount > 0) {
          $(".basket-link.delay .count").removeClass("hidden");
          $(".basket-link.delay").removeClass("no-items");
        } else {
          $(".basket-link.delay .count").addClass("hidden");
          $(".basket-link.delay").addClass("no-items");
        }

        if (basketCount > 0) {
          $(".basket-link.basket .count").removeClass("hidden");
          $(".basket-link.basket").removeClass("no-items");
        } else {
          $(".basket-link.basket .count").addClass("hidden");
          $(".basket-link.basket").addClass("no-items");
        }

        if (compareCount > 0) {
          if (!$(".basket-link.compare .count").length) {
            $(".basket-link.compare .wraps_icon_block").append(
              $(
                '<div class="count"><span><div class="items"><a href="' +
                  $(".basket-link.compare .link").attr("href") +
                  '">' +
                  compareCount +
                  "</a></div></span></div>"
              )
            );
          }
          $(".basket-link.compare .count").removeClass("hidden");
          $(".basket-link.compare").removeClass("no-items");
        } else {
          $(".basket-link.compare .count").addClass("hidden");
          $(".basket-link.compare").addClass("no-items");
        }

        $(".basket-link.basket .count .text").text(basketCount);
        $(".basket-link.delay .count .text").text(wishCount);
        $(".basket-link.compare .count a, .basket-link.comapre > .link").text(compareCount);
      }
    } catch (e) {
      console.error(e);
    }
  });

  checkHeaderFixed();

  $(".menu-block.mobile .title").on("click", function () {
    const $menuWrapper = $(".menu-block.mobile");
    const $menuBlock = $(".menu-block.mobile .navs");

    $menuWrapper.toggleClass("opened");
    $menuBlock.toggleClass("opened");

    if ($menuWrapper.hasClass("opened")) $menuBlock.slideDown();
    else $menuBlock.slideUp();
  });
});

const checkHeaderFixed = function () {
  const isMobile = jQuery.browser.mobile || window.matchMedia("(max-width: 991px)").matches;
  const mfixed = $("#headerfixed_mobile"),
    menu = $("header .main-nav");

  var startScroll = 0;

  var $mobileHeaderFixedNlo = mfixed.find("[data-nlo]"),
    isMobileNloLoaded = !$mobileHeaderFixedNlo.length,
    OnMobileHeaderFixedScrollHandler;

  var header_fixed = $("#headerfixed");
  header = $("header").first();

  if (header_fixed.length) {
    if (header.length) {
      var isHeaderFixed = false,
        isTabsFixed = false,
        headerCanFix = true,
        headerFixedHeight = header_fixed.actual("outerHeight"),
        headerNormalHeight = header.actual("outerHeight"),
        headerDiffHeight = headerNormalHeight - headerFixedHeight,
        mobileBtnMenu = $(".btn.btn-responsive-nav"),
        headerTop = $("#panel:visible").actual("outerHeight");
      topBlock = $(".TOP_HEADER").first();

      var $headerFixedNlo = header_fixed.find("[data-nlo]"),
        isNloLoaded = !$headerFixedNlo.length,
        OnHeaderFixedScrollHandler;

      if (headerDiffHeight <= 0) headerDiffHeight = 0;
      if (topBlock.length) headerTop += topBlock.actual("outerHeight");

      $(window).scroll(
        (OnHeaderFixedScrollHandler = function () {
          var tabs_fixed = $(".product-item-detail-tabs-container-fixed");

          if (window.matchMedia("(min-width:992px)").matches) {
            var scrollTop = $(window).scrollTop();
            headerCanFix = !mobileBtnMenu.is(":visible") /* && !$('.dropdown-menu:visible').length*/;

            var tabs_offset = $(".tabs_section .tabs1").offset();

            var current_is = $(".search-wrapper .search-input:visible"),
              title_search_result = $(".title-search-result." + current_is.attr("id")),
              pos,
              pos_input;

            if (!isHeaderFixed) {
              if (scrollTop > headerNormalHeight + headerTop && headerCanFix) {
                if (!isNloLoaded) {
                  if (!$headerFixedNlo.hasClass("nlo-loadings")) {
                    $headerFixedNlo.addClass("nlo-loadings");
                    setTimeout(function () {
                      $.ajax({
                        data: { nlo: $headerFixedNlo.attr("data-nlo") },
                        success: function (response) {
                          // stop ya metrika webvisor DOM indexer
                          pauseYmObserver();

                          isNloLoaded = true;
                          $headerFixedNlo[0].insertAdjacentHTML("beforebegin", $.trim(response));
                          $headerFixedNlo.remove();

                          OnHeaderFixedScrollHandler();

                          // resume ya metrika webvisor
                          // (300ms transition) + (100ms scroll handler)
                          setTimeout(resumeYmObserver, 400);
                        },
                        error: function () {
                          $headerFixedNlo.removeClass("nlo-loadings");
                        },
                      });
                    }, 300);
                  }
                } else {
                  isHeaderFixed = true;
                  // header_fixed.css('top', '-' + headerNormalHeight + 'px');
                  header_fixed.addClass("fixed");
                  // header_fixed.stop(0).animate({top: '0'}, 300);

                  /*header_fixed.animate({top: '0'}, {duration:300, complete:
                                    function(){}
                                });*/

                  if ($("nav.mega-menu.sliced").length) $("nav.mega-menu.sliced").removeClass("initied");
                  //CheckTopMenuDotted();
                }
              }
            } else if (isHeaderFixed || !headerCanFix) {
              if (scrollTop <= headerDiffHeight + headerTop || !headerCanFix) {
                isHeaderFixed = false;
                header_fixed.removeClass("fixed");
                $(".title-search-result.title-search-input2_fixed").css("display", "none");
              }
            }
            //fixed tabs
            if (tabs_fixed.length) {
              if (scrollTop + headerFixedHeight > tabs_offset.top) {
                tabs_fixed.css({ top: header_fixed.actual("outerHeight") });
                tabs_fixed.addClass("fixed");
              } else if (tabs_fixed.hasClass("fixed")) {
                tabs_fixed.removeAttr("style");
                tabs_fixed.removeClass("fixed");
              }
            }
          }
        })
      );
    }
  }

  //mobile fixed
  if (mfixed.length && isMobile) {
    var isMHeaderFixed = false,
      mheaderCanFix = true,
      mheaderFixedHeight = mfixed.actual("outerHeight"),
      mheaderNormalHeight = header.actual("outerHeight") + menu.actual("outerHeight"),
      mheaderDiffHeight = mheaderNormalHeight - mheaderFixedHeight,
      mheaderTop = $("#panel:visible").actual("outerHeight");

    if (headerDiffHeight <= 0) headerDiffHeight = 0;

    $(window).scroll(
      (OnMobileHeaderFixedScrollHandler = function () {
        var scrollTop = $(window).scrollTop();

        if (window.matchMedia("(max-width:991px)").matches) {
          if (!isMHeaderFixed) {
            if (scrollTop > mheaderDiffHeight + mheaderTop) {
              if (!isMobileNloLoaded) {
                if (!$mobileHeaderFixedNlo.hasClass("nlo-loadings")) {
                  $mobileHeaderFixedNlo.addClass("nlo-loadings");
                  setTimeout(function () {
                    $.ajax({
                      data: { nlo: $mobileHeaderFixedNlo.attr("data-nlo") },
                      success: function (response) {
                        // stop ya metrika webvisor DOM indexer
                        pauseYmObserver();

                        isMobileNloLoaded = true;
                        $mobileHeaderFixedNlo[0].insertAdjacentHTML("beforebegin", $.trim(response));
                        $mobileHeaderFixedNlo.remove();

                        OnMobileHeaderFixedScrollHandler();

                        // resume ya metrika webvisor
                        // (300ms transition) + (100ms scroll handler)
                        setTimeout(resumeYmObserver, 400);
                      },
                      error: function () {
                        $mobileHeaderFixedNlo.removeClass("nlo-loadings");
                      },
                    });
                  }, 300);
                }
              } else {
                //console.log(scrollTop, mheaderFixedHeight);
                isMHeaderFixed = true;
                mfixed.addClass("fixed");
              }
            }
          } else if (isMHeaderFixed) {
            if (scrollTop <= mheaderDiffHeight + mheaderTop) {
              isMHeaderFixed = false;
              mfixed.removeClass("fixed");
              $("#headerfixed_mobile .menu.adaptive, #headerfixed_mobile .menu.full").removeClass("opened");
              $("#headerfixed_mobile .menu.full").css("display", "none");
            }
          }
        } else mfixed.removeClass("fixed");
      })
    );
  }
};
114  28603|/aspro.optimus/install/wizards/aspro/optimus/site/templates/aspro_optimus/js/jquery.fancybox.min.js|1528e449/*!
 * fancyBox - jQuery Plugin
 * version: 2.1.0 (Mon, 20 Aug 2012)
 * @requires jQuery v1.6 or later
 *
 * Examples at http://fancyapps.com/fancybox/
 * License: www.fancyapps.com/fancybox/#license
 *
 * Copyright 2012 Janis Skarnelis - janis@fancyapps.com
 *
 */
!function(window,document,$,undefined){"use strict";var W=$(window),D=$(document),F=$.fancybox=function(){F.open.apply(this,arguments)},didUpdate=null,isTouch=void 0!==document.createTouch,isQuery=function(obj){return obj&&obj.hasOwnProperty&&obj instanceof $},isString=function(str){return str&&"string"===$.type(str)},isPercentage=function(str){return isString(str)&&str.indexOf("%")>0},isScrollable=function(el){return el&&!(el.style.overflow&&"hidden"===el.style.overflow)&&(el.clientWidth&&el.scrollWidth>el.clientWidth||el.clientHeight&&el.scrollHeight>el.clientHeight)},getScalar=function(value,dim){var value_=parseInt(value,10);return dim&&isPercentage(value)&&(value_=F.getViewport()[dim]/100*value_),Math.ceil(value_)},getValue=function(value,dim){return getScalar(value,dim)+"px"};$.extend(F,{version:"2.1.0",defaults:{padding:15,margin:20,width:800,height:600,minWidth:100,minHeight:100,maxWidth:9999,maxHeight:9999,autoSize:!0,autoHeight:!1,autoWidth:!1,autoResize:!isTouch,autoCenter:!isTouch,fitToView:!0,aspectRatio:!1,topRatio:.5,leftRatio:.5,scrolling:"auto",wrapCSS:"",arrows:!0,closeBtn:!0,closeClick:!1,nextClick:!1,mouseWheel:!0,autoPlay:!1,playSpeed:3e3,preload:3,modal:!1,loop:!0,ajax:{dataType:"html",headers:{"X-fancyBox":!0}},iframe:{scrolling:"auto",preload:!0},swf:{wmode:"transparent",allowfullscreen:"true",allowscriptaccess:"always"},keys:{next:{13:"left",34:"up",39:"left",40:"up"},prev:{8:"right",33:"down",37:"right",38:"down"},close:[27],play:[32],toggle:[70]},direction:{next:"left",prev:"right"},scrollOutside:!0,index:0,type:null,href:null,content:null,title:null,tpl:{wrap:'<div class="fancybox-wrap" tabIndex="-1"><div class="fancybox-skin"><div class="fancybox-outer"><div class="fancybox-inner"></div></div></div></div>',image:'<img class="fancybox-image" src="{href}" alt="" />',iframe:'<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" frameborder="0" vspace="0" hspace="0"NaN',error:'<p class="fancybox-error">The requested content cannot be loaded.<br/>Please try again later.</p>',closeBtn:'<a title="Close" class="fancybox-item fancybox-close" href="javascript:;"></a>',next:'<a title="Next" class="fancybox-nav fancybox-next" href="javascript:;"><span></span></a>',prev:'<a title="Previous" class="fancybox-nav fancybox-prev" href="javascript:;"><span></span></a>'},openEffect:"fade",openSpeed:250,openEasing:"swing",openOpacity:!0,openMethod:"zoomIn",closeEffect:"fade",closeSpeed:250,closeEasing:"swing",closeOpacity:!0,closeMethod:"zoomOut",nextEffect:"elastic",nextSpeed:250,nextEasing:"swing",nextMethod:"changeIn",prevEffect:"elastic",prevSpeed:250,prevEasing:"swing",prevMethod:"changeOut",helpers:{overlay:{closeClick:!0,speedOut:200,showEarly:!0,css:{}},title:{type:"float"}},onCancel:$.noop,beforeLoad:$.noop,afterLoad:$.noop,beforeShow:$.noop,afterShow:$.noop,beforeChange:$.noop,beforeClose:$.noop,afterClose:$.noop},group:{},opts:{},previous:null,coming:null,current:null,isActive:!1,isOpen:!1,isOpened:!1,wrap:null,skin:null,outer:null,inner:null,player:{timer:null,isActive:!1},ajaxLoad:null,imgPreload:null,transitions:{},helpers:{},open:function(group,opts){if(group&&($.isPlainObject(opts)||(opts={}),!1!==F.close(!0)))return $.isArray(group)||(group=isQuery(group)?$(group).get():[group]),$.each(group,(function(i,element){var obj={},href,title,content,type,rez,hrefParts,selector;"object"===$.type(element)&&(element.nodeType&&(element=$(element)),isQuery(element)?(obj={href:element.attr("href"),title:element.attr("title"),isDom:!0,element:element},$.metadata&&$.extend(!0,obj,element.metadata())):obj=element),href=opts.href||obj.href||(isString(element)?element:null),title=void 0!==opts.title?opts.title:obj.title||"",!(type=(content=opts.content||obj.content)?"html":opts.type||obj.type)&&obj.isDom&&((type=element.data("fancybox-type"))||(type=(rez=element.prop("class").match(/fancybox\.(\w+)/))?rez[1]:null)),isString(href)&&(type||(F.isImage(href)?type="image":F.isSWF(href)?type="swf":"#"===href.charAt(0)?type="inline":isString(element)&&(type="html",content=element)),"ajax"===type&&(hrefParts=href.split(/\s+/,2),href=hrefParts.shift(),selector=hrefParts.shift())),content||("inline"===type?href?content=$(isString(href)?href.replace(/.*(?=#[^\s]+$)/,""):href):obj.isDom&&(content=element):"html"===type?content=href:type||href||!obj.isDom||(type="inline",content=element)),$.extend(obj,{href:href,type:type,content:content,title:title,selector:selector}),group[i]=obj})),F.opts=$.extend(!0,{},F.defaults,opts),void 0!==opts.keys&&(F.opts.keys=!!opts.keys&&$.extend({},F.defaults.keys,opts.keys)),F.group=group,F._start(F.opts.index)},cancel:function(){var coming=F.coming;coming&&!1!==F.trigger("onCancel")&&(F.hideLoading(),F.ajaxLoad&&F.ajaxLoad.abort(),F.ajaxLoad=null,F.imgPreload&&(F.imgPreload.onload=F.imgPreload.onerror=null),coming.wrap&&coming.wrap.stop(!0).trigger("onReset").remove(),F.current||F.trigger("afterClose"),F.coming=null)},close:function(immediately){F.cancel(),!1!==F.trigger("beforeClose")&&(F.unbindEvents(),F.isOpen&&!0!==immediately?(F.isOpen=F.isOpened=!1,F.isClosing=!0,$(".fancybox-item, .fancybox-nav").remove(),F.wrap.stop(!0,!0).removeClass("fancybox-opened"),"fixed"===F.wrap.css("position")&&F.wrap.css(F._getPosition(!0)),F.transitions[F.current.closeMethod]()):($(".fancybox-wrap").stop(!0).trigger("onReset").remove(),F._afterZoomOut()))},play:function(action){var clear=function(){clearTimeout(F.player.timer)},set=function(){clear(),F.current&&F.player.isActive&&(F.player.timer=setTimeout(F.next,F.current.playSpeed))},stop=function(){clear(),$("body").unbind(".player"),F.player.isActive=!1,F.trigger("onPlayEnd")},start=function(){F.current&&(F.current.loop||F.current.index<F.group.length-1)&&(F.player.isActive=!0,$("body").bind({"afterShow.player onUpdate.player":set,"onCancel.player beforeClose.player":stop,"beforeLoad.player":clear}),set(),F.trigger("onPlayStart"))};!0===action||!F.player.isActive&&!1!==action?start():stop()},next:function(direction){var current=F.current;current&&(isString(direction)||(direction=current.direction.next),F.jumpto(current.index+1,direction,"next"))},prev:function(direction){var current=F.current;current&&(isString(direction)||(direction=current.direction.prev),F.jumpto(current.index-1,direction,"prev"))},jumpto:function(index,direction,router){var current=F.current;current&&(index=getScalar(index),F.direction=direction||current.direction[index>=current.index?"next":"prev"],F.router=router||"jumpto",current.loop&&(index<0&&(index=current.group.length+index%current.group.length),index%=current.group.length),void 0!==current.group[index]&&(F.cancel(),F._start(index)))},reposition:function(e,onlyAbsolute){var pos;F.isOpen&&(pos=F._getPosition(onlyAbsolute),e&&"scroll"===e.type?(delete pos.position,F.wrap.stop(!0,!0).animate(pos,200)):F.wrap.css(pos))},update:function(e){var type=e&&e.type,anyway=!type||"orientationchange"===type;anyway&&(clearTimeout(didUpdate),didUpdate=null),F.isOpen&&!didUpdate&&((anyway||isTouch)&&(F.wrap.removeAttr("style").addClass("fancybox-tmp"),F.trigger("onUpdate")),didUpdate=setTimeout((function(){var current=F.current;current&&(F.wrap.removeClass("fancybox-tmp"),"scroll"!==type&&F._setDimension(),"scroll"===type&&current.canShrink||F.reposition(e),F.trigger("onUpdate"),didUpdate=null)}),isTouch?500:anyway?20:300))},toggle:function(action){F.isOpen&&(F.current.fitToView="boolean"===$.type(action)?action:!F.current.fitToView,F.update())},hideLoading:function(){D.unbind("keypress.fb"),$("#fancybox-loading").remove()},showLoading:function(){var el,viewport;F.hideLoading(),D.bind("keypress.fb",(function(e){27===(e.which||e.keyCode)&&(e.preventDefault(),F.cancel())})),el=$('<div id="fancybox-loading"><div></div></div>').click(F.cancel).appendTo("body"),F.defaults.fixed||(viewport=F.getViewport(),el.css({position:"absolute",top:.5*viewport.h+viewport.y,left:.5*viewport.w+viewport.x}))},getViewport:function(){var lock=!!F.current&&F.current.locked,rez={x:W.scrollLeft(),y:W.scrollTop()};return lock?(rez.w=lock[0].clientWidth,rez.h=lock[0].clientHeight):(rez.w=isTouch&&window.innerWidth?window.innerWidth:W.width(),rez.h=isTouch&&window.innerHeight?window.innerHeight:W.height()),rez},unbindEvents:function(){F.wrap&&isQuery(F.wrap)&&F.wrap.unbind(".fb"),D.unbind(".fb"),W.unbind(".fb")},bindEvents:function(){var current=F.current,keys;current&&(W.bind("orientationchange.fb"+(isTouch?"":" resize.fb")+(current.autoCenter&&!current.locked?" scroll.fb":""),F.update),(keys=current.keys)&&D.bind("keydown.fb",(function(e){var code=e.which||e.keyCode,target=e.target||e.srcElement;e.ctrlKey||e.altKey||e.shiftKey||e.metaKey||target&&(target.type||$(target).is("[contenteditable]"))||$.each(keys,(function(i,val){return current.group.length>1&&void 0!==val[code]?(F[i](val[code]),e.preventDefault(),!1):$.inArray(code,val)>-1?(F[i](),e.preventDefault(),!1):void 0}))})),$.fn.mousewheel&&current.mouseWheel&&F.wrap.bind("mousewheel.fb",(function(e,delta,deltaX,deltaY){for(var target=e.target||null,parent=$(target),canScroll=!1;parent.length&&!(canScroll||parent.is(".fancybox-skin")||parent.is(".fancybox-wrap"));)canScroll=isScrollable(parent[0]),parent=$(parent).parent();0===delta||canScroll||F.group.length>1&&!current.canShrink&&(deltaY>0||deltaX>0?F.prev(deltaY>0?"down":"left"):(deltaY<0||deltaX<0)&&F.next(deltaY<0?"up":"right"),e.preventDefault())})))},trigger:function(event,o){var ret,obj=o||F.coming||F.current;if(obj){if($.isFunction(obj[event])&&(ret=obj[event].apply(obj,Array.prototype.slice.call(arguments,1))),!1===ret)return!1;"onCancel"!==event||F.isOpened||(F.isActive=!1),obj.helpers&&$.each(obj.helpers,(function(helper,opts){opts&&F.helpers[helper]&&$.isFunction(F.helpers[helper][event])&&F.helpers[helper][event](opts,obj)})),$.event.trigger(event+".fb")}},isImage:function(str){return isString(str)&&str.match(/\.(jp(e|g|eg)|gif|png|bmp|webp)((\?|#).*)?$/i)},isSWF:function(str){return isString(str)&&str.match(/\.(swf)((\?|#).*)?$/i)},_start:function(index){var coming={},obj,href,type,margin,padding;if(index=getScalar(index),!(obj=F.group[index]||null))return!1;if(margin=(coming=$.extend(!0,{},F.opts,obj)).margin,padding=coming.padding,"number"===$.type(margin)&&(coming.margin=[margin,margin,margin,margin]),"number"===$.type(padding)&&(coming.padding=[padding,padding,padding,padding]),coming.modal&&$.extend(!0,coming,{closeBtn:!1,closeClick:!1,nextClick:!1,arrows:!1,mouseWheel:!1,keys:null,helpers:{overlay:{closeClick:!1}}}),coming.autoSize&&(coming.autoWidth=coming.autoHeight=!0),"auto"===coming.width&&(coming.autoWidth=!0),"auto"===coming.height&&(coming.autoHeight=!0),coming.group=F.group,coming.index=index,F.coming=coming,!1!==F.trigger("beforeLoad")){if(type=coming.type,href=coming.href,!type)return F.coming=null,!(!F.current||!F.router||"jumpto"===F.router)&&(F.current.index=index,F[F.router](F.direction));if(F.isActive=!0,"image"!==type&&"swf"!==type||(coming.autoHeight=coming.autoWidth=!1,coming.scrolling="visible"),"image"===type&&(coming.aspectRatio=!0),"iframe"===type&&isTouch&&(coming.scrolling="scroll"),coming.wrap=$(coming.tpl.wrap).addClass("fancybox-"+(isTouch?"mobile":"desktop")+" fancybox-type-"+type+" fancybox-tmp "+coming.wrapCSS).appendTo(coming.parent),$.extend(coming,{skin:$(".fancybox-skin",coming.wrap),outer:$(".fancybox-outer",coming.wrap),inner:$(".fancybox-inner",coming.wrap)}),$.each(["Top","Right","Bottom","Left"],(function(i,v){coming.skin.css("padding"+v,getValue(coming.padding[i]))})),F.trigger("onReady"),"inline"===type||"html"===type){if(!coming.content||!coming.content.length)return F._error("content")}else if(!href)return F._error("href");"image"===type?F._loadImage():"ajax"===type?F._loadAjax():"iframe"===type?F._loadIframe():F._afterLoad()}else F.coming=null},_error:function(type){$.extend(F.coming,{type:"html",autoWidth:!0,autoHeight:!0,minWidth:0,minHeight:0,scrolling:"no",hasError:type,content:F.coming.tpl.error}),F._afterLoad()},_loadImage:function(){var img=F.imgPreload=new Image;img.onload=function(){this.onload=this.onerror=null,F.coming.width=this.width,F.coming.height=this.height,F._afterLoad()},img.onerror=function(){this.onload=this.onerror=null,F._error("image")},img.src=F.coming.href,void 0!==img.complete&&img.complete||F.showLoading()},_loadAjax:function(){var coming=F.coming;F.showLoading(),F.ajaxLoad=$.ajax($.extend({},coming.ajax,{url:coming.href,error:function(jqXHR,textStatus){F.coming&&"abort"!==textStatus?F._error("ajax",jqXHR):F.hideLoading()},success:function(data,textStatus){"success"===textStatus&&(coming.content=data,F._afterLoad())}}))},_loadIframe:function(){var coming=F.coming,iframe=$(coming.tpl.iframe.replace(/\{rnd\}/g,(new Date).getTime())).attr("scrolling",isTouch?"auto":coming.iframe.scrolling).attr("src",coming.href);$(coming.wrap).bind("onReset",(function(){try{$(this).find("iframe").hide().attr("src","//about:blank").end().empty()}catch(e){}})),coming.iframe.preload&&(F.showLoading(),iframe.one("load",(function(){$(this).data("ready",1),isTouch||$(this).bind("load.fb",F.update),$(this).parents(".fancybox-wrap").width("100%").removeClass("fancybox-tmp").show(),F._afterLoad()}))),coming.content=iframe.appendTo(coming.inner),coming.iframe.preload||F._afterLoad()},_preloadImages:function(){var group=F.group,current=F.current,len=group.length,cnt=current.preload?Math.min(current.preload,len-1):0,item,i;for(i=1;i<=cnt;i+=1)"image"===(item=group[(current.index+i)%len]).type&&item.href&&((new Image).src=item.href)},_afterLoad:function(){var coming=F.coming,previous=F.current,placeholder="fancybox-placeholder",current,content,type,scrolling,href,embed;if(F.hideLoading(),coming&&!1!==F.isActive){if(!1===F.trigger("afterLoad",coming,previous))return coming.wrap.stop(!0).trigger("onReset").remove(),void(F.coming=null);switch(previous&&(F.trigger("beforeChange",previous),previous.wrap.stop(!0).removeClass("fancybox-opened").find(".fancybox-item, .fancybox-nav").remove(),"fixed"===previous.wrap.css("position")&&previous.wrap.css(F._getPosition(!0))),F.unbindEvents(),current=coming,content=coming.content,type=coming.type,scrolling=coming.scrolling,$.extend(F,{wrap:current.wrap,skin:current.skin,outer:current.outer,inner:current.inner,current:current,previous:previous}),href=current.href,type){case"inline":case"ajax":case"html":current.selector?content=$("<div>").html(content).find(current.selector):isQuery(content)&&(content.data(placeholder)||content.data(placeholder,$('<div class="'+placeholder+'"></div>').insertAfter(content).hide()),content=content.show().detach(),current.wrap.bind("onReset",(function(){$(this).find(content).length&&content.hide().replaceAll(content.data(placeholder)).data(placeholder,!1)})));break;case"image":content=current.tpl.image.replace("{href}",href);break;case"swf":content='<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="100%" height="100%"><param name="movie" value="'+href+'"></param>',embed="",$.each(current.swf,(function(name,val){content+='<param name="'+name+'" value="'+val+'"></param>',embed+=" "+name+'="'+val+'"'})),content+='<embed src="'+href+'" type="application/x-shockwave-flash" width="100%" height="100%"'+embed+"></embed></object>"}isQuery(content)&&content.parent().is(current.inner)||current.inner.append(content),F.trigger("beforeShow"),current.inner.css("overflow","yes"===scrolling?"scroll":"no"===scrolling?"hidden":scrolling),F._setDimension(),current.wrap.removeClass("fancybox-tmp"),current.pos=$.extend({},current.dim,F._getPosition(!0)),F.isOpen=!1,F.coming=null,F.bindEvents(),F.isOpened?previous.prevMethod&&F.transitions[previous.prevMethod]():$(".fancybox-wrap").not(current.wrap).stop(!0).trigger("onReset").remove(),F.transitions[F.isOpened?current.nextMethod:current.openMethod](),F._preloadImages()}},_setDimension:function(){var viewport=F.getViewport(),steps=0,canShrink=!1,canExpand=!1,wrap=F.wrap,skin=F.skin,inner=F.inner,current=F.current,width=current.width,height=current.height,minWidth=current.minWidth,minHeight=current.minHeight,maxWidth=current.maxWidth,maxHeight=current.maxHeight,scrolling=current.scrolling,scrollOut=current.scrollOutside?current.scrollbarWidth:0,margin=current.margin,wMargin=margin[1]+margin[3],hMargin=margin[0]+margin[2],wPadding,hPadding,wSpace,hSpace,origWidth,origHeight,origMaxWidth,origMaxHeight,ratio,width_,height_,maxWidth_,maxHeight_,iframe,body;if(wrap.add(skin).add(inner).width("auto").height("auto"),wSpace=wMargin+(wPadding=skin.outerWidth(!0)-skin.width()),hSpace=hMargin+(hPadding=skin.outerHeight(!0)-skin.height()),origWidth=isPercentage(width)?(viewport.w-wSpace)*getScalar(width)/100:width,origHeight=isPercentage(height)?(viewport.h-hSpace)*getScalar(height)/100:height,"iframe"===current.type){if(iframe=current.content,current.autoHeight&&1===iframe.data("ready"))try{iframe[0].contentWindow.document.location&&(inner.width(origWidth).height(9999),body=iframe.contents().find("body"),scrollOut&&body.css("overflow-x","hidden"),origHeight=body.height())}catch(e){}}else(current.autoWidth||current.autoHeight)&&(inner.addClass("fancybox-tmp"),current.autoWidth||inner.width(origWidth),current.autoHeight||inner.height(origHeight),current.autoWidth&&(origWidth=inner.width()),current.autoHeight&&(origHeight=inner.height()),inner.removeClass("fancybox-tmp"));if(width=getScalar(origWidth),height=getScalar(origHeight),ratio=origWidth/origHeight,minWidth=getScalar(isPercentage(minWidth)?getScalar(minWidth,"w")-wSpace:minWidth),maxWidth=getScalar(isPercentage(maxWidth)?getScalar(maxWidth,"w")-wSpace:maxWidth),minHeight=getScalar(isPercentage(minHeight)?getScalar(minHeight,"h")-hSpace:minHeight),origMaxWidth=maxWidth,origMaxHeight=maxHeight=getScalar(isPercentage(maxHeight)?getScalar(maxHeight,"h")-hSpace:maxHeight),maxWidth_=viewport.w-wMargin,maxHeight_=viewport.h-hMargin,current.aspectRatio?(width>maxWidth&&(height=(width=maxWidth)/ratio),height>maxHeight&&(width=(height=maxHeight)*ratio),width<minWidth&&(height=(width=minWidth)/ratio),height<minHeight&&(width=(height=minHeight)*ratio)):(width=Math.max(minWidth,Math.min(width,maxWidth)),height=Math.max(minHeight,Math.min(height,maxHeight))),current.fitToView)if(maxWidth=Math.min(viewport.w-wSpace,maxWidth),maxHeight=Math.min(viewport.h-hSpace,maxHeight),inner.width(getScalar(width)).height(getScalar(height)),wrap.width(getScalar(width+wPadding)),width_=wrap.width(),height_=wrap.height(),current.aspectRatio)for(;(width_>maxWidth_||height_>maxHeight_)&&width>minWidth&&height>minHeight&&!(steps++>19);)(width=(height=Math.max(minHeight,Math.min(maxHeight,height-10)))*ratio)<minWidth&&(height=(width=minWidth)/ratio),width>maxWidth&&(height=(width=maxWidth)/ratio),inner.width(getScalar(width)).height(getScalar(height)),wrap.width(getScalar(width+wPadding)),width_=wrap.width(),height_=wrap.height();else width=Math.max(minWidth,Math.min(width,width-(width_-maxWidth_))),height=Math.max(minHeight,Math.min(height,height-(height_-maxHeight_)));scrollOut&&"auto"===scrolling&&height<origHeight&&width+wPadding+scrollOut<maxWidth_&&(width+=scrollOut),inner.width(getScalar(width)).height(getScalar(height)),wrap.width(getScalar(width+wPadding)),width_=wrap.width(),height_=wrap.height(),canShrink=(width_>maxWidth_||height_>maxHeight_)&&width>minWidth&&height>minHeight,canExpand=current.aspectRatio?width<origMaxWidth&&height<origMaxHeight&&width<origWidth&&height<origHeight:(width<origMaxWidth||height<origMaxHeight)&&(width<origWidth||height<origHeight),$.extend(current,{dim:{width:getValue(width_),height:getValue(height_)},origWidth:origWidth,origHeight:origHeight,canShrink:canShrink,canExpand:canExpand,wPadding:wPadding,hPadding:hPadding,wrapSpace:height_-skin.outerHeight(!0),skinSpace:skin.height()-height}),!iframe&&current.autoHeight&&height>minHeight&&height<maxHeight&&!canExpand&&inner.height("auto")},_getPosition:function(onlyAbsolute){var current=F.current,viewport=F.getViewport(),margin=current.margin,width=F.wrap.width()+margin[1]+margin[3],height=F.wrap.height()+margin[0]+margin[2],rez={position:"absolute",top:margin[0],left:margin[3]};return current.autoCenter&&current.fixed&&!onlyAbsolute&&height<=viewport.h&&width<=viewport.w?rez.position="fixed":current.locked||(rez.top+=viewport.y,rez.left+=viewport.x),rez.top=getValue(Math.max(rez.top,rez.top+(viewport.h-height)*current.topRatio)),rez.left=getValue(Math.max(rez.left,rez.left+(viewport.w-width)*current.leftRatio)),rez},_afterZoomIn:function(){var current=F.current;current&&(F.isOpen=F.isOpened=!0,F.wrap.addClass("fancybox-opened").css("overflow","visible"),F.reposition(),(current.closeClick||current.nextClick)&&F.inner.css("cursor","pointer").bind("click.fb",(function(e){$(e.target).is("a")||$(e.target).parent().is("a")||F[current.closeClick?"close":"next"]()})),current.closeBtn&&$(current.tpl.closeBtn).appendTo(F.skin).bind("click.fb",F.close),current.arrows&&F.group.length>1&&((current.loop||current.index>0)&&$(current.tpl.prev).appendTo(F.outer).bind("click.fb",F.prev),(current.loop||current.index<F.group.length-1)&&$(current.tpl.next).appendTo(F.outer).bind("click.fb",F.next)),F.trigger("afterShow"),current.loop||current.index!==current.group.length-1?F.opts.autoPlay&&!F.player.isActive&&(F.opts.autoPlay=!1,F.play()):F.play(!1))},_afterZoomOut:function(){var current=F.current;$(".fancybox-wrap").stop(!0).trigger("onReset").remove(),$.extend(F,{group:{},opts:{},router:!1,current:null,isActive:!1,isOpened:!1,isOpen:!1,isClosing:!1,wrap:null,skin:null,outer:null,inner:null}),F.trigger("afterClose",current)}}),F.transitions={getOrigPosition:function(){var current=F.current,element=current.element,orig=current.orig,pos={},width=50,height=50,hPadding=current.hPadding,wPadding=current.wPadding,viewport=F.getViewport();return!orig&&current.isDom&&element.is(":visible")&&((orig=element.find("img:first")).length||(orig=element)),isQuery(orig)?(pos=orig.offset(),orig.is("img")&&(width=orig.outerWidth(),height=orig.outerHeight())):(pos.top=viewport.y+(viewport.h-height)*current.topRatio,pos.left=viewport.x+(viewport.w-width)*current.leftRatio),current.locked&&(pos.top-=viewport.y,pos.left-=viewport.x),pos={top:getValue(pos.top-hPadding*current.topRatio),left:getValue(pos.left-wPadding*current.leftRatio),width:getValue(width+wPadding),height:getValue(height+hPadding)}},step:function(now,fx){var ratio,padding,value,prop=fx.prop,current=F.current,wrapSpace=current.wrapSpace,skinSpace=current.skinSpace;"width"!==prop&&"height"!==prop||(ratio=fx.end===fx.start?1:(now-fx.start)/(fx.end-fx.start),F.isClosing&&(ratio=1-ratio),value=now-(padding="width"===prop?current.wPadding:current.hPadding),F.skin[prop](getScalar("width"===prop?value:value-wrapSpace*ratio)),F.inner[prop](getScalar("width"===prop?value:value-wrapSpace*ratio-skinSpace*ratio)))},zoomIn:function(){var current=F.current,startPos=current.pos,effect=current.openEffect,elastic="elastic"===effect,endPos=$.extend({opacity:1},startPos);delete endPos.position,elastic?(startPos=this.getOrigPosition(),current.openOpacity&&(startPos.opacity=.1)):"fade"===effect&&(startPos.opacity=.1),F.wrap.css(startPos).animate(endPos,{duration:"none"===effect?0:current.openSpeed,easing:current.openEasing,step:elastic?this.step:null,complete:F._afterZoomIn})},zoomOut:function(){var current=F.current,effect=current.closeEffect,elastic="elastic"===effect,endPos={opacity:.1};elastic&&(endPos=this.getOrigPosition(),current.closeOpacity&&(endPos.opacity=.1)),F.wrap.animate(endPos,{duration:"none"===effect?0:current.closeSpeed,easing:current.closeEasing,step:elastic?this.step:null,complete:F._afterZoomOut})},changeIn:function(){var current=F.current,effect=current.nextEffect,startPos=current.pos,endPos={opacity:1},direction=F.direction,distance=200,field;startPos.opacity=.1,"elastic"===effect&&(field="down"===direction||"up"===direction?"top":"left","down"===direction||"right"===direction?(startPos[field]=getValue(getScalar(startPos[field])-200),endPos[field]="+=200px"):(startPos[field]=getValue(getScalar(startPos[field])+200),endPos[field]="-=200px")),"none"===effect?F._afterZoomIn():F.wrap.css(startPos).animate(endPos,{duration:current.nextSpeed,easing:current.nextEasing,complete:F._afterZoomIn})},changeOut:function(){var previous=F.previous,effect=previous.prevEffect,endPos={opacity:.1},direction=F.direction,distance=200;"elastic"===effect&&(endPos["down"===direction||"up"===direction?"top":"left"]=("up"===direction||"left"===direction?"-":"+")+"=200px"),previous.wrap.animate(endPos,{duration:"none"===effect?0:previous.prevSpeed,easing:previous.prevEasing,complete:function(){$(this).trigger("onReset").remove()}})}},F.helpers.overlay={overlay:null,update:function(){var width="100%",offsetWidth;this.overlay.width(width).height("100%"),$.browser.msie?(offsetWidth=Math.max(document.documentElement.offsetWidth,document.body.offsetWidth),D.width()>offsetWidth&&(width=D.width())):D.width()>W.width()&&(width=D.width()),this.overlay.width(width).height(D.height())},onReady:function(opts,obj){$(".fancybox-overlay").stop(!0,!0),this.overlay||$.extend(this,{overlay:$('<div class="fancybox-overlay"></div>').appendTo(obj.parent),margin:(D.height()>W.height()||"scroll"===$("body").css("overflow-y"))&&$("body").css("margin-right"),el:document.all&&!document.querySelector?$("html"):$("body")}),obj.fixed&&!isTouch&&(this.overlay.addClass("fancybox-overlay-fixed"),obj.autoCenter&&(this.overlay.append(obj.wrap),obj.locked=this.overlay)),!0===opts.showEarly&&this.beforeShow.apply(this,arguments)},beforeShow:function(opts,obj){var overlay=this.overlay.unbind(".fb").width("auto").height("auto").css(opts.css);opts.closeClick&&overlay.bind("click.fb",(function(e){$(e.target).hasClass("fancybox-overlay")&&F.close()})),obj.fixed&&!isTouch?obj.locked&&(this.el.addClass("fancybox-lock"),!1!==this.margin&&$("body").css("margin-right",getScalar(this.margin)+obj.scrollbarWidth)):this.update(),overlay.show()},onUpdate:function(opts,obj){obj.fixed&&!isTouch||this.update()},afterClose:function(opts){var that=this,speed=opts.speedOut||0;that.overlay&&!F.isActive&&that.overlay.fadeOut(speed||0,(function(){$("body").css("margin-right",that.margin),that.el.removeClass("fancybox-lock"),that.overlay.remove(),that.overlay=null}))}},F.helpers.title={beforeShow:function(opts){var text=F.current.title,type=opts.type,title,target;if(isString(text)&&""!==$.trim(text)){switch(title=$('<div class="fancybox-title fancybox-title-'+type+'-wrap">'+text+"</div>"),type){case"inside":target=F.skin;break;case"outside":target=F.wrap;break;case"over":target=F.inner;break;default:target=F.skin,title.appendTo("body").width(title.width()).wrapInner('<span class="child"></span>'),F.current.margin[2]+=Math.abs(getScalar(title.css("margin-bottom")))}"top"===opts.position?title.prependTo(target):title.appendTo(target)}}},$.fn.fancybox=function(options){var index,that=$(this),selector=this.selector||"",run=function(e){var what=$(this).blur(),idx=index,relType,relVal;e.ctrlKey||e.altKey||e.shiftKey||e.metaKey||what.is(".fancybox-wrap")||(relType=options.groupAttr||"data-fancybox-group",(relVal=what.attr(relType))||(relType="rel",relVal=what.get(0)[relType]),relVal&&""!==relVal&&"nofollow"!==relVal&&(idx=(what=(what=selector.length?$(selector):that).filter("["+relType+'="'+relVal+'"]')).index(this)),options.index=idx,!1!==F.open(what,options)&&e.preventDefault())};return index=(options=options||{}).index||0,selector&&!1!==options.live?D.undelegate(selector,"click.fb-start").delegate(selector+":not('.fancybox-item, .fancybox-nav')","click.fb-start",run):that.unbind("click.fb-start").bind("click.fb-start",run),this},D.ready((function(){var elem,fixed;void 0===$.scrollbarWidth&&($.scrollbarWidth=function(){var parent=$('<div style="width:50px;height:50px;overflow:auto"><div/></div>').appendTo("body"),child=parent.children(),width=child.innerWidth()-child.height(99).innerWidth();return parent.remove(),width}),void 0===$.support.fixedPosition&&($.support.fixedPosition=(elem=$('<div style="position:fixed;top:20px;"></div>').appendTo("body"),fixed=20===elem[0].offsetTop||15===elem[0].offsetTop,elem.remove(),fixed)),$.extend(F.defaults,{scrollbarWidth:$.scrollbarWidth(),fixed:$.support.fixedPosition,parent:$("body")})}))}(window,document,jQuery);
//# sourceMappingURL=jquery.fancybox.min.js.map110  45895|/aspro.optimus/install/wizards/aspro/optimus/site/templates/aspro_optimus/js/jquery.fancybox.js|b54e55bd/*!
 * fancyBox - jQuery Plugin
 * version: 2.1.0 (Mon, 20 Aug 2012)
 * @requires jQuery v1.6 or later
 *
 * Examples at http://fancyapps.com/fancybox/
 * License: www.fancyapps.com/fancybox/#license
 *
 * Copyright 2012 Janis Skarnelis - janis@fancyapps.com
 *
 */

(function (window, document, $, undefined) {
	"use strict";

	var W = $(window),
		D = $(document),
		F = $.fancybox = function () {
			F.open.apply( this, arguments );
		},
		didUpdate = null,
		isTouch	  = document.createTouch !== undefined,

		isQuery	= function(obj) {
			return obj && obj.hasOwnProperty && obj instanceof $;
		},
		isString = function(str) {
			return str && $.type(str) === "string";
		},
		isPercentage = function(str) {
			return isString(str) && str.indexOf('%') > 0;
		},
		isScrollable = function(el) {
			return (el && !(el.style.overflow && el.style.overflow === 'hidden') && ((el.clientWidth && el.scrollWidth > el.clientWidth) || (el.clientHeight && el.scrollHeight > el.clientHeight)));
		},
		getScalar = function(value, dim) {
			var value_ = parseInt(value, 10);

			if (dim && isPercentage(value)) {
				value_ = F.getViewport()[ dim ] / 100 * value_;
			}

			return Math.ceil(value_);
		},
		getValue = function(value, dim) {
			return getScalar(value, dim) + 'px';
		};

	$.extend(F, {
		// The current version of fancyBox
		version: '2.1.0',

		defaults: {
			padding : 15,
			margin  : 20,

			width     : 800,
			height    : 600,
			minWidth  : 100,
			minHeight : 100,
			maxWidth  : 9999,
			maxHeight : 9999,

			autoSize   : true,
			autoHeight : false,
			autoWidth  : false,

			autoResize  : !isTouch,
			autoCenter  : !isTouch,
			fitToView   : true,
			aspectRatio : false,
			topRatio    : 0.5,
			leftRatio   : 0.5,

			scrolling : 'auto', // 'auto', 'yes' or 'no'
			wrapCSS   : '',

			arrows     : true,
			closeBtn   : true,
			closeClick : false,
			nextClick  : false,
			mouseWheel : true,
			autoPlay   : false,
			playSpeed  : 3000,
			preload    : 3,
			modal      : false,
			loop       : true,

			ajax  : {
				dataType : 'html',
				headers  : { 'X-fancyBox': true }
			},
			iframe : {
				scrolling : 'auto',
				preload   : true
			},
			swf : {
				wmode: 'transparent',
				allowfullscreen   : 'true',
				allowscriptaccess : 'always'
			},

			keys  : {
				next : {
					13 : 'left', // enter
					34 : 'up',   // page down
					39 : 'left', // right arrow
					40 : 'up'    // down arrow
				},
				prev : {
					8  : 'right',  // backspace
					33 : 'down',   // page up
					37 : 'right',  // left arrow
					38 : 'down'    // up arrow
				},
				close  : [27], // escape key
				play   : [32], // space - start/stop slideshow
				toggle : [70]  // letter "f" - toggle fullscreen
			},

			direction : {
				next : 'left',
				prev : 'right'
			},

			scrollOutside  : true,

			// Override some properties
			index   : 0,
			type    : null,
			href    : null,
			content : null,
			title   : null,

			// HTML templates
			tpl: {
				wrap     : '<div class="fancybox-wrap" tabIndex="-1"><div class="fancybox-skin"><div class="fancybox-outer"><div class="fancybox-inner"></div></div></div></div>',
				image    : '<img class="fancybox-image" src="{href}" alt="" />',
				iframe   : '<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" frameborder="0" vspace="0" hspace="0"' + /*($.browser.msie ? ' allowtransparency="true"' : '')*/ + '></iframe>',
				error    : '<p class="fancybox-error">The requested content cannot be loaded.<br/>Please try again later.</p>',
				closeBtn : '<a title="Close" class="fancybox-item fancybox-close" href="javascript:;"></a>',
				next     : '<a title="Next" class="fancybox-nav fancybox-next" href="javascript:;"><span></span></a>',
				prev     : '<a title="Previous" class="fancybox-nav fancybox-prev" href="javascript:;"><span></span></a>'
			},

			// Properties for each animation type
			// Opening fancyBox
			openEffect  : 'fade', // 'elastic', 'fade' or 'none'
			openSpeed   : 250,
			openEasing  : 'swing',
			openOpacity : true,
			openMethod  : 'zoomIn',

			// Closing fancyBox
			closeEffect  : 'fade', // 'elastic', 'fade' or 'none'
			closeSpeed   : 250,
			closeEasing  : 'swing',
			closeOpacity : true,
			closeMethod  : 'zoomOut',

			// Changing next gallery item
			nextEffect : 'elastic', // 'elastic', 'fade' or 'none'
			nextSpeed  : 250,
			nextEasing : 'swing',
			nextMethod : 'changeIn',

			// Changing previous gallery item
			prevEffect : 'elastic', // 'elastic', 'fade' or 'none'
			prevSpeed  : 250,
			prevEasing : 'swing',
			prevMethod : 'changeOut',

			// Enabled helpers
			helpers : {
				overlay : {
					closeClick : true,
					speedOut   : 200,
					showEarly  : true,
					css        : {}
				},
				title : {
					type : 'float' // 'float', 'inside', 'outside' or 'over'
				}
			},

			// Callbacks
			onCancel     : $.noop, // If canceling
			beforeLoad   : $.noop, // Before loading
			afterLoad    : $.noop, // After loading
			beforeShow   : $.noop, // Before changing in current item
			afterShow    : $.noop, // After opening
			beforeChange : $.noop, // Before changing gallery item
			beforeClose  : $.noop, // Before closing
			afterClose   : $.noop  // After closing
		},

		//Current state
		group    : {}, // Selected group
		opts     : {}, // Group options
		previous : null,  // Previous element
		coming   : null,  // Element being loaded
		current  : null,  // Currently loaded element
		isActive : false, // Is activated
		isOpen   : false, // Is currently open
		isOpened : false, // Have been fully opened at least once

		wrap  : null,
		skin  : null,
		outer : null,
		inner : null,

		player : {
			timer    : null,
			isActive : false
		},

		// Loaders
		ajaxLoad   : null,
		imgPreload : null,

		// Some collections
		transitions : {},
		helpers     : {},

		/*
		 *	Static methods
		 */

		open: function (group, opts) {
			if (!group) {
				return;
			}

			if (!$.isPlainObject(opts)) {
				opts = {};
			}

			// Close if already active
			if (false === F.close(true)) {
				return;
			}

			// Normalize group
			if (!$.isArray(group)) {
				group = isQuery(group) ? $(group).get() : [group];
			}

			// Recheck if the type of each element is `object` and set content type (image, ajax, etc)
			$.each(group, function(i, element) {
				var obj = {},
					href,
					title,
					content,
					type,
					rez,
					hrefParts,
					selector;

				if ($.type(element) === "object") {
					// Check if is DOM element
					if (element.nodeType) {
						element = $(element);
					}

					if (isQuery(element)) {
						obj = {
							href    : element.attr('href'),
							title   : element.attr('title'),
							isDom   : true,
							element : element
						};

						if ($.metadata) {
							$.extend(true, obj, element.metadata());
						}

					} else {
						obj = element;
					}
				}

				href  = opts.href  || obj.href || (isString(element) ? element : null);
				title = opts.title !== undefined ? opts.title : obj.title || '';

				content = opts.content || obj.content;
				type    = content ? 'html' : (opts.type  || obj.type);

				if (!type && obj.isDom) {
					type = element.data('fancybox-type');

					if (!type) {
						rez  = element.prop('class').match(/fancybox\.(\w+)/);
						type = rez ? rez[1] : null;
					}
				}

				if (isString(href)) {
					// Try to guess the content type
					if (!type) {
						if (F.isImage(href)) {
							type = 'image';

						} else if (F.isSWF(href)) {
							type = 'swf';

						} else if (href.charAt(0) === '#') {
							type = 'inline';

						} else if (isString(element)) {
							type    = 'html';
							content = element;
						}
					}

					// Split url into two pieces with source url and content selector, e.g,
					// "/mypage.html #my_id" will load "/mypage.html" and display element having id "my_id"
					if (type === 'ajax') {
						hrefParts = href.split(/\s+/, 2);
						href      = hrefParts.shift();
						selector  = hrefParts.shift();
					}
				}

				if (!content) {
					if (type === 'inline') {
						if (href) {
							content = $( isString(href) ? href.replace(/.*(?=#[^\s]+$)/, '') : href ); //strip for ie7

						} else if (obj.isDom) {
							content = element;
						}

					} else if (type === 'html') {
						content = href;

					} else if (!type && !href && obj.isDom) {
						type    = 'inline';
						content = element;
					}
				}

				$.extend(obj, {
					href     : href,
					type     : type,
					content  : content,
					title    : title,
					selector : selector
				});

				group[ i ] = obj;
			});

			// Extend the defaults
			F.opts = $.extend(true, {}, F.defaults, opts);

			// All options are merged recursive except keys
			if (opts.keys !== undefined) {
				F.opts.keys = opts.keys ? $.extend({}, F.defaults.keys, opts.keys) : false;
			}

			F.group = group;

			return F._start(F.opts.index);
		},

		// Cancel image loading or abort ajax request
		cancel: function () {
			var coming = F.coming;

			if (!coming || false === F.trigger('onCancel')) {
				return;
			}

			F.hideLoading();

			if (F.ajaxLoad) {
				F.ajaxLoad.abort();
			}

			F.ajaxLoad = null;

			if (F.imgPreload) {
				F.imgPreload.onload = F.imgPreload.onerror = null;
			}

			// If the first item has been canceled, then clear everything
			if (coming.wrap) {
				coming.wrap.stop(true).trigger('onReset').remove();
			}

			if (!F.current) {
				F.trigger('afterClose');
			}

			F.coming = null;
		},

		// Start closing animation if is open; remove immediately if opening/closing
		close: function (immediately) {
			F.cancel();

			if (false === F.trigger('beforeClose')) {
				return;
			}

			F.unbindEvents();

			if (!F.isOpen || immediately === true) {
				$('.fancybox-wrap').stop(true).trigger('onReset').remove();

				F._afterZoomOut();

			} else {
				F.isOpen = F.isOpened = false;
				F.isClosing = true;

				$('.fancybox-item, .fancybox-nav').remove();

				F.wrap.stop(true, true).removeClass('fancybox-opened');

				if (F.wrap.css('position') === 'fixed') {
					F.wrap.css(F._getPosition( true ));
				}

				F.transitions[ F.current.closeMethod ]();
			}
		},

		// Manage slideshow:
		//   $.fancybox.play(); - toggle slideshow
		//   $.fancybox.play( true ); - start
		//   $.fancybox.play( false ); - stop
		play: function ( action ) {
			var clear = function () {
					clearTimeout(F.player.timer);
				},
				set = function () {
					clear();

					if (F.current && F.player.isActive) {
						F.player.timer = setTimeout(F.next, F.current.playSpeed);
					}
				},
				stop = function () {
					clear();

					$('body').unbind('.player');

					F.player.isActive = false;

					F.trigger('onPlayEnd');
				},
				start = function () {
					if (F.current && (F.current.loop || F.current.index < F.group.length - 1)) {
						F.player.isActive = true;

						$('body').bind({
							'afterShow.player onUpdate.player'   : set,
							'onCancel.player beforeClose.player' : stop,
							'beforeLoad.player' : clear
						});

						set();

						F.trigger('onPlayStart');
					}
				};

			if (action === true || (!F.player.isActive && action !== false)) {
				start();
			} else {
				stop();
			}
		},

		// Navigate to next gallery item
		next: function ( direction ) {
			var current = F.current;

			if (current) {
				if (!isString(direction)) {
					direction = current.direction.next;
				}

				F.jumpto(current.index + 1, direction, 'next');
			}
		},

		// Navigate to previous gallery item
		prev: function ( direction ) {
			var current = F.current;

			if (current) {
				if (!isString(direction)) {
					direction = current.direction.prev;
				}

				F.jumpto(current.index - 1, direction, 'prev');
			}
		},

		// Navigate to gallery item by index
		jumpto: function ( index, direction, router ) {
			var current = F.current;

			if (!current) {
				return;
			}

			index = getScalar(index);

			F.direction = direction || current.direction[ (index >= current.index ? 'next' : 'prev') ];
			F.router    = router || 'jumpto';

			if (current.loop) {
				if (index < 0) {
					index = current.group.length + (index % current.group.length);
				}

				index = index % current.group.length;
			}

			if (current.group[ index ] !== undefined) {
				F.cancel();

				F._start(index);
			}
		},

		// Center inside viewport and toggle position type to fixed or absolute if needed
		reposition: function (e, onlyAbsolute) {
			var pos;

			if (F.isOpen) {
				pos = F._getPosition(onlyAbsolute);

				if (e && e.type === 'scroll') {
					delete pos.position;

					F.wrap.stop(true, true).animate(pos, 200);

				} else {
					F.wrap.css(pos);
				}
			}
		},

		update: function (e) {
			var type = (e && e.type),
				anyway = !type || type === 'orientationchange';

			if (anyway) {
				clearTimeout(didUpdate);

				didUpdate = null;
			}

			if (!F.isOpen || didUpdate) {
				return;
			}

			// Help browser to restore document dimensions
			if (anyway || isTouch) {
				F.wrap.removeAttr('style').addClass('fancybox-tmp');

				F.trigger('onUpdate');
			}

			didUpdate = setTimeout(function() {
				var current = F.current;

				if (!current) {
					return;
				}

				F.wrap.removeClass('fancybox-tmp');

				if (type !== 'scroll') {
					F._setDimension();
				}

				if (!(type === 'scroll' && current.canShrink)) {
					F.reposition(e);
				}

				F.trigger('onUpdate');

				didUpdate = null;

			}, (isTouch ? 500 : (anyway ? 20 : 300)));
		},

		// Shrink content to fit inside viewport or restore if resized
		toggle: function ( action ) {
			if (F.isOpen) {
				F.current.fitToView = $.type(action) === "boolean" ? action : !F.current.fitToView;

				F.update();
			}
		},

		hideLoading: function () {
			D.unbind('keypress.fb');

			$('#fancybox-loading').remove();
		},

		showLoading: function () {
			var el, viewport;

			F.hideLoading();

			// If user will press the escape-button, the request will be canceled
			D.bind('keypress.fb', function(e) {
				if ((e.which || e.keyCode) === 27) {
					e.preventDefault();
					F.cancel();
				}
			});

			el = $('<div id="fancybox-loading"><div></div></div>').click(F.cancel).appendTo('body');

			if (!F.defaults.fixed) {
				viewport = F.getViewport();

				el.css({
					position : 'absolute',
					top  : (viewport.h * 0.5) + viewport.y,
					left : (viewport.w * 0.5) + viewport.x
				});
			}
		},

		getViewport: function () {
			var lock = F.current ? F.current.locked : false,
				rez  = {
					x: W.scrollLeft(),
					y: W.scrollTop()
				};

			if (lock) {
				rez.w = lock[0].clientWidth;
				rez.h = lock[0].clientHeight;

			} else {
				// See http://bugs.jquery.com/ticket/6724
				rez.w = isTouch && window.innerWidth  ? window.innerWidth  : W.width();
				rez.h = isTouch && window.innerHeight ? window.innerHeight : W.height();
			}

			return rez;
		},

		// Unbind the keyboard / clicking actions
		unbindEvents: function () {
			if (F.wrap && isQuery(F.wrap)) {
				F.wrap.unbind('.fb');
			}

			D.unbind('.fb');
			W.unbind('.fb');
		},

		bindEvents: function () {
			var current = F.current,
				keys;

			if (!current) {
				return;
			}

			// Changing document height on iOS devices triggers a 'resize' event,
			// that can change document height... repeating infinitely
			W.bind('orientationchange.fb' + (isTouch ? '' : ' resize.fb' ) + (current.autoCenter && !current.locked ? ' scroll.fb' : ''), F.update);

			keys = current.keys;

			if (keys) {
				D.bind('keydown.fb', function (e) {
					var code   = e.which || e.keyCode,
						target = e.target || e.srcElement;

					// Ignore key combinations and key events within form elements
					if (!e.ctrlKey && !e.altKey && !e.shiftKey && !e.metaKey && !(target && (target.type || $(target).is('[contenteditable]')))) {
						$.each(keys, function(i, val) {
							if (current.group.length > 1 && val[ code ] !== undefined) {
								F[ i ]( val[ code ] );

								e.preventDefault();
								return false;
							}

							if ($.inArray(code, val) > -1) {
								F[ i ] ();

								e.preventDefault();
								return false;
							}
						});
					}
				});
			}

			if ($.fn.mousewheel && current.mouseWheel) {
				F.wrap.bind('mousewheel.fb', function (e, delta, deltaX, deltaY) {
					var target = e.target || null,
						parent = $(target),
						canScroll = false;

					while (parent.length) {
						if (canScroll || parent.is('.fancybox-skin') || parent.is('.fancybox-wrap')) {
							break;
						}

						canScroll = isScrollable( parent[0] );
						parent    = $(parent).parent();
					}

					if (delta !== 0 && !canScroll) {
						if (F.group.length > 1 && !current.canShrink) {
							if (deltaY > 0 || deltaX > 0) {
								F.prev( deltaY > 0 ? 'down' : 'left' );

							} else if (deltaY < 0 || deltaX < 0) {
								F.next( deltaY < 0 ? 'up' : 'right' );
							}

							e.preventDefault();
						}
					}
				});
			}
		},

		trigger: function (event, o) {
			var ret, obj = o || F.coming || F.current;

			if (!obj) {
				return;
			}

			if ($.isFunction( obj[event] )) {
				ret = obj[event].apply(obj, Array.prototype.slice.call(arguments, 1));
			}

			if (ret === false) {
				return false;
			}

			if (event === 'onCancel' && !F.isOpened) {
				F.isActive = false;
			}

			if (obj.helpers) {
				$.each(obj.helpers, function (helper, opts) {
					if (opts && F.helpers[helper] && $.isFunction(F.helpers[helper][event])) {
						F.helpers[helper][event](opts, obj);
					}
				});
			}

			$.event.trigger(event + '.fb');
		},

		isImage: function (str) {
			return isString(str) && str.match(/\.(jp(e|g|eg)|gif|png|bmp|webp)((\?|#).*)?$/i);
		},

		isSWF: function (str) {
			return isString(str) && str.match(/\.(swf)((\?|#).*)?$/i);
		},

		_start: function (index) {
			var coming = {},
				obj,
				href,
				type,
				margin,
				padding;

			index = getScalar( index );
			obj   = F.group[ index ] || null;

			if (!obj) {
				return false;
			}

			coming = $.extend(true, {}, F.opts, obj);

			// Convert margin and padding properties to array - top, right, bottom, left
			margin  = coming.margin;
			padding = coming.padding;

			if ($.type(margin) === 'number') {
				coming.margin = [margin, margin, margin, margin];
			}

			if ($.type(padding) === 'number') {
				coming.padding = [padding, padding, padding, padding];
			}

			// 'modal' propery is just a shortcut
			if (coming.modal) {
				$.extend(true, coming, {
					closeBtn   : false,
					closeClick : false,
					nextClick  : false,
					arrows     : false,
					mouseWheel : false,
					keys       : null,
					helpers: {
						overlay : {
							closeClick : false
						}
					}
				});
			}

			// 'autoSize' property is a shortcut, too
			if (coming.autoSize) {
				coming.autoWidth = coming.autoHeight = true;
			}

			if (coming.width === 'auto') {
				coming.autoWidth = true;
			}

			if (coming.height === 'auto') {
				coming.autoHeight = true;
			}

			/*
			 * Add reference to the group, so it`s possible to access from callbacks, example:
			 * afterLoad : function() {
			 *     this.title = 'Image ' + (this.index + 1) + ' of ' + this.group.length + (this.title ? ' - ' + this.title : '');
			 * }
			 */

			coming.group  = F.group;
			coming.index  = index;

			// Give a chance for callback or helpers to update coming item (type, title, etc)
			F.coming = coming;

			if (false === F.trigger('beforeLoad')) {
				F.coming = null;

				return;
			}

			type = coming.type;
			href = coming.href;

			if (!type) {
				F.coming = null;

				//If we can not determine content type then drop silently or display next/prev item if looping through gallery
				if (F.current && F.router && F.router !== 'jumpto') {
					F.current.index = index;

					return F[ F.router ]( F.direction );
				}

				return false;
			}

			F.isActive = true;

			if (type === 'image' || type === 'swf') {
				coming.autoHeight = coming.autoWidth = false;
				coming.scrolling  = 'visible';
			}

			if (type === 'image') {
				coming.aspectRatio = true;
			}

			if (type === 'iframe' && isTouch) {
				coming.scrolling = 'scroll';
			}

			// Build the neccessary markup
			coming.wrap = $(coming.tpl.wrap).addClass('fancybox-' + (isTouch ? 'mobile' : 'desktop') + ' fancybox-type-' + type + ' fancybox-tmp ' + coming.wrapCSS).appendTo( coming.parent );

			$.extend(coming, {
				skin  : $('.fancybox-skin',  coming.wrap),
				outer : $('.fancybox-outer', coming.wrap),
				inner : $('.fancybox-inner', coming.wrap)
			});

			$.each(["Top", "Right", "Bottom", "Left"], function(i, v) {
				coming.skin.css('padding' + v, getValue(coming.padding[ i ]));
			});

			F.trigger('onReady');

			// Check before try to load; 'inline' and 'html' types need content, others - href
			if (type === 'inline' || type === 'html') {
				if (!coming.content || !coming.content.length) {
					return F._error( 'content' );
				}

			} else if (!href) {
				return F._error( 'href' );
			}

			if (type === 'image') {
				F._loadImage();

			} else if (type === 'ajax') {
				F._loadAjax();

			} else if (type === 'iframe') {
				F._loadIframe();

			} else {
				F._afterLoad();
			}
		},

		_error: function ( type ) {
			$.extend(F.coming, {
				type       : 'html',
				autoWidth  : true,
				autoHeight : true,
				minWidth   : 0,
				minHeight  : 0,
				scrolling  : 'no',
				hasError   : type,
				content    : F.coming.tpl.error
			});

			F._afterLoad();
		},

		_loadImage: function () {
			// Reset preload image so it is later possible to check "complete" property
			var img = F.imgPreload = new Image();

			img.onload = function () {
				this.onload = this.onerror = null;

				F.coming.width  = this.width;
				F.coming.height = this.height;

				F._afterLoad();
			};

			img.onerror = function () {
				this.onload = this.onerror = null;

				F._error( 'image' );
			};

			img.src = F.coming.href;

			if (img.complete === undefined || !img.complete) {
				F.showLoading();
			}
		},

		_loadAjax: function () {
			var coming = F.coming;

			F.showLoading();

			F.ajaxLoad = $.ajax($.extend({}, coming.ajax, {
				url: coming.href,
				error: function (jqXHR, textStatus) {
					if (F.coming && textStatus !== 'abort') {
						F._error( 'ajax', jqXHR );

					} else {
						F.hideLoading();
					}
				},
				success: function (data, textStatus) {
					if (textStatus === 'success') {
						coming.content = data;

						F._afterLoad();
					}
				}
			}));
		},

		_loadIframe: function() {
			var coming = F.coming,
				iframe = $(coming.tpl.iframe.replace(/\{rnd\}/g, new Date().getTime()))
					.attr('scrolling', isTouch ? 'auto' : coming.iframe.scrolling)
					.attr('src', coming.href);

			// This helps IE
			$(coming.wrap).bind('onReset', function () {
				try {
					$(this).find('iframe').hide().attr('src', '//about:blank').end().empty();
				} catch (e) {}
			});

			if (coming.iframe.preload) {
				F.showLoading();

				iframe.one('load', function() {
					$(this).data('ready', 1);

					// iOS will lose scrolling if we resize
					if (!isTouch) {
						$(this).bind('load.fb', F.update);
					}

					// Without this trick:
					//   - iframe won't scroll on iOS devices
					//   - IE7 sometimes displays empty iframe
					$(this).parents('.fancybox-wrap').width('100%').removeClass('fancybox-tmp').show();

					F._afterLoad();
				});
			}

			coming.content = iframe.appendTo( coming.inner );

			if (!coming.iframe.preload) {
				F._afterLoad();
			}
		},

		_preloadImages: function() {
			var group   = F.group,
				current = F.current,
				len     = group.length,
				cnt     = current.preload ? Math.min(current.preload, len - 1) : 0,
				item,
				i;

			for (i = 1; i <= cnt; i += 1) {
				item = group[ (current.index + i ) % len ];

				if (item.type === 'image' && item.href) {
					new Image().src = item.href;
				}
			}
		},

		_afterLoad: function () {
			var coming   = F.coming,
				previous = F.current,
				placeholder = 'fancybox-placeholder',
				current,
				content,
				type,
				scrolling,
				href,
				embed;

			F.hideLoading();

			if (!coming || F.isActive === false) {
				return;
			}

			if (false === F.trigger('afterLoad', coming, previous)) {
				coming.wrap.stop(true).trigger('onReset').remove();

				F.coming = null;

				return;
			}

			if (previous) {
				F.trigger('beforeChange', previous);

				previous.wrap.stop(true).removeClass('fancybox-opened')
					.find('.fancybox-item, .fancybox-nav')
					.remove();

				if (previous.wrap.css('position') === 'fixed') {
					previous.wrap.css(F._getPosition( true ));
				}
			}

			F.unbindEvents();

			current   = coming;
			content   = coming.content;
			type      = coming.type;
			scrolling = coming.scrolling;

			$.extend(F, {
				wrap  : current.wrap,
				skin  : current.skin,
				outer : current.outer,
				inner : current.inner,
				current  : current,
				previous : previous
			});

			href = current.href;

			switch (type) {
				case 'inline':
				case 'ajax':
				case 'html':
					if (current.selector) {
						content = $('<div>').html(content).find(current.selector);

					} else if (isQuery(content)) {
						if (!content.data(placeholder)) {
							content.data(placeholder, $('<div class="' + placeholder + '"></div>').insertAfter( content ).hide() );
						}

						content = content.show().detach();

						current.wrap.bind('onReset', function () {
							if ($(this).find(content).length) {
								content.hide().replaceAll( content.data(placeholder) ).data(placeholder, false);
							}
						});
					}
				break;

				case 'image':
					content = current.tpl.image.replace('{href}', href);
				break;

				case 'swf':
					content = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="100%" height="100%"><param name="movie" value="' + href + '"></param>';
					embed   = '';

					$.each(current.swf, function(name, val) {
						content += '<param name="' + name + '" value="' + val + '"></param>';
						embed   += ' ' + name + '="' + val + '"';
					});

					content += '<embed src="' + href + '" type="application/x-shockwave-flash" width="100%" height="100%"' + embed + '></embed></object>';
				break;
			}

			if (!(isQuery(content) && content.parent().is(current.inner))) {
				current.inner.append( content );
			}

			// Give a chance for helpers or callbacks to update elements
			F.trigger('beforeShow');

			// Set scrolling before calculating dimensions
			current.inner.css('overflow', scrolling === 'yes' ? 'scroll' : (scrolling === 'no' ? 'hidden' : scrolling));

			// Set initial dimensions and start position
			F._setDimension();

			current.wrap.removeClass('fancybox-tmp');

			current.pos = $.extend({}, current.dim, F._getPosition( true ));

			F.isOpen = false;
			F.coming = null;

			F.bindEvents();

			if (!F.isOpened) {
				$('.fancybox-wrap').not( current.wrap ).stop(true).trigger('onReset').remove();

			} else if (previous.prevMethod) {
				F.transitions[ previous.prevMethod ]();
			}

			F.transitions[ F.isOpened ? current.nextMethod : current.openMethod ]();

			F._preloadImages();
		},

		_setDimension: function () {
			var viewport   = F.getViewport(),
				steps      = 0,
				canShrink  = false,
				canExpand  = false,
				wrap       = F.wrap,
				skin       = F.skin,
				inner      = F.inner,
				current    = F.current,
				width      = current.width,
				height     = current.height,
				minWidth   = current.minWidth,
				minHeight  = current.minHeight,
				maxWidth   = current.maxWidth,
				maxHeight  = current.maxHeight,
				scrolling  = current.scrolling,
				scrollOut  = current.scrollOutside ? current.scrollbarWidth : 0,
				margin     = current.margin,
				wMargin    = margin[1] + margin[3],
				hMargin    = margin[0] + margin[2],
				wPadding,
				hPadding,
				wSpace,
				hSpace,
				origWidth,
				origHeight,
				origMaxWidth,
				origMaxHeight,
				ratio,
				width_,
				height_,
				maxWidth_,
				maxHeight_,
				iframe,
				body;

			// Reset dimensions so we could re-check actual size
			wrap.add(skin).add(inner).width('auto').height('auto');

			wPadding = skin.outerWidth(true)  - skin.width();
			hPadding = skin.outerHeight(true) - skin.height();

			// Any space between content and viewport (margin, padding, border, title)
			wSpace = wMargin + wPadding;
			hSpace = hMargin + hPadding;

			origWidth  = isPercentage(width)  ? (viewport.w - wSpace) * getScalar(width)  / 100 : width;
			origHeight = isPercentage(height) ? (viewport.h - hSpace) * getScalar(height) / 100 : height;

			if (current.type === 'iframe') {
				iframe = current.content;

				if (current.autoHeight && iframe.data('ready') === 1) {
					try {
						if (iframe[0].contentWindow.document.location) {
							inner.width( origWidth ).height(9999);

							body = iframe.contents().find('body');

							if (scrollOut) {
								body.css('overflow-x', 'hidden');
							}

							origHeight = body.height();
						}

					} catch (e) {}
				}

			} else if (current.autoWidth || current.autoHeight) {
				inner.addClass( 'fancybox-tmp' );

				// Set width or height in case we need to calculate only one dimension
				if (!current.autoWidth) {
					inner.width( origWidth );
				}

				if (!current.autoHeight) {
					inner.height( origHeight );
				}

				if (current.autoWidth) {
					origWidth = inner.width();
				}

				if (current.autoHeight) {
					origHeight = inner.height();
				}

				inner.removeClass( 'fancybox-tmp' );
			}

			width  = getScalar( origWidth );
			height = getScalar( origHeight );

			ratio  = origWidth / origHeight;

			// Calculations for the content
			minWidth  = getScalar(isPercentage(minWidth) ? getScalar(minWidth, 'w') - wSpace : minWidth);
			maxWidth  = getScalar(isPercentage(maxWidth) ? getScalar(maxWidth, 'w') - wSpace : maxWidth);

			minHeight = getScalar(isPercentage(minHeight) ? getScalar(minHeight, 'h') - hSpace : minHeight);
			maxHeight = getScalar(isPercentage(maxHeight) ? getScalar(maxHeight, 'h') - hSpace : maxHeight);

			// These will be used to determine if wrap can fit in the viewport
			origMaxWidth  = maxWidth;
			origMaxHeight = maxHeight;

			maxWidth_  = viewport.w - wMargin;
			maxHeight_ = viewport.h - hMargin;

			if (current.aspectRatio) {
				if (width > maxWidth) {
					width  = maxWidth;
					height = width / ratio;
				}

				if (height > maxHeight) {
					height = maxHeight;
					width  = height * ratio;
				}

				if (width < minWidth) {
					width  = minWidth;
					height = width / ratio;
				}

				if (height < minHeight) {
					height = minHeight;
					width  = height * ratio;
				}

			} else {
				width  = Math.max(minWidth,  Math.min(width,  maxWidth));
				height = Math.max(minHeight, Math.min(height, maxHeight));
			}

			// Try to fit inside viewport (including the title)
			if (current.fitToView) {
				maxWidth  = Math.min(viewport.w - wSpace, maxWidth);
				maxHeight = Math.min(viewport.h - hSpace, maxHeight);

				inner.width( getScalar( width ) ).height( getScalar( height ) );

				wrap.width( getScalar( width + wPadding ) );

				// Real wrap dimensions
				width_  = wrap.width();
				height_ = wrap.height();

				if (current.aspectRatio) {
					while ((width_ > maxWidth_ || height_ > maxHeight_) && width > minWidth && height > minHeight) {
						if (steps++ > 19) {
							break;
						}

						height = Math.max(minHeight, Math.min(maxHeight, height - 10));
						width  = height * ratio;

						if (width < minWidth) {
							width  = minWidth;
							height = width / ratio;
						}

						if (width > maxWidth) {
							width  = maxWidth;
							height = width / ratio;
						}

						inner.width( getScalar( width ) ).height( getScalar( height ) );

						wrap.width( getScalar( width + wPadding ) );

						width_  = wrap.width();
						height_ = wrap.height();
					}

				} else {
					width  = Math.max(minWidth,  Math.min(width,  width  - (width_  - maxWidth_)));
					height = Math.max(minHeight, Math.min(height, height - (height_ - maxHeight_)));
				}
			}

			if (scrollOut && scrolling === 'auto' && height < origHeight && (width + wPadding + scrollOut) < maxWidth_) {
				width += scrollOut;
			}

			inner.width( getScalar( width ) ).height( getScalar( height ) );

			wrap.width( getScalar( width + wPadding ) );

			width_  = wrap.width();
			height_ = wrap.height();

			canShrink = (width_ > maxWidth_ || height_ > maxHeight_) && width > minWidth && height > minHeight;
			canExpand = current.aspectRatio ? (width < origMaxWidth && height < origMaxHeight && width < origWidth && height < origHeight) : ((width < origMaxWidth || height < origMaxHeight) && (width < origWidth || height < origHeight));

			$.extend(current, {
				dim : {
					width	: getValue( width_ ),
					height	: getValue( height_ )
				},
				origWidth  : origWidth,
				origHeight : origHeight,
				canShrink  : canShrink,
				canExpand  : canExpand,
				wPadding   : wPadding,
				hPadding   : hPadding,
				wrapSpace  : height_ - skin.outerHeight(true),
				skinSpace  : skin.height() - height
			});

			if (!iframe && current.autoHeight && height > minHeight && height < maxHeight && !canExpand) {
				inner.height('auto');
			}
		},

		_getPosition: function (onlyAbsolute) {
			var current  = F.current,
				viewport = F.getViewport(),
				margin   = current.margin,
				width    = F.wrap.width()  + margin[1] + margin[3],
				height   = F.wrap.height() + margin[0] + margin[2],
				rez      = {
					position: 'absolute',
					top  : margin[0],
					left : margin[3]
				};

			if (current.autoCenter && current.fixed && !onlyAbsolute && height <= viewport.h && width <= viewport.w) {
				rez.position = 'fixed';

			} else if (!current.locked) {
				rez.top  += viewport.y;
				rez.left += viewport.x;
			}

			rez.top  = getValue(Math.max(rez.top,  rez.top  + ((viewport.h - height) * current.topRatio)));
			rez.left = getValue(Math.max(rez.left, rez.left + ((viewport.w - width)  * current.leftRatio)));

			return rez;
		},

		_afterZoomIn: function () {
			var current = F.current;

			if (!current) {
				return;
			}

			F.isOpen = F.isOpened = true;

			F.wrap.addClass('fancybox-opened').css('overflow', 'visible');

			F.reposition();

			// Assign a click event
			if (current.closeClick || current.nextClick) {
				F.inner.css('cursor', 'pointer').bind('click.fb', function(e) {
					if (!$(e.target).is('a') && !$(e.target).parent().is('a')) {
						F[ current.closeClick ? 'close' : 'next' ]();
					}
				});
			}

			// Create a close button
			if (current.closeBtn) {
				$(current.tpl.closeBtn).appendTo(F.skin).bind('click.fb', F.close);
			}

			// Create navigation arrows
			if (current.arrows && F.group.length > 1) {
				if (current.loop || current.index > 0) {
					$(current.tpl.prev).appendTo(F.outer).bind('click.fb', F.prev);
				}

				if (current.loop || current.index < F.group.length - 1) {
					$(current.tpl.next).appendTo(F.outer).bind('click.fb', F.next);
				}
			}

			F.trigger('afterShow');

			// Stop the slideshow if this is the last item
			if (!current.loop && current.index === current.group.length - 1) {
				F.play( false );

			} else if (F.opts.autoPlay && !F.player.isActive) {
				F.opts.autoPlay = false;

				F.play();
			}
		},

		_afterZoomOut: function () {
			var current = F.current;

			$('.fancybox-wrap').stop(true).trigger('onReset').remove();

			$.extend(F, {
				group  : {},
				opts   : {},
				router : false,
				current   : null,
				isActive  : false,
				isOpened  : false,
				isOpen    : false,
				isClosing : false,
				wrap   : null,
				skin   : null,
				outer  : null,
				inner  : null
			});

			F.trigger('afterClose', current);
		}
	});

	/*
	 *	Default transitions
	 */

	F.transitions = {
		getOrigPosition: function () {
			var current  = F.current,
				element  = current.element,
				orig     = current.orig,
				pos      = {},
				width    = 50,
				height   = 50,
				hPadding = current.hPadding,
				wPadding = current.wPadding,
				viewport = F.getViewport();

			if (!orig && current.isDom && element.is(':visible')) {
				orig = element.find('img:first');

				if (!orig.length) {
					orig = element;
				}
			}

			if (isQuery(orig)) {
				pos = orig.offset();

				if (orig.is('img')) {
					width  = orig.outerWidth();
					height = orig.outerHeight();
				}

			} else {
				pos.top  = viewport.y + (viewport.h - height) * current.topRatio;
				pos.left = viewport.x + (viewport.w - width)  * current.leftRatio;
			}

			if (current.locked) {
				pos.top  -= viewport.y;
				pos.left -= viewport.x;
			}

			pos = {
				top     : getValue(pos.top  - hPadding * current.topRatio),
				left    : getValue(pos.left - wPadding * current.leftRatio),
				width   : getValue(width  + wPadding),
				height  : getValue(height + hPadding)
			};

			return pos;
		},

		step: function (now, fx) {
			var ratio,
				padding,
				value,
				prop       = fx.prop,
				current    = F.current,
				wrapSpace  = current.wrapSpace,
				skinSpace  = current.skinSpace;

			if (prop === 'width' || prop === 'height') {
				ratio = fx.end === fx.start ? 1 : (now - fx.start) / (fx.end - fx.start);

				if (F.isClosing) {
					ratio = 1 - ratio;
				}

				padding = prop === 'width' ? current.wPadding : current.hPadding;
				value   = now - padding;

				F.skin[ prop ](  getScalar( prop === 'width' ?  value : value - (wrapSpace * ratio) ) );
				F.inner[ prop ]( getScalar( prop === 'width' ?  value : value - (wrapSpace * ratio) - (skinSpace * ratio) ) );
			}
		},

		zoomIn: function () {
			var current  = F.current,
				startPos = current.pos,
				effect   = current.openEffect,
				elastic  = effect === 'elastic',
				endPos   = $.extend({opacity : 1}, startPos);

			// Remove "position" property that breaks older IE
			delete endPos.position;

			if (elastic) {
				startPos = this.getOrigPosition();

				if (current.openOpacity) {
					startPos.opacity = 0.1;
				}

			} else if (effect === 'fade') {
				startPos.opacity = 0.1;
			}

			F.wrap.css(startPos).animate(endPos, {
				duration : effect === 'none' ? 0 : current.openSpeed,
				easing   : current.openEasing,
				step     : elastic ? this.step : null,
				complete : F._afterZoomIn
			});
		},

		zoomOut: function () {
			var current  = F.current,
				effect   = current.closeEffect,
				elastic  = effect === 'elastic',
				endPos   = {opacity : 0.1};

			if (elastic) {
				endPos = this.getOrigPosition();

				if (current.closeOpacity) {
					endPos.opacity = 0.1;
				}
			}

			F.wrap.animate(endPos, {
				duration : effect === 'none' ? 0 : current.closeSpeed,
				easing   : current.closeEasing,
				step     : elastic ? this.step : null,
				complete : F._afterZoomOut
			});
		},

		changeIn: function () {
			var current   = F.current,
				effect    = current.nextEffect,
				startPos  = current.pos,
				endPos    = { opacity : 1 },
				direction = F.direction,
				distance  = 200,
				field;

			startPos.opacity = 0.1;

			if (effect === 'elastic') {
				field = direction === 'down' || direction === 'up' ? 'top' : 'left';

				if (direction === 'down' || direction === 'right') {
					startPos[ field ] = getValue(getScalar(startPos[ field ]) - distance);
					endPos[ field ]   = '+=' + distance + 'px';

				} else {
					startPos[ field ] = getValue(getScalar(startPos[ field ]) + distance);
					endPos[ field ]   = '-=' + distance + 'px';
				}
			}

			// Workaround for http://bugs.jquery.com/ticket/12273
			if (effect === 'none') {
				F._afterZoomIn();

			} else {
				F.wrap.css(startPos).animate(endPos, {
					duration : current.nextSpeed,
					easing   : current.nextEasing,
					complete : F._afterZoomIn
				});
			}
		},

		changeOut: function () {
			var previous  = F.previous,
				effect    = previous.prevEffect,
				endPos    = { opacity : 0.1 },
				direction = F.direction,
				distance  = 200;

			if (effect === 'elastic') {
				endPos[ direction === 'down' || direction === 'up' ? 'top' : 'left' ] = ( direction === 'up' || direction === 'left' ? '-' : '+' ) + '=' + distance + 'px';
			}

			previous.wrap.animate(endPos, {
				duration : effect === 'none' ? 0 : previous.prevSpeed,
				easing   : previous.prevEasing,
				complete : function () {
					$(this).trigger('onReset').remove();
				}
			});
		}
	};

	/*
	 *	Overlay helper
	 */

	F.helpers.overlay = {
		overlay: null,

		update: function () {
			var width = '100%', offsetWidth;

			// Reset width/height so it will not mess
			this.overlay.width(width).height('100%');

			// jQuery does not return reliable result for IE
			if ($.browser.msie) {
				offsetWidth = Math.max(document.documentElement.offsetWidth, document.body.offsetWidth);

				if (D.width() > offsetWidth) {
					width = D.width();
				}

			} else if (D.width() > W.width()) {
				width = D.width();
			}

			this.overlay.width(width).height(D.height());
		},

		// This is where we can manipulate DOM, because later it would cause iframes to reload
		onReady: function (opts, obj) {
			$('.fancybox-overlay').stop(true, true);

			if (!this.overlay) {
				$.extend(this, {
					overlay : $('<div class="fancybox-overlay"></div>').appendTo( obj.parent ),
					margin  : D.height() > W.height() || $('body').css('overflow-y') === 'scroll' ? $('body').css('margin-right') : false,
					el : document.all && !document.querySelector ? $('html') : $('body')
				});
			}

			if (obj.fixed && !isTouch) {
				this.overlay.addClass('fancybox-overlay-fixed');

				if (obj.autoCenter) {
					this.overlay.append( obj.wrap );

					obj.locked = this.overlay;
				}
			}

			if (opts.showEarly === true) {
				this.beforeShow.apply(this, arguments);
			}
		},

		beforeShow : function(opts, obj) {
			var overlay = this.overlay.unbind('.fb').width('auto').height('auto').css( opts.css );

			if (opts.closeClick) {
				overlay.bind('click.fb', function(e) {
					if ($(e.target).hasClass('fancybox-overlay')) {
						F.close();
					}
				});
			}

			if (obj.fixed && !isTouch) {
				if (obj.locked) {
					this.el.addClass('fancybox-lock');

					if (this.margin !== false) {
						$('body').css('margin-right', getScalar( this.margin ) + obj.scrollbarWidth);
					}
				}

			} else {
				this.update();
			}

			overlay.show();
		},

		onUpdate : function(opts, obj) {
			if (!obj.fixed || isTouch) {
				this.update();
			}
		},

		afterClose: function (opts) {
			var that  = this,
				speed = opts.speedOut || 0;

			// Remove overlay if exists and fancyBox is not opening
			// (e.g., it is not being open using afterClose callback)
			if (that.overlay && !F.isActive) {
				that.overlay.fadeOut(speed || 0, function () {
					$('body').css('margin-right', that.margin);

					that.el.removeClass('fancybox-lock');

					that.overlay.remove();

					that.overlay = null;
				});
			}
		}
	};

	/*
	 *	Title helper
	 */

	F.helpers.title = {
		beforeShow: function (opts) {
			var text = F.current.title,
				type = opts.type,
				title,
				target;

			if (!isString(text) || $.trim(text) === '') {
				return;
			}

			title = $('<div class="fancybox-title fancybox-title-' + type + '-wrap">' + text + '</div>');

			switch (type) {
				case 'inside':
					target = F.skin;
				break;

				case 'outside':
					target = F.wrap;
				break;

				case 'over':
					target = F.inner;
				break;

				default: // 'float'
					target = F.skin;

					title
						.appendTo('body')
						.width(title.width()) //This helps for some browsers
						.wrapInner('<span class="child"></span>');

						//Increase bottom margin so this title will also fit into viewport
						F.current.margin[2] += Math.abs( getScalar(title.css('margin-bottom')) );
				break;
			}

			if (opts.position === 'top') {
				title.prependTo(target);

			} else {
				title.appendTo(target);
			}
		}
	};

	// jQuery plugin initialization
	$.fn.fancybox = function (options) {
		var index,
			that     = $(this),
			selector = this.selector || '',
			run      = function(e) {
				var what = $(this).blur(), idx = index, relType, relVal;

				if (!(e.ctrlKey || e.altKey || e.shiftKey || e.metaKey) && !what.is('.fancybox-wrap')) {
					relType = options.groupAttr || 'data-fancybox-group';
					relVal  = what.attr(relType);

					if (!relVal) {
						relType = 'rel';
						relVal  = what.get(0)[ relType ];
					}

					if (relVal && relVal !== '' && relVal !== 'nofollow') {
						what = selector.length ? $(selector) : that;
						what = what.filter('[' + relType + '="' + relVal + '"]');
						idx  = what.index(this);
					}

					options.index = idx;

					// Stop an event from bubbling if everything is fine
					if (F.open(what, options) !== false) {
						e.preventDefault();
					}
				}
			};

		options = options || {};
		index   = options.index || 0;

		if (!selector || options.live === false) {
			that.unbind('click.fb-start').bind('click.fb-start', run);
		} else {
			D.undelegate(selector, 'click.fb-start').delegate(selector + ":not('.fancybox-item, .fancybox-nav')", 'click.fb-start', run);
		}

		return this;
	};

	// Tests that need a body at doc ready
	D.ready(function() {
		if ( $.scrollbarWidth === undefined ) {
			// http://benalman.com/projects/jquery-misc-plugins/#scrollbarwidth
			$.scrollbarWidth = function() {
				var parent = $('<div style="width:50px;height:50px;overflow:auto"><div/></div>').appendTo('body'),
					child  = parent.children(),
					width  = child.innerWidth() - child.height( 99 ).innerWidth();

				parent.remove();

				return width;
			};
		}

		if ( $.support.fixedPosition === undefined ) {
			$.support.fixedPosition = (function() {
				var elem  = $('<div style="position:fixed;top:20px;"></div>').appendTo('body'),
					fixed = ( elem[0].offsetTop === 20 || elem[0].offsetTop === 15 );

				elem.remove();

				return fixed;
			}());
		}

		$.extend(F.defaults, {
			scrollbarWidth : $.scrollbarWidth(),
			fixed  : $.support.fixedPosition,
			parent : $('body')
		});
	});

}(window, document, jQuery));146  84848|/aspro.optimus/install/wizards/aspro/optimus/site/templates/aspro_optimus/components/bitrix/catalog.element/fast_view/script.min.js|b53992fevar ItemObj={};$(document).on("click",".item-stock .store_view",(function(){scroll_block($(".tabs_section"))})),$(document).ready((function(){function equalTizerHeight(){$(".tizers_block_detail .item_block").length&&$(".tizers_block_detail .item_block").each((function(){var th=$(this).find(".text"),img=$(this).find(".image"),h=th.height(),p=26;img.length&&th.height()<img.height()&&((p=Math.floor((img.height()-th.height())/2))<0&&(p=0),th.css("padding-top",p+"px"))}))}$(".opener").click((function(){var showBlock;$(this).find(".opener_icon").toggleClass("opened"),$(this).parents("tr").toggleClass("nb").next(".offer_stores").find(".stores_block_wrap").slideToggle(200)})),$(document).on("click",".tabs_section .tabs-head li",(function(){$(this).is(".current")||($(".tabs_section .tabs-head li").removeClass("current"),$(this).addClass("current"),$(".tabs_section ul.tabs_content li").removeClass("current"),"product_reviews_tab"==$(this).attr("id")?($(".shadow.common").hide(),$("#reviews_content").show()):($(".shadow.common").show(),$("#reviews_content").hide(),$(".tabs_section ul.tabs_content > li:eq("+$(this).index()+")").addClass("current")))})),$(".hint .icon").click((function(e){var tooltipWrapp=$(this).parents(".hint");tooltipWrapp.click((function(e){e.stopPropagation()})),tooltipWrapp.is(".active")?tooltipWrapp.removeClass("active").find(".tooltip").slideUp(200):($(".catalog_detail .hint").removeClass("active"),$(".catalog_detail .hint .tooltip").slideUp(100),tooltipWrapp.addClass("active").find(".tooltip").slideDown(200),tooltipWrapp.find(".tooltip_close").click((function(e){e.stopPropagation(),tooltipWrapp.removeClass("active").find(".tooltip").slideUp(100)})),$(document).click((function(){tooltipWrapp.removeClass("active").find(".tooltip").slideUp(100)})))})),equalTizerHeight(),BX.addCustomEvent("onWindowResize",(function(eventdata){try{ignoreResize.push(!0),equalTizerHeight()}catch(e){}finally{ignoreResize.pop()}}))})),$(".set_block").ready((function(){$(".set_block ").equalize({children:'.item:not(".r") .cost',reset:!0}),$(".set_block").equalize({children:".item .item-title",reset:!0}),$(".set_block").equalize({children:".item .item_info",reset:!1})})),function(window){if(window.JCCatalogOnlyElement||(window.JCCatalogOnlyElement=function(arParams){"object"==typeof arParams&&(this.params=arParams,this.obProduct=null,this.set_quantity=1,this.currentPriceMode="",this.currentPrices=[],this.currentPriceSelected=0,this.currentQuantityRanges=[],this.currentQuantityRangeSelected=0,this.params.MESS&&(this.mess=this.params.MESS),this.init())},window.JCCatalogOnlyElement.prototype={init:function(){var i=0,j=0,treeItems=null;this.obProduct=BX(this.params.ID),this.obProduct&&($(this.obProduct).find(".counter_wrapp .counter_block input").data("product","ob"+this.obProduct.id+"el"),this.currentPriceMode=this.params.ITEM_PRICE_MODE,this.currentPrices=this.params.ITEM_PRICES,this.currentQuantityRanges=this.params.ITEM_QUANTITY_RANGES)},setPriceAction:function(){this.set_quantity=this.params.MIN_QUANTITY_BUY,$(this.obProduct).find("input[name=quantity]").length&&(this.set_quantity=$(this.obProduct).find("input[name=quantity]").val()),this.checkPriceRange(this.set_quantity),$(this.obProduct).find(".not_matrix").hide(),$(this.obProduct).find(".with_matrix .price_value_block").html(getCurrentPrice(this.currentPrices[this.currentPriceSelected].PRICE,this.currentPrices[this.currentPriceSelected].CURRENCY,this.currentPrices[this.currentPriceSelected].PRINT_PRICE)),$(this.obProduct).find(".with_matrix .discount")&&$(this.obProduct).find(".with_matrix .discount").html(getCurrentPrice(this.currentPrices[this.currentPriceSelected].BASE_PRICE,this.currentPrices[this.currentPriceSelected].CURRENCY,this.currentPrices[this.currentPriceSelected].PRINT_BASE_PRICE)),$(this.obProduct).find(".with_matrix .sale_block .text .values_wrapper").html(getCurrentPrice(this.currentPrices[this.currentPriceSelected].DISCOUNT,this.currentPrices[this.currentPriceSelected].CURRENCY,this.currentPrices[this.currentPriceSelected].PRINT_DISCOUNT)),$(this.obProduct).find(".with_matrix .sale_block .value span").html(this.currentPrices[this.currentPriceSelected].PERCENT),$(this.obProduct).find(".with_matrix").show(),"N"!=arOptimusOptions.THEME.SHOW_TOTAL_SUMM&&void 0!==this.currentPrices[this.currentPriceSelected]&&setPriceItem($(this.obProduct),this.set_quantity,this.currentPrices[this.currentPriceSelected].PRICE)},checkPriceRange:function(quantity){if(void 0!==quantity&&"Q"==this.currentPriceMode){var range,found=!1;for(var i in this.currentQuantityRanges)if(this.currentQuantityRanges.hasOwnProperty(i)&&(range=this.currentQuantityRanges[i],parseInt(quantity)>=parseInt(range.SORT_FROM)&&("INF"==range.SORT_TO||parseInt(quantity)<=parseInt(range.SORT_TO)))){found=!0,this.currentQuantityRangeSelected=range.HASH;break}for(var k in!found&&(range=this.getMinPriceRange())&&(this.currentQuantityRangeSelected=range.HASH),this.currentPrices)if(this.currentPrices.hasOwnProperty(k)&&this.currentPrices[k].QUANTITY_HASH==this.currentQuantityRangeSelected){this.currentPriceSelected=k;break}}},getMinPriceRange:function(){var range;for(var i in this.currentQuantityRanges)this.currentQuantityRanges.hasOwnProperty(i)&&(!range||parseInt(this.currentQuantityRanges[i].SORT_FROM)<parseInt(range.SORT_FROM))&&(range=this.currentQuantityRanges[i]);return range}}),!window.JCCatalogElementFast){var BasketButton=function(params){BasketButton.superclass.constructor.apply(this,arguments),this.nameNode=BX.create("span",{props:{className:"bx_medium bx_bt_button",id:this.id},style:"object"==typeof params.style?params.style:{},text:params.text}),this.buttonNode=BX.create("span",{attrs:{className:params.ownerClass},children:[this.nameNode],events:this.contextEvents}),BX.browser.IsIE()&&this.buttonNode.setAttribute("hideFocus","hidefocus")};BX.extend(BasketButton,BX.PopupWindowButton),window.JCCatalogElementFast=function(arParams){if(this.timerInitCalculateDelivery=!1,this.skuVisualParams={SELECT:{TAG_BIND:"select",TAG:"option",ACTIVE_CLASS:"active",HIDE_CLASS:"hidden",EVENT:"change"},LI:{TAG_BIND:"li",TAG:"li",ACTIVE_CLASS:"active",HIDE_CLASS:"missing",EVENT:"click"}},this.productType=0,this.config={useCatalog:!0,showQuantity:!0,showPrice:!0,showAbsent:!0,showOldPrice:!1,showPercent:!1,showSkuProps:!1,showOfferGroup:!1,useCompare:!1,mainPictureMode:"IMG",showBasisPrice:!1,offerShowPreviewPictureProps:!1,basketAction:["BUY"],showClosePopup:!1},this.basketLinkURL="",this.checkQuantity=!1,this.maxQuantity=0,this.SliderImages=0,this.defaultCount=1,this.stepQuantity=1,this.isDblQuantity=!1,this.canBuy=!0,this.currentBasisPrice={},this.canSubscription=!0,this.currentIsSet=!1,this.updateViewedCount=!1,this.currentPriceMode="",this.currentPrices=[],this.currentPriceSelected=0,this.currentQuantityRanges=[],this.currentQuantityRangeSelected=0,this.precision=6,this.precisionFactor=Math.pow(10,this.precision),this.listID={main:["PICT_ID","BIG_SLIDER_ID","BIG_IMG_CONT_ID"],stickers:["STICKER_ID"],productSlider:["SLIDER_CONT","SLIDER_LIST","SLIDER_LEFT","SLIDER_RIGHT"],offerSlider:["SLIDER_CONT_OF_ID","SLIDER_LIST_OF_ID","SLIDER_LEFT_OF_ID","SLIDER_RIGHT_OF_ID"],offerSliderMobile:["SLIDER_CONT_OFM_ID","SLIDER_LIST_OFM_ID","SLIDER_LEFT_OFM_ID","SLIDER_RIGHT_OFM_ID"],offers:["TREE_ID","TREE_ITEM_ID","DISPLAY_PROP_DIV","DISPLAY_PROP_ARTICLE_DIV","OFFER_GROUP"],quantity:["QUANTITY_ID","QUANTITY_UP_ID","QUANTITY_DOWN_ID","QUANTITY_MEASURE","QUANTITY_LIMIT","BASIS_PRICE"],price:["PRICE_ID"],oldPrice:["OLD_PRICE_ID","DISCOUNT_VALUE_ID"],discountPerc:["DISCOUNT_PERC_ID"],basket:["BASKET_PROP_DIV","BUY_ID","BASKET_LINK","ADD_BASKET_ID","BASKET_ACTIONS_ID","NOT_AVAILABLE_MESS","SUBSCRIBE_ID","SUBSCRIBED_ID"],magnifier:["MAGNIFIER_ID","MAGNIFIER_AREA_ID"],compare:["COMPARE_LINK_ID"]},this.visualPostfix={PICT_ID:"_pict",BIG_SLIDER_ID:"_big_slider",BIG_IMG_CONT_ID:"_bigimg_cont",STICKER_ID:"_sticker",SLIDER_CONT:"_slider_cont",SLIDER_LIST:"_slider_list",SLIDER_LEFT:"_slider_left",SLIDER_RIGHT:"_slider_right",SLIDER_CONT_OF_ID:"_slider_cont_",SLIDER_LIST_OF_ID:"_slider_list_",SLIDER_LEFT_OF_ID:"_slider_left_",SLIDER_RIGHT_OF_ID:"_slider_right_",SLIDER_CONT_OFM_ID:"_sliderm_cont_",SLIDER_LIST_OFM_ID:"_sliderm_list_",SLIDER_LEFT_OFM_ID:"_sliderm_left_",SLIDER_RIGHT_OFM_ID:"_sliderm_right_",TREE_ID:"_skudiv",TREE_ITEM_ID:"_prop_",DISPLAY_PROP_DIV:"_sku_prop",DISPLAY_PROP_ARTICLE_DIV:"_sku_article_prop",QUANTITY_ID:"_quantity",QUANTITY_UP_ID:"_quant_up",QUANTITY_DOWN_ID:"_quant_down",QUANTITY_MEASURE:"_quant_measure",QUANTITY_LIMIT:"_quant_limit",BASIS_PRICE:"_basis_price",PRICE_ID:"_price",OLD_PRICE_ID:"_old_price",DISCOUNT_VALUE_ID:"_price_discount",DISCOUNT_PERC_ID:"_dsc_pict",BASKET_PROP_DIV:"_basket_prop",BUY_ID:"_buy_link",BASKET_LINK:"_basket_link",ADD_BASKET_ID:"_add_basket_link",BASKET_ACTIONS_ID:"_basket_actions",NOT_AVAILABLE_MESS:"_not_avail",SUBSCRIBE_ID:"_subscribe_div",SUBSCRIBED_ID:"_subscribed_div",MAGNIFIER_ID:"_magnifier",MAGNIFIER_AREA_ID:"_magnifier_area",OFFER_GROUP:"_set_group_",COMPARE_LINK_ID:"_compare_link"},this.visual={},this.basketMode="",this.product={checkQuantity:!1,maxQuantity:0,stepQuantity:1,startQuantity:1,isDblQuantity:!1,canBuy:!0,canSubscription:!0,name:"",pict:{},id:0,addUrl:"",buyUrl:"",slider:{},sliderCount:0,useSlider:!1,sliderPict:[]},this.mess={},this.basketData={useProps:!1,emptyProps:!1,quantity:"quantity",props:"prop",basketUrl:"",sku_props:"",sku_props_var:"basket_props",add_url:"",buy_url:""},this.compareData={compareUrl:"",comparePath:""},this.defaultPict={preview:null,detail:null},this.offers=[],this.offerNum=0,this.treeProps=[],this.obTreeRows=[],this.showCount=[],this.showStart=[],this.selectedValues={},this.sliders=[],this.obProduct=null,this.obQuantity=null,this.obQuantityUp=null,this.obQuantityDown=null,this.obBasisPrice=null,this.obPict=null,this.obPictAligner=null,this.obPrice={price:null,full:null,discount:null,percent:null},this.obTree=null,this.obBuyBtn=null,this.obBasketBtn=null,this.obAddToBasketBtn=null,this.obBasketActions=null,this.obNotAvail=null,this.obSkuProps=null,this.obSlider=null,this.obMeasure=null,this.obQuantityLimit={all:null,value:null},this.obCompare=null,this.viewedCounter={path:"/bitrix/components/bitrix/catalog.element/ajax.php",params:{AJAX:"Y",SITE_ID:"",PRODUCT_ID:0,PARENT_ID:0}},this.currentImg={src:"",width:0,height:0,screenWidth:0,screenHeight:0,screenOffsetX:0,screenOffsetY:0,scale:1},this.currentBigImg={src:""},this.obPopupWin=null,this.basketUrl="",this.basketParams={},this.obPopupPict=null,this.magnify={obMagnifier:null,obMagnifyPict:null,obMagnifyArea:null,obBigImg:null,obBigSlider:null,magnifyShow:!1,areaParams:{width:100,height:130,left:0,top:0,scaleFactor:1,globalLeft:0,globalTop:0,globalRight:0,globalBottom:0},magnifierParams:{top:0,left:0,width:0,height:0,ratioX:10,ratioY:13,defaultScale:1},magnifyPictParams:{marginTop:0,marginLeft:0,width:0,height:0}},this.treeRowShowSize=5,this.treeEnableArrow={display:"",cursor:"pointer",opacity:1},this.treeDisableArrow={display:"",cursor:"default",opacity:.2},this.sliderRowShowSize=5,this.sliderEnableArrow={display:"",cursor:"pointer",opacity:1},this.sliderDisableArrow={display:"",cursor:"default",opacity:.2},this.errorCode=0,"object"==typeof arParams){switch(this.params=arParams,this.initConfig(),this.params.MESS&&(this.mess=this.params.MESS),this.productType){case 0:case 1:case 2:this.initProductData();break;case 3:this.initOffersData();break;default:this.errorCode=-1}this.initBasketData(),this.initCompareData()}0===this.errorCode&&BX.ready(BX.delegate(this.Init,this)),this.params={}},window.JCCatalogElementFast.prototype.Init=function(){var i=0,j=0,strPrefix="",SliderImgs=null,TreeItems=null;if(this.obProduct=BX(this.visual.ID),this.obProduct||(this.errorCode=-1),this.obPict=BX(this.visual.PICT_ID),this.obPict?this.obPictAligner=this.obPict.parentNode:this.errorCode=-2,this.config.showPrice&&(this.obPrice.price=BX(this.visual.PRICE_ID),!this.obPrice.price&&this.config.useCatalog?this.errorCode=-16:(this.config.showOldPrice&&(this.obPrice.full=BX(this.visual.OLD_PRICE_ID),this.obPrice.discount=BX(this.visual.DISCOUNT_VALUE_ID),this.obPrice.full&&BX.adjust(this.obPrice.full,{style:{display:"none"},html:""})),this.config.showPercent&&(this.obPrice.percent=BX(this.visual.DISCOUNT_PERC_ID))),this.obBasketActions=BX(this.visual.BASKET_ACTIONS_ID),this.obBasketActions&&(BX.util.in_array("BUY",this.config.basketAction)&&(this.obBuyBtn=BX(this.visual.BUY_ID)),BX.util.in_array("ADD",this.config.basketAction)&&(this.obAddToBasketBtn=BX(this.visual.BUY_ID)),this.visual.BASKET_LINK&&(this.obBasketBtn=BX(this.visual.BASKET_LINK))),this.obNotAvail=BX(this.visual.NOT_AVAILABLE_MESS)),this.config.showQuantity&&(this.obQuantity=BX(this.visual.QUANTITY_ID),this.visual.QUANTITY_UP_ID&&(this.obQuantityUp=BX(this.visual.QUANTITY_UP_ID)),this.visual.QUANTITY_DOWN_ID&&(this.obQuantityDown=BX(this.visual.QUANTITY_DOWN_ID)),this.config.showBasisPrice&&(this.obBasisPrice=BX(this.visual.BASIS_PRICE))),3===this.productType){if(this.visual.TREE_ID)for(this.obTree=BX(this.visual.TREE_ID),this.obTree||(this.errorCode=-256),strPrefix=this.visual.TREE_ITEM_ID,i=0;i<this.treeProps.length;i++)if(this.obTreeRows[i]={LEFT:BX(strPrefix+this.treeProps[i].ID+"_left"),RIGHT:BX(strPrefix+this.treeProps[i].ID+"_right"),LIST:BX(strPrefix+this.treeProps[i].ID+"_list"),CONT:BX(strPrefix+this.treeProps[i].ID+"_cont")},!this.obTreeRows[i].LIST||!this.obTreeRows[i].CONT){this.errorCode=-512;break}this.visual.QUANTITY_MEASURE&&(this.obMeasure=BX(this.visual.QUANTITY_MEASURE)),this.visual.QUANTITY_LIMIT&&(this.obQuantityLimit.all=BX(this.visual.QUANTITY_LIMIT),this.obQuantityLimit.all&&(this.obQuantityLimit.value=BX.findChild(this.obQuantityLimit.all,{tagName:"span"},!1,!1),this.obQuantityLimit.value||(this.obQuantityLimit.all=null)))}if(this.config.showSkuProps&&(this.visual.DISPLAY_PROP_DIV&&(this.obSkuProps=BX(this.visual.DISPLAY_PROP_DIV)),this.visual.DISPLAY_PROP_ARTICLE_DIV&&(this.obSkuArticleProps=BX(this.visual.DISPLAY_PROP_ARTICLE_DIV))),this.config.useCompare&&(this.obCompare=BX(this.visual.COMPARE_LINK_ID)),0===this.errorCode){switch(this.config.showQuantity&&(this.obQuantityUp&&BX.bind(this.obQuantityUp,"click",BX.delegate(this.QuantityUp,this)),this.obQuantityDown&&BX.bind(this.obQuantityDown,"click",BX.delegate(this.QuantityDown,this)),this.obQuantity&&BX.bind(this.obQuantity,"change",BX.delegate(this.QuantityChange,this))),this.productType){case 0:case 1:case 2:if(this.product.useSlider){if(this.product.slider={COUNT:this.product.sliderCount,ID:this.visual.SLIDER_CONT,CONT:BX(this.visual.SLIDER_CONT),LIST:BX(this.visual.SLIDER_LIST),LEFT:BX(this.visual.SLIDER_LEFT),RIGHT:BX(this.visual.SLIDER_RIGHT),START:0},(SliderImgs=BX.findChildren(this.product.slider.LIST,{tagName:"li"},!0))&&0<SliderImgs.length)for(j=0;j<SliderImgs.length;j++)BX.bind(SliderImgs[j],"click",BX.delegate(this.ProductSelectSliderImg,this));this.product.slider.LEFT&&(BX.bind(this.product.slider.LEFT,"click",BX.delegate(this.ProductSliderRowLeft,this)),BX.adjust(this.product.slider.LEFT,{style:this.sliderDisableArrow})),this.product.slider.RIGHT&&(BX.bind(this.product.slider.RIGHT,"click",BX.delegate(this.ProductSliderRowRight,this)),BX.adjust(this.product.slider.RIGHT,{style:this.sliderEnableArrow})),this.setCurrentImg(this.product.sliderPict[0],!0)}break;case 3:for(var key in this.skuVisualParams){var TreeItems;if((TreeItems=BX.findChildren(this.obTree,{tagName:this.skuVisualParams[key].TAG_BIND},!0))&&0<TreeItems.length)for(i=0;i<TreeItems.length;i++)$(TreeItems[i]).on(this.skuVisualParams[key].EVENT,BX.delegate(this.SelectOfferProp,this))}for(i=0;i<this.offers.length;i++)if(this.offers[i].SLIDER_COUNT=parseInt(this.offers[i].SLIDER_COUNT,10),isNaN(this.offers[i].SLIDER_COUNT)&&(this.offers[i].SLIDER_COUNT=0),0===this.offers[i].SLIDER_COUNT)this.sliders[i]={COUNT:this.offers[i].SLIDER_COUNT,ID:""};else{for(j=0;j<this.offers[i].SLIDER.length;j++)this.offers[i].SLIDER[j].WIDTH=parseInt(this.offers[i].SLIDER[j].WIDTH,10),this.offers[i].SLIDER[j].HEIGHT=parseInt(this.offers[i].SLIDER[j].HEIGHT,10);if(this.sliders[i]={COUNT:this.offers[i].SLIDER_COUNT,OFFER_ID:this.offers[i].ID,ID:this.visual.SLIDER_CONT_OF_ID+this.offers[i].ID,CONT:BX(this.visual.SLIDER_CONT_OF_ID+this.offers[i].ID),LIST:BX(this.visual.SLIDER_LIST_OF_ID+this.offers[i].ID),CONT_M:BX(this.visual.SLIDER_CONT_OFM_ID+this.offers[i].ID),LIST_M:BX(this.visual.SLIDER_LIST_OFM_ID+this.offers[i].ID),LEFT:BX(this.visual.SLIDER_LEFT_OF_ID+this.offers[i].ID),RIGHT:BX(this.visual.SLIDER_RIGHT_OF_ID+this.offers[i].ID),START:0},(SliderImgs=BX.findChildren(this.sliders[i].LIST,{tagName:"li"},!0))&&0<SliderImgs.length)for(j=0;j<SliderImgs.length;j++)BX.bind(SliderImgs[j],"click",BX.delegate(this.SelectSliderImg,this));this.sliders[i].LEFT&&BX.bind(this.sliders[i].LEFT,"click",BX.delegate(this.SliderRowLeft,this)),this.sliders[i].RIGHT&&BX.bind(this.sliders[i].RIGHT,"click",BX.delegate(this.SliderRowRight,this))}this.SetCurrent()}this.obBuyBtn&&BX.bind(this.obBuyBtn,"click",BX.proxy(this.BuyBasket,this)),this.obAddToBasketBtn&&BX.bind(this.obAddToBasketBtn,"click",BX.proxy(this.Add2Basket,this)),this.obCompare&&BX.bind(this.obCompare,"click",BX.proxy(this.Compare,this)),this.setMainPictHandler(),setTimeout((function(){$(".offers_img.wof").css("opacity",1)}),400)}},window.JCCatalogElementFast.prototype.initConfig=function(){this.productType=parseInt(this.params.PRODUCT_TYPE,10),this.params.CONFIG&&"object"==typeof this.params.CONFIG?("undefined"!==this.params.CONFIG.USE_CATALOG&&BX.type.isBoolean(this.params.CONFIG.USE_CATALOG)&&(this.config.useCatalog=this.params.CONFIG.USE_CATALOG),this.config.showQuantity=!!this.params.CONFIG.SHOW_QUANTITY,this.config.showPrice=!!this.params.CONFIG.SHOW_PRICE,this.config.showPercent=!!this.params.CONFIG.SHOW_DISCOUNT_PERCENT,this.config.showOldPrice=!!this.params.CONFIG.SHOW_OLD_PRICE,this.config.showSkuProps=!!this.params.CONFIG.SHOW_SKU_PROPS,this.config.showOfferGroup=!!this.params.CONFIG.OFFER_GROUP,this.config.useCompare=!!this.params.CONFIG.DISPLAY_COMPARE,this.config.offerShowPreviewPictureProps=this.params.OFFER_SHOW_PREVIEW_PICTURE_PROPS,this.params.CONFIG.MAIN_PICTURE_MODE&&(this.config.mainPictureMode=this.params.CONFIG.MAIN_PICTURE_MODE),this.config.showBasisPrice=!!this.params.CONFIG.SHOW_BASIS_PRICE,this.params.CONFIG.ADD_TO_BASKET_ACTION&&(this.config.basketAction=this.params.CONFIG.ADD_TO_BASKET_ACTION),this.config.showClosePopup=!!this.params.CONFIG.SHOW_CLOSE_POPUP):("undefined"!==this.params.USE_CATALOG&&BX.type.isBoolean(this.params.USE_CATALOG)&&(this.config.useCatalog=this.params.USE_CATALOG),this.config.showQuantity=!!this.params.SHOW_QUANTITY,this.config.showPrice=!!this.params.SHOW_PRICE,this.config.showPercent=!!this.params.SHOW_DISCOUNT_PERCENT,this.config.showOldPrice=!!this.params.SHOW_OLD_PRICE,this.config.showSkuProps=!!this.params.SHOW_SKU_PROPS,this.config.showOfferGroup=!!this.params.OFFER_GROUP,this.config.useCompare=!!this.params.DISPLAY_COMPARE,this.params.MAIN_PICTURE_MODE&&(this.config.mainPictureMode=this.params.MAIN_PICTURE_MODE),this.config.showBasisPrice=!!this.params.SHOW_BASIS_PRICE,this.params.ADD_TO_BASKET_ACTION&&(this.config.basketAction=this.params.ADD_TO_BASKET_ACTION),this.config.showClosePopup=!!this.params.SHOW_CLOSE_POPUP),this.params.VISUAL&&"object"==typeof this.params.VISUAL&&this.params.VISUAL.ID?(this.visual.ID=this.params.VISUAL.ID,this.basketLinkURL=this.params.BASKET.BASKET_URL,this.defaultCount=this.params.DEFAULT_COUNT,this.storeQuanity=BX(this.params.STORE_QUANTITY),this.initVisualParams("main"),this.config.showQuantity&&this.initVisualParams("quantity"),this.config.showPrice&&this.initVisualParams("price"),this.config.showOldPrice&&this.initVisualParams("oldPrice"),this.config.showPercent&&this.initVisualParams("discountPerc"),this.initVisualParams("basket"),"MAGNIFIER"===this.config.mainPictureMode&&this.initVisualParams("magnifier"),this.config.useCompare&&this.initVisualParams("compare")):this.errorCode=-1},window.JCCatalogElementFast.prototype.initVisualParams=function(ID){var i=0,key="";if(this.listID[ID])for(i=0;i<this.listID[ID].length;i++)key=this.listID[ID][i],this.visual[key]=this.params.VISUAL[key]?this.params.VISUAL[key]:this.visual.ID+this.visualPostfix[key];else this.errorCode=-1},window.JCCatalogElementFast.prototype.initProductData=function(){var j=0;if(this.initVisualParams("productSlider"),this.params.PRODUCT&&"object"==typeof this.params.PRODUCT){if(this.config.showQuantity&&(this.product.checkQuantity=this.params.PRODUCT.CHECK_QUANTITY,this.product.isDblQuantity=this.params.PRODUCT.QUANTITY_FLOAT,this.product.checkQuantity&&(this.product.maxQuantity=this.product.isDblQuantity?parseFloat(this.params.PRODUCT.MAX_QUANTITY):parseInt(this.params.PRODUCT.MAX_QUANTITY,10)),this.product.stepQuantity=this.product.isDblQuantity?parseFloat(this.params.PRODUCT.STEP_QUANTITY):parseInt(this.params.PRODUCT.STEP_QUANTITY,10),this.checkQuantity=this.product.checkQuantity,this.isDblQuantity=this.product.isDblQuantity,this.maxQuantity=this.product.maxQuantity,this.stepQuantity=this.product.stepQuantity,this.isDblQuantity&&(this.stepQuantity=Math.round(this.stepQuantity*this.precisionFactor)/this.precisionFactor)),this.product.canBuy=this.params.PRODUCT.CAN_BUY,this.product.canSubscription=this.params.PRODUCT.SUBSCRIPTION,this.config.showPrice&&(this.currentBasisPrice=this.params.PRODUCT.BASIS_PRICE),this.canBuy=this.product.canBuy,this.canSubscription=this.product.canSubscription,this.product.name=this.params.PRODUCT.NAME,this.product.pict=this.params.PRODUCT.PICT,this.product.id=this.params.PRODUCT.ID,this.params.PRODUCT.ADD_URL&&(this.product.addUrl=this.params.PRODUCT.ADD_URL),this.params.PRODUCT.BUY_URL&&(this.product.buyUrl=this.params.PRODUCT.BUY_URL),this.params.PRODUCT.SLIDER_COUNT&&(this.product.sliderCount=parseInt(this.params.PRODUCT.SLIDER_COUNT,10),isNaN(this.product.sliderCount)&&(this.product.sliderCount=0),0<this.product.sliderCount&&this.params.PRODUCT.SLIDER.length&&0<this.params.PRODUCT.SLIDER.length)){for(j=0;j<this.params.PRODUCT.SLIDER.length;j++)this.product.useSlider=!0,this.params.PRODUCT.SLIDER[j].WIDTH=parseInt(this.params.PRODUCT.SLIDER[j].WIDTH,10),this.params.PRODUCT.SLIDER[j].HEIGHT=parseInt(this.params.PRODUCT.SLIDER[j].HEIGHT,10);this.product.sliderPict=this.params.PRODUCT.SLIDER,this.setCurrentImg(this.product.sliderPict[0],!1)}this.currentIsSet=!0}else this.errorCode=-1},window.JCCatalogElementFast.prototype.initOffersData=function(){if(this.initVisualParams("offerSlider"),this.initVisualParams("offerSliderMobile"),this.initVisualParams("offers"),this.params.OFFERS&&BX.type.isArray(this.params.OFFERS)){if(this.offers=this.params.OFFERS,this.offerNum=0,this.params.OFFER_SELECTED&&(this.offerNum=parseInt(this.params.OFFER_SELECTED,10),"offers"in this&&this.offers.length)){var objUrl=parseUrlQuery(),sku_params=this.params.SKU_DETAIL_ID,sku_id=0;if("oid"in objUrl&&(sku_id=objUrl.oid),sku_id)for(var i in this.offers)this.offers[i].ID==sku_id&&(this.offerNum=parseInt(i,10))}isNaN(this.offerNum)&&(this.offerNum=0),this.params.TREE_PROPS&&(this.treeProps=this.params.TREE_PROPS),this.params.DEFAULT_PICTURE&&(this.defaultPict.preview=this.params.DEFAULT_PICTURE.PREVIEW_PICTIRE,this.defaultPict.detail=this.params.DEFAULT_PICTURE.DETAIL_PICTURE),this.params.PRODUCT&&"object"==typeof this.params.PRODUCT&&(this.product.id=parseInt(this.params.PRODUCT.ID,10),this.product.name=this.params.PRODUCT.NAME)}else this.errorCode=-1},window.JCCatalogElementFast.prototype.initBasketData=function(){this.params.BASKET&&"object"==typeof this.params.BASKET&&(1!==this.productType&&2!==this.productType||(this.basketData.useProps=!!this.params.BASKET.ADD_PROPS,this.basketData.emptyProps=!!this.params.BASKET.EMPTY_PROPS),this.params.BASKET.QUANTITY&&(this.basketData.quantity=this.params.BASKET.QUANTITY),this.params.BASKET.PROPS&&(this.basketData.props=this.params.BASKET.PROPS),this.params.BASKET.BASKET_URL&&(this.basketData.basketUrl=this.params.BASKET.BASKET_URL),3===this.productType&&this.params.BASKET.SKU_PROPS&&(this.basketData.sku_props=this.params.BASKET.SKU_PROPS),this.params.BASKET.ADD_URL_TEMPLATE&&(this.basketData.add_url=this.params.BASKET.ADD_URL_TEMPLATE),this.params.BASKET.BUY_URL_TEMPLATE&&(this.basketData.buy_url=this.params.BASKET.BUY_URL_TEMPLATE),""===this.basketData.add_url&&""===this.basketData.buy_url&&(this.errorCode=-1024))},window.JCCatalogElementFast.prototype.initCompareData=function(){this.config.useCompare&&(this.params.COMPARE&&"object"==typeof this.params.COMPARE?(this.params.COMPARE.COMPARE_PATH&&(this.compareData.comparePath=this.params.COMPARE.COMPARE_PATH),this.params.COMPARE.COMPARE_URL_TEMPLATE_DEL&&(this.compareData.compareUrlDel=this.params.COMPARE.COMPARE_URL_TEMPLATE_DEL),this.params.COMPARE.COMPARE_URL_TEMPLATE?this.compareData.compareUrl=this.params.COMPARE.COMPARE_URL_TEMPLATE:this.config.useCompare=!1):this.config.useCompare=!1)},window.JCCatalogElementFast.prototype.setMainPictHandler=function(){switch(this.config.mainPictureMode){case"GALLERY":break;case"MAGNIFIER":$(this.obPict).addClass("zoom_picture"),InitZoomPict();break;case"POPUP":$(this.obPict).parent().addClass("fancy_offer")}},window.JCCatalogElementFast.prototype.setCurrentImg=function(img,showImage){showImage=!!showImage,"SMALL"in img?this.currentImg.src=img.SMALL.src:"SRC"in img&&(this.currentImg.src=img.SRC),"BIG"in img&&(this.currentBigImg.src=img.BIG.src),"WIDTH"in img&&(this.currentImg.width=img.WIDTH),"HEIGHT"in img&&(this.currentImg.height=img.HEIGHT),showImage&&this.obPict&&("MAGNIFIER"===this.config.mainPictureMode&&("src"in this.currentBigImg&&($(this.obPict).attr("data-large",this.currentBigImg.src),$(this.obPict).attr("xoriginal",this.currentBigImg.src)),"src"in this.currentImg&&$(this.obPict).attr("xpreview",this.currentImg.src)),"src"in this.currentImg&&this.currentImg.src&&BX.adjust(this.obPict,{props:{src:this.currentImg.src}}),"src"in this.currentBigImg&&this.currentBigImg.src&&"POPUP"===this.config.mainPictureMode&&$(this.obPict).parent().attr("href",this.currentBigImg.src))},window.JCCatalogElementFast.prototype.scaleImg=function(src,dest){var scaleX,scaleY,scale,result={};return dest.width>=src.width&&dest.height>=src.height?(result.width=src.width,result.height=src.height):(scaleX=dest.width/src.width,scaleY=dest.height/src.height,scale=Math.min(scaleX,scaleY),result.width=Math.max(1,parseInt(scale*src.width,10)),result.height=Math.max(1,parseInt(scale*src.height,10))),result},window.JCCatalogElementFast.prototype.showMagnifier=function(e){this.magnify.magnifyShow||(this.calcMagnifierParams(),this.calcMagnifyAreaSize(),this.calcMagnifyAreaPos(e),this.calcMagnifyPictSize(),this.calcMagnifyPictPos(),this.setMagnifyAreaParams(!0),this.setMagnifyPictParams(!0),this.setMagnifierParams(!0),BX.bind(document,"mousemove",BX.proxy(this.moveMagnifierArea,this)))},window.JCCatalogElementFast.prototype.hideMagnifier=function(){this.magnify.magnifyShow||(this.magnify.obMagnifier&&BX.adjust(this.magnify.obMagnifier,{style:{display:"none"}}),this.magnify.obMagnifyArea&&BX.adjust(this.magnify.obMagnifyArea,{style:{display:"none"}}),BX.unbind(document,"mousemove",BX.proxy(this.moveMagnifierArea,this)))},window.JCCatalogElementFast.prototype.moveMagnifierArea=function(e){var currentPos={X:0,Y:0},posBigImg=BX.pos(this.obPict),intersect={},params={},paramsPict={};if(currentPos=this.inRect(e,posBigImg),this.inBound(posBigImg,currentPos)){switch((intersect=this.intersectArea(currentPos,posBigImg)).X){case-1:this.magnify.areaParams.left=this.currentImg.screenOffsetX;break;case 0:this.magnify.areaParams.left=this.currentImg.screenOffsetX+currentPos.X-(this.magnify.areaParams.width>>>1);break;case 1:this.magnify.areaParams.left=this.currentImg.screenOffsetX+posBigImg.width-this.magnify.areaParams.width}switch(intersect.Y){case-1:this.magnify.areaParams.top=0;break;case 0:this.magnify.areaParams.top=currentPos.Y-(this.magnify.areaParams.height>>>1);break;case 1:this.magnify.areaParams.top=posBigImg.height-this.magnify.areaParams.height}this.magnify.magnifyPictParams.marginLeft=-parseInt((this.magnify.areaParams.left-this.currentImg.screenOffsetX)*this.currentImg.scale,10),this.magnify.magnifyPictParams.marginTop=-parseInt(this.magnify.areaParams.top*this.currentImg.scale,10),params.left=this.magnify.areaParams.left+"px",params.top=this.magnify.areaParams.top+"px",BX.adjust(this.magnify.obMagnifyArea,{style:params}),paramsPict.marginLeft=this.magnify.magnifyPictParams.marginLeft+"px",paramsPict.marginTop=this.magnify.magnifyPictParams.marginTop+"px",BX.adjust(this.magnify.obMagnifyPict,{style:paramsPict})}else this.outMagnifierArea(),this.hideMagnifier()},window.JCCatalogElementFast.prototype.onMagnifierArea=function(){this.magnify.magnifyShow=!0},window.JCCatalogElementFast.prototype.outMagnifierArea=function(){this.magnify.magnifyShow=!1},window.JCCatalogElementFast.prototype.calcMagnifierParams=function(){if(this.magnify.obBigImg){var pos=BX.pos(this.magnify.obBigImg,!0);this.magnify.magnifierParams.width=pos.width,this.magnify.magnifierParams.height=pos.height,this.magnify.magnifierParams.top=pos.top,this.magnify.magnifierParams.left=pos.left+pos.width+2}},window.JCCatalogElementFast.prototype.setMagnifierParams=function(show){if(this.magnify.obMagnifier){show=!!show;var params={top:this.magnify.magnifierParams.top+"px",left:this.magnify.magnifierParams.left+"px",width:this.magnify.magnifierParams.width+"px",height:this.magnify.magnifierParams.height+"px"};show&&(params.display=""),BX.adjust(this.magnify.obMagnifier,{style:params})}},window.JCCatalogElementFast.prototype.setMagnifyAreaParams=function(show){if(this.magnify.obMagnifier){show=!!show;var params={top:this.magnify.areaParams.top+"px",left:this.magnify.areaParams.left+"px",width:this.magnify.areaParams.width+"px",height:this.magnify.areaParams.height+"px"};show&&(params.display=""),BX.adjust(this.magnify.obMagnifyArea,{style:params})}},window.JCCatalogElementFast.prototype.calcMagnifyAreaPos=function(e){var currentPos,posBigImg,intersect;if(posBigImg=BX.pos(this.obPict),currentPos=this.inRect(e,posBigImg),this.inBound(posBigImg,currentPos)){switch((intersect=this.intersectArea(currentPos,posBigImg)).X){case-1:this.magnify.areaParams.left=this.currentImg.screenOffsetX;break;case 0:this.magnify.areaParams.left=this.currentImg.screenOffsetX+currentPos.X-(this.magnify.areaParams.width>>>1);break;case 1:this.magnify.areaParams.left=this.currentImg.screenOffsetX+posBigImg.width-this.magnify.areaParams.width}switch(intersect.Y){case-1:this.magnify.areaParams.top=0;break;case 0:this.magnify.areaParams.top=currentPos.Y-(this.magnify.areaParams.height>>>1);break;case 1:this.magnify.areaParams.top=posBigImg.height-this.magnify.areaParams.height}}},window.JCCatalogElementFast.prototype.inBound=function(rect,point){return 0<=point.Y&&rect.height>=point.Y&&0<=point.X&&rect.width>=point.X},window.JCCatalogElementFast.prototype.inRect=function(e,rect){var wndSize=BX.GetWindowSize(),currentPos={X:0,Y:0,globalX:0,globalY:0};return currentPos.globalX=e.clientX+wndSize.scrollLeft,currentPos.X=currentPos.globalX-rect.left,currentPos.globalY=e.clientY+wndSize.scrollTop,currentPos.Y=currentPos.globalY-rect.top,currentPos},window.JCCatalogElementFast.prototype.intersectArea=function(currentPos,rect){var intersect={X:0,Y:0},halfX=this.magnify.areaParams.width>>>1,halfY=this.magnify.areaParams.height>>>1;return currentPos.X<=halfX?intersect.X=-1:currentPos.X>=rect.width-halfX?intersect.X=1:intersect.X=0,currentPos.Y<=halfY?intersect.Y=-1:currentPos.Y>=rect.height-halfY?intersect.Y=1:intersect.Y=0,intersect},window.JCCatalogElementFast.prototype.calcMagnifyAreaSize=function(){var scaleX,scaleY,scale;this.magnify.magnifierParams.width<this.currentImg.width&&this.magnify.magnifierParams.height<this.currentImg.height?(scaleX=this.magnify.obBigImg.offsetWidth/this.currentImg.width,scaleY=this.magnify.obBigImg.offsetHeight/this.currentImg.height,scale=Math.min(scaleX,scaleY),this.currentImg.scale=1/scale,this.magnify.areaParams.width=Math.max(1,parseInt(scale*this.magnify.magnifierParams.width,10)),this.magnify.areaParams.height=Math.max(1,parseInt(scale*this.magnify.magnifierParams.height,10)),this.magnify.areaParams.scaleFactor=this.magnify.magnifierParams.defaultScale):(scaleX=this.obPict.offsetWidth/this.magnify.obBigImg.offsetWidth,scaleY=this.obPict.offsetHeight/this.magnify.obBigImg.offsetHeight,scale=Math.min(scaleX,scaleY),this.currentImg.scale=1/scale,this.magnify.areaParams.width=Math.max(1,parseInt(scale*this.magnify.magnifierParams.width,10)),this.magnify.areaParams.height=Math.max(1,parseInt(scale*this.magnify.magnifierParams.height,10)),scaleX=this.magnify.magnifierParams.width/this.currentImg.width,scaleY=this.magnify.magnifierParams.height/this.currentImg.height,scale=Math.max(scaleX,scaleY),this.magnify.areaParams.scaleFactor=scale)},window.JCCatalogElementFast.prototype.calcMagnifyPictSize=function(){this.magnify.magnifyPictParams.width=this.currentImg.width*this.magnify.areaParams.scaleFactor,this.magnify.magnifyPictParams.height=this.currentImg.height*this.magnify.areaParams.scaleFactor},window.JCCatalogElementFast.prototype.calcMagnifyPictPos=function(){this.magnify.magnifyPictParams.marginLeft=-parseInt((this.magnify.areaParams.left-this.currentImg.screenOffsetX)*this.currentImg.scale,10),this.magnify.magnifyPictParams.marginTop=-parseInt(this.magnify.areaParams.top*this.currentImg.scale,10)},window.JCCatalogElementFast.prototype.setMagnifyPictParams=function(show){if(this.magnify.obMagnifier){show=!!show;var params={width:this.magnify.magnifyPictParams.width+"px",height:this.magnify.magnifyPictParams.height+"px",marginTop:this.magnify.magnifyPictParams.marginTop+"px",marginLeft:this.magnify.magnifyPictParams.marginLeft+"px"};show&&(params.display=""),BX.adjust(this.magnify.obMagnifyPict,{style:params,props:{src:this.currentImg.src}})}},window.JCCatalogElementFast.prototype.ProductSliderRowLeft=function(){var target;BX.proxy_context&&this.sliderRowShowSize<this.product.slider.COUNT&&(0>this.product.slider.START&&(this.product.slider.START++,BX.adjust(this.product.slider.LIST,{style:{marginLeft:20*this.product.slider.START+"%"}}),BX.adjust(this.product.slider.RIGHT,{style:this.sliderEnableArrow})),0<=this.product.slider.START&&BX.adjust(this.product.slider.LEFT,{style:this.sliderDisableArrow}))},window.JCCatalogElementFast.prototype.ProductSliderRowRight=function(){var target;BX.proxy_context&&this.sliderRowShowSize<this.product.slider.COUNT&&(this.sliderRowShowSize-this.product.slider.START<this.product.slider.COUNT&&(this.product.slider.START--,BX.adjust(this.product.slider.LIST,{style:{marginLeft:20*this.product.slider.START+"%"}}),BX.adjust(this.product.slider.LEFT,{style:this.sliderEnableArrow})),this.sliderRowShowSize-this.product.slider.START>=this.product.slider.COUNT&&BX.adjust(this.product.slider.RIGHT,{style:this.sliderDisableArrow}))},window.JCCatalogElementFast.prototype.ProductSelectSliderImg=function(){var strValue="",target=BX.proxy_context;target&&target.hasAttribute("data-value")&&(strValue=target.getAttribute("data-value"),this.SetProductMainPict(strValue))},window.JCCatalogElementFast.prototype.SetProductMainPict=function(intPict){var indexPict=-1,i=0,j=0,value="",strValue="",RowItems=null;if(0<this.product.sliderCount){for(j=0;j<this.product.sliderPict.length;j++)if(intPict===this.product.sliderPict[j].ID){indexPict=j;break}if(-1<indexPict&&(this.product.sliderPict[indexPict]&&this.setCurrentImg(this.product.sliderPict[indexPict],!0),(RowItems=BX.findChildren(this.product.slider.LIST,{tagName:"li"},!1))&&0<RowItems.length))for(strValue=intPict,i=0;i<RowItems.length;i++)(value=RowItems[i].getAttribute("data-value"))===strValue?BX.addClass(RowItems[i],"active"):BX.removeClass(RowItems[i],"active")}},window.JCCatalogElementFast.prototype.SliderRowLeft=function(){var strValue="",index=-1,i,target=BX.proxy_context;if(target&&target.hasAttribute("data-value")){for(strValue=target.getAttribute("data-value"),i=0;i<this.sliders.length;i++)if(this.sliders[i].OFFER_ID===strValue){index=i;break}-1<index&&this.sliderRowShowSize<this.sliders[index].COUNT&&(0>this.sliders[index].START&&(this.sliders[index].START++,BX.adjust(this.sliders[index].LIST,{style:{marginLeft:20*this.sliders[index].START+"%"}}),BX.adjust(this.sliders[index].RIGHT,{style:this.sliderEnableArrow})),0<=this.sliders[index].START&&BX.adjust(this.sliders[index].LEFT,{style:this.sliderDisableArrow}))}},window.JCCatalogElementFast.prototype.SliderRowRight=function(){var strValue="",index=-1,i,target=BX.proxy_context;if(target&&target.hasAttribute("data-value")){for(strValue=target.getAttribute("data-value"),i=0;i<this.sliders.length;i++)if(this.sliders[i].OFFER_ID===strValue){index=i;break}-1<index&&this.sliderRowShowSize<this.sliders[index].COUNT&&(this.sliderRowShowSize-this.sliders[index].START<this.sliders[index].COUNT&&(this.sliders[index].START--,BX.adjust(this.sliders[index].LIST,{style:{marginLeft:20*this.sliders[index].START+"%"}}),BX.adjust(this.sliders[index].LEFT,{style:this.sliderEnableArrow})),this.sliderRowShowSize-this.sliders[index].START>=this.sliders[index].COUNT&&BX.adjust(this.sliders[index].RIGHT,{style:this.sliderDisableArrow}))}},window.JCCatalogElementFast.prototype.SelectSliderImg=function(){var strValue="",arItem=[],target=BX.proxy_context;target&&target.hasAttribute("data-value")&&(arItem=(strValue=target.getAttribute("data-value")).split("_"),this.SetMainPict(arItem[0],arItem[1]))},window.JCCatalogElementFast.prototype.SetMainPict=function(intSlider,intPict){var index=-1,indexPict=-1,i,j,value="",RowItems=null,strValue="";for(i=0;i<this.offers.length;i++)if(intSlider===this.offers[i].ID){index=i;break}if($(window).resize(),$(".thumbs_navigation ul").addClass("hidden_block"),this.SliderImages>1&&$(".thumbs_navigation ul:eq("+index+")").removeClass("hidden_block"),$(".thumbs_navigation").removeClass("hidden_block"),$(".fancy_offer").addClass("hidden_block"),$(this.obPict).closest(".offers_img").css("opacity",0),-1<index&&0<this.offers[index].SLIDER_COUNT){for(j=0;j<this.offers[index].SLIDER.length;j++)if(intPict===this.offers[index].SLIDER[j].ID){indexPict=j;break}if(-1<indexPict&&(this.offers[index].SLIDER[indexPict]&&this.setCurrentImg(this.offers[index].SLIDER[indexPict],!0),(RowItems=BX.findChildren(this.sliders[index].LIST,{tagName:"li"},!1))&&0<RowItems.length))for(strValue=intSlider+"_"+intPict,i=0;i<RowItems.length;i++)(value=RowItems[i].getAttribute("data-value"))===strValue?BX.addClass(RowItems[i],"current"):BX.removeClass(RowItems[i],"current")}setTimeout((function(){$(".fancy_offer").removeClass("hidden_block"),$(".offers_img").css("opacity",1)}),200)},window.JCCatalogElementFast.prototype.SetMainPictFromItem=function(index){if(this.obPict){var boolSet=!1,obNewPict={};this.offers[index]&&(this.offers[index].DETAIL_PICTURE?(obNewPict=this.offers[index].DETAIL_PICTURE,boolSet=!0):this.offers[index].PREVIEW_PICTURE&&(obNewPict=this.offers[index].PREVIEW_PICTURE,boolSet=!0)),boolSet||(this.defaultPict.detail?(obNewPict=this.defaultPict.detail,boolSet=!0):this.defaultPict.preview&&(obNewPict=this.defaultPict.preview,boolSet=!0)),boolSet&&this.setCurrentImg(obNewPict,!0)}},window.JCCatalogElementFast.prototype.showMainPictPopup=function(e){var pictContent="";return pictContent='<div style="text-align: center;"><img src="'+this.currentImg.src+'" width="'+this.currentImg.width+'" height="'+this.currentImg.height+'" name=""></div>',this.obPopupPict.setContent(pictContent),this.obPopupPict.show(),BX.PreventDefault(e)},window.JCCatalogElementFast.prototype.QuantityUp=function(){var curValue=0,boolSet=!0,calcPrice;0===this.errorCode&&this.config.showQuantity&&this.canBuy&&(curValue=this.isDblQuantity?parseFloat(this.obQuantity.value):parseInt(this.obQuantity.value,10),isNaN(curValue)||(curValue+=this.stepQuantity,this.checkQuantity&&curValue>this.maxQuantity&&(boolSet=!1),boolSet&&(this.isDblQuantity&&(curValue=Math.round(curValue*this.precisionFactor)/this.precisionFactor),this.obQuantity.value=curValue)))},window.JCCatalogElementFast.prototype.QuantityDown=function(){var curValue=0,boolSet=!0,calcPrice;0===this.errorCode&&this.config.showQuantity&&this.canBuy&&(curValue=this.isDblQuantity?parseFloat(this.obQuantity.value):parseInt(this.obQuantity.value,10),isNaN(curValue)||((curValue-=this.stepQuantity)<this.stepQuantity&&(boolSet=!1),boolSet&&(this.isDblQuantity&&(curValue=Math.round(curValue*this.precisionFactor)/this.precisionFactor),this.obQuantity.value=curValue)))},window.JCCatalogElementFast.prototype.QuantityChange=function(){var curValue=0,calcPrice,intCount,count;0===this.errorCode&&this.config.showQuantity&&(this.canBuy?(curValue=this.isDblQuantity?parseFloat(this.obQuantity.value):parseInt(this.obQuantity.value,10),isNaN(curValue)?this.obQuantity.value=this.stepQuantity:(this.checkQuantity&&curValue>this.maxQuantity&&(curValue=this.maxQuantity),curValue<this.stepQuantity?curValue=this.stepQuantity:(count=Math.round(curValue*this.precisionFactor/this.stepQuantity)/this.precisionFactor,intCount=parseInt(count,10),isNaN(intCount)&&(intCount=1,count=1.1),count>intCount&&(curValue=intCount<=1?this.stepQuantity:intCount*this.stepQuantity,curValue=Math.round(curValue*this.precisionFactor)/this.precisionFactor)),this.obQuantity.value=curValue)):this.obQuantity.value=this.stepQuantity)},window.JCCatalogElementFast.prototype.QuantitySet=function(index){var basisPrice="",strLimit;0===this.errorCode&&(this.canBuy=this.offers[index].CAN_BUY,this.currentPriceMode=this.offers[index].ITEM_PRICE_MODE,this.currentPrices=this.offers[index].ITEM_PRICES,this.currentPriceSelected=this.offers[index].ITEM_PRICE_SELECTED,this.currentQuantityRanges=this.offers[index].ITEM_QUANTITY_RANGES,this.currentQuantityRangeSelected=this.offers[index].ITEM_QUANTITY_RANGE_SELECTED,this.canBuy?(this.obBasketActions&&BX.style(this.obBasketActions,"display",""),this.obNotAvail&&BX.style(this.obNotAvail,"display","none")):(this.obBasketActions&&(BX.style(this.obBasketActions,"opacity","0"),BX.style(BX.findParent(BX(this.obQuantity),{class:"counter_block"}),"display","none")),this.obNotAvail&&BX.style(this.obNotAvail,"display","")),this.config.showQuantity&&(this.isDblQuantity=this.offers[index].QUANTITY_FLOAT,this.checkQuantity=this.offers[index].CHECK_QUANTITY,this.isDblQuantity?(this.maxQuantity=parseFloat(this.offers[index].MAX_QUANTITY),this.stepQuantity=Math.round(parseFloat(this.offers[index].STEP_QUANTITY)*this.precisionFactor)/this.precisionFactor):(this.maxQuantity=parseInt(this.offers[index].MAX_QUANTITY,10),this.stepQuantity=parseInt(this.offers[index].STEP_QUANTITY,10)),this.obMeasure&&(this.offers[index].MEASURE?BX.adjust(this.obMeasure,{html:this.offers[index].MEASURE}):BX.adjust(this.obMeasure,{html:""})),this.obQuantityLimit.all&&(this.checkQuantity?(strLimit=this.offers[index].MAX_QUANTITY,this.offers[index].MEASURE&&(strLimit+=" "+this.offers[index].MEASURE),BX.adjust(this.obQuantityLimit.value,{html:strLimit}),BX.adjust(this.obQuantityLimit.all,{style:{display:""}})):(BX.adjust(this.obQuantityLimit.value,{html:""}),BX.adjust(this.obQuantityLimit.all,{style:{display:"none"}}))),this.obBasisPrice&&(this.offers[index].BASIS_PRICE?(basisPrice=(basisPrice=(basisPrice=BX.message("BASIS_PRICE_MESSAGE")).replace("#PRICE#",BX.Currency.currencyFormat(this.offers[index].BASIS_PRICE.DISCOUNT_VALUE,this.offers[index].BASIS_PRICE.CURRENCY,!0))).replace("#MEASURE#",this.offers[index].MEASURE),BX.adjust(this.obBasisPrice,{style:{display:""},html:basisPrice})):BX.adjust(this.obBasisPrice,{style:{display:"none"},html:""}))),this.currentBasisPrice=this.offers[index].BASIS_PRICE)},window.JCCatalogElementFast.prototype.SelectOfferProp=function(){var i=0,strTreeValue="",arTreeItem=[],RowItems=null,target=BX.proxy_context;if(void 0!==target.options&&void 0!==target.options[target.selectedIndex]&&(target=target.options[target.selectedIndex]),target&&target.hasAttribute("data-treevalue")&&(strTreeValue=target.getAttribute("data-treevalue"),propModes=target.getAttribute("data-showtype"),arTreeItem=strTreeValue.split("_"),this.SearchOfferPropIndex(arTreeItem[0],arTreeItem[1]),(RowItems=BX.findChildren(target.parentNode,{tagName:this.skuVisualParams[propModes.toUpperCase()].TAG},!1))&&0<RowItems.length))for(i=0;i<RowItems.length;i++)value=RowItems[i].getAttribute("data-onevalue"),"TEXT"==propModes?value===arTreeItem[1]?RowItems[i].setAttribute("selected","selected"):RowItems[i].removeAttribute("selected"):value===arTreeItem[1]?$(RowItems[i]).addClass(this.skuVisualParams[propModes.toUpperCase()].ACTIVE_CLASS):$(RowItems[i]).removeClass(this.skuVisualParams[propModes.toUpperCase()].ACTIVE_CLASS)},window.JCCatalogElementFast.prototype.SearchOfferPropIndex=function(strPropID,strPropValue){var strName="",arShowValues=!1,arCanBuyValues=[],index=-1,i,j,arFilter={},tmpFilter=[];for(i=0;i<this.treeProps.length;i++)if(this.treeProps[i].ID===strPropID){index=i;break}if(-1<index){for(i=0;i<index;i++)arFilter[strName="PROP_"+this.treeProps[i].ID]=this.selectedValues[strName];for(arFilter[strName="PROP_"+this.treeProps[index].ID]=strPropValue,i=index+1;i<this.treeProps.length&&(strName="PROP_"+this.treeProps[i].ID,arShowValues=this.GetRowValues(arFilter,strName));i++){if(this.config.showAbsent)for(arCanBuyValues=[],tmpFilter=[],tmpFilter=BX.clone(arFilter,!0),j=0;j<arShowValues.length;j++)tmpFilter[strName]=arShowValues[j],this.GetCanBuy(tmpFilter)&&(arCanBuyValues[arCanBuyValues.length]=arShowValues[j]);else arCanBuyValues=arShowValues;this.selectedValues[strName]&&BX.util.in_array(this.selectedValues[strName],arCanBuyValues)?arFilter[strName]=this.selectedValues[strName]:arFilter[strName]=arCanBuyValues[0],this.UpdateRow(i,arFilter[strName],arShowValues,arCanBuyValues)}this.selectedValues=arFilter,this.ChangeInfo()}},window.JCCatalogElementFast.prototype.RowLeft=function(){var strTreeValue="",index=-1,i,target=BX.proxy_context;if(target&&target.hasAttribute("data-treevalue")){for(strTreeValue=target.getAttribute("data-treevalue"),i=0;i<this.treeProps.length;i++)if(this.treeProps[i].ID===strTreeValue){index=i;break}-1<index&&this.treeRowShowSize<this.showCount[index]&&0>this.showStart[index]&&(this.showStart[index]++,BX.adjust(this.obTreeRows[index].LIST,{style:{marginLeft:20*this.showStart[index]+"%"}}))}},window.JCCatalogElementFast.prototype.RowRight=function(){var strTreeValue="",index=-1,i,target=BX.proxy_context;if(target&&target.hasAttribute("data-treevalue")){for(strTreeValue=target.getAttribute("data-treevalue"),i=0;i<this.treeProps.length;i++)if(this.treeProps[i].ID===strTreeValue){index=i;break}-1<index&&this.treeRowShowSize<this.showCount[index]&&this.treeRowShowSize-this.showStart[index]<this.showCount[index]&&(this.showStart[index]--,BX.adjust(this.obTreeRows[index].LIST,{style:{marginLeft:20*this.showStart[index]+"%"}}))}},window.JCCatalogElementFast.prototype.UpdateRowsImages=function(){if("object"==typeof this.config.offerShowPreviewPictureProps&&this.config.offerShowPreviewPictureProps.length){var currentTree=this.selectedValues;for(var i in this.obTreeRows)if(BX.util.in_array(this.treeProps[i].CODE,this.config.offerShowPreviewPictureProps)){var RowItems=BX.findChildren(this.obTreeRows[i].LIST,{tagName:"LI"},!1);if(RowItems&&0<RowItems.length)for(var j in RowItems){var ImgItem=BX.findChild(RowItems[j],{className:"cnt_item"},!0,!1);if(ImgItem){var value=RowItems[j].getAttribute("data-onevalue");if(0!=value){var bgi=ImgItem.style.backgroundImage,obgi=ImgItem.getAttribute("data-obgi");obgi||(obgi=bgi,ImgItem.setAttribute("data-obgi",obgi));var boolOneSearch=!1,rowTree=BX.clone(currentTree,!0);for(var m in rowTree["PROP_"+this.treeProps[i].ID]=value,this.offers){for(var n in boolOneSearch=!0,rowTree)if(rowTree[n]!==this.offers[m].TREE[n]){boolOneSearch=!1;break}if(boolOneSearch){var newBgi;if("object"==typeof this.offers[m].PREVIEW_PICTURE&&this.offers[m].PREVIEW_PICTURE.SRC)bgi!==(newBgi='url("'+this.offers[m].PREVIEW_PICTURE.SRC+'")')&&(ImgItem.style.backgroundImage=newBgi,BX.addClass(ImgItem,"pp"));else boolOneSearch=!1;break}}for(var m in this.offers)if(rowTree["PROP_"+this.treeProps[i].ID]==this.offers[m].TREE["PROP_"+this.treeProps[i].ID]&&!boolOneSearch){if("object"==typeof this.offers[m].PREVIEW_PICTURE&&this.offers[m].PREVIEW_PICTURE.SRC){var newBgi='url("'+this.offers[m].PREVIEW_PICTURE.SRC+'")';ImgItem.style.backgroundImage=newBgi,BX.addClass(ImgItem,"pp"),boolOneSearch=!0}break}!boolOneSearch&&obgi&&bgi!==obgi&&(ImgItem.style.backgroundImage=obgi,BX.removeClass(ImgItem,"pp"))}}}}}},window.JCCatalogElementFast.prototype.UpdateRow=function(intNumber,activeID,showID,canBuyID){var i=0,showI=0,value="",countShow=0,strNewLen="",obData={},RowItems=null,pictMode=!1,extShowMode=!1,isCurrent=!1,selectIndex=0,obLeft=this.treeEnableArrow,obRight=this.treeEnableArrow,currentShowStart=0;if(-1<intNumber&&intNumber<this.obTreeRows.length&&(propMode=this.treeProps[intNumber].DISPLAY_TYPE,(RowItems=BX.findChildren(this.obTreeRows[intNumber].LIST,{tagName:this.skuVisualParams[propMode].TAG},!1))&&0<RowItems.length)){selectMode="SELECT"===this.treeProps[intNumber].DISPLAY_TYPE,countShow=showID.length,obData={style:{},props:{disabled:"",selected:""}};var lineContainer=this.obTree.querySelectorAll(".bx_item_detail_size, .bx_item_detail_scu");for(i=0;i<RowItems.length;i++)isCurrent=(value=RowItems[i].getAttribute("data-onevalue"))===activeID,BX.util.in_array(value,canBuyID)?obData.props.className=isCurrent?this.skuVisualParams[propMode].ACTIVE_CLASS:"":obData.props.className=isCurrent?this.skuVisualParams[propMode].ACTIVE_CLASS+" "+this.skuVisualParams[propMode].HIDE_CLASS:this.skuVisualParams[propMode].HIDE_CLASS,selectMode?(obData.props.disabled="disabled",obData.props.selected=isCurrent?"selected":""):obData.style.display="none",BX.util.in_array(value,showID)&&(selectMode?obData.props.disabled="":obData.style.display="",isCurrent&&(selectIndex=showI),showI++),BX.adjust(RowItems[i],obData),isCurrent&&(lineContainer[intNumber].style.display=0==value&&1==canBuyID.length?"none":"");selectMode&&$(this.obTreeRows[intNumber].LIST).parent().hasClass("ik_select")&&$(this.obTreeRows[intNumber].LIST).ikSelect("reset"),this.showCount[intNumber]=countShow,this.showStart[intNumber]=0}},window.JCCatalogElementFast.prototype.GetRowValues=function(arFilter,index){var arValues=[],i=0,j=0,boolSearch=!1,boolOneSearch=!0;if(0===arFilter.length){for(i=0;i<this.offers.length;i++)BX.util.in_array(this.offers[i].TREE[index],arValues)||(arValues[arValues.length]=this.offers[i].TREE[index]);boolSearch=!0}else for(i=0;i<this.offers.length;i++){for(j in boolOneSearch=!0,arFilter)if(arFilter[j]!==this.offers[i].TREE[j]){boolOneSearch=!1;break}boolOneSearch&&(BX.util.in_array(this.offers[i].TREE[index],arValues)||(arValues[arValues.length]=this.offers[i].TREE[index]),boolSearch=!0)}return!!boolSearch&&arValues},window.JCCatalogElementFast.prototype.GetCanBuy=function(arFilter){var i=0,j=0,boolOneSearch=!0,boolSearch=!1;for(i=0;i<this.offers.length;i++){for(j in boolOneSearch=!0,arFilter)if(arFilter[j]!==this.offers[i].TREE[j]){boolOneSearch=!1;break}if(boolOneSearch&&this.offers[i].CAN_BUY){boolSearch=!0;break}}return boolSearch},window.JCCatalogElementFast.prototype.SetCurrent=function(){var i=0,j=0,strName="",arShowValues=!1,arCanBuyValues=[],arFilter={},tmpFilter=[],current=this.offers[this.offerNum].TREE;for(i=0;i<this.treeProps.length&&(strName="PROP_"+this.treeProps[i].ID,arShowValues=this.GetRowValues(arFilter,strName));i++){if(BX.util.in_array(current[strName],arShowValues)?arFilter[strName]=current[strName]:(arFilter[strName]=arShowValues[0],this.offerNum=0),this.config.showAbsent)for(arCanBuyValues=[],tmpFilter=[],tmpFilter=BX.clone(arFilter,!0),j=0;j<arShowValues.length;j++)tmpFilter[strName]=arShowValues[j],this.GetCanBuy(tmpFilter)&&(arCanBuyValues[arCanBuyValues.length]=arShowValues[j]);else arCanBuyValues=arShowValues;this.UpdateRow(i,arFilter[strName],arShowValues,arCanBuyValues)}this.selectedValues=arFilter,this.ChangeInfo()},window.JCCatalogElementFast.prototype.ChangeInfo=function(){var index=-1,i=0,j=0,RowItems=null,boolOneSearch=!0;for(i=0;i<this.offers.length;i++){for(j in boolOneSearch=!0,this.selectedValues)if(this.selectedValues[j]!==this.offers[i].TREE[j]){boolOneSearch=!1;break}if(boolOneSearch){index=i;break}}if(this.treeProps&&this.UpdateRowsImages(),-1<index){if(this.config.showOfferGroup&&this.offers[index].OFFER_GROUP&&BX.adjust(BX(this.visual.OFFER_GROUP+this.offers[index].ID),{style:{display:""}}),0<this.offers[index].SLIDER_COUNT?this.SetMainPict(this.offers[index].ID,this.offers[index].SLIDER[0].ID):this.SetMainPictFromItem(index),this.SetSliderPict(this.offers[index],this.offers[index].SLIDER,this.config),this.SetSliderPictMobile(this.offers[index],this.offers[index].SLIDER,this.config),this.config.showSkuProps&&this.obSkuProps){var html="",display_type=this.offers[index].TYPE_PROP;if(this.offers[index].DISPLAY_PROPERTIES&&0!==this.offers[index].DISPLAY_PROPERTIES.length){for(var i in"TABLE"!=display_type&&$(this.obSkuProps).find(".sku_block_prop").remove(),this.offers[index].DISPLAY_PROPERTIES){var class_block=this.offers[index].DISPLAY_PROPERTIES[i].HINT&&"Y"==this.offers[index].DISPLAY_PROPERTIES[i].SHOW_HINTS?" whint":"",hint_block=this.offers[index].DISPLAY_PROPERTIES[i].HINT&&"Y"==this.offers[index].DISPLAY_PROPERTIES[i].SHOW_HINTS?'<div class="hint"><span class="icon"><i>?</i></span><div class="tooltip">'+this.offers[index].DISPLAY_PROPERTIES[i].HINT+"</div></div>":"";"TABLE"==display_type?html+='<tr><td class="char_name"><span class="'+class_block+'">'+hint_block+this.offers[index].DISPLAY_PROPERTIES[i].NAME+'</span></td><td class="char_value"><span>'+this.offers[index].DISPLAY_PROPERTIES[i].VALUE+"</span></td></tr>":(html='<div class="char sku_block_prop"><div class="char_name"><span class="'+class_block+'">'+hint_block+this.offers[index].DISPLAY_PROPERTIES[i].NAME+'</span></div><div class="char_value"><span>'+this.offers[index].DISPLAY_PROPERTIES[i].VALUE+"</span></div></div>",$(this.obSkuProps).append(html))}"TABLE"==display_type&&BX.adjust(this.obSkuProps,{style:{display:""},html:html})}else"TABLE"==display_type?BX.adjust(this.obSkuProps,{style:{display:"none"},html:""}):$(this.obSkuProps).find(".sku_block_prop").remove()}this.config.showSkuProps&&this.obSkuArticleProps&&("DISPLAY_PROPERTIES_CODE"in this.offers[index]&&"ARTICLE"in this.offers[index].DISPLAY_PROPERTIES_CODE?this.offers[index].DISPLAY_PROPERTIES_CODE.ARTICLE.VALUE&&BX.adjust(this.obSkuArticleProps,{style:{display:""},html:this.offers[index].DISPLAY_PROPERTIES_CODE.ARTICLE.VALUE_FORMAT}):"Y"==this.offers[index].SHOW_ARTICLE_SKU&&this.offers[index].ARTICLE_SKU?BX.adjust(this.obSkuArticleProps,{style:{display:""},html:this.offers[index].ARTICLE_SKU}):BX.adjust(this.obSkuArticleProps,{style:{display:"none"},html:""})),setLocationSKU(this.offers[index].ID),$(this.obBasketActions).closest(".counter_wrapp").addClass("hidden_block"),this.offerNum=index,this.QuantitySet(this.offerNum),this.setStoreBlock(this.offers[index].ID),this.setQuantityStore(this.offers[index].MAX_QUANTITY,this.offers[index].AVAILIABLE.TEXT),this.incViewedCounter(),BX.onCustomEvent("onCatalogStoreProductChange",[this.offers[this.offerNum].ID]),$(this.obPict).parent().data("id",this.offers[index].ID);var arPriceItem=this.offers[index].PRICE;"Q"==this.offers[index].ITEM_PRICE_MODE&&this.offers[index].ITEM_PRICES&&this.offers[index].USE_PRICE_COUNT&&(this.offers[index].USE_PRICE_COUNT&&this.offers[index].PRICE_MATRIX&&this.checkPriceRange(this.offers[index].CONFIG.MIN_QUANTITY_BUY),(arPriceItem=this.currentPrices[this.currentPriceSelected]).VALUE=arPriceItem.PRICE,arPriceItem.PRINT_VALUE=getCurrentPrice(arPriceItem.PRICE,arPriceItem.CURRENCY,arPriceItem.PRINT_PRICE),arPriceItem.DISCOUNT_VALUE=arPriceItem.BASE_PRICE,arPriceItem.PRINT_DISCOUNT_VALUE=getCurrentPrice(arPriceItem.BASE_PRICE,arPriceItem.CURRENCY,arPriceItem.PRINT_BASE_PRICE)),setViewedProduct(this.offers[index].ID,{PRODUCT_ID:this.offers[index].PRODUCT_ID,IBLOCK_ID:this.offers[index].IBLOCK_ID,NAME:this.product.name,DETAIL_PAGE_URL:this.offers[index].URL,PICTURE_ID:this.offers[index].PREVIEW_PICTURE?this.offers[index].PREVIEW_PICTURE.ID:this.offers[index].PARENT_PICTURE?this.offers[index].PARENT_PICTURE.ID:!!this.offers[index].SLIDER_COUNT&&this.offers[index].SLIDER[0].ID,CATALOG_MEASURE_NAME:this.offers[index].MEASURE,MIN_PRICE:arPriceItem,CAN_BUY:this.offers[index].CAN_BUY?"Y":"N",IS_OFFER:"Y",WITH_OFFERS:"N"}),$("#fast_view_item .title a").length&&this.offers[index].URL&&$(".fast_view_frame a.dark_link").attr("href",this.offers[index].URL);var obj=this.offers[index],th=$(this.obProduct),_th=this;"undefined"!=typeof arBasketAspro?this.setActualDataBlock(th,obj):void 0!==window.frameCacheVars&&BX.addCustomEvent("onFrameDataReceived",(function(){_th.setActualDataBlock(th,obj)})),$(this.obProduct).find(".quantity_block .values").length&&$(this.obProduct).find(".quantity_block .values .item span.value").text(this.offers[index].MAX_QUANTITY).css({opacity:"1"}),"Y"==this.offers[index].SHOW_DISCOUNT_TIME_EACH_SKU&&initCountdownTime($(this.obProduct),this.offers[index].DISCOUNT_ACTIVE),"Y"==arOptimusOptions.THEME.CHANGE_TITLE_ITEM&&(document.title=this.offers[index].NAME,$("h1").text(this.offers[index].NAME),ItemObj.TITLE=this.offers[index].NAME,ItemObj.WINDOW_TITLE=this.offers[index].NAME+""+this.offers[index].POSTFIX),$('.catalog_detail .tabs_section .tabs_content .form.inline input[data-sid="PRODUCT_NAME"]').attr("value",$("h1").text())}},window.JCCatalogElementFast.prototype.checkPriceRange=function(quantity){if(void 0!==quantity&&"Q"==this.currentPriceMode){var range,found=!1;for(var i in this.currentQuantityRanges)if(this.currentQuantityRanges.hasOwnProperty(i)&&(range=this.currentQuantityRanges[i],parseInt(quantity)>=parseInt(range.SORT_FROM)&&("INF"==range.SORT_TO||parseInt(quantity)<=parseInt(range.SORT_TO)))){found=!0,this.currentQuantityRangeSelected=range.HASH;break}for(var k in!found&&(range=this.getMinPriceRange())&&(this.currentQuantityRangeSelected=range.HASH),this.currentPrices)if(this.currentPrices.hasOwnProperty(k)&&this.currentPrices[k].QUANTITY_HASH==this.currentQuantityRangeSelected){this.currentPriceSelected=k;break}}},window.JCCatalogElementFast.prototype.getMinPriceRange=function(){var range;for(var i in this.currentQuantityRanges)this.currentQuantityRanges.hasOwnProperty(i)&&(!range||parseInt(this.currentQuantityRanges[i].SORT_FROM)<parseInt(range.SORT_FROM))&&(range=this.currentQuantityRanges[i]);return range},window.JCCatalogElementFast.prototype.setActualDataBlock=function(th,obj){this.setLikeBlock(th,".like_icons .wish_item",obj,"DELAY"),this.setLikeBlock(th,".like_icons .compare_item",obj,"COMPARE"),this.setBuyBlock(th,obj)},window.JCCatalogElementFast.prototype.SetSliderPict=function(obj,slider,config){var container=$(".wrapp_thumbs"),slideHtml="";for(var i in countPhoto=obj.SLIDER_COUNT,container.find(".thumbs").css({"max-width":Math.ceil(64*(countPhoto<=3?countPhoto:3)-10)}),slideHtml='<ul class="slides_block">',slider)"object"==typeof slider[i]&&(slideHtml+='<li data-big="'+slider[i].BIG.src+'"><span class="cnt"><img border="0" src="'+slider[i].THUMB.src+'" alt="" title="" /></span></li>');if(slideHtml+="</ul>",container.find(".thumbs").html(slideHtml),countPhoto>1){container.show(),container.find(".thumbs_navigation").length&&container.find(".thumbs_navigation").remove(),container.find(".thumbs").append('<span class="thumbs_navigation custom_flex"></span>'),container.find(".thumbs").removeData("flexslider"),container.find(".thumbs").flexslider({animation:"slide",selector:".slides_block > li",slideshow:!1,animationSpeed:600,directionNav:!0,controlNav:!1,pauseOnHover:!0,itemWidth:54,itemMargin:10,animationLoop:!0,controlsContainer:".thumbs_navigation"}),container.find(".thumbs .slides_block li").first().addClass("current");var pict=$(this.obPict);container.find(".thumbs").delegate("li:not(.current)","click",(function(e){var srcSmall="",srcBig="",width="",height="";index=$(this).index(),void 0!==slider[index]&&("SMALL"in slider[index]?srcSmall=slider[index].SMALL.src:"SRC"in slider[index]&&(srcSmall=slider[index].SRC),"BIG"in slider[index]&&(srcBig=slider[index].BIG.src),"WIDTH"in slider[index]&&(width=slider[index].WIDTH),"HEIGHT"in slider[index]&&(height=slider[index].HEIGHT)),$(this).addClass("current").siblings().removeClass("current").parents(".item_slider").find(".slides li").fadeOut(333),$(this).parents(".item_slider").find(".slides li").eq(index).addClass("current").stop().fadeIn(333),srcSmall&&BX.adjust(pict[0],{props:{src:srcSmall}}),pict.attr("data-large",""),srcBig&&("POPUP"===config.mainPictureMode&&pict.parent().attr("href",srcBig),"MAGNIFIER"===config.mainPictureMode&&(pict.attr("data-large",srcBig),pict.attr("xoriginal",srcBig)))}))}else container.hide()},window.JCCatalogElementFast.prototype.SetSliderPictMobile=function(obj,slider){var container=$(".item_slider.flex"),slideHtml="";if(countPhoto=obj.SLIDER_COUNT,slideHtml='<ul class="slides">',slider.length)for(var i in slider)"object"==typeof slider[i]&&(slideHtml+='<li data-value="'+obj.ID+"_"+slider[i].ID+'"><a href="'+slider[i].BIG.src+'" rel="item_slider" class="fancy" title="'+slider[i].TITLE+'"><img border="0" src="'+slider[i].SMALL.src+'" alt="'+slider[i].ALT+'" title="'+slider[i].TITLE+'" /></a></li>');else slideHtml+='<li data-value=""><span rel="item_slider" class="fancy" title="'+obj.NAME+'"><img border="0" src="'+obj.NO_PHOTO.SRC+'" alt="'+obj.NAME+'" title="'+obj.NAME+'" /></span></li>';slideHtml+="</ul>",container.html(slideHtml),container.removeData("flexslider"),container.flexslider({animation:"slide",slideshow:!1,slideshowSpeed:1e4,animationSpeed:600,directionNav:!1,pauseOnHover:!0,animationLoop:!1})},window.JCCatalogElementFast.prototype.setLikeBlock=function(th,className,obj,type){var block=th;"DELAY"==type&&(obj.CAN_BUY&&"ADD"===obj.CONFIG.ACTION?block.find(className).css("display","block"):block.find(className).hide()),block.find(className).attr("data-item",obj.ID),arBasketAspro[type]&&(block.find(className).removeClass("added"),block.find(className).find(".value").css("display","block"),block.find(className).find(".value.added").hide(),void 0!==arBasketAspro[type][obj.ID]&&(block.find(className).addClass("added"),block.find(className).find(".value").hide(),block.find(className).find(".value.added").css("display","block")))},window.JCCatalogElementFast.prototype.setBuyBlock=function(th,obj){var buyBlock=th.find(".offer_buy_block"),input_value=obj.CONFIG.MIN_QUANTITY_BUY;buyBlock.find(".counter_wrapp .counter_block").length&&buyBlock.find(".counter_wrapp .counter_block").attr("data-item",obj.ID),obj.offer_set_quantity&&(input_value=obj.offer_set_quantity);var $calculate=buyBlock.closest(".catalog_detail").find(".calculate-delivery");if($calculate.length&&($calculate.each((function(){var $calculateSpan=$(this).find("span[data-event=jqm]").first();if($calculateSpan.length){var $clone=$calculateSpan.clone();$clone.attr("data-param-product_id",obj.ID).attr("data-param-quantity",input_value).removeClass("clicked"),$clone.insertAfter($calculateSpan).on("click",(function(){jQuery.browser.mobile||($(this).parent().addClass("loadings"),$("body").addClass("loading_form"))})),$calculateSpan.remove()}if($(this).hasClass("with_preview")){$(this).removeClass("inited"),this.timerInitCalculateDelivery&&clearTimeout(this.timerInitCalculateDelivery);var that=this;this.timerInitCalculateDelivery=setTimeout((function(){initCalculatePreview(),that.timerInitCalculateDelivery=!1}),1e3)}})),"ADD"===this.offers[this.offerNum].CONFIG.ACTION&&!1!==this.offers[this.offerNum].CAN_BUY?$calculate.show():$calculate.hide()),$("#fast_view_item .cheaper_form").length){var cheaper_form=$("#fast_view_item .cheaper_form span");cheaper_form.data("name",obj.NAME),cheaper_form.data("item",obj.ID)}if(obj.CONFIG.OPTIONS.USE_PRODUCT_QUANTITY_DETAIL&&"ADD"==obj.CONFIG.ACTION&&obj.CAN_BUY){var max=obj.CONFIG.MAX_QUANTITY_BUY>0?"data-max='"+obj.CONFIG.MAX_QUANTITY_BUY+"'":"",counterHtml='<span class="minus">-</span><input type="text" class="text" name="'+obj.PRODUCT_QUANTITY_VARIABLE+'" value="'+input_value+'" /><span class="plus" '+max+">+</span>";arBasketAspro.BASKET&&void 0!==arBasketAspro.BASKET[obj.ID]?buyBlock.find(".counter_wrapp .counter_block").length?buyBlock.find(".counter_wrapp .counter_block").hide():(buyBlock.find(".counter_wrapp").prepend('<div class="counter_block big_basket" data-item="'+obj.ID+'"></div>'),buyBlock.find(".counter_wrapp .counter_block").html(counterHtml).hide()):buyBlock.find(".counter_wrapp .counter_block").length?buyBlock.find(".counter_wrapp .counter_block").html(counterHtml).show():(buyBlock.find(".counter_wrapp").prepend('<div class="counter_block big_basket" data-item="'+obj.ID+'"></div>'),buyBlock.find(".counter_wrapp .counter_block").html(counterHtml))}else buyBlock.find(".counter_wrapp .counter_block").length&&buyBlock.find(".counter_wrapp .counter_block").hide();var className="ORDER"==obj.CONFIG.ACTION||!obj.CAN_BUY||!obj.CONFIG.OPTIONS.USE_PRODUCT_QUANTITY_DETAIL||"SUBSCRIBE"==obj.CONFIG.ACTION&&"Y"==obj.CATALOG_SUBSCRIBE?"wide":"",buyBlockBtn=$('<div class="button_block"></div>');if(buyBlock.find(".counter_wrapp").find(".button_block").length?arBasketAspro.BASKET&&void 0!==arBasketAspro.BASKET[obj.ID]?(buyBlock.find(".counter_wrapp").find(".button_block").addClass("wide").html(obj.HTML),markProductAddBasket(obj.ID)):className?(buyBlock.find(".counter_wrapp").find(".button_block").addClass("wide").html(obj.HTML),"undefined"!=typeof arBasketAspro&&arBasketAspro.SUBSCRIBE&&void 0!==arBasketAspro.SUBSCRIBE[obj.ID]&&markProductSubscribe(obj.ID)):buyBlock.find(".counter_wrapp").find(".button_block").removeClass("wide").html(obj.HTML):(buyBlock.find(".counter_wrapp").append('<div class="button_block '+className+'">'+obj.HTML+"</div>"),arBasketAspro.BASKET&&void 0!==arBasketAspro.BASKET[obj.ID]&&markProductAddBasket(obj.ID),arBasketAspro.SUBSCRIBE&&void 0!==arBasketAspro.SUBSCRIBE[obj.ID]&&markProductSubscribe(obj.ID)),"NOTHING"!==obj.CONFIG.ACTION)if("ADD"==obj.CONFIG.ACTION&&obj.CAN_BUY&&"N"!=obj.SHOW_ONE_CLICK_BUY){var ocb='<span class="transparent big_btn type_block button one_click transition_bg" data-offers="Y" data-item="'+obj.ID+'" data-iblockID="'+obj.IBLOCK_ID+'" data-quantity="'+obj.CONFIG.MIN_QUANTITY_BUY+'" data-props="'+obj.OFFER_PROPS+'" onclick="oneClickBuy('+obj.ID+", "+obj.IBLOCK_ID+', this)"><span>'+obj.ONE_CLICK_BUY+"</span></span>";buyBlock.find(".wrapp_one_click").length?buyBlock.find(".wrapp_one_click").html(ocb):buyBlock.append('<div class="wrapp_one_click">'+ocb+"</div>")}else buyBlock.find(".wrapp_one_click").length&&buyBlock.find(".wrapp_one_click").remove();else buyBlock.find(".wrapp_one_click").length&&buyBlock.find(".wrapp_one_click").remove();buyBlock.fadeIn(),buyBlock.find(".counter_wrapp .counter_block input").data("product","ob"+th[0].id),this.setPriceAction("","Y"),"object"==typeof obOptimusPredictions&&obOptimusPredictions.showAll()},window.JCCatalogElementFast.prototype.setStoreBlock=function(id){$(".stores_tab > div").hide(),$(".stores_tab .sku_stores_"+id).show()},window.JCCatalogElementFast.prototype.setQuantityStore=function(quantity,text){parseFloat(quantity)>0?$(this.storeQuanity).find(".icon").removeClass("order").addClass("stock"):$(this.storeQuanity).find(".icon").removeClass("stock").addClass("order"),$(this.storeQuanity).find(".icon + span").html(text),$(".stores_tab").length||$(".item-stock .store_view").removeClass("store_view")},window.JCCatalogElementFast.prototype.CompareCountResult=function(result){if(result.COMPARE_COUNT){for(var i in result.ITEMS){if(result.ITEMS[i]==this.offers[this.offerNum].ID){this.offers[this.offerNum].COMPARE_ACTIVE=!0;break}this.offers[this.offerNum].COMPARE_ACTIVE=!1}this.offers[this.offerNum].COMPARE_ACTIVE?($(this.obCompare).addClass("added"),$(this.obCompare).find(".value:not(.added)").hide(),$(this.obCompare).find(".value.added").css("display","block")):($(this.obCompare).removeClass("added"),$(this.obCompare).find(".value.added").hide(),$(this.obCompare).find(".value:not(.added)").css("display","block"))}},window.JCCatalogElementFast.prototype.ItemInfoResult=function(result){result.HTML&&($(this.obBasketActions).html(result.HTML),$(this.obBasketActions).show(),this.obAddToBasketBtn=BX(this.visual.BUY_ID),this.obBasketBtn=BX(this.visual.BASKET_LINK),this.obSubscribeBtn=BX(this.visual.SUBSCRIBE_ID),this.obSubscribedBtn=BX(this.visual.SUBSCRIBED_ID),BX.bind(this.obAddToBasketBtn,"click",BX.delegate(this.Add2Basket,this)),$(this.obBasketActions).removeClass("wide"),this.ajax_type_item=result.BUYMISSINGGOODS,"ADD"==result.BUYMISSINGGOODS||this.canBuy?$(this.obQuantity).css("display",""):$(this.obBasketActions).addClass("wide"),result.ONE_CLICK_HTML&&$(".wrapp_one_click").html(result.ONE_CLICK_HTML)),basketParams={ajax_action:"Y"},BX.ajax.loadJSON(arOptimusOptions.SITE_DIR+"ajax/get_basket_count.php",basketParams,BX.delegate(this.BasketCountResult,this))},window.JCCatalogElementFast.prototype.BasketCountResult=function(result){for(var i in result.ITEMS){if(result.ITEMS[i].PRODUCT_ID==this.offers[this.offerNum].ID){this.offers[this.offerNum].BASKET_ACTIVE=!0;break}this.offers[this.offerNum].BASKET_ACTIVE=!1}for(var i in result.SUBSCRIBE_ITEMS){if(result.SUBSCRIBE_ITEMS[i].PRODUCT_ID==this.offers[this.offerNum].ID){this.offers[this.offerNum].SUBSCRIBE_ACTIVE=!0;break}this.offers[this.offerNum].SUBSCRIBE_ACTIVE=!1}this.BasketStateRefresh()},window.JCCatalogElementFast.prototype.BasketStateRefresh=function(buy_basket){this.offers[this.offerNum].SUBSCRIBE_ACTIVE?($(this.obBasketActions).addClass("wide"),$(this.obSubscribeBtn).hide(),$(this.obSubscribedBtn).show()):($(this.obBasketActions).addClass("wide"),$(this.obSubscribedBtn).hide(),$(this.obSubscribeBtn).show()),this.offers[this.offerNum].BASKET_ACTIVE?($(this.obAddToBasketBtn).hide(),$(this.obQuantity).closest(".counter_wrapp").find(".counter_block").hide(),$(this.obBasketBtn).show(),$(this.obBasketActions).addClass("wide")):($(this.obBasketActions).removeClass("wide"),$(this.obBasketBtn).hide(),("ADD"==this.ajax_type_item||this.canBuy)&&$(this.obQuantity).closest(".counter_wrapp").find(".counter_block").show(),$(this.obAddToBasketBtn).show()),this.canBuy||$(this.obBasketActions).addClass("wide"),this.canBuy&&$(".one_click").removeClass("hidden_block").css("opacity",1),BX.style(this.obBasketActions,"opacity","1"),$(this.obBasketActions).closest(".counter_wrapp").removeClass("hidden_block").css("opacity",1),"undefined"!==buy_basket&&"Y"==buy_basket&&($("#basket_line .basket_fly").length&&$(window).outerWidth()>768?basketFly("open"):$("#basket_line .cart").length&&($("#basket_line .cart").is(".empty_cart")&&($("#basket_line .cart").removeClass("empty_cart").find(".cart_wrapp a.basket_link").removeAttr("href").addClass("cart-call"),touchBasket(".cart:not(.empty_cart) .basket_block .link")),reloadTopBasket("add",$("#basket_line"),200,2e3,"Y")),animateBasketLine(200))},window.JCCatalogElementFast.prototype.setPriceAction=function(change,sku){var measure=this.offers[this.offerNum].MEASURE&&"Y"==this.offers[this.offerNum].SHOW_MEASURE?this.offers[this.offerNum].MEASURE:"",product=$(this.obProduct),check_quantity="",is_sku=void 0!==sku&&"Y"==sku;if(this.offers[this.offerNum].offer_set_quantity=this.offers[this.offerNum].CONFIG.MIN_QUANTITY_BUY,$(product).find("input[name=quantity]").length&&(this.offers[this.offerNum].offer_set_quantity=$(product).find("input[name=quantity]").val()),this.offers[this.offerNum].USE_PRICE_COUNT&&this.offers[this.offerNum].PRICE_MATRIX?(this.checkPriceRange(this.offers[this.offerNum].offer_set_quantity),this.setPriceMatrix(this.offers[this.offerNum].PRICE_MATRIX)):"PRICES"in this.offers[this.offerNum]&&this.setPrice(this.offers[this.offerNum].PRICES,measure),"N"!=arOptimusOptions.THEME.SHOW_TOTAL_SUMM){var check_quantity;if("ALWAYS"==arOptimusOptions.THEME.SHOW_TOTAL_SUMM&&(this.offers[this.offerNum].check_quantity=!0),this.offers[this.offerNum].check_quantity)check_quantity="Y";else(check_quantity=void 0!==change&&"Y"==change?change:"")&&(this.offers[this.offerNum].check_quantity=!0);void 0!==this.currentPrices[this.currentPriceSelected]&&setPriceItem(product,this.offers[this.offerNum].offer_set_quantity,this.currentPrices[this.currentPriceSelected].PRICE,check_quantity,is_sku)}},window.JCCatalogElementFast.prototype.setPriceMatrix=function(sPriceMatrix){var prices="";if(this.obPrice.price){var measure=this.offers[this.offerNum].MEASURE&&"Y"==this.offers[this.offerNum].SHOW_MEASURE?this.offers[this.offerNum].MEASURE:"",strPrice="";strPrice=getCurrentPrice(this.currentPrices[this.currentPriceSelected].PRICE,this.currentPrices[this.currentPriceSelected].CURRENCY,this.currentPrices[this.currentPriceSelected].PRINT_PRICE),measure&&(strPrice+='<span class="price_measure">/'+measure+"</span>"),$(this.obProduct).find(".not_matrix").hide(),$(this.obProduct).find(".with_matrix .price_value_block").html(strPrice),this.config.showOldPrice?($(this.obProduct).find(".price.discount").hide(),parseFloat(this.currentPrices[this.currentPriceSelected].BASE_PRICE)>parseFloat(this.currentPrices[this.currentPriceSelected].PRICE)?($(this.obProduct).find(".with_matrix .discount").html(getCurrentPrice(this.currentPrices[this.currentPriceSelected].BASE_PRICE,this.currentPrices[this.currentPriceSelected].CURRENCY,this.currentPrices[this.currentPriceSelected].PRINT_BASE_PRICE)),$(this.obProduct).find(".with_matrix .discount").css("display","inline-block")):($(this.obProduct).find(".with_matrix .discount").html(""),$(this.obProduct).find(".with_matrix .discount").css("display","none"))):($(this.obProduct).find(".with_matrix .discount").html(""),$(this.obProduct).find(".with_matrix .discount").css("display","none")),$(this.obProduct).find(".sale_block.normal").hide(),$(this.obProduct).find(".sale_block:not(.matrix)").hide(),this.currentPrices[this.currentPriceSelected].PERCENT>0?($(this.obProduct).find(".with_matrix .sale_block .text .values_wrapper").html(getCurrentPrice(this.currentPrices[this.currentPriceSelected].DISCOUNT,this.currentPrices[this.currentPriceSelected].CURRENCY,this.currentPrices[this.currentPriceSelected].PRINT_DISCOUNT)),$(this.obProduct).find(".with_matrix .sale_block .value span").html(this.currentPrices[this.currentPriceSelected].PERCENT),$(this.obProduct).find(".with_matrix .sale_block").show()):$(this.obProduct).find(".with_matrix .sale_block").hide(),$(this.obProduct).find(".with_matrix").show(),BX.adjust(this.obPrice.price,{html:sPriceMatrix});var eventdata={product:$(this.obProduct),measure:measure,config:this.config,offer:this.offers[this.offerNum],obPrice:this.currentPrices[this.currentPriceSelected]};BX.onCustomEvent("onAsproSkuSetPriceMatrix",[eventdata])}},window.JCCatalogElementFast.prototype.setPrice=function(change,sku,obPrices,measure,product,offer){var prices="";if(this.obPrice.price){var measure=this.offers[this.offerNum].MEASURE&&"Y"==this.offers[this.offerNum].SHOW_MEASURE?this.offers[this.offerNum].MEASURE:"",product=$(this.obProduct),obPrices,check_quantity="",is_sku=void 0!==sku&&"Y"==sku;if("object"==typeof(obPrices=this.offers[this.offerNum].PRICES)){var strPrice="",count=Object.keys(obPrices).length,arStikePrices=[];for(var j in arOptimusOptions.THEME.DISCOUNT_PRICE&&(arStikePrices=arOptimusOptions.THEME.DISCOUNT_PRICE.split(",")),strPrice='<div class="offers_price_wrapper">',$(this.obProduct).find(".with_matrix").hide(),$(this.obProduct).find(".not_matrix").show(),this.offers[this.offerNum].offer_set_quantity=this.offers[this.offerNum].CONFIG.MIN_QUANTITY_BUY,$(product).find("input[name=quantity]").length&&(this.offers[this.offerNum].offer_set_quantity=$(product).find("input[name=quantity]").val()),this.config.showOldPrice&&$(this.obProduct).find(".price.discount").hide(),this.config.showPercent&&(this.obPrice.percent&&BX.adjust(this.obPrice.percent,{style:{display:"none"},html:""}),$(this.obPrice.price).closest(".cost").find(".sale_block:not(.matrix)").hide(),$(this.obPrice.price).closest(".cost").find(".sale_block:not(.matrix) .value").html(""),$(this.obPrice.price).closest(".cost").find(".sale_block:not(.matrix) .text span").html("")),obPrices)obPrices[j]&&obPrices[j].VALUE>0?("GROUP_NAME"in obPrices[j]&&count>1&&(strPrice+='<div class="offers_price_title">',strPrice+=obPrices[j].GROUP_NAME,strPrice+="</div>"),strPrice+='<div class="offers_price'+(arStikePrices&&BX.util.in_array(obPrices[j].PRICE_ID,arStikePrices)?" strike_block":"")+'">',strPrice+='<span class="values_wrapper">'+getCurrentPrice(obPrices[j].DISCOUNT_VALUE,obPrices[j].CURRENCY,obPrices[j].PRINT_DISCOUNT_VALUE)+"</span>",measure&&(strPrice+='<span class="price_measure">/'+measure+"</span>"),strPrice+="</div>",obPrices[j].DISCOUNT_VALUE!==obPrices[j].VALUE?(this.config.showOldPrice&&(strPrice+='<div class="offers_price_old">',strPrice+='<span class="values_wrapper">'+getCurrentPrice(obPrices[j].VALUE,obPrices[j].CURRENCY,obPrices[j].PRINT_VALUE)+"</span>",strPrice+="</div>"),this.config.showPercent&&(strPrice+='<div class="sale_block">',obPrices[j].DISCOUNT_DIFF_PERCENT>0&&obPrices[j].DISCOUNT_DIFF_PERCENT<100&&(strPrice+='<div class="value">-',strPrice+="<span>"+obPrices[j].DISCOUNT_DIFF_PERCENT+"</span>",strPrice+="%</div>"),strPrice+='<div class="text">',strPrice+='<span class="title">'+BX.message("ITEM_ECONOMY")+"</span>",strPrice+='<span class="values_wrapper">'+getCurrentPrice(obPrices[j].DISCOUNT_DIFF,obPrices[j].CURRENCY,obPrices[j].PRINT_DISCOUNT_DIFF)+"</span>",strPrice+="</div>",strPrice+='<div class="clearfix"></div></div>')):this.config.showOldPrice&&(this.obPrice.full&&BX.adjust(this.obPrice.full,{style:{display:"none"},html:""}),this.obPrice.discount&&BX.adjust(this.obPrice.discount,{style:{display:"none"},html:""}))):arOptimusOptions.THEME.EMPTY_PRICE_TEXT&&(strPrice+='<span class="empty_price_text">'+arOptimusOptions.THEME.EMPTY_PRICE_TEXT+"</span>");strPrice+="</div>",BX.adjust(this.obPrice.price,{html:strPrice}),this.obPrice.full&&($(this.obPrice.full).hide().html(""),this.showPercent&&$(this.obPrice.full).closest(".cost").find(".sale_block").hide());var eventdata={product:product,measure:measure,config:this.config,offer:this.offers[this.offerNum],obPrices:obPrices};BX.onCustomEvent("onAsproSkuSetPrice",[eventdata])}}},window.JCCatalogElementFast.prototype.Compare=function(){var compareParams,compareLink;if($(this.obCompare).find(".added").is(":visible")?(compareLink=this.compareData.compareUrlDel,this.compareData.Added=!1):(compareLink=this.compareData.compareUrl,this.compareData.Added=!0),compareLink){switch(this.productType){case 1:case 2:compareLink=compareLink.replace("#ID#",this.product.id.toString());break;case 3:compareLink=compareLink.replace("#ID#",this.offers[this.offerNum].ID)}compareParams={ajax_action:"Y"},BX.ajax.loadJSON(compareLink,compareParams,BX.proxy(this.CompareResult,this))}},window.JCCatalogElementFast.prototype.CompareResult=function(result){var popupContent,popupButtons,popupTitle;return"object"==typeof result&&("OK"===result.STATUS?(BX.onCustomEvent("OnCompareChange"),this.compareData.Added?($(this.obCompare).addClass("added"),$(this.obCompare).find(".value:not(.added)").hide(),$(this.obCompare).find(".added").css("display","block")):($(this.obCompare).removeClass("added"),$(this.obCompare).find(".added").hide(),$(this.obCompare).find(".value:not(.added)").css("display","block")),jsAjaxUtil.InsertDataToNode(arOptimusOptions.SITE_DIR+"ajax/show_compare_preview_top.php","compare_line",!1)):console.log(BX.message("ADD_ERROR_COMPARE")),!1)},window.JCCatalogElementFast.prototype.CompareRedirect=function(){this.compareData.comparePath?location.href=this.compareData.comparePath:this.obPopupWin.close()},window.JCCatalogElementFast.prototype.InitBasketUrl=function(){var product_url="";switch(this.basketUrl="ADD"===this.basketMode?this.basketData.add_url:this.basketData.buy_url,this.productType){case 1:case 2:this.basketUrl=this.basketUrl.replace("#ID#",this.product.id.toString()),product_url=this.product.id.toString();break;case 3:this.basketUrl=this.basketUrl.replace("#ID#",this.offers[this.offerNum].ID),product_url=this.offers[this.offerNum].URL}this.basketParams={ajax_basket:"Y"},this.config.showQuantity&&(this.basketParams[this.basketData.quantity]=this.obQuantity.value),this.basketData.sku_props&&(this.basketParams[this.basketData.sku_props_var]=this.basketData.sku_props),product_url&&(this.basketParams.REQUEST_URI=product_url)},window.JCCatalogElementFast.prototype.FillBasketProps=function(){if(this.visual.BASKET_PROP_DIV){var i=0,propCollection=null,foundValues=!1,obBasketProps=null;if(this.basketData.useProps&&!this.basketData.emptyProps?this.obPopupWin&&this.obPopupWin.contentContainer&&(obBasketProps=this.obPopupWin.contentContainer):obBasketProps=BX(this.visual.BASKET_PROP_DIV),obBasketProps){if((propCollection=obBasketProps.getElementsByTagName("select"))&&propCollection.length)for(i=0;i<propCollection.length;i++)if(!propCollection[i].disabled)switch(propCollection[i].type.toLowerCase()){case"select-one":this.basketParams[propCollection[i].name]=propCollection[i].value,foundValues=!0}if((propCollection=obBasketProps.getElementsByTagName("input"))&&propCollection.length)for(i=0;i<propCollection.length;i++)if(!propCollection[i].disabled)switch(propCollection[i].type.toLowerCase()){case"hidden":this.basketParams[propCollection[i].name]=propCollection[i].value,foundValues=!0;break;case"radio":propCollection[i].checked&&(this.basketParams[propCollection[i].name]=propCollection[i].value,foundValues=!0)}}foundValues||(this.basketParams[this.basketData.props]=[],this.basketParams[this.basketData.props][0]=0)}},window.JCCatalogElementFast.prototype.SendToBasket=function(){this.canBuy&&(this.InitBasketUrl(),this.FillBasketProps(),BX.ajax.loadJSON(this.basketUrl,this.basketParams,BX.proxy(this.BasketResult,this)))},window.JCCatalogElementFast.prototype.Add2Basket=function(){this.basketMode="ADD",this.Basket()},window.JCCatalogElementFast.prototype.BuyBasket=function(){this.basketMode="BUY",this.Basket()},window.JCCatalogElementFast.prototype.Basket=function(){var contentBasketProps="";this.canBuy&&this.SendToBasket()},window.JCCatalogElementFast.prototype.BasketResult=function(arResult){var popupContent,popupButtons,popupTitle,productPict;return this.obPopupWin&&this.obPopupWin.close(),"object"==typeof arResult&&("OK"===arResult.STATUS&&"BUY"===this.basketMode?this.BasketRedirect():(popupTitle={content:BX.create("div",{style:{marginRight:"30px",whiteSpace:"nowrap"},text:"OK"===arResult.STATUS?BX.message("TITLE_SUCCESSFUL"):BX.message("TITLE_ERROR")})},"OK"===arResult.STATUS?(BX.onCustomEvent("OnBasketChange"),this.offers[this.offerNum].BASKET_ACTIVE=!0,this.BasketStateRefresh("Y")):console.log(BX.message("ADD_ERROR_BASKET"))),!1)},window.JCCatalogElementFast.prototype.BasketRedirect=function(){location.href=this.basketData.basketUrl?this.basketData.basketUrl:BX.message("BASKET_URL")},window.JCCatalogElementFast.prototype.InitPopupWindow=function(){this.obPopupWin||(this.obPopupWin=BX.PopupWindowManager.create("CatalogElementBasket_"+this.visual.ID,null,{autoHide:!1,offsetLeft:0,offsetTop:0,overlay:!0,closeByEsc:!0,titleBar:!0,closeIcon:{top:"10px",right:"10px"}}))},window.JCCatalogElementFast.prototype.onPopupWindowShow=function(popup){BX.bind(document,"click",BX.proxy(this.popupWindowClick,this))},window.JCCatalogElementFast.prototype.onPopupWindowClose=function(popup,event){BX.unbind(document,"click",BX.proxy(this.popupWindowClick,this))},window.JCCatalogElementFast.prototype.popupWindowClick=function(){this.obPopupPict&&"object"==typeof this.obPopupPict&&this.obPopupPict.isShown()&&this.obPopupPict.close()},window.JCCatalogElementFast.prototype.incViewedCounter=function(){if(this.currentIsSet&&!this.updateViewedCount){switch(this.productType){case 1:case 2:this.viewedCounter.params.PRODUCT_ID=this.product.id,this.viewedCounter.params.PARENT_ID=this.product.id;break;case 3:this.viewedCounter.params.PARENT_ID=this.product.id,this.viewedCounter.params.PRODUCT_ID=this.offers[this.offerNum].ID;break;default:return}this.viewedCounter.params.SITE_ID=BX.message("SITE_ID"),this.updateViewedCount=!0,BX.ajax.post(this.viewedCounter.path,this.viewedCounter.params,BX.delegate((function(){this.updateViewedCount=!1}),this))}},window.JCCatalogElementFast.prototype.allowViewedCount=function(update){update=!!update,this.currentIsSet=!0,update&&this.incViewedCounter()}}}(window);
//# sourceMappingURL=script.min.js.map143  109007|/aspro.optimus/install/wizards/aspro/optimus/site/templates/aspro_optimus/components/bitrix/catalog.element/fast_view/script.js|dfc3e65bvar ItemObj = {};

$(document).on('click', ".item-stock .store_view", function(){
	scroll_block($('.tabs_section'));
});

$(document).ready(function (){
	$(".opener").click(function(){
		$(this).find(".opener_icon").toggleClass("opened");
		var showBlock = $(this).parents("tr").toggleClass("nb").next(".offer_stores").find(".stores_block_wrap");
		showBlock.slideToggle(200);
	});

	$(document).on("click", ".tabs_section .tabs-head li",  function () {
		if(!$(this).is(".current")){
			$(".tabs_section .tabs-head li").removeClass("current");
			$(this).addClass("current");
			$(".tabs_section ul.tabs_content li").removeClass("current");
			if($(this).attr("id") == "product_reviews_tab"){
				//$(".tabs_section ul.tabs_content > li:eq("+$(this).index()+")").addClass("current");
				$(".shadow.common").hide(); $("#reviews_content").show();
			}
			else{
				$(".shadow.common").show();
				$("#reviews_content").hide();
				$(".tabs_section ul.tabs_content > li:eq("+$(this).index()+")").addClass("current");
			}
		}
	});

	$(".hint .icon").click(function(e){
		var tooltipWrapp = $(this).parents(".hint");
		tooltipWrapp.click(function(e){e.stopPropagation();})
		if(tooltipWrapp.is(".active")){
			tooltipWrapp.removeClass("active").find(".tooltip").slideUp(200);
		}
		else{
			$(".catalog_detail .hint").removeClass('active');
			$(".catalog_detail .hint .tooltip").slideUp(100);

			tooltipWrapp.addClass("active").find(".tooltip").slideDown(200);
			tooltipWrapp.find(".tooltip_close").click(function(e){
				e.stopPropagation(); tooltipWrapp.removeClass("active").find(".tooltip").slideUp(100);
			});
			$(document).click(function(){
				tooltipWrapp.removeClass("active").find(".tooltip").slideUp(100);
			});
		}
	});

	function equalTizerHeight(){
		if($('.tizers_block_detail .item_block').length){
			$('.tizers_block_detail .item_block').each(function() {
				var th=$(this).find('.text'),
					img=$(this).find('.image'),
					h = th.height(),
					p = 26;
				if(img.length){
					if(th.height()<img.height()){
						if((p = Math.floor((img.height() - th.height()) / 2)) < 0){
							p = 0;
						}
						th.css('padding-top', p + 'px');
					}
				}
			});
		}
	}
	equalTizerHeight();
	BX.addCustomEvent('onWindowResize', function(eventdata) {
		try{
			ignoreResize.push(true);
			equalTizerHeight();
		}
		catch(e){}
		finally{
			ignoreResize.pop();
		}
	});
})
$('.set_block').ready(function(){
	$('.set_block ').equalize({children: '.item:not(".r") .cost', reset: true});
	$('.set_block').equalize({children: '.item .item-title', reset: true});
	$('.set_block').equalize({children: '.item .item_info', reset: false});
});



(function (window) {

if (!window.JCCatalogOnlyElement)
{

	window.JCCatalogOnlyElement = function (arParams)
	{
		if (typeof arParams === 'object')
		{
			this.params = arParams;

			this.obProduct = null;
			this.set_quantity = 1;

			this.currentPriceMode = '';
			this.currentPrices = [];
			this.currentPriceSelected = 0;
			this.currentQuantityRanges = [];
			this.currentQuantityRangeSelected = 0;

			if (this.params.MESS)
			{
				this.mess = this.params.MESS;
			}

			this.init();
		}
	}
	window.JCCatalogOnlyElement.prototype = {
		init: function()
		{
			var i = 0,
				j = 0,
				treeItems = null;

			this.obProduct = BX(this.params.ID);

			if(!!this.obProduct)
			{
				$(this.obProduct).find('.counter_wrapp .counter_block input').data('product', 'ob'+this.obProduct.id+'el');
				this.currentPriceMode = this.params.ITEM_PRICE_MODE;
				this.currentPrices = this.params.ITEM_PRICES;
				this.currentQuantityRanges = this.params.ITEM_QUANTITY_RANGES;
			}

		},

		setPriceAction: function()
		{
			this.set_quantity = this.params.MIN_QUANTITY_BUY;
			if($(this.obProduct).find('input[name=quantity]').length)
				this.set_quantity = $(this.obProduct).find('input[name=quantity]').val();

			this.checkPriceRange(this.set_quantity);

			$(this.obProduct).find('.not_matrix').hide();

			$(this.obProduct).find('.with_matrix .price_value_block').html(getCurrentPrice(this.currentPrices[this.currentPriceSelected].PRICE, this.currentPrices[this.currentPriceSelected].CURRENCY, this.currentPrices[this.currentPriceSelected].PRINT_PRICE));

			if($(this.obProduct).find('.with_matrix .discount'))
			{
				$(this.obProduct).find('.with_matrix .discount').html(getCurrentPrice(this.currentPrices[this.currentPriceSelected].BASE_PRICE, this.currentPrices[this.currentPriceSelected].CURRENCY, this.currentPrices[this.currentPriceSelected].PRINT_BASE_PRICE));
			}

			$(this.obProduct).find('.with_matrix .sale_block .text .values_wrapper').html(getCurrentPrice(this.currentPrices[this.currentPriceSelected].DISCOUNT, this.currentPrices[this.currentPriceSelected].CURRENCY, this.currentPrices[this.currentPriceSelected].PRINT_DISCOUNT));
			$(this.obProduct).find('.with_matrix .sale_block .value span').html(this.currentPrices[this.currentPriceSelected].PERCENT);

			$(this.obProduct).find('.with_matrix').show();

			if(arOptimusOptions['THEME']['SHOW_TOTAL_SUMM'] != 'N')
			{
				if(typeof this.currentPrices[this.currentPriceSelected] !== 'undefined')
					setPriceItem($(this.obProduct), this.set_quantity, this.currentPrices[this.currentPriceSelected].PRICE);
			}
		},

		checkPriceRange: function(quantity)
		{
			if (typeof quantity === 'undefined'|| this.currentPriceMode != 'Q')
				return;

			var range, found = false;

			for (var i in this.currentQuantityRanges)
			{
				if (this.currentQuantityRanges.hasOwnProperty(i))
				{
					range = this.currentQuantityRanges[i];

					if (
						parseInt(quantity) >= parseInt(range.SORT_FROM)
						&& (
							range.SORT_TO == 'INF'
							|| parseInt(quantity) <= parseInt(range.SORT_TO)
						)
					)
					{
						found = true;
						this.currentQuantityRangeSelected = range.HASH;
						break;
					}
				}
			}

			if (!found && (range = this.getMinPriceRange()))
			{
				this.currentQuantityRangeSelected = range.HASH;
			}

			for (var k in this.currentPrices)
			{
				if (this.currentPrices.hasOwnProperty(k))
				{
					if (this.currentPrices[k].QUANTITY_HASH == this.currentQuantityRangeSelected)
					{
						this.currentPriceSelected = k;
						break;
					}
				}
			}
		},

		getMinPriceRange: function()
		{
			var range;

			for (var i in this.currentQuantityRanges)
			{
				if (this.currentQuantityRanges.hasOwnProperty(i))
				{
					if (
						!range
						|| parseInt(this.currentQuantityRanges[i].SORT_FROM) < parseInt(range.SORT_FROM)
					)
					{
						range = this.currentQuantityRanges[i];
					}
				}
			}

			return range;
		}
	}
}

if (!!window.JCCatalogElementFast)
{
	return;
}

var BasketButton = function(params)
{
	BasketButton.superclass.constructor.apply(this, arguments);
	this.nameNode = BX.create('span', {
		props : { className : 'bx_medium bx_bt_button', id : this.id },
		style: typeof(params.style) === 'object' ? params.style : {},
		text: params.text
	});
	this.buttonNode = BX.create('span', {
		attrs: { className: params.ownerClass },
		children: [this.nameNode],
		events : this.contextEvents
	});
	if (BX.browser.IsIE())
	{
		this.buttonNode.setAttribute("hideFocus", "hidefocus");
	}
};
BX.extend(BasketButton, BX.PopupWindowButton);

window.JCCatalogElementFast = function (arParams)
{
	this.timerInitCalculateDelivery = false;
	this.skuVisualParams = {
		SELECT:
		{
			TAG_BIND: 'select',
			TAG: 'option',
			ACTIVE_CLASS: 'active',
			HIDE_CLASS: 'hidden',
			EVENT: 'change',
		},
		LI:
		{
			TAG_BIND: 'li',
			TAG: 'li',
			ACTIVE_CLASS: 'active',
			HIDE_CLASS: 'missing',
			EVENT: 'click',
		}
	};
	this.productType = 0;

	this.config = {
		useCatalog: true,
		showQuantity: true,
		showPrice: true,
		showAbsent: true,
		showOldPrice: false,
		showPercent: false,
		showSkuProps: false,
		showOfferGroup: false,
		useCompare: false,
		mainPictureMode: 'IMG',
		showBasisPrice: false,
		offerShowPreviewPictureProps: false,
		basketAction: ['BUY'],
		showClosePopup: false
	};

	this.basketLinkURL = '';

	this.checkQuantity = false;
	this.maxQuantity = 0;
	this.SliderImages=0;
	this.defaultCount = 1;
	this.stepQuantity = 1;
	this.isDblQuantity = false;
	this.canBuy = true;
	this.currentBasisPrice = {};
	this.canSubscription = true;
	this.currentIsSet = false;
	this.updateViewedCount = false;

	this.currentPriceMode = '';
	this.currentPrices = [];
	this.currentPriceSelected = 0;
	this.currentQuantityRanges = [];
	this.currentQuantityRangeSelected = 0;

	this.precision = 6;
	this.precisionFactor = Math.pow(10,this.precision);

	this.listID = {
		main: ['PICT_ID', 'BIG_SLIDER_ID', 'BIG_IMG_CONT_ID'],
		stickers: ['STICKER_ID'],
		productSlider: ['SLIDER_CONT', 'SLIDER_LIST', 'SLIDER_LEFT', 'SLIDER_RIGHT'],
		offerSlider: ['SLIDER_CONT_OF_ID', 'SLIDER_LIST_OF_ID', 'SLIDER_LEFT_OF_ID', 'SLIDER_RIGHT_OF_ID'],
		offerSliderMobile: ['SLIDER_CONT_OFM_ID', 'SLIDER_LIST_OFM_ID', 'SLIDER_LEFT_OFM_ID', 'SLIDER_RIGHT_OFM_ID'],
		offers: ['TREE_ID', 'TREE_ITEM_ID', 'DISPLAY_PROP_DIV', 'DISPLAY_PROP_ARTICLE_DIV', 'OFFER_GROUP'],
		quantity: ['QUANTITY_ID', 'QUANTITY_UP_ID', 'QUANTITY_DOWN_ID', 'QUANTITY_MEASURE', 'QUANTITY_LIMIT', 'BASIS_PRICE'],
		price: ['PRICE_ID'],
		oldPrice: ['OLD_PRICE_ID', 'DISCOUNT_VALUE_ID'],
		discountPerc: ['DISCOUNT_PERC_ID'],
		basket: ['BASKET_PROP_DIV', 'BUY_ID', 'BASKET_LINK', 'ADD_BASKET_ID', 'BASKET_ACTIONS_ID', 'NOT_AVAILABLE_MESS', 'SUBSCRIBE_ID', 'SUBSCRIBED_ID'],
		magnifier: ['MAGNIFIER_ID', 'MAGNIFIER_AREA_ID'],
		compare: ['COMPARE_LINK_ID']
	};

	this.visualPostfix = {
		// main pict
		PICT_ID: '_pict',
		BIG_SLIDER_ID: '_big_slider',
		BIG_IMG_CONT_ID: '_bigimg_cont',
		// stickers
		STICKER_ID: '_sticker',
		// product pict slider
		SLIDER_CONT: '_slider_cont',
		SLIDER_LIST: '_slider_list',
		SLIDER_LEFT: '_slider_left',
		SLIDER_RIGHT: '_slider_right',
		// offers sliders
		SLIDER_CONT_OF_ID: '_slider_cont_',
		SLIDER_LIST_OF_ID: '_slider_list_',
		SLIDER_LEFT_OF_ID: '_slider_left_',
		SLIDER_RIGHT_OF_ID: '_slider_right_',
		// offers sliders mobile
		SLIDER_CONT_OFM_ID: '_sliderm_cont_',
		SLIDER_LIST_OFM_ID: '_sliderm_list_',
		SLIDER_LEFT_OFM_ID: '_sliderm_left_',
		SLIDER_RIGHT_OFM_ID: '_sliderm_right_',
		// offers
		TREE_ID: '_skudiv',
		TREE_ITEM_ID: '_prop_',
		DISPLAY_PROP_DIV: '_sku_prop',
		DISPLAY_PROP_ARTICLE_DIV: '_sku_article_prop',
		// quantity
		QUANTITY_ID: '_quantity',
		QUANTITY_UP_ID: '_quant_up',
		QUANTITY_DOWN_ID: '_quant_down',
		QUANTITY_MEASURE: '_quant_measure',
		QUANTITY_LIMIT: '_quant_limit',
		BASIS_PRICE: '_basis_price',
		// price and discount
		PRICE_ID: '_price',
		OLD_PRICE_ID: '_old_price',
		DISCOUNT_VALUE_ID: '_price_discount',
		DISCOUNT_PERC_ID: '_dsc_pict',
		// basket
		BASKET_PROP_DIV: '_basket_prop',
		BUY_ID: '_buy_link',
		BASKET_LINK: '_basket_link',
		ADD_BASKET_ID: '_add_basket_link',
		BASKET_ACTIONS_ID: '_basket_actions',
		NOT_AVAILABLE_MESS: '_not_avail',
		SUBSCRIBE_ID: '_subscribe_div',
		SUBSCRIBED_ID: '_subscribed_div',
		// magnifier
		MAGNIFIER_ID: '_magnifier',
		MAGNIFIER_AREA_ID: '_magnifier_area',
		// offer groups
		OFFER_GROUP: '_set_group_',
		// compare
		COMPARE_LINK_ID: '_compare_link'
	};

	this.visual = {};

	this.basketMode = '';
	this.product = {
		checkQuantity: false,
		maxQuantity: 0,
		stepQuantity: 1,
		startQuantity: 1,
		isDblQuantity: false,
		canBuy: true,
		canSubscription: true,
		name: '',
		pict: {},
		id: 0,
		addUrl: '',
		buyUrl: '',
		slider: {},
		sliderCount: 0,
		useSlider: false,
		sliderPict: []
	};
	this.mess = {};

	this.basketData = {
		useProps: false,
		emptyProps: false,
		quantity: 'quantity',
		props: 'prop',
		basketUrl: '',
		sku_props: '',
		sku_props_var: 'basket_props',
		add_url: '',
		buy_url: ''
	};
	this.compareData = {
		compareUrl: '',
		comparePath: ''
	};

	this.defaultPict = {
		preview: null,
		detail: null
	};

	this.offers = [];
	this.offerNum = 0;
	this.treeProps = [];
	this.obTreeRows = [];
	this.showCount = [];
	this.showStart = [];
	this.selectedValues = {};
	this.sliders = [];

	this.obProduct = null;
	this.obQuantity = null;
	this.obQuantityUp = null;
	this.obQuantityDown = null;
	this.obBasisPrice = null;
	this.obPict = null;
	this.obPictAligner = null;
	this.obPrice = {
		price: null,
		full: null,
		discount: null,
		percent: null
	};
	this.obTree = null;
	this.obBuyBtn = null;
	this.obBasketBtn = null;
	this.obAddToBasketBtn = null;
	this.obBasketActions = null;
	this.obNotAvail = null;
	this.obSkuProps = null;
	this.obSlider = null;
	this.obMeasure = null;
	this.obQuantityLimit = {
		all: null,
		value: null
	};
	this.obCompare = null;

	this.viewedCounter = {
		path: '/bitrix/components/bitrix/catalog.element/ajax.php',
		params: {
			AJAX: 'Y',
			SITE_ID: '',
			PRODUCT_ID: 0,
			PARENT_ID: 0
		}
	};

	this.currentImg = {
		src: '',
		width: 0,
		height: 0,
		screenWidth: 0,
		screenHeight: 0,
		screenOffsetX: 0,
		screenOffsetY: 0,
		scale: 1
	};
	this.currentBigImg = {
		src: '',
	}

	this.obPopupWin = null;
	this.basketUrl = '';
	this.basketParams = {};

	this.obPopupPict = null;
	this.magnify = {
		obMagnifier: null,
		obMagnifyPict: null,
		obMagnifyArea: null,
		obBigImg: null,
		obBigSlider: null,
		magnifyShow: false,
		areaParams : {
			width: 100,
			height: 130,
			left: 0,
			top: 0,
			scaleFactor: 1,
			globalLeft: 0,
			globalTop: 0,
			globalRight: 0,
			globalBottom: 0
		},
		magnifierParams: {
			top: 0,
			left: 0,
			width: 0,
			height: 0,
			ratioX: 10,
			ratioY: 13,
			defaultScale: 1
		},
		magnifyPictParams: {
			marginTop: 0,
			marginLeft: 0,
			width: 0,
			height: 0
		}
	};

	this.treeRowShowSize = 5;
	this.treeEnableArrow = { display: '', cursor: 'pointer', opacity: 1 };
	this.treeDisableArrow = { display: '', cursor: 'default', opacity: 0.2 };
	this.sliderRowShowSize = 5;
	this.sliderEnableArrow = { display: '', cursor: 'pointer', opacity: 1 };
	this.sliderDisableArrow = { display: '', cursor: 'default', opacity: 0.2 };

	this.errorCode = 0;
	if (typeof arParams === 'object')
	{
		this.params = arParams;
		this.initConfig();

		if (!!this.params.MESS)
		{
			this.mess = this.params.MESS;
		}
		switch (this.productType)
		{
			case 0:// no catalog
			case 1://product
			case 2://set
				this.initProductData();
				break;
			case 3://sku
				this.initOffersData();
				break;
			default:
				this.errorCode = -1;
		}

		this.initBasketData();
		this.initCompareData();
	}
	if (0 === this.errorCode)
	{
		BX.ready(BX.delegate(this.Init,this));
	}
	this.params = {};
};

window.JCCatalogElementFast.prototype.Init = function()
{
	var i = 0,
		j = 0,
		strPrefix = '',
		SliderImgs = null,
		TreeItems = null;

	this.obProduct = BX(this.visual.ID);
	if (!this.obProduct)
	{
		this.errorCode = -1;
	}
	this.obPict = BX(this.visual.PICT_ID);
	if (!this.obPict)
	{
		this.errorCode = -2;
	}
	else
	{
		this.obPictAligner = this.obPict.parentNode;
	}

	if (this.config.showPrice)
	{
		this.obPrice.price = BX(this.visual.PRICE_ID);
		if (!this.obPrice.price && this.config.useCatalog)
		{
			this.errorCode = -16;
		}
		else
		{
			if (this.config.showOldPrice)
			{
				this.obPrice.full = BX(this.visual.OLD_PRICE_ID);
				this.obPrice.discount = BX(this.visual.DISCOUNT_VALUE_ID);
				if(!!this.obPrice.full)
					BX.adjust(this.obPrice.full, {style: {display: 'none'}, html: ''});
				/*if (!this.obPrice.full || !this.obPrice.discount)
				{
					this.config.showOldPrice = false;
				}*/
			}
			if (this.config.showPercent)
			{
				this.obPrice.percent = BX(this.visual.DISCOUNT_PERC_ID);
				/*if (!this.obPrice.percent)
				{
					this.config.showPercent = false;
				}*/
			}
		}
		this.obBasketActions = BX(this.visual.BASKET_ACTIONS_ID);
		if (!!this.obBasketActions)
		{
			if (BX.util.in_array('BUY', this.config.basketAction))
			{
				this.obBuyBtn = BX(this.visual.BUY_ID);
			}
			if (BX.util.in_array('ADD', this.config.basketAction))
			{
				this.obAddToBasketBtn = BX(this.visual.BUY_ID);
			}
			if (!!this.visual.BASKET_LINK)
			{
				this.obBasketBtn = BX(this.visual.BASKET_LINK);
			}

		}
		this.obNotAvail = BX(this.visual.NOT_AVAILABLE_MESS);
	}

	if (this.config.showQuantity)
	{
		this.obQuantity = BX(this.visual.QUANTITY_ID);
		if (!!this.visual.QUANTITY_UP_ID)
		{
			this.obQuantityUp = BX(this.visual.QUANTITY_UP_ID);
		}
		if (!!this.visual.QUANTITY_DOWN_ID)
		{
			this.obQuantityDown = BX(this.visual.QUANTITY_DOWN_ID);
		}
		if (this.config.showBasisPrice)
		{
			this.obBasisPrice = BX(this.visual.BASIS_PRICE);
		}
	}
	if (3 === this.productType)
	{
		if (!!this.visual.TREE_ID)
		{
			this.obTree = BX(this.visual.TREE_ID);
			if (!this.obTree)
			{
				this.errorCode = -256;
			}
			strPrefix = this.visual.TREE_ITEM_ID;
			for (i = 0; i < this.treeProps.length; i++)
			{
				this.obTreeRows[i] = {
					LEFT: BX(strPrefix+this.treeProps[i].ID+'_left'),
					RIGHT: BX(strPrefix+this.treeProps[i].ID+'_right'),
					LIST: BX(strPrefix+this.treeProps[i].ID+'_list'),
					CONT: BX(strPrefix+this.treeProps[i].ID+'_cont')
				};
				if (!this.obTreeRows[i].LIST || !this.obTreeRows[i].CONT)
				{
					this.errorCode = -512;
					break;
				}
			}
		}
		if (!!this.visual.QUANTITY_MEASURE)
		{
			this.obMeasure = BX(this.visual.QUANTITY_MEASURE);
		}
		if (!!this.visual.QUANTITY_LIMIT)
		{
			this.obQuantityLimit.all = BX(this.visual.QUANTITY_LIMIT);
			if (!!this.obQuantityLimit.all)
			{
				this.obQuantityLimit.value = BX.findChild(this.obQuantityLimit.all, {tagName: 'span'}, false, false);
				if (!this.obQuantityLimit.value)
				{
					this.obQuantityLimit.all = null;
				}
			}
		}
	}

	if (this.config.showSkuProps)
	{
		if (!!this.visual.DISPLAY_PROP_DIV)
		{
			this.obSkuProps = BX(this.visual.DISPLAY_PROP_DIV);
		}
		if (!!this.visual.DISPLAY_PROP_ARTICLE_DIV)
		{
			this.obSkuArticleProps = BX(this.visual.DISPLAY_PROP_ARTICLE_DIV);
		}

	}

	if (this.config.useCompare)
	{
		this.obCompare = BX(this.visual.COMPARE_LINK_ID);
	}
	if (0 === this.errorCode)
	{

		if (this.config.showQuantity)
		{
			if (!!this.obQuantityUp)
			{
				BX.bind(this.obQuantityUp, 'click', BX.delegate(this.QuantityUp, this));
			}
			if (!!this.obQuantityDown)
			{
				BX.bind(this.obQuantityDown, 'click', BX.delegate(this.QuantityDown, this));
			}
			if (!!this.obQuantity)
			{
				BX.bind(this.obQuantity, 'change', BX.delegate(this.QuantityChange, this));
			}
		}
		switch (this.productType)
		{
			case 0://no catalog
			case 1://product
			case 2://set
				if (this.product.useSlider)
				{
					this.product.slider = {
						COUNT: this.product.sliderCount,
						ID: this.visual.SLIDER_CONT,
						CONT: BX(this.visual.SLIDER_CONT),
						LIST: BX(this.visual.SLIDER_LIST),
						LEFT: BX(this.visual.SLIDER_LEFT),
						RIGHT: BX(this.visual.SLIDER_RIGHT),
						START: 0
					};
					SliderImgs = BX.findChildren(this.product.slider.LIST, {tagName: 'li'}, true);
					if (!!SliderImgs && 0 < SliderImgs.length)
					{
						for (j = 0; j < SliderImgs.length; j++)
						{
							BX.bind(SliderImgs[j], 'click', BX.delegate(this.ProductSelectSliderImg, this));
						}
					}
					if (!!this.product.slider.LEFT)
					{
						BX.bind(this.product.slider.LEFT, 'click', BX.delegate(this.ProductSliderRowLeft, this));
						BX.adjust(this.product.slider.LEFT, { style: this.sliderDisableArrow } );

					}
					if (!!this.product.slider.RIGHT)
					{
						BX.bind(this.product.slider.RIGHT, 'click', BX.delegate(this.ProductSliderRowRight, this));
						BX.adjust(this.product.slider.RIGHT, { style: this.sliderEnableArrow } );
					}
					this.setCurrentImg(this.product.sliderPict[0], true);
				}
				break;
			case 3://sku
				for(var key in this.skuVisualParams){
					var TreeItems = BX.findChildren(this.obTree, {tagName: this.skuVisualParams[key].TAG_BIND}, true);
					if (!!TreeItems && 0 < TreeItems.length){
						for (i = 0; i < TreeItems.length; i++){
							$(TreeItems[i]).on(this.skuVisualParams[key].EVENT, BX.delegate(this.SelectOfferProp, this));
							//BX.bind(TreeItems[i], this.skuVisualParams[key].EVENT, BX.delegate(this.SelectOfferProp, this));
						}
					}
				}
				for (i = 0; i < this.offers.length; i++)
				{
					this.offers[i].SLIDER_COUNT = parseInt(this.offers[i].SLIDER_COUNT, 10);
					if (isNaN(this.offers[i].SLIDER_COUNT))
					{
						this.offers[i].SLIDER_COUNT = 0;
					}
					if (0 === this.offers[i].SLIDER_COUNT)
					{
						this.sliders[i] = {
							COUNT: this.offers[i].SLIDER_COUNT,
							ID: ''
						};
					}
					else
					{
						for (j = 0; j < this.offers[i].SLIDER.length; j++)
						{
							this.offers[i].SLIDER[j].WIDTH = parseInt(this.offers[i].SLIDER[j].WIDTH, 10);
							this.offers[i].SLIDER[j].HEIGHT = parseInt(this.offers[i].SLIDER[j].HEIGHT, 10);
						}
						this.sliders[i] = {
							COUNT: this.offers[i].SLIDER_COUNT,
							OFFER_ID: this.offers[i].ID,
							ID: this.visual.SLIDER_CONT_OF_ID+this.offers[i].ID,
							CONT: BX(this.visual.SLIDER_CONT_OF_ID+this.offers[i].ID),
							LIST: BX(this.visual.SLIDER_LIST_OF_ID+this.offers[i].ID),
							CONT_M: BX(this.visual.SLIDER_CONT_OFM_ID+this.offers[i].ID),
							LIST_M: BX(this.visual.SLIDER_LIST_OFM_ID+this.offers[i].ID),
							LEFT: BX(this.visual.SLIDER_LEFT_OF_ID+this.offers[i].ID),
							RIGHT: BX(this.visual.SLIDER_RIGHT_OF_ID+this.offers[i].ID),
							START: 0
						};
						SliderImgs = BX.findChildren(this.sliders[i].LIST, {tagName: 'li'}, true);
						if (!!SliderImgs && 0 < SliderImgs.length)
						{
							for (j = 0; j < SliderImgs.length; j++)
							{
								BX.bind(SliderImgs[j], 'click', BX.delegate(this.SelectSliderImg, this));
							}
						}
						if (!!this.sliders[i].LEFT)
						{
							BX.bind(this.sliders[i].LEFT, 'click', BX.delegate(this.SliderRowLeft, this));
						}
						if (!!this.sliders[i].RIGHT)
						{
							BX.bind(this.sliders[i].RIGHT, 'click', BX.delegate(this.SliderRowRight, this));
						}
					}
				}
				this.SetCurrent();

				break;
		}

		if (!!this.obBuyBtn)
		{
			BX.bind(this.obBuyBtn, 'click', BX.proxy(this.BuyBasket, this));
		}
		if (!!this.obAddToBasketBtn)
		{
			BX.bind(this.obAddToBasketBtn, 'click', BX.proxy(this.Add2Basket, this));
		}
		if (!!this.obCompare)
		{
			BX.bind(this.obCompare, 'click', BX.proxy(this.Compare, this));
		}

		this.setMainPictHandler();
		setTimeout(function(){
			$('.offers_img.wof').css('opacity', 1);
		},400);
	}
};

window.JCCatalogElementFast.prototype.initConfig = function()
{
	this.productType = parseInt(this.params.PRODUCT_TYPE, 10);
	if (!!this.params.CONFIG && typeof(this.params.CONFIG) === 'object')
	{

		if (this.params.CONFIG.USE_CATALOG !== 'undefined' && BX.type.isBoolean(this.params.CONFIG.USE_CATALOG))
		{
			this.config.useCatalog = this.params.CONFIG.USE_CATALOG;
		}
		this.config.showQuantity = !!this.params.CONFIG.SHOW_QUANTITY;
		this.config.showPrice = !!this.params.CONFIG.SHOW_PRICE;
		this.config.showPercent = !!this.params.CONFIG.SHOW_DISCOUNT_PERCENT;
		this.config.showOldPrice = !!this.params.CONFIG.SHOW_OLD_PRICE;
		this.config.showSkuProps = !!this.params.CONFIG.SHOW_SKU_PROPS;
		this.config.showOfferGroup = !!this.params.CONFIG.OFFER_GROUP;
		this.config.useCompare = !!this.params.CONFIG.DISPLAY_COMPARE;
		this.config.offerShowPreviewPictureProps = this.params.OFFER_SHOW_PREVIEW_PICTURE_PROPS;
		if (!!this.params.CONFIG.MAIN_PICTURE_MODE)
		{
			this.config.mainPictureMode = this.params.CONFIG.MAIN_PICTURE_MODE;
		}
		this.config.showBasisPrice = !!this.params.CONFIG.SHOW_BASIS_PRICE;
		if (!!this.params.CONFIG.ADD_TO_BASKET_ACTION)
		{
			this.config.basketAction = this.params.CONFIG.ADD_TO_BASKET_ACTION;
		}
		this.config.showClosePopup = !!this.params.CONFIG.SHOW_CLOSE_POPUP;
	}
	else
	{
		// old version
		if (this.params.USE_CATALOG !== 'undefined' && BX.type.isBoolean(this.params.USE_CATALOG))
		{
			this.config.useCatalog = this.params.USE_CATALOG;
		}
		this.config.showQuantity = !!this.params.SHOW_QUANTITY;
		this.config.showPrice = !!this.params.SHOW_PRICE;
		this.config.showPercent = !!this.params.SHOW_DISCOUNT_PERCENT;
		this.config.showOldPrice = !!this.params.SHOW_OLD_PRICE;
		this.config.showSkuProps = !!this.params.SHOW_SKU_PROPS;
		this.config.showOfferGroup = !!this.params.OFFER_GROUP;
		this.config.useCompare = !!this.params.DISPLAY_COMPARE;
		if (!!this.params.MAIN_PICTURE_MODE)
		{
			this.config.mainPictureMode = this.params.MAIN_PICTURE_MODE;
		}
		this.config.showBasisPrice = !!this.params.SHOW_BASIS_PRICE;
		if (!!this.params.ADD_TO_BASKET_ACTION)
		{
			this.config.basketAction = this.params.ADD_TO_BASKET_ACTION;
		}
		this.config.showClosePopup = !!this.params.SHOW_CLOSE_POPUP;
	}

	if (!this.params.VISUAL || typeof(this.params.VISUAL) !== 'object' || !this.params.VISUAL.ID)
	{
		this.errorCode = -1;
		return;
	}
	this.visual.ID = this.params.VISUAL.ID;
	this.basketLinkURL = this.params.BASKET.BASKET_URL;
	this.defaultCount = this.params.DEFAULT_COUNT;
	this.storeQuanity = BX(this.params.STORE_QUANTITY);
	this.initVisualParams('main');
	if (this.config.showQuantity)
	{
		this.initVisualParams('quantity');
	}
	if (this.config.showPrice)
	{
		this.initVisualParams('price');
	}
	if (this.config.showOldPrice)
	{
		this.initVisualParams('oldPrice');
	}
	if (this.config.showPercent)
	{
		this.initVisualParams('discountPerc');
	}
	this.initVisualParams('basket');
	if (this.config.mainPictureMode === 'MAGNIFIER')
	{
		this.initVisualParams('magnifier');
	}
	if (this.config.useCompare)
	{
		this.initVisualParams('compare');
	}
};

window.JCCatalogElementFast.prototype.initVisualParams = function(ID)
{
	var i = 0,
		key = '';

	if (!this.listID[ID])
	{
		this.errorCode = -1;
		return;
	}
	for (i = 0; i < this.listID[ID].length; i++)
	{
		key = this.listID[ID][i];
		this.visual[key] = (!!this.params.VISUAL[key] ? this.params.VISUAL[key] : this.visual.ID+this.visualPostfix[key]);
	}
};

window.JCCatalogElementFast.prototype.initProductData = function()
{
	var j = 0;
	this.initVisualParams('productSlider');
	if (!!this.params.PRODUCT && 'object' === typeof(this.params.PRODUCT))
	{
		if (this.config.showQuantity)
		{
			this.product.checkQuantity = this.params.PRODUCT.CHECK_QUANTITY;
			this.product.isDblQuantity = this.params.PRODUCT.QUANTITY_FLOAT;
			if (this.product.checkQuantity)
			{
				this.product.maxQuantity = (this.product.isDblQuantity ? parseFloat(this.params.PRODUCT.MAX_QUANTITY) : parseInt(this.params.PRODUCT.MAX_QUANTITY, 10));
			}
			this.product.stepQuantity = (this.product.isDblQuantity ? parseFloat(this.params.PRODUCT.STEP_QUANTITY) : parseInt(this.params.PRODUCT.STEP_QUANTITY, 10));

			this.checkQuantity = this.product.checkQuantity;
			this.isDblQuantity = this.product.isDblQuantity;
			this.maxQuantity = this.product.maxQuantity;
			this.stepQuantity = this.product.stepQuantity;
			if (this.isDblQuantity)
			{
				this.stepQuantity = Math.round(this.stepQuantity*this.precisionFactor)/this.precisionFactor;
			}
		}
		this.product.canBuy = this.params.PRODUCT.CAN_BUY;
		this.product.canSubscription = this.params.PRODUCT.SUBSCRIPTION;
		if (this.config.showPrice)
		{
			this.currentBasisPrice = this.params.PRODUCT.BASIS_PRICE;
		}

		this.canBuy = this.product.canBuy;
		this.canSubscription = this.product.canSubscription;

		this.product.name = this.params.PRODUCT.NAME;
		this.product.pict = this.params.PRODUCT.PICT;
		this.product.id = this.params.PRODUCT.ID;

		if (!!this.params.PRODUCT.ADD_URL)
		{
			this.product.addUrl = this.params.PRODUCT.ADD_URL;
		}
		if (!!this.params.PRODUCT.BUY_URL)
		{
			this.product.buyUrl = this.params.PRODUCT.BUY_URL;
		}

		if (!!this.params.PRODUCT.SLIDER_COUNT)
		{
			this.product.sliderCount = parseInt(this.params.PRODUCT.SLIDER_COUNT, 10);
			if (isNaN(this.product.sliderCount))
			{
				this.product.sliderCount = 0;
			}
			if (0 < this.product.sliderCount && !!this.params.PRODUCT.SLIDER.length && 0 < this.params.PRODUCT.SLIDER.length)
			{
				for (j = 0; j < this.params.PRODUCT.SLIDER.length; j++)
				{
					this.product.useSlider = true;
					this.params.PRODUCT.SLIDER[j].WIDTH = parseInt(this.params.PRODUCT.SLIDER[j].WIDTH, 10);
					this.params.PRODUCT.SLIDER[j].HEIGHT = parseInt(this.params.PRODUCT.SLIDER[j].HEIGHT, 10);
				}
				this.product.sliderPict = this.params.PRODUCT.SLIDER;
				this.setCurrentImg(this.product.sliderPict[0], false);
			}
		}
		this.currentIsSet = true;
	}
	else
	{
		this.errorCode = -1;
	}
};

window.JCCatalogElementFast.prototype.initOffersData = function()
{
	this.initVisualParams('offerSlider');
	this.initVisualParams('offerSliderMobile');
	this.initVisualParams('offers');
	if (!!this.params.OFFERS && BX.type.isArray(this.params.OFFERS))
	{
		this.offers = this.params.OFFERS;
		this.offerNum = 0;
		if (!!this.params.OFFER_SELECTED)
		{
			this.offerNum = parseInt(this.params.OFFER_SELECTED, 10);
			if('offers' in this)
			{
				if(this.offers.length)
				{
					var objUrl = parseUrlQuery(),
						sku_params = this.params.SKU_DETAIL_ID,
						sku_id = 0;
					if('oid' in objUrl)
						sku_id = objUrl.oid;
					if(sku_id)
					{
						for(var i in this.offers)
						{
							if(this.offers[i].ID == sku_id)
								this.offerNum = parseInt(i, 10);

						}
					}
				}
			}
		}
		if (isNaN(this.offerNum))
		{
			this.offerNum = 0;
		}
		if (!!this.params.TREE_PROPS)
		{
			this.treeProps = this.params.TREE_PROPS;
		}
		if (!!this.params.DEFAULT_PICTURE)
		{
			this.defaultPict.preview = this.params.DEFAULT_PICTURE.PREVIEW_PICTIRE;
			this.defaultPict.detail = this.params.DEFAULT_PICTURE.DETAIL_PICTURE;
		}
		if (!!this.params.PRODUCT && typeof(this.params.PRODUCT) === 'object')
		{
			this.product.id = parseInt(this.params.PRODUCT.ID, 10);
			this.product.name = this.params.PRODUCT.NAME;
		}
	}
	else
	{
		this.errorCode = -1;
	}
};

window.JCCatalogElementFast.prototype.initBasketData = function()
{
	if (!!this.params.BASKET && 'object' === typeof(this.params.BASKET))
	{
		if (1 === this.productType || 2 === this.productType)
		{
			this.basketData.useProps = !!this.params.BASKET.ADD_PROPS;
			this.basketData.emptyProps = !!this.params.BASKET.EMPTY_PROPS;
		}

		if (!!this.params.BASKET.QUANTITY)
		{
			this.basketData.quantity = this.params.BASKET.QUANTITY;
		}
		if (!!this.params.BASKET.PROPS)
		{
			this.basketData.props = this.params.BASKET.PROPS;
		}
		if (!!this.params.BASKET.BASKET_URL)
		{
			this.basketData.basketUrl = this.params.BASKET.BASKET_URL;
		}
		if (3 === this.productType)
		{
			if (!!this.params.BASKET.SKU_PROPS)
			{
				this.basketData.sku_props = this.params.BASKET.SKU_PROPS;
			}
		}
		if (!!this.params.BASKET.ADD_URL_TEMPLATE)
		{
			this.basketData.add_url = this.params.BASKET.ADD_URL_TEMPLATE;
		}
		if (!!this.params.BASKET.BUY_URL_TEMPLATE)
		{
			this.basketData.buy_url = this.params.BASKET.BUY_URL_TEMPLATE;
		}
		if (this.basketData.add_url === '' && this.basketData.buy_url === '')
		{
			this.errorCode = -1024;
		}
	}
};

window.JCCatalogElementFast.prototype.initCompareData = function()
{
	if (this.config.useCompare)
	{
		if (!!this.params.COMPARE && typeof(this.params.COMPARE) === 'object')
		{
			if (!!this.params.COMPARE.COMPARE_PATH)
			{
				this.compareData.comparePath = this.params.COMPARE.COMPARE_PATH;
			}
			if (!!this.params.COMPARE.COMPARE_URL_TEMPLATE_DEL)
			{
				this.compareData.compareUrlDel = this.params.COMPARE.COMPARE_URL_TEMPLATE_DEL;
			}
			if (!!this.params.COMPARE.COMPARE_URL_TEMPLATE)
			{
				this.compareData.compareUrl = this.params.COMPARE.COMPARE_URL_TEMPLATE;
			}
			else
			{
				this.config.useCompare = false;
			}
		}
		else
		{
			this.config.useCompare = false;
		}
	}
};

window.JCCatalogElementFast.prototype.setMainPictHandler = function()
{
	switch (this.config.mainPictureMode)
	{
		case 'GALLERY':
			break;
		case 'MAGNIFIER':
			$(this.obPict).addClass('zoom_picture');
			InitZoomPict();
			break;
		case 'POPUP':
			$(this.obPict).parent().addClass('fancy_offer');
			break;
		default:
			break;
	}
};

window.JCCatalogElementFast.prototype.setCurrentImg = function(img, showImage)
{
	showImage = !!showImage;
	if('SMALL' in img){
		this.currentImg.src = img.SMALL.src;
	}else if ('SRC' in img) {
		this.currentImg.src = img.SRC
	};
	if('BIG' in img){
		this.currentBigImg.src = img.BIG.src;
	}
	if('WIDTH' in img){
		this.currentImg.width = img.WIDTH;
	}
	if('HEIGHT' in img){
		this.currentImg.height = img.HEIGHT;
	}
	if (showImage && !!this.obPict)
	{
		if (this.config.mainPictureMode === 'MAGNIFIER')
		{
			if('src' in this.currentBigImg){
				$(this.obPict).attr('data-large',this.currentBigImg.src);
				$(this.obPict).attr('xoriginal',this.currentBigImg.src);
			}
			if('src' in this.currentImg)
				$(this.obPict).attr('xpreview',this.currentImg.src);
		}
		if('src' in this.currentImg){
			if (this.currentImg.src){
				BX.adjust(this.obPict, { props: { src: this.currentImg.src } });
			}
		}
		if('src' in this.currentBigImg){
			if (this.currentBigImg.src){
				if(this.config.mainPictureMode === 'POPUP'){
					$(this.obPict).parent().attr('href',this.currentBigImg.src);
				}
				/*$(this.obPict).parent().attr('title',img.TITLE);
				$(this.obPict).parent().attr('alt',img.ALT);
				$(this.obPict).attr('title',img.TITLE);
				$(this.obPict).attr('alt',img.ALT);*/
			}
		}

	}
};

window.JCCatalogElementFast.prototype.scaleImg = function(src, dest)
{
	var
		scaleX,
		scaleY,
		scale,
		result = {};

	if (dest.width >= src.width && dest.height >= src.height)
	{
		result.width = src.width;
		result.height = src.height;
	}
	else
	{
		scaleX = dest.width/src.width;
		scaleY = dest.height/src.height;
		scale =  Math.min(scaleX, scaleY);
		result.width = Math.max(1, parseInt(scale*src.width , 10));
		result.height = Math.max(1, parseInt(scale*src.height , 10));
	}
	return result;
};

window.JCCatalogElementFast.prototype.showMagnifier = function(e)
{
	if (!this.magnify.magnifyShow)
	{
		this.calcMagnifierParams();
		this.calcMagnifyAreaSize();
		this.calcMagnifyAreaPos(e);
		this.calcMagnifyPictSize();
		this.calcMagnifyPictPos();
		this.setMagnifyAreaParams(true);
		this.setMagnifyPictParams(true);
		this.setMagnifierParams(true);
		BX.bind(document, 'mousemove', BX.proxy(this.moveMagnifierArea, this));
	}
};

window.JCCatalogElementFast.prototype.hideMagnifier = function()
{
	if (!this.magnify.magnifyShow)
	{
		if (!!this.magnify.obMagnifier)
		{
			BX.adjust(this.magnify.obMagnifier, { style: { display: 'none' } });
		}
		if (!!this.magnify.obMagnifyArea)
		{
			BX.adjust(this.magnify.obMagnifyArea, { style: { display: 'none' } });
		}
		BX.unbind(document, 'mousemove', BX.proxy(this.moveMagnifierArea, this));
	}
};

window.JCCatalogElementFast.prototype.moveMagnifierArea = function(e)
{
	var
		currentPos = {
			X: 0,
			Y: 0
		},
		posBigImg = BX.pos(this.obPict),
		intersect = {},
		params = {},
		paramsPict = {};

	currentPos = this.inRect(e, posBigImg);
	if (this.inBound(posBigImg, currentPos))
	{
		intersect = this.intersectArea(currentPos, posBigImg);
		switch (intersect.X)
		{
			case -1:
				this.magnify.areaParams.left = this.currentImg.screenOffsetX;
				break;
			case 0:
				this.magnify.areaParams.left = this.currentImg.screenOffsetX + currentPos.X - (this.magnify.areaParams.width >>> 1);
				break;
			case 1:
				this.magnify.areaParams.left = this.currentImg.screenOffsetX + posBigImg.width - this.magnify.areaParams.width;
				break;
		}
		switch (intersect.Y)
		{
			case -1:
				this.magnify.areaParams.top = 0;
				break;
			case 0:
				this.magnify.areaParams.top = currentPos.Y - (this.magnify.areaParams.height >>> 1);
				break;
			case 1:
				this.magnify.areaParams.top = posBigImg.height - this.magnify.areaParams.height;
				break;
		}
		this.magnify.magnifyPictParams.marginLeft = -parseInt(((this.magnify.areaParams.left-this.currentImg.screenOffsetX)*this.currentImg.scale), 10);
		this.magnify.magnifyPictParams.marginTop = -parseInt(((this.magnify.areaParams.top)*this.currentImg.scale), 10);
		params.left = this.magnify.areaParams.left+'px';
		params.top = this.magnify.areaParams.top+'px';
		BX.adjust(this.magnify.obMagnifyArea, { style: params });
		paramsPict.marginLeft = this.magnify.magnifyPictParams.marginLeft+'px';
		paramsPict.marginTop = this.magnify.magnifyPictParams.marginTop+'px';
		BX.adjust(this.magnify.obMagnifyPict, { style: paramsPict });
	}
	else
	{
		this.outMagnifierArea();
		this.hideMagnifier();
	}
};

window.JCCatalogElementFast.prototype.onMagnifierArea = function()
{
	this.magnify.magnifyShow = true;
};

window.JCCatalogElementFast.prototype.outMagnifierArea = function()
{
	this.magnify.magnifyShow = false;
};

window.JCCatalogElementFast.prototype.calcMagnifierParams = function()
{
	if (!!this.magnify.obBigImg)
	{
		var pos = BX.pos(this.magnify.obBigImg, true);

		this.magnify.magnifierParams.width = pos.width;
		this.magnify.magnifierParams.height = pos.height;
		this.magnify.magnifierParams.top = pos.top;
		this.magnify.magnifierParams.left = pos.left + pos.width + 2;
	}
};

window.JCCatalogElementFast.prototype.setMagnifierParams = function(show)
{
	if (!!this.magnify.obMagnifier)
	{
		show = !!show;
		var params = {
			top: this.magnify.magnifierParams.top+'px',
			left: this.magnify.magnifierParams.left+'px',
			width: this.magnify.magnifierParams.width+'px',
			height: this.magnify.magnifierParams.height+'px'
		};
		if (show)
		{
			params.display = '';
		}
		BX.adjust(this.magnify.obMagnifier, { style: params });
	}
};

window.JCCatalogElementFast.prototype.setMagnifyAreaParams = function(show)
{
	if (!!this.magnify.obMagnifier)
	{
		show = !!show;
		var params = {
			top: this.magnify.areaParams.top+'px',
			left: this.magnify.areaParams.left+'px',
			width: this.magnify.areaParams.width+'px',
			height: this.magnify.areaParams.height+'px'
		};
		if (show)
		{
			params.display = '';
		}
		BX.adjust(this.magnify.obMagnifyArea, { style: params });
	}
};

window.JCCatalogElementFast.prototype.calcMagnifyAreaPos = function(e)
{
	var currentPos,
		posBigImg,
		intersect;

	posBigImg = BX.pos(this.obPict);
	currentPos = this.inRect(e, posBigImg);
	if (this.inBound(posBigImg, currentPos))
	{
		intersect = this.intersectArea(currentPos, posBigImg);
		switch (intersect.X)
		{
			case -1:
				this.magnify.areaParams.left = this.currentImg.screenOffsetX;
				break;
			case 0:
				this.magnify.areaParams.left = this.currentImg.screenOffsetX + currentPos.X - (this.magnify.areaParams.width >>> 1);
				break;
			case 1:
				this.magnify.areaParams.left = this.currentImg.screenOffsetX + posBigImg.width - this.magnify.areaParams.width;
				break;
		}
		switch (intersect.Y)
		{
			case -1:
				this.magnify.areaParams.top = 0;
				break;
			case 0:
				this.magnify.areaParams.top = currentPos.Y - (this.magnify.areaParams.height >>> 1);
				break;
			case 1:
				this.magnify.areaParams.top = posBigImg.height - this.magnify.areaParams.height;
				break;
		}
	}
};

window.JCCatalogElementFast.prototype.inBound = function(rect, point)
{
	return ((0 <= point.Y && rect.height >= point.Y) && (0 <= point.X && rect.width >= point.X));
};

window.JCCatalogElementFast.prototype.inRect = function(e, rect)
{
	var wndSize = BX.GetWindowSize(),
		currentPos = {
			X: 0,
			Y: 0,
			globalX: 0,
			globalY: 0
		};

	currentPos.globalX = e.clientX + wndSize.scrollLeft;
	currentPos.X = currentPos.globalX - rect.left;
	currentPos.globalY = e.clientY + wndSize.scrollTop;
	currentPos.Y = currentPos.globalY - rect.top;
	return currentPos;
};

window.JCCatalogElementFast.prototype.intersectArea = function(currentPos, rect)
{
	var intersect = {
			X: 0,
			Y: 0
		},
		halfX = this.magnify.areaParams.width >>> 1,
		halfY = this.magnify.areaParams.height >>> 1;

	if (currentPos.X <= halfX)
	{
		intersect.X = -1;
	}
	else if (currentPos.X >= (rect.width - halfX))
	{
		intersect.X = 1;
	}
	else
	{
		intersect.X = 0;
	}
	if (currentPos.Y <= halfY)
	{
		intersect.Y = -1;
	}
	else if (currentPos.Y >= (rect.height - halfY))
	{
		intersect.Y = 1;
	}
	else
	{
		intersect.Y = 0;
	}

	return intersect;
};

window.JCCatalogElementFast.prototype.calcMagnifyAreaSize = function()
{
	var scaleX,
		scaleY,
		scale;

	if (
		this.magnify.magnifierParams.width < this.currentImg.width &&
			this.magnify.magnifierParams.height < this.currentImg.height
		)
	{
		scaleX = this.magnify.obBigImg.offsetWidth/this.currentImg.width;
		scaleY = this.magnify.obBigImg.offsetHeight/this.currentImg.height;
		scale =  Math.min(scaleX, scaleY);
		this.currentImg.scale = 1/scale;
		this.magnify.areaParams.width = Math.max(1, parseInt(scale*this.magnify.magnifierParams.width , 10));
		this.magnify.areaParams.height = Math.max(1, parseInt(scale*this.magnify.magnifierParams.height , 10));
		this.magnify.areaParams.scaleFactor = this.magnify.magnifierParams.defaultScale;
	}
	else
	{
		scaleX = this.obPict.offsetWidth/this.magnify.obBigImg.offsetWidth;
		scaleY = this.obPict.offsetHeight/this.magnify.obBigImg.offsetHeight;
		scale =  Math.min(scaleX, scaleY);
		this.currentImg.scale = 1/scale;
		this.magnify.areaParams.width = Math.max(1, parseInt(scale*this.magnify.magnifierParams.width , 10));
		this.magnify.areaParams.height = Math.max(1, parseInt(scale*this.magnify.magnifierParams.height , 10));

		scaleX = this.magnify.magnifierParams.width/this.currentImg.width;
		scaleY = this.magnify.magnifierParams.height/this.currentImg.height;
		scale = Math.max(scaleX, scaleY);
		this.magnify.areaParams.scaleFactor = scale;
	}
};

window.JCCatalogElementFast.prototype.calcMagnifyPictSize = function()
{
	this.magnify.magnifyPictParams.width = this.currentImg.width*this.magnify.areaParams.scaleFactor;
	this.magnify.magnifyPictParams.height = this.currentImg.height*this.magnify.areaParams.scaleFactor;
};

window.JCCatalogElementFast.prototype.calcMagnifyPictPos = function()
{
	this.magnify.magnifyPictParams.marginLeft = -parseInt(((this.magnify.areaParams.left-this.currentImg.screenOffsetX)*this.currentImg.scale), 10);
	this.magnify.magnifyPictParams.marginTop = -parseInt(((this.magnify.areaParams.top)*this.currentImg.scale), 10);
};

window.JCCatalogElementFast.prototype.setMagnifyPictParams = function(show)
{
	if (!!this.magnify.obMagnifier)
	{
		show = !!show;
		var params = {
			width: this.magnify.magnifyPictParams.width+'px',
			height: this.magnify.magnifyPictParams.height+'px',
			marginTop: this.magnify.magnifyPictParams.marginTop+'px',
			marginLeft: this.magnify.magnifyPictParams.marginLeft+'px'
		};
		if (show)
		{
			params.display = '';
		}
		BX.adjust(this.magnify.obMagnifyPict, { style: params, props: { src: this.currentImg.src } });
	}
};

window.JCCatalogElementFast.prototype.ProductSliderRowLeft = function()
{
	var target = BX.proxy_context;
	if (!!target)
	{
		if (this.sliderRowShowSize < this.product.slider.COUNT)
		{
			if (0 > this.product.slider.START)
			{
				this.product.slider.START++;
				BX.adjust(this.product.slider.LIST, { style: { marginLeft: this.product.slider.START*20+'%' }});
				BX.adjust(this.product.slider.RIGHT, { style: this.sliderEnableArrow });
			}

			if (0 <= this.product.slider.START)
			{
				BX.adjust(this.product.slider.LEFT, { style: this.sliderDisableArrow });
			}
		}
	}
};

window.JCCatalogElementFast.prototype.ProductSliderRowRight = function()
{
	var target = BX.proxy_context;
	if (!!target)
	{
		if (this.sliderRowShowSize < this.product.slider.COUNT)
		{
			if ((this.sliderRowShowSize - this.product.slider.START) < this.product.slider.COUNT)
			{
				this.product.slider.START--;
				BX.adjust(this.product.slider.LIST, { style: { marginLeft: this.product.slider.START*20+'%' }});
				BX.adjust(this.product.slider.LEFT, { style: this.sliderEnableArrow } );
			}

			if ((this.sliderRowShowSize - this.product.slider.START) >= this.product.slider.COUNT)
			{
				BX.adjust(this.product.slider.RIGHT, { style: this.sliderDisableArrow } );
			}
		}
	}
};

window.JCCatalogElementFast.prototype.ProductSelectSliderImg = function()
{
	var strValue = '',
		target = BX.proxy_context;
	if (!!target && target.hasAttribute('data-value'))
	{
		strValue = target.getAttribute('data-value');
		this.SetProductMainPict(strValue);
	}
};

window.JCCatalogElementFast.prototype.SetProductMainPict = function(intPict)
{
	var indexPict = -1,
		i = 0,
		j = 0,
		value = '',
		strValue = '',
		RowItems = null;
	if (0 < this.product.sliderCount)
	{
		for (j = 0; j < this.product.sliderPict.length; j++)
		{
			if (intPict === this.product.sliderPict[j].ID)
			{
				indexPict = j;
				break;
			}
		}
		if (-1 < indexPict)
		{
			if (!!this.product.sliderPict[indexPict])
			{
				this.setCurrentImg(this.product.sliderPict[indexPict], true);
			}
			RowItems = BX.findChildren(this.product.slider.LIST, {tagName: 'li'}, false);
			if (!!RowItems && 0 < RowItems.length)
			{
				strValue = intPict;
				for (i = 0; i < RowItems.length; i++)
				{
					value = RowItems[i].getAttribute('data-value');
					if (value === strValue)
					{
						BX.addClass(RowItems[i], 'active');
					}
					else
					{
						BX.removeClass(RowItems[i], 'active');
					}
				}
			}
		}
	}
};

window.JCCatalogElementFast.prototype.SliderRowLeft = function()
{
	var strValue = '',
		index = -1,
		i,
		target = BX.proxy_context;
	if (!!target && target.hasAttribute('data-value'))
	{
		strValue = target.getAttribute('data-value');
		for (i = 0; i < this.sliders.length; i++)
		{
			if (this.sliders[i].OFFER_ID === strValue)
			{
				index = i;
				break;
			}
		}
		if (-1 < index && this.sliderRowShowSize < this.sliders[index].COUNT)
		{
			if (0 > this.sliders[index].START)
			{
				this.sliders[index].START++;
				BX.adjust(this.sliders[index].LIST, { style: { marginLeft: this.sliders[index].START*20+'%' }});
				BX.adjust(this.sliders[index].RIGHT, { style: this.sliderEnableArrow });
			}

			if (0 <= this.sliders[index].START)
			{
				BX.adjust(this.sliders[index].LEFT, { style: this.sliderDisableArrow });
			}
		}
	}
};

window.JCCatalogElementFast.prototype.SliderRowRight = function()
{
	var strValue = '',
		index = -1,
		i,
		target = BX.proxy_context;
	if (!!target && target.hasAttribute('data-value'))
	{
		strValue = target.getAttribute('data-value');
		for (i = 0; i < this.sliders.length; i++)
		{
			if (this.sliders[i].OFFER_ID === strValue)
			{
				index = i;
				break;
			}
		}
		if (-1 < index && this.sliderRowShowSize < this.sliders[index].COUNT)
		{
			if ((this.sliderRowShowSize - this.sliders[index].START) < this.sliders[index].COUNT)
			{
				this.sliders[index].START--;
				BX.adjust(this.sliders[index].LIST, { style: { marginLeft: this.sliders[index].START*20+'%' }});
				BX.adjust(this.sliders[index].LEFT, { style: this.sliderEnableArrow } );
			}

			if ((this.sliderRowShowSize - this.sliders[index].START) >= this.sliders[index].COUNT)
			{
				BX.adjust(this.sliders[index].RIGHT, { style: this.sliderDisableArrow } );
			}
		}
	}
};

window.JCCatalogElementFast.prototype.SelectSliderImg = function()
{
	var strValue = '',
		arItem = [],
		target = BX.proxy_context;
	if (!!target && target.hasAttribute('data-value'))
	{
		strValue = target.getAttribute('data-value');
		arItem = strValue.split('_');
		this.SetMainPict(arItem[0], arItem[1]);
	}
};

window.JCCatalogElementFast.prototype.SetMainPict = function(intSlider, intPict)
{
	var index = -1,
		indexPict = -1,
		i,
		j,
		value = '',
		RowItems = null,
		strValue = '';

	for (i = 0; i < this.offers.length; i++)
	{
		if (intSlider === this.offers[i].ID)
		{
			index = i;
			break;
		}
	}

	$(window).resize();
	$('.thumbs_navigation ul').addClass('hidden_block');
	if(this.SliderImages>1){
		$('.thumbs_navigation ul:eq('+index+')').removeClass('hidden_block');
	}
	$('.thumbs_navigation').removeClass('hidden_block');

	$('.fancy_offer').addClass('hidden_block');
	$(this.obPict).closest('.offers_img').css('opacity', 0);

	if (-1 < index)
	{
		if (0 < this.offers[index].SLIDER_COUNT)
		{
			for (j = 0; j < this.offers[index].SLIDER.length; j++)
			{
				if (intPict === this.offers[index].SLIDER[j].ID)
				{
					indexPict = j;
					break;
				}
			}
			if (-1 < indexPict)
			{
				if (!!this.offers[index].SLIDER[indexPict])
				{
					this.setCurrentImg(this.offers[index].SLIDER[indexPict], true);
				}

				RowItems = BX.findChildren(this.sliders[index].LIST, {tagName: 'li'}, false);
				if (!!RowItems && 0 < RowItems.length)
				{
					strValue = intSlider+'_'+intPict;
					for (i = 0; i < RowItems.length; i++)
					{
						value = RowItems[i].getAttribute('data-value');
						if (value === strValue)
						{
							BX.addClass(RowItems[i], 'current');
						}
						else
						{
							BX.removeClass(RowItems[i], 'current');
						}
					}
				}
			}
		}
	}
	setTimeout(function(){
		$('.fancy_offer').removeClass('hidden_block');
		$('.offers_img').css('opacity', 1);
	}, 200);
};

window.JCCatalogElementFast.prototype.SetMainPictFromItem = function(index)
{
	if (!!this.obPict)
	{
		var boolSet = false,
			obNewPict = {};

		if (!!this.offers[index])
		{
			if (!!this.offers[index].DETAIL_PICTURE)
			{
				obNewPict = this.offers[index].DETAIL_PICTURE;
				boolSet = true;
			}
			else if (!!this.offers[index].PREVIEW_PICTURE)
			{
				obNewPict = this.offers[index].PREVIEW_PICTURE;
				boolSet = true;
			}
		}
		if (!boolSet)
		{
			if (!!this.defaultPict.detail)
			{
				obNewPict = this.defaultPict.detail;
				boolSet = true;
			}
			else if (!!this.defaultPict.preview)
			{
				obNewPict = this.defaultPict.preview;
				boolSet = true;
			}
		}
		if (boolSet)
		{
			this.setCurrentImg(obNewPict, true);
		}
	}
};

window.JCCatalogElementFast.prototype.showMainPictPopup = function(e)
{
	var pictContent = '';

	pictContent = '<div style="text-align: center;"><img src="'+
		this.currentImg.src+
		'" width="'+this.currentImg.width+'" height="'+this.currentImg.height+'" name=""></div>';
	this.obPopupPict.setContent(pictContent);
	this.obPopupPict.show();
	return BX.PreventDefault(e);
};

window.JCCatalogElementFast.prototype.QuantityUp = function()
{
	var curValue = 0,
		boolSet = true,
		calcPrice;

	if (0 === this.errorCode && this.config.showQuantity && this.canBuy)
	{
		curValue = (this.isDblQuantity ? parseFloat(this.obQuantity.value) : parseInt(this.obQuantity.value, 10));
		if (!isNaN(curValue))
		{
			curValue += this.stepQuantity;
			if (this.checkQuantity)
			{
				if (curValue > this.maxQuantity)
				{
					boolSet = false;
				}
			}

			if (boolSet)
			{
				if (this.isDblQuantity)
				{
					curValue = Math.round(curValue*this.precisionFactor)/this.precisionFactor;
				}
				this.obQuantity.value = curValue;
			}
		}
	}
};

window.JCCatalogElementFast.prototype.QuantityDown = function()
{
	var curValue = 0,
		boolSet = true,
		calcPrice;

	if (0 === this.errorCode && this.config.showQuantity && this.canBuy)
	{
		curValue = (this.isDblQuantity ? parseFloat(this.obQuantity.value) : parseInt(this.obQuantity.value, 10));
		if (!isNaN(curValue))
		{
			curValue -= this.stepQuantity;
			if (curValue < this.stepQuantity)
			{
				boolSet = false;
			}
			if (boolSet)
			{
				if (this.isDblQuantity)
				{
					curValue = Math.round(curValue*this.precisionFactor)/this.precisionFactor;
				}
				this.obQuantity.value = curValue;
			}
		}
	}
};

window.JCCatalogElementFast.prototype.QuantityChange = function()
{
	var curValue = 0,
		calcPrice,
		intCount,
		count;

	if (0 === this.errorCode && this.config.showQuantity)
	{
		if (this.canBuy)
		{
			curValue = (this.isDblQuantity ? parseFloat(this.obQuantity.value) : parseInt(this.obQuantity.value, 10));
			if (!isNaN(curValue))
			{
				if (this.checkQuantity)
				{
					if (curValue > this.maxQuantity)
					{
						curValue = this.maxQuantity;
					}
				}
				if (curValue < this.stepQuantity)
				{
					curValue = this.stepQuantity;
				}
				else
				{
					count = Math.round((curValue*this.precisionFactor)/this.stepQuantity)/this.precisionFactor;
					intCount = parseInt(count, 10);
					if (isNaN(intCount))
					{
						intCount = 1;
						count = 1.1;
					}
					if (count > intCount)
					{
						curValue = (intCount <= 1 ? this.stepQuantity : intCount*this.stepQuantity);
						curValue = Math.round(curValue*this.precisionFactor)/this.precisionFactor;
					}
				}
				this.obQuantity.value = curValue;
			}
			else
			{
				this.obQuantity.value = this.stepQuantity;
			}
		}
		else
		{
			this.obQuantity.value = this.stepQuantity;
		}
	}
};

window.JCCatalogElementFast.prototype.QuantitySet = function(index)
{
	var basisPrice = '',
		strLimit;
	if (this.errorCode === 0)
	{
		this.canBuy = this.offers[index].CAN_BUY;

		this.currentPriceMode = this.offers[index].ITEM_PRICE_MODE;
		this.currentPrices = this.offers[index].ITEM_PRICES;
		this.currentPriceSelected = this.offers[index].ITEM_PRICE_SELECTED;
		this.currentQuantityRanges = this.offers[index].ITEM_QUANTITY_RANGES;
		this.currentQuantityRangeSelected = this.offers[index].ITEM_QUANTITY_RANGE_SELECTED;

		if (this.canBuy)
		{
			if (!!this.obBasketActions)
			{
				BX.style(this.obBasketActions, 'display', '');
			}
			if (!!this.obNotAvail)
			{
				BX.style(this.obNotAvail, 'display', 'none');
			}
		}
		else
		{
			if (!!this.obBasketActions)
			{
				//BX.style(this.obBasketActions, 'display', 'none');
				BX.style(this.obBasketActions, 'opacity', '0');
				BX.style(BX.findParent(BX(this.obQuantity), { 'class':'counter_block' }), 'display', 'none');
			}
			if (!!this.obNotAvail)
			{
				BX.style(this.obNotAvail, 'display', '');
			}
		}
		if (this.config.showQuantity)
		{
			this.isDblQuantity = this.offers[index].QUANTITY_FLOAT;
			this.checkQuantity = this.offers[index].CHECK_QUANTITY;
			if (this.isDblQuantity)
			{
				this.maxQuantity = parseFloat(this.offers[index].MAX_QUANTITY);
				this.stepQuantity = Math.round(parseFloat(this.offers[index].STEP_QUANTITY)*this.precisionFactor)/this.precisionFactor;
			}
			else
			{
				this.maxQuantity = parseInt(this.offers[index].MAX_QUANTITY, 10);
				this.stepQuantity = parseInt(this.offers[index].STEP_QUANTITY, 10);
			}
			/*this.obQuantity.value = this.stepQuantity;
			this.obQuantity.disabled = !this.canBuy;*/
			if (!!this.obMeasure)
			{
				if (!!this.offers[index].MEASURE)
				{
					BX.adjust(this.obMeasure, { html : this.offers[index].MEASURE});
				}
				else
				{
					BX.adjust(this.obMeasure, { html : ''});
				}
			}
			if (!!this.obQuantityLimit.all)
			{
				if (!this.checkQuantity)
				{
					BX.adjust(this.obQuantityLimit.value, { html: '' });
					BX.adjust(this.obQuantityLimit.all, { style: {display: 'none'} });
				}
				else
				{
					strLimit = this.offers[index].MAX_QUANTITY;
					if (!!this.offers[index].MEASURE)
					{
						strLimit += (' '+this.offers[index].MEASURE);
					}
					BX.adjust(this.obQuantityLimit.value, { html: strLimit});
					BX.adjust(this.obQuantityLimit.all, { style: {display: ''} });
				}
			}
			if (!!this.obBasisPrice)
			{
				if (!!this.offers[index].BASIS_PRICE)
				{
					basisPrice = BX.message('BASIS_PRICE_MESSAGE');
					basisPrice = basisPrice.replace(
						'#PRICE#',
						BX.Currency.currencyFormat(this.offers[index].BASIS_PRICE.DISCOUNT_VALUE, this.offers[index].BASIS_PRICE.CURRENCY, true)
					);
					basisPrice = basisPrice.replace('#MEASURE#', this.offers[index].MEASURE);
					BX.adjust(this.obBasisPrice, { style: { display: '' }, html: basisPrice });
				}
				else
				{
					BX.adjust(this.obBasisPrice, { style: { display: 'none' }, html: '' });
				}
			}

		}
		this.currentBasisPrice = this.offers[index].BASIS_PRICE;
	}
};

window.JCCatalogElementFast.prototype.SelectOfferProp = function()
{
	var i = 0,
		strTreeValue = '',
		arTreeItem = [],
		RowItems = null,
		target = BX.proxy_context;
	if(typeof target.options !== 'undefined' && typeof target.options[target.selectedIndex] !== 'undefined')
		target = target.options[target.selectedIndex];
	if (!!target && target.hasAttribute('data-treevalue'))
	{
		strTreeValue = target.getAttribute('data-treevalue');
		propModes = target.getAttribute('data-showtype');
		arTreeItem = strTreeValue.split('_');
		this.SearchOfferPropIndex(arTreeItem[0], arTreeItem[1]);
		RowItems = BX.findChildren(target.parentNode, {tagName: this.skuVisualParams[propModes.toUpperCase()].TAG}, false);
		if (!!RowItems && 0 < RowItems.length)
		{
			for (i = 0; i < RowItems.length; i++)
			{
				value = RowItems[i].getAttribute('data-onevalue');

				// for SELECTBOXES
				if(propModes == 'TEXT'){
					if (value === arTreeItem[1]){
						RowItems[i].setAttribute('selected', 'selected');
					}else{
						RowItems[i].removeAttribute('selected');
					}
				}else{
					if (value === arTreeItem[1]){
						$(RowItems[i]).addClass(this.skuVisualParams[propModes.toUpperCase()].ACTIVE_CLASS);
					}else{
						$(RowItems[i]).removeClass(this.skuVisualParams[propModes.toUpperCase()].ACTIVE_CLASS);
					}
				}
			}
		}
	}
};

window.JCCatalogElementFast.prototype.SearchOfferPropIndex = function(strPropID, strPropValue)
{
	var strName = '',
		arShowValues = false,
		arCanBuyValues = [],
		index = -1,
		i, j,
		arFilter = {},
		tmpFilter = [];

	for (i = 0; i < this.treeProps.length; i++)
	{
		if (this.treeProps[i].ID === strPropID)
		{
			index = i;
			break;
		}
	}

	if (-1 < index)
	{
		for (i = 0; i < index; i++)
		{
			strName = 'PROP_'+this.treeProps[i].ID;
			arFilter[strName] = this.selectedValues[strName];
		}
		strName = 'PROP_'+this.treeProps[index].ID;
		arFilter[strName] = strPropValue;
		for (i = index+1; i < this.treeProps.length; i++)
		{
			strName = 'PROP_'+this.treeProps[i].ID;
			arShowValues = this.GetRowValues(arFilter, strName);
			if (!arShowValues)
			{
				break;
			}
			if (this.config.showAbsent)
			{
				arCanBuyValues = [];
				tmpFilter = [];
				tmpFilter = BX.clone(arFilter, true);
				for (j = 0; j < arShowValues.length; j++)
				{
					tmpFilter[strName] = arShowValues[j];
					if (this.GetCanBuy(tmpFilter))
					{
						arCanBuyValues[arCanBuyValues.length] = arShowValues[j];
					}
				}
			}
			else
			{
				arCanBuyValues = arShowValues;
			}
			if (!!this.selectedValues[strName] && BX.util.in_array(this.selectedValues[strName], arCanBuyValues))
			{
				arFilter[strName] = this.selectedValues[strName];
			}
			else
			{
				arFilter[strName] = arCanBuyValues[0];
			}
			this.UpdateRow(i, arFilter[strName], arShowValues, arCanBuyValues);
		}
		this.selectedValues = arFilter;

		this.ChangeInfo();
	}
};

window.JCCatalogElementFast.prototype.RowLeft = function()
{
	var strTreeValue = '',
		index = -1,
		i,
		target = BX.proxy_context;
	if (!!target && target.hasAttribute('data-treevalue'))
	{
		strTreeValue = target.getAttribute('data-treevalue');
		for (i = 0; i < this.treeProps.length; i++)
		{
			if (this.treeProps[i].ID === strTreeValue)
			{
				index = i;
				break;
			}
		}
		if (-1 < index && this.treeRowShowSize < this.showCount[index])
		{
			if (0 > this.showStart[index])
			{
				this.showStart[index]++;
				BX.adjust(this.obTreeRows[index].LIST, { style: { marginLeft: this.showStart[index]*20+'%' }});
				//BX.adjust(this.obTreeRows[index].RIGHT, { style: this.treeEnableArrow });
			}

			/*if (0 <= this.showStart[index])
			{
				BX.adjust(this.obTreeRows[index].LEFT, { style: this.treeDisableArrow });
			}*/
		}
	}
};

window.JCCatalogElementFast.prototype.RowRight = function()
{
	var strTreeValue = '',
		index = -1,
		i,
		target = BX.proxy_context;
	if (!!target && target.hasAttribute('data-treevalue'))
	{
		strTreeValue = target.getAttribute('data-treevalue');
		for (i = 0; i < this.treeProps.length; i++)
		{
			if (this.treeProps[i].ID === strTreeValue)
			{
				index = i;
				break;
			}
		}
		if (-1 < index && this.treeRowShowSize < this.showCount[index])
		{
			if ((this.treeRowShowSize - this.showStart[index]) < this.showCount[index])
			{
				this.showStart[index]--;
				BX.adjust(this.obTreeRows[index].LIST, { style: { marginLeft: this.showStart[index]*20+'%' }});
				//BX.adjust(this.obTreeRows[index].LEFT, { style: this.treeEnableArrow });
			}

			/*if ((this.treeRowShowSize - this.showStart[index]) >= this.showCount[index])
			{
				BX.adjust(this.obTreeRows[index].RIGHT, { style: this.treeDisableArrow });
			}*/
		}
	}
};

window.JCCatalogElementFast.prototype.UpdateRowsImages = function()
{
	if(typeof this.config.offerShowPreviewPictureProps === 'object' && this.config.offerShowPreviewPictureProps.length){
		var currentTree = this.selectedValues;

		for(var i in this.obTreeRows){
			if(BX.util.in_array(this.treeProps[i].CODE, this.config.offerShowPreviewPictureProps)){
				var RowItems = BX.findChildren(this.obTreeRows[i].LIST, {tagName: 'LI'}, false);
				if(!!RowItems && 0 < RowItems.length){
					for(var j in RowItems){
						var ImgItem = BX.findChild(RowItems[j], {className: 'cnt_item'}, true, false);
						if(ImgItem){
							var value = RowItems[j].getAttribute('data-onevalue');
							if(value != 0){
								var bgi = ImgItem.style.backgroundImage;
								var obgi = ImgItem.getAttribute('data-obgi');
								if(!obgi){
									obgi = bgi;
									ImgItem.setAttribute('data-obgi', obgi);
								}

								var boolOneSearch = false;
								var rowTree = BX.clone(currentTree, true);
								rowTree['PROP_' + this.treeProps[i].ID] = value;

								for(var m in this.offers){
									boolOneSearch = true;
									for(var n in rowTree){
										if(rowTree[n] !== this.offers[m].TREE[n]){
											boolOneSearch = false;
											break;
										}
									}
									if(boolOneSearch){
										if(typeof this.offers[m].PREVIEW_PICTURE === 'object' && this.offers[m].PREVIEW_PICTURE.SRC){
											var newBgi = 'url("' + this.offers[m].PREVIEW_PICTURE.SRC + '")';
											if(bgi !== newBgi){
												ImgItem.style.backgroundImage = newBgi;
												BX.addClass(ImgItem, 'pp');
											}
										}
										else{
											boolOneSearch = false;
										}
										break;
									}
								}

								for(var m in this.offers)
								{
									if(rowTree['PROP_' + this.treeProps[i].ID] == this.offers[m].TREE['PROP_' + this.treeProps[i].ID] && !boolOneSearch)
									{
										if(typeof this.offers[m].PREVIEW_PICTURE === 'object' && this.offers[m].PREVIEW_PICTURE.SRC)
										{
											var newBgi = 'url("' + this.offers[m].PREVIEW_PICTURE.SRC + '")';
											ImgItem.style.backgroundImage = newBgi;
											BX.addClass(ImgItem, 'pp');
											boolOneSearch = true;
										}
										break
									}
								}

								if(!boolOneSearch && obgi && bgi !== obgi){
									ImgItem.style.backgroundImage = obgi;
									BX.removeClass(ImgItem, 'pp');
								}
							}
						}
					}
				}
			}
		}
	}
}

window.JCCatalogElementFast.prototype.UpdateRow = function(intNumber, activeID, showID, canBuyID)
{
	var i = 0,
		showI = 0,
		value = '',
		countShow = 0,
		strNewLen = '',
		obData = {},
		RowItems = null,
		pictMode = false,
		extShowMode = false,
		isCurrent = false,
		selectIndex = 0,
		obLeft = this.treeEnableArrow,
		obRight = this.treeEnableArrow,
		currentShowStart = 0;

	if (-1 < intNumber && intNumber < this.obTreeRows.length)
	{
		propMode = this.treeProps[intNumber].DISPLAY_TYPE;
		RowItems = BX.findChildren(this.obTreeRows[intNumber].LIST, {tagName: this.skuVisualParams[propMode].TAG}, false);
		if (!!RowItems && 0 < RowItems.length)
		{
			selectMode = ('SELECT' === this.treeProps[intNumber].DISPLAY_TYPE);
			countShow = showID.length;
			obData = {
				style: {},
				props: {
					disabled: '',
					selected: '',
				},
			};

			var lineContainer = this.obTree.querySelectorAll('.bx_item_detail_size, .bx_item_detail_scu');

			for (i = 0; i < RowItems.length; i++){
				value = RowItems[i].getAttribute('data-onevalue');
				isCurrent = (value === activeID/* && value !=0 */);

				if (BX.util.in_array(value, canBuyID)){
					obData.props.className = (isCurrent ? this.skuVisualParams[propMode].ACTIVE_CLASS : '');

				}else{
					obData.props.className = (isCurrent ? this.skuVisualParams[propMode].ACTIVE_CLASS+' '+this.skuVisualParams[propMode].HIDE_CLASS : this.skuVisualParams[propMode].HIDE_CLASS);

				}
				// obData.props.className = (isCurrent ? this.skuVisualParams[propMode].ACTIVE_CLASS : '');

				if(selectMode){
					obData.props.disabled = 'disabled';
					obData.props.selected = (isCurrent ? 'selected' : '');
				}else{
					obData.style.display = 'none';
				}

				if (BX.util.in_array(value, showID)){
					if(selectMode){
						obData.props.disabled = '';
					}else{
						obData.style.display = '';
					}
					if (isCurrent){
						selectIndex = showI;
					}
					showI++;
				}
				BX.adjust(RowItems[i], obData);

				if(isCurrent)
				{
					lineContainer[intNumber].style.display = (value == 0 && canBuyID.length == 1) ? 'none' : '';
				}
			}

			if(selectMode){
				if($(this.obTreeRows[intNumber].LIST).parent().hasClass('ik_select'))
					$(this.obTreeRows[intNumber].LIST).ikSelect('reset');
			}

			this.showCount[intNumber] = countShow;
			this.showStart[intNumber] = currentShowStart;
		}
	}
};

window.JCCatalogElementFast.prototype.GetRowValues = function(arFilter, index)
{
	var arValues = [],
		i = 0,
		j = 0,
		boolSearch = false,
		boolOneSearch = true;

	if (0 === arFilter.length)
	{
		for (i = 0; i < this.offers.length; i++)
		{
			if (!BX.util.in_array(this.offers[i].TREE[index], arValues))
			{
				arValues[arValues.length] = this.offers[i].TREE[index];
			}
		}
		boolSearch = true;
	}
	else
	{
		for (i = 0; i < this.offers.length; i++)
		{
			boolOneSearch = true;
			for (j in arFilter)
			{
				if (arFilter[j] !== this.offers[i].TREE[j])
				{
					boolOneSearch = false;
					break;
				}
			}
			if (boolOneSearch)
			{
				if (!BX.util.in_array(this.offers[i].TREE[index], arValues))
				{
					arValues[arValues.length] = this.offers[i].TREE[index];
				}
				boolSearch = true;
			}
		}
	}
	return (boolSearch ? arValues : false);
};

window.JCCatalogElementFast.prototype.GetCanBuy = function(arFilter)
{
	var i = 0,
		j = 0,
		boolOneSearch = true,
		boolSearch = false;

	for (i = 0; i < this.offers.length; i++)
	{
		boolOneSearch = true;
		for (j in arFilter)
		{
			if (arFilter[j] !== this.offers[i].TREE[j])
			{
				boolOneSearch = false;
				break;
			}
		}
		if (boolOneSearch)
		{
			if (this.offers[i].CAN_BUY)
			{
				boolSearch = true;
				break;
			}
		}
	}
	return boolSearch;
};

window.JCCatalogElementFast.prototype.SetCurrent = function()
{
	var i = 0,
		j = 0,
		strName = '',
		arShowValues = false,
		arCanBuyValues = [],
		arFilter = {},
		tmpFilter = [],
		current = this.offers[this.offerNum].TREE;

	for (i = 0; i < this.treeProps.length; i++)
	{
		strName = 'PROP_'+this.treeProps[i].ID;
		arShowValues = this.GetRowValues(arFilter, strName);
		if (!arShowValues)
		{
			break;
		}
		if (BX.util.in_array(current[strName], arShowValues))
		{
			arFilter[strName] = current[strName];
		}
		else
		{
			arFilter[strName] = arShowValues[0];
			this.offerNum = 0;
		}
		if (this.config.showAbsent)
		{
			arCanBuyValues = [];
			tmpFilter = [];
			tmpFilter = BX.clone(arFilter, true);
			for (j = 0; j < arShowValues.length; j++)
			{
				tmpFilter[strName] = arShowValues[j];
				if (this.GetCanBuy(tmpFilter))
				{
					arCanBuyValues[arCanBuyValues.length] = arShowValues[j];
				}
			}
		}
		else
		{
			arCanBuyValues = arShowValues;
		}

		this.UpdateRow(i, arFilter[strName], arShowValues, arCanBuyValues);
	}

	this.selectedValues = arFilter;
	this.ChangeInfo();
};

window.JCCatalogElementFast.prototype.ChangeInfo = function()
{
	var index = -1,
		i = 0,
		j = 0,
		RowItems=null,
		boolOneSearch = true;

	for (i = 0; i < this.offers.length; i++)
	{
		boolOneSearch = true;
		for (j in this.selectedValues)
		{
			if (this.selectedValues[j] !== this.offers[i].TREE[j])
			{
				boolOneSearch = false;
				break;
			}
		}
		if (boolOneSearch)
		{
			index = i;
			break;
		}
	}

	if(this.treeProps){			
		this.UpdateRowsImages();
	}

	if (-1 < index)
	{

		/*for (i = 0; i < this.offers.length; i++)
		{

			if (this.config.showOfferGroup && this.offers[i].OFFER_GROUP)
			{
				if (i !== index)
				{
					BX.adjust(BX(this.visual.OFFER_GROUP+this.offers[i].ID), { style: {display: 'none'} });
				}
			}
			/*set slider*/
			/*if (!!this.sliders[i].ID)
			{
				if (i === index)
				{
					this.sliders[i].START = 0;
					if(this.sliders[i].CONT){

						RowItems = $(this.sliders[i].CONT).find("li");
						this.SliderImages=RowItems.length;
						if(this.SliderImages>1){
							BX.adjust(this.sliders[i].CONT, {style: { display: ''}});
						}else{
							BX.adjust(this.sliders[i].CONT, {style: { display: 'none'}});
						}
					}
					BX.adjust(this.sliders[i].CONT_M, {style: { display: ''}});
				}
				else
				{
					if(this.sliders[i].CONT)
						BX.adjust(this.sliders[i].CONT, {style: { display: 'none'}});
					BX.adjust(this.sliders[i].CONT_M, {style: { display: 'none'}});
				}
			}
		}*/


		if (this.config.showOfferGroup && this.offers[index].OFFER_GROUP)
		{
			BX.adjust(BX(this.visual.OFFER_GROUP+this.offers[index].ID), { style: {display: ''} });
		}
		if (0 < this.offers[index].SLIDER_COUNT)
		{
			this.SetMainPict(this.offers[index].ID, this.offers[index].SLIDER[0].ID);
		}
		else
		{
			this.SetMainPictFromItem(index);
		}

		/*set slider images start*/
		this.SetSliderPict(this.offers[index], this.offers[index].SLIDER, this.config);
		/*set slider images end*/

		/*set mobile slider images start*/
		this.SetSliderPictMobile(this.offers[index], this.offers[index].SLIDER, this.config);
		/*set mobile slider images end*/

		if (this.config.showSkuProps && !!this.obSkuProps)
		{
			var html ='',
				display_type = this.offers[index].TYPE_PROP;
			if (!this.offers[index].DISPLAY_PROPERTIES || this.offers[index].DISPLAY_PROPERTIES.length === 0)
			{
				if(display_type == "TABLE")
					BX.adjust(this.obSkuProps, {style: {display: 'none'}, html: ''});
				else
					$(this.obSkuProps).find('.sku_block_prop').remove();
			}
			else
			{
				if(display_type != "TABLE")
					$(this.obSkuProps).find('.sku_block_prop').remove();

				for(var i in this.offers[index].DISPLAY_PROPERTIES)
				{
					var class_block = ((this.offers[index].DISPLAY_PROPERTIES[i].HINT && this.offers[index].DISPLAY_PROPERTIES[i].SHOW_HINTS == "Y") ? ' whint' : ''),
						hint_block = ((this.offers[index].DISPLAY_PROPERTIES[i].HINT && this.offers[index].DISPLAY_PROPERTIES[i].SHOW_HINTS=="Y") ? '<div class="hint"><span class="icon"><i>?</i></span><div class="tooltip">' + this.offers[index].DISPLAY_PROPERTIES[i].HINT + '</div></div>' : '');
					if(display_type == "TABLE")
						html += '<tr><td class="char_name"><span class="'+class_block+'">'+hint_block+this.offers[index].DISPLAY_PROPERTIES[i].NAME+'</span></td><td class="char_value"><span>'+this.offers[index].DISPLAY_PROPERTIES[i].VALUE+'</span></td></tr>';
					else
					{
						html = '<div class="char sku_block_prop"><div class="char_name"><span class="'+class_block+'">'+hint_block+this.offers[index].DISPLAY_PROPERTIES[i].NAME+'</span></div><div class="char_value"><span>'+this.offers[index].DISPLAY_PROPERTIES[i].VALUE+'</span></div></div>';
						$(this.obSkuProps).append(html);
					}
				}

				if(display_type == "TABLE")
					BX.adjust(this.obSkuProps, {style: {display: ''}, html: html});
			}
		}

		if (this.config.showSkuProps && !!this.obSkuArticleProps)
		{
			if ('DISPLAY_PROPERTIES_CODE' in this.offers[index])
			{
				if ('ARTICLE' in this.offers[index].DISPLAY_PROPERTIES_CODE)
				{
					if(this.offers[index].DISPLAY_PROPERTIES_CODE.ARTICLE.VALUE)
						BX.adjust(this.obSkuArticleProps, {style: {display: ''}, html: this.offers[index].DISPLAY_PROPERTIES_CODE.ARTICLE.VALUE_FORMAT});
				}
				else if(this.offers[index].SHOW_ARTICLE_SKU == 'Y' && this.offers[index].ARTICLE_SKU)
					BX.adjust(this.obSkuArticleProps, {style: {display: ''}, html: this.offers[index].ARTICLE_SKU});
				else
					BX.adjust(this.obSkuArticleProps, {style: {display: 'none'}, html: ''});
			}
			else if(this.offers[index].SHOW_ARTICLE_SKU == 'Y' && this.offers[index].ARTICLE_SKU)
			{
				BX.adjust(this.obSkuArticleProps, {style: {display: ''}, html: this.offers[index].ARTICLE_SKU});
			}
			else
			{
				BX.adjust(this.obSkuArticleProps, {style: {display: 'none'}, html: ''});
			}
		}

		setLocationSKU(this.offers[index].ID);

		$(this.obBasketActions).closest('.counter_wrapp').addClass('hidden_block');

		this.offerNum = index;
		this.QuantitySet(this.offerNum);
		this.setStoreBlock(this.offers[index].ID);
		this.setQuantityStore(this.offers[index].MAX_QUANTITY, this.offers[index].AVAILIABLE.TEXT);

		this.incViewedCounter();
		BX.onCustomEvent('onCatalogStoreProductChange', [this.offers[this.offerNum].ID]);
		$(this.obPict).parent().data('id', this.offers[index].ID);

		var arPriceItem = this.offers[index].PRICE;
		if(this.offers[index].ITEM_PRICE_MODE == 'Q' && this.offers[index].ITEM_PRICES && this.offers[index].USE_PRICE_COUNT)
		{
			if(this.offers[index].USE_PRICE_COUNT && this.offers[index].PRICE_MATRIX)
				this.checkPriceRange(this.offers[index].CONFIG.MIN_QUANTITY_BUY);
			arPriceItem = this.currentPrices[this.currentPriceSelected];
			arPriceItem.VALUE = arPriceItem.PRICE;
			arPriceItem.PRINT_VALUE = getCurrentPrice(arPriceItem.PRICE, arPriceItem.CURRENCY, arPriceItem.PRINT_PRICE);
			arPriceItem.DISCOUNT_VALUE = arPriceItem.BASE_PRICE;
			arPriceItem.PRINT_DISCOUNT_VALUE = getCurrentPrice(arPriceItem.BASE_PRICE, arPriceItem.CURRENCY, arPriceItem.PRINT_BASE_PRICE);
		}

		setViewedProduct(this.offers[index].ID, {
			'PRODUCT_ID': this.offers[index].PRODUCT_ID,
			'IBLOCK_ID': this.offers[index].IBLOCK_ID,
			'NAME': this.product.name,
			'DETAIL_PAGE_URL': this.offers[index].URL,
			//'PICTURE_ID': this.offers[index].PREVIEW_PICTURE ? this.offers[index].PREVIEW_PICTURE.ID : (this.offers[index].SLIDER_COUNT ? this.offers[index].SLIDER[0].ID : false),
			'PICTURE_ID': this.offers[index].PREVIEW_PICTURE ? this.offers[index].PREVIEW_PICTURE.ID : (this.offers[index].PARENT_PICTURE ? this.offers[index].PARENT_PICTURE.ID : (this.offers[index].SLIDER_COUNT ? this.offers[index].SLIDER[0].ID : false)),
			'CATALOG_MEASURE_NAME': this.offers[index].MEASURE,
			'MIN_PRICE': arPriceItem,
			'CAN_BUY': this.offers[index].CAN_BUY ? 'Y' : 'N',
			'IS_OFFER': 'Y',
			'WITH_OFFERS': 'N'
		});

		if($('#fast_view_item .title a').length && this.offers[index].URL)
		{
			$('.fast_view_frame a.dark_link').attr('href', this.offers[index].URL)
		}

		var obj=this.offers[index],
			th=$(this.obProduct),
			_th = this;

		if(typeof arBasketAspro !=="undefined")
		{
			this.setActualDataBlock(th, obj);
		}
		else
		{
			if(typeof window.frameCacheVars !== "undefined")
			{
				BX.addCustomEvent("onFrameDataReceived", function(){
					_th.setActualDataBlock(th, obj);
				});
			}
		}

		/*quantity discount start*/

		if($(this.obProduct).find('.quantity_block .values').length)
			$(this.obProduct).find('.quantity_block .values .item span.value').text(this.offers[index].MAX_QUANTITY).css({'opacity':'1'});

		if(this.offers[index].SHOW_DISCOUNT_TIME_EACH_SKU == 'Y')
			initCountdownTime($(this.obProduct), this.offers[index].DISCOUNT_ACTIVE);

		/*quantity discount end*/

		if(arOptimusOptions['THEME']['CHANGE_TITLE_ITEM'] == 'Y')
		{
			document.title = this.offers[index].NAME;
			$('h1').text(this.offers[index].NAME);
			ItemObj.TITLE = this.offers[index].NAME;
			ItemObj.WINDOW_TITLE = this.offers[index].NAME+''+this.offers[index].POSTFIX;
		}

		$('.catalog_detail .tabs_section .tabs_content .form.inline input[data-sid="PRODUCT_NAME"]').attr('value', $('h1').text());
	}
};

window.JCCatalogElementFast.prototype.checkPriceRange = function(quantity)
{
	if (typeof quantity === 'undefined'|| this.currentPriceMode != 'Q')
		return;

	var range, found = false;
	for (var i in this.currentQuantityRanges)
	{
		if (this.currentQuantityRanges.hasOwnProperty(i))
		{
			range = this.currentQuantityRanges[i];

			if (
				parseInt(quantity) >= parseInt(range.SORT_FROM)
				&& (
					range.SORT_TO == 'INF'
					|| parseInt(quantity) <= parseInt(range.SORT_TO)
				)
			)
			{
				found = true;
				this.currentQuantityRangeSelected = range.HASH;
				break;
			}
		}
	}

	if (!found && (range = this.getMinPriceRange()))
	{
		this.currentQuantityRangeSelected = range.HASH;
	}

	for (var k in this.currentPrices)
	{
		if (this.currentPrices.hasOwnProperty(k))
		{
			if (this.currentPrices[k].QUANTITY_HASH == this.currentQuantityRangeSelected)
			{
				this.currentPriceSelected = k;
				break;
			}
		}
	}
};

window.JCCatalogElementFast.prototype.getMinPriceRange = function()
{
	var range;

	for (var i in this.currentQuantityRanges)
	{
		if (this.currentQuantityRanges.hasOwnProperty(i))
		{
			if (
				!range
				|| parseInt(this.currentQuantityRanges[i].SORT_FROM) < parseInt(range.SORT_FROM)
			)
			{
				range = this.currentQuantityRanges[i];
			}
		}
	}

	return range;
}

/*set blocks start*/
window.JCCatalogElementFast.prototype.setActualDataBlock = function(th, obj)
{
	/*like block start*/
	this.setLikeBlock(th, '.like_icons .wish_item', obj, 'DELAY');
	this.setLikeBlock(th, '.like_icons .compare_item',obj, 'COMPARE');
	/*like block end*/

	/*buy block start*/
	this.setBuyBlock(th, obj);
	/*buy block end*/
}
/*set blocks end*/

/*set slider offers*/
window.JCCatalogElementFast.prototype.SetSliderPict = function(obj, slider, config)
{
	var container=$('.wrapp_thumbs'),
		slideHtml='';
		countPhoto=obj.SLIDER_COUNT;
		container.find('.thumbs').css({
			'max-width':Math.ceil(((countPhoto <= 3 ? countPhoto : 3) * 64) - 10)
		});

		slideHtml='<ul class="slides_block">';
		for(var i in slider){
			if(typeof(slider[i]) == 'object')
			{
				slideHtml+='<li data-big="'+slider[i].BIG.src+'">'+
				'<span class="cnt"><img border="0" src="'+slider[i].THUMB.src+'" alt="" title="" /></span>'+
				'</li>';
			}
		}
		slideHtml+='</ul>';


		container.find('.thumbs').html(slideHtml);
	if(countPhoto>1){
		container.show();

		if(container.find('.thumbs_navigation').length){
			container.find('.thumbs_navigation').remove();
		}
		container.find('.thumbs').append('<span class="thumbs_navigation custom_flex"></span>');

		/* init flexslider start */
		container.find('.thumbs').removeData("flexslider");
		container.find('.thumbs').flexslider({
			animation: "slide",
			selector: ".slides_block > li",
			slideshow: false,
			animationSpeed: 600,
			directionNav: true,
			controlNav: false,
			pauseOnHover: true,
			itemWidth: 54,
			itemMargin: 10,
			animationLoop: true,
			controlsContainer: ".thumbs_navigation",
		});
		/* init flexslider end */
		container.find('.thumbs .slides_block li').first().addClass('current');

		var pict=$(this.obPict);
		container.find('.thumbs').delegate('li:not(.current)', 'click', function(e){
			var srcSmall='',
				srcBig='',
				width='',
				height=''
				index=$(this).index();

			if(typeof slider[index] !== 'undefined')
			{
				if('SMALL' in slider[index]){
					srcSmall = slider[index].SMALL.src;
				}else if ('SRC' in slider[index]) {
					srcSmall = slider[index].SRC
				};
				if('BIG' in slider[index]){
					srcBig = slider[index].BIG.src;
				}
				if('WIDTH' in slider[index]){
					width = slider[index].WIDTH;
				}
				if('HEIGHT' in slider[index]){
					height = slider[index].HEIGHT;
				}
			}

			$(this).addClass('current').siblings().removeClass('current').parents('.item_slider').find('.slides li').fadeOut(333);
			$(this).parents('.item_slider').find('.slides li').eq(index).addClass('current').stop().fadeIn(333);


			if(srcSmall){
				BX.adjust(pict[0], { props: { src: srcSmall } });
			}
			pict.attr('data-large','');

			if(srcBig){
				if(config.mainPictureMode === 'POPUP'){
					pict.parent().attr('href',srcBig);
				}
				if(config.mainPictureMode === 'MAGNIFIER'){
					pict.attr('data-large',srcBig);
					pict.attr('xoriginal',srcBig);
				}
				/*pict.parent().attr('title',slider[index].TITLE);
				pict.parent().attr('alt',slider[index].ALT);
				pict.attr('title',slider[index].TITLE);
				pict.attr('alt',slider[index].ALT);*/
			}
		});

	}else{
		container.hide();
	}
}

/*set mobile slider offers*/
window.JCCatalogElementFast.prototype.SetSliderPictMobile = function(obj, slider)
{
	var container=$('.item_slider.flex'),
		slideHtml='';
		countPhoto=obj.SLIDER_COUNT;

	slideHtml='<ul class="slides">';
	if(!slider.length){
		slideHtml+='<li data-value="">'+
			'<span rel="item_slider" class="fancy" title="'+obj.NAME+'"><img border="0" src="'+obj.NO_PHOTO.SRC+'" alt="'+obj.NAME+'" title="'+obj.NAME+'" /></span>'+
			'</li>';
	}else{
		for(var i in slider){
			if(typeof(slider[i]) == 'object')
			{
				slideHtml+='<li data-value="'+obj.ID+'_'+slider[i].ID+'">'+
				'<a href="'+slider[i].BIG.src+'" rel="item_slider" class="fancy" title="'+slider[i].TITLE+'"><img border="0" src="'+slider[i].SMALL.src+'" alt="'+slider[i].ALT+'" title="'+slider[i].TITLE+'" /></a>'+
				'</li>';
			}
		}
	}
	slideHtml+='</ul>';

	container.html(slideHtml);

	/* init flexslider start */
	container.removeData("flexslider");
	container.flexslider({
		animation: "slide",
		slideshow: false,
		slideshowSpeed: 10000,
		animationSpeed: 600,
		directionNav: false,
		pauseOnHover: true,
		animationLoop: false,
	});
	/* init flexslider end */
}

/*set compare/wish*/
window.JCCatalogElementFast.prototype.setLikeBlock = function(th, className, obj, type)
{
	var block=th;
	if(type=="DELAY"){
		if(obj.CAN_BUY && obj.CONFIG.ACTION === "ADD"){
			block.find(className).css('display','block');
		}else{
			block.find(className).hide();
		}
	}
	block.find(className).attr('data-item', obj.ID);

	if(arBasketAspro[type]){
		block.find(className).removeClass('added');
		block.find(className).find('.value').css('display','block');
		block.find(className).find('.value.added').hide();

		if(arBasketAspro[type][obj.ID]!==undefined){
			block.find(className).addClass('added');
			block.find(className).find('.value').hide();
			block.find(className).find('.value.added').css('display','block');
		}
	}
}

/*set buy*/
window.JCCatalogElementFast.prototype.setBuyBlock = function(th, obj)
{
	var buyBlock=th.find('.offer_buy_block'),
		input_value = obj.CONFIG.MIN_QUANTITY_BUY;

	if(buyBlock.find('.counter_wrapp .counter_block').length){
		buyBlock.find('.counter_wrapp .counter_block').attr('data-item', obj.ID);
	}

	// if(this.offers[this.offerNum].offer_set_quantity)
	if(obj.offer_set_quantity)
		input_value = obj.offer_set_quantity;

	var $calculate = buyBlock.closest(".catalog_detail").find(".calculate-delivery");
	if ($calculate.length) {
		
		$calculate.each(function () {
			var $calculateSpan = $(this).find("span[data-event=jqm]").first();

			if ($calculateSpan.length) {
			var $clone = $calculateSpan.clone();
			$clone.attr("data-param-product_id", obj.ID).attr("data-param-quantity", input_value).removeClass("clicked");
			$clone.insertAfter($calculateSpan).on("click", function () {
				if (!jQuery.browser.mobile) {
				$(this).parent().addClass("loadings");
				$('body').addClass("loading_form");
				}
			});
			$calculateSpan.remove();
			}

			if ($(this).hasClass("with_preview")) {
			$(this).removeClass("inited");

			if (this.timerInitCalculateDelivery) {
				clearTimeout(this.timerInitCalculateDelivery);
			}

			var that = this;
			this.timerInitCalculateDelivery = setTimeout(function () {
				initCalculatePreview();
				that.timerInitCalculateDelivery = false;
			}, 1000);
			}
		});

		if (this.offers[this.offerNum].CONFIG.ACTION === "ADD" && this.offers[this.offerNum].CAN_BUY !== false) {
			$calculate.show();
		} else {
			$calculate.hide();
		}
	}

	if($('#fast_view_item .cheaper_form').length)
	{
		var cheaper_form = $('#fast_view_item .cheaper_form span');
		cheaper_form.data('name', obj.NAME);
		cheaper_form.data('item', obj.ID);
	}

	if((obj.CONFIG.OPTIONS.USE_PRODUCT_QUANTITY_DETAIL && obj.CONFIG.ACTION == "ADD") && obj.CAN_BUY){
		var max=(obj.CONFIG.MAX_QUANTITY_BUY>0 ? "data-max='"+obj.CONFIG.MAX_QUANTITY_BUY+"'" : ""),
			counterHtml='<span class="minus">-</span>'+
				'<input type="text" class="text" name="'+obj.PRODUCT_QUANTITY_VARIABLE+'" value="'+input_value+'" />'+
				'<span class="plus" '+max+'>+</span>';
		if(arBasketAspro["BASKET"] && arBasketAspro["BASKET"][obj.ID]!==undefined){
			if(buyBlock.find('.counter_wrapp .counter_block').length){
				buyBlock.find('.counter_wrapp .counter_block').hide();
			}else{
				buyBlock.find('.counter_wrapp').prepend('<div class="counter_block big_basket" data-item="'+obj.ID+'"></div>');
				buyBlock.find('.counter_wrapp .counter_block').html(counterHtml).hide();
			}
		}else{
			if(buyBlock.find('.counter_wrapp .counter_block').length){
				buyBlock.find('.counter_wrapp .counter_block').html(counterHtml).show();
			}else{
				buyBlock.find('.counter_wrapp').prepend('<div class="counter_block big_basket" data-item="'+obj.ID+'"></div>');
				buyBlock.find('.counter_wrapp .counter_block').html(counterHtml);
			}
		}
	}else{
		if(buyBlock.find('.counter_wrapp .counter_block').length){
			buyBlock.find('.counter_wrapp .counter_block').hide();
		}
	}

	var className=((obj.CONFIG.ACTION == "ORDER") || !obj.CAN_BUY || !obj.CONFIG.OPTIONS.USE_PRODUCT_QUANTITY_DETAIL || (obj.CONFIG.ACTION == "SUBSCRIBE" && obj.CATALOG_SUBSCRIBE == "Y") ? "wide" : "" ),
		buyBlockBtn=$('<div class="button_block"></div>');

	if(buyBlock.find('.counter_wrapp').find('.button_block').length){
		if(arBasketAspro["BASKET"] && arBasketAspro["BASKET"][obj.ID]!==undefined){
			buyBlock.find('.counter_wrapp').find('.button_block').addClass('wide').html(obj.HTML);
			markProductAddBasket(obj.ID);
		}else{
			if(className){
				buyBlock.find('.counter_wrapp').find('.button_block').addClass('wide').html(obj.HTML);
				if(typeof arBasketAspro !=="undefined"){
					if(arBasketAspro["SUBSCRIBE"] && arBasketAspro["SUBSCRIBE"][obj.ID]!==undefined){
						markProductSubscribe(obj.ID);
					}
				}
			}else{
				buyBlock.find('.counter_wrapp').find('.button_block').removeClass('wide').html(obj.HTML);
			}
		}
	}else{
		buyBlock.find('.counter_wrapp').append('<div class="button_block '+className+'">'+obj.HTML+'</div>');
		if(arBasketAspro["BASKET"] && arBasketAspro["BASKET"][obj.ID]!==undefined)
			markProductAddBasket(obj.ID);
		if(arBasketAspro["SUBSCRIBE"] && arBasketAspro["SUBSCRIBE"][obj.ID]!==undefined)
			markProductSubscribe(obj.ID);
	}

	if(obj.CONFIG.ACTION !== "NOTHING"){
		if(obj.CONFIG.ACTION == "ADD" && obj.CAN_BUY && obj.SHOW_ONE_CLICK_BUY!="N"){
			var ocb='<span class="transparent big_btn type_block button one_click transition_bg" data-offers="Y" data-item="'+obj.ID+'" data-iblockID="'+obj.IBLOCK_ID+'" data-quantity="'+obj.CONFIG.MIN_QUANTITY_BUY+'" data-props="'+obj.OFFER_PROPS+'" onclick="oneClickBuy('+obj.ID+', '+obj.IBLOCK_ID+', this)">'+
				'<span>'+obj.ONE_CLICK_BUY+'</span>'+
				'</span>';
			if(buyBlock.find('.wrapp_one_click').length){
				buyBlock.find('.wrapp_one_click').html(ocb);
			}else{
				buyBlock.append('<div class="wrapp_one_click">'+ocb+'</div>');
			}
		}else{
			if(buyBlock.find('.wrapp_one_click').length){
				buyBlock.find('.wrapp_one_click').remove();
			}
		}
	}else{
		if(buyBlock.find('.wrapp_one_click').length){
			buyBlock.find('.wrapp_one_click').remove();
		}
	}

	buyBlock.fadeIn();

	buyBlock.find('.counter_wrapp .counter_block input').data('product', 'ob'+th[0].id);

	this.setPriceAction('', 'Y');

	if(typeof obOptimusPredictions === 'object'){
		obOptimusPredictions.showAll();
	}
}

/*set store block*/
window.JCCatalogElementFast.prototype.setStoreBlock = function(id)
{
	$('.stores_tab > div').hide();
	$('.stores_tab .sku_stores_'+id).show();
}

/*set store quantity*/
window.JCCatalogElementFast.prototype.setQuantityStore = function(quantity, text)
{
	if(parseFloat(quantity)>0){
		$(this.storeQuanity).find('.icon').removeClass('order').addClass('stock');
	}else{
		$(this.storeQuanity).find('.icon').removeClass('stock').addClass('order');
	}
	$(this.storeQuanity).find('.icon + span').html(text);
	if(!$(".stores_tab").length){
		$('.item-stock .store_view').removeClass('store_view');
	}
}

/*get compare sku*/
window.JCCatalogElementFast.prototype.CompareCountResult = function(result)
{
	if(result.COMPARE_COUNT){
		for(var i in result.ITEMS){
			if(result.ITEMS[i]==this.offers[this.offerNum].ID){
				this.offers[this.offerNum].COMPARE_ACTIVE=true;
				break;
			}else{
				this.offers[this.offerNum].COMPARE_ACTIVE=false;
			}
		}
		if(this.offers[this.offerNum].COMPARE_ACTIVE){
			$(this.obCompare).addClass('added');
			$(this.obCompare).find('.value:not(.added)').hide();
			$(this.obCompare).find('.value.added').css('display','block');
		}else{
			$(this.obCompare).removeClass('added');
			$(this.obCompare).find('.value.added').hide();
			$(this.obCompare).find('.value:not(.added)').css('display','block');
		}
	}
}

/*get item info*/
window.JCCatalogElementFast.prototype.ItemInfoResult = function(result)
{
	if(result.HTML){
		$(this.obBasketActions).html(result.HTML);
		$(this.obBasketActions).show();
		this.obAddToBasketBtn = BX(this.visual.BUY_ID);
		this.obBasketBtn = BX(this.visual.BASKET_LINK);
		this.obSubscribeBtn = BX(this.visual.SUBSCRIBE_ID);
		this.obSubscribedBtn = BX(this.visual.SUBSCRIBED_ID);
		BX.bind(this.obAddToBasketBtn, 'click', BX.delegate(this.Add2Basket, this));
		$(this.obBasketActions).removeClass('wide');
		this.ajax_type_item=result.BUYMISSINGGOODS;
		if(result.BUYMISSINGGOODS!="ADD" && !this.canBuy){
			$(this.obBasketActions).addClass('wide');
		}else{
			$(this.obQuantity).css('display','');
		}
		if(result.ONE_CLICK_HTML){
			$('.wrapp_one_click').html(result.ONE_CLICK_HTML);
		}

	}
	//if(this.canBuy){
		basketParams = {
			ajax_action: 'Y'
		};
		BX.ajax.loadJSON(
			arOptimusOptions['SITE_DIR']+'ajax/get_basket_count.php',
			basketParams,
			BX.delegate(this.BasketCountResult, this)
		);
	//}
}

/*get basket items*/
window.JCCatalogElementFast.prototype.BasketCountResult = function(result)
{
	//if(result.TOTAL_COUNT){
		for(var i in result.ITEMS){
			if(result.ITEMS[i].PRODUCT_ID==this.offers[this.offerNum].ID){
				this.offers[this.offerNum].BASKET_ACTIVE=true;
				break;
			}else{
				this.offers[this.offerNum].BASKET_ACTIVE=false;
			}
		}
		for(var i in result.SUBSCRIBE_ITEMS){
			if(result.SUBSCRIBE_ITEMS[i].PRODUCT_ID==this.offers[this.offerNum].ID){
				this.offers[this.offerNum].SUBSCRIBE_ACTIVE=true;
				break;
			}else{
				this.offers[this.offerNum].SUBSCRIBE_ACTIVE=false;
			}
		}

		this.BasketStateRefresh();
	//}
}

window.JCCatalogElementFast.prototype.BasketStateRefresh = function(buy_basket)
{
	if(this.offers[this.offerNum].SUBSCRIBE_ACTIVE){
		$(this.obBasketActions).addClass('wide');
		$(this.obSubscribeBtn).hide();
		$(this.obSubscribedBtn).show();
	}else{
		$(this.obBasketActions).addClass('wide');
		$(this.obSubscribedBtn).hide();
		$(this.obSubscribeBtn).show();
	}

	if(this.offers[this.offerNum].BASKET_ACTIVE){
		$(this.obAddToBasketBtn).hide();
		$(this.obQuantity).closest('.counter_wrapp').find('.counter_block').hide();
		$(this.obBasketBtn).show();
		$(this.obBasketActions).addClass('wide');
	}else{
		$(this.obBasketActions).removeClass('wide');
		$(this.obBasketBtn).hide();
		if(this.ajax_type_item=="ADD" || this.canBuy)
			$(this.obQuantity).closest('.counter_wrapp').find('.counter_block').show();
		$(this.obAddToBasketBtn).show();
	}
	if(!this.canBuy){
		$(this.obBasketActions).addClass('wide');
	}
	if(this.canBuy){
		$('.one_click').removeClass('hidden_block').css('opacity', 1);
	}
	BX.style(this.obBasketActions, 'opacity', '1');
	$(this.obBasketActions).closest('.counter_wrapp').removeClass('hidden_block').css('opacity',1);

	if(buy_basket!== 'undefined' && buy_basket=="Y"){
		if($("#basket_line .basket_fly").length && $(window).outerWidth()>768)
		{
			// preAnimateBasketFly($("#basket_line .basket_fly"), 200, 333);
			basketFly('open');
		}
		else if($("#basket_line .cart").length)
		{
			if($("#basket_line .cart").is(".empty_cart"))
			{
				$("#basket_line .cart").removeClass("empty_cart").find(".cart_wrapp a.basket_link").removeAttr("href").addClass("cart-call");
				touchBasket('.cart:not(.empty_cart) .basket_block .link');
			}
			reloadTopBasket('add', $('#basket_line'), 200, 2000, 'Y');
			/*if($(window).outerWidth() > 520){
				//if(arOptimusOptions['THEME']['SHOW_BASKET_ONADDTOCART'] !== 'N'){
					preAnimateBasketPopup('', $('.card_popup_frame'), 0, 200);
				//}
			};*/
		}
		animateBasketLine(200);
	}
}

window.JCCatalogElementFast.prototype.setPriceAction = function(change, sku)
{
	var measure = this.offers[this.offerNum].MEASURE && this.offers[this.offerNum].SHOW_MEASURE=="Y" ? this.offers[this.offerNum].MEASURE : '';
	var product = $(this.obProduct),
		check_quantity = '',
		is_sku = (typeof sku !== 'undefined' && sku == 'Y');

	this.offers[this.offerNum].offer_set_quantity = this.offers[this.offerNum].CONFIG.MIN_QUANTITY_BUY;
	if($(product).find('input[name=quantity]').length)
		this.offers[this.offerNum].offer_set_quantity = $(product).find('input[name=quantity]').val();

	if(this.offers[this.offerNum].USE_PRICE_COUNT && this.offers[this.offerNum].PRICE_MATRIX)
	{
		this.checkPriceRange(this.offers[this.offerNum].offer_set_quantity);
		this.setPriceMatrix(this.offers[this.offerNum].PRICE_MATRIX);
	}
	else
	{
		if('PRICES' in this.offers[this.offerNum])
			this.setPrice(this.offers[this.offerNum].PRICES, measure);
	}

	if(arOptimusOptions['THEME']['SHOW_TOTAL_SUMM'] != 'N')
	{
		if(arOptimusOptions['THEME']['SHOW_TOTAL_SUMM'] == 'ALWAYS')
			this.offers[this.offerNum].check_quantity = true;

		if(this.offers[this.offerNum].check_quantity)
			check_quantity = 'Y';
		else
		{
			var check_quantity = ((typeof change !== 'undefined' && change == 'Y') ? change : '');
			if(check_quantity)
				this.offers[this.offerNum].check_quantity = true;
		}
		if(typeof this.currentPrices[this.currentPriceSelected] !== 'undefined')
			setPriceItem(product, this.offers[this.offerNum].offer_set_quantity, this.currentPrices[this.currentPriceSelected].PRICE, check_quantity, is_sku);
	}
}

window.JCCatalogElementFast.prototype.setPriceMatrix = function(sPriceMatrix)
{
	var prices = '';
	if (!!this.obPrice.price)
	{
		var measure = this.offers[this.offerNum].MEASURE && this.offers[this.offerNum].SHOW_MEASURE=="Y" ? this.offers[this.offerNum].MEASURE : '',
			strPrice = '';
		strPrice = getCurrentPrice(this.currentPrices[this.currentPriceSelected].PRICE, this.currentPrices[this.currentPriceSelected].CURRENCY, this.currentPrices[this.currentPriceSelected].PRINT_PRICE);
		if(measure)
			strPrice += '<span class="price_measure">/'+measure+'</span>';
		$(this.obProduct).find('.not_matrix').hide();
		$(this.obProduct).find('.with_matrix .price_value_block').html(strPrice);

		if (this.config.showOldPrice)
		{
			$(this.obProduct).find('.price.discount').hide();
			if(parseFloat(this.currentPrices[this.currentPriceSelected].BASE_PRICE) > parseFloat(this.currentPrices[this.currentPriceSelected].PRICE))
			{
				$(this.obProduct).find('.with_matrix .discount').html(getCurrentPrice(this.currentPrices[this.currentPriceSelected].BASE_PRICE, this.currentPrices[this.currentPriceSelected].CURRENCY, this.currentPrices[this.currentPriceSelected].PRINT_BASE_PRICE));
				$(this.obProduct).find('.with_matrix .discount').css('display', 'inline-block');
			}
			else
			{
				$(this.obProduct).find('.with_matrix .discount').html('');
				$(this.obProduct).find('.with_matrix .discount').css('display', 'none');
			}
		}
		else
		{
			$(this.obProduct).find('.with_matrix .discount').html('');
			$(this.obProduct).find('.with_matrix .discount').css('display', 'none');
		}

		$(this.obProduct).find('.sale_block.normal').hide();
		$(this.obProduct).find('.sale_block:not(.matrix)').hide();
		if(this.currentPrices[this.currentPriceSelected].PERCENT > 0)
		{
			$(this.obProduct).find('.with_matrix .sale_block .text .values_wrapper').html(getCurrentPrice(this.currentPrices[this.currentPriceSelected].DISCOUNT, this.currentPrices[this.currentPriceSelected].CURRENCY, this.currentPrices[this.currentPriceSelected].PRINT_DISCOUNT));
			$(this.obProduct).find('.with_matrix .sale_block .value span').html(this.currentPrices[this.currentPriceSelected].PERCENT);
			$(this.obProduct).find('.with_matrix .sale_block').show();
		}
		else
		{
			$(this.obProduct).find('.with_matrix .sale_block').hide();
		}
		$(this.obProduct).find('.with_matrix').show();

		BX.adjust(this.obPrice.price, {html: sPriceMatrix});

		var eventdata = {product: $(this.obProduct), measure: measure, config: this.config, offer: this.offers[this.offerNum], obPrice: this.currentPrices[this.currentPriceSelected]};
		BX.onCustomEvent('onAsproSkuSetPriceMatrix', [eventdata])
	}
}

window.JCCatalogElementFast.prototype.setPrice = function(change, sku, obPrices, measure, product, offer)
{
	var prices = '';
	if (!!this.obPrice.price)
	{
		var measure = this.offers[this.offerNum].MEASURE && this.offers[this.offerNum].SHOW_MEASURE=="Y" ? this.offers[this.offerNum].MEASURE : '',
			product = $(this.obProduct),
			obPrices = this.offers[this.offerNum].PRICES,
			check_quantity = '',
			is_sku = (typeof sku !== 'undefined' && sku == 'Y');

		if(typeof(obPrices) == 'object')
		{
			var strPrice = '',
				count = Object.keys(obPrices).length,
				arStikePrices = [];

			if(arOptimusOptions['THEME']['DISCOUNT_PRICE'])
			{
				arStikePrices = arOptimusOptions['THEME']['DISCOUNT_PRICE'].split(',');
			}

			strPrice = '<div class="offers_price_wrapper">';
			$(this.obProduct).find('.with_matrix').hide();
			$(this.obProduct).find('.not_matrix').show();

			this.offers[this.offerNum].offer_set_quantity = this.offers[this.offerNum].CONFIG.MIN_QUANTITY_BUY;
			if($(product).find('input[name=quantity]').length)
				this.offers[this.offerNum].offer_set_quantity = $(product).find('input[name=quantity]').val();

			if(this.config.showOldPrice)
			{
				$(this.obProduct).find('.price.discount').hide();
			}

			if (this.config.showPercent)
			{
				if (!!this.obPrice.percent)
				{
					BX.adjust(this.obPrice.percent, {style: {display: 'none'}, html: ''});
				}

				$(this.obPrice.price).closest('.cost').find('.sale_block:not(.matrix)').hide();
				$(this.obPrice.price).closest('.cost').find('.sale_block:not(.matrix) .value').html('');
				$(this.obPrice.price).closest('.cost').find('.sale_block:not(.matrix) .text span').html('');
			}

			for(var j in obPrices)
			{
				if(obPrices[j] && obPrices[j].VALUE > 0)
				{
					if('GROUP_NAME' in obPrices[j])
					{
						if(count > 1)
						{
							strPrice += '<div class="offers_price_title">';
							strPrice += obPrices[j].GROUP_NAME;
							strPrice += '</div>';
						}
					}


					strPrice += '<div class="offers_price'+(arStikePrices ? (BX.util.in_array(obPrices[j].PRICE_ID, arStikePrices) ? ' strike_block' : '') : '')+'">';
						strPrice += '<span class="values_wrapper">'+getCurrentPrice(obPrices[j].DISCOUNT_VALUE, obPrices[j].CURRENCY, obPrices[j].PRINT_DISCOUNT_VALUE)+'</span>';
						if(measure)
							strPrice += '<span class="price_measure">/'+measure+'</span>';

					strPrice += '</div>';
					if (obPrices[j].DISCOUNT_VALUE !== obPrices[j].VALUE)
					{
						if(this.config.showOldPrice)
						{
							strPrice += '<div class="offers_price_old">';
								strPrice += '<span class="values_wrapper">'+getCurrentPrice(obPrices[j].VALUE, obPrices[j].CURRENCY, obPrices[j].PRINT_VALUE)+'</span>';
							strPrice += '</div>';
						}
						if(this.config.showPercent)
						{
							strPrice += '<div class="sale_block">';
								if(obPrices[j].DISCOUNT_DIFF_PERCENT > 0 && obPrices[j].DISCOUNT_DIFF_PERCENT < 100)
								{
									strPrice += '<div class="value">-';
										strPrice += '<span>'+obPrices[j].DISCOUNT_DIFF_PERCENT+'</span>';
									strPrice += '%</div>';
								}
								strPrice += '<div class="text">';
									strPrice += '<span class="title">'+BX.message('ITEM_ECONOMY')+'</span>';
									strPrice += '<span class="values_wrapper">'+getCurrentPrice(obPrices[j].DISCOUNT_DIFF, obPrices[j].CURRENCY, obPrices[j].PRINT_DISCOUNT_DIFF)+'</span>';
								strPrice += '</div>';
							strPrice += '<div class="clearfix"></div></div>';
						}
					}
					else
					{
						if (this.config.showOldPrice)
						{
							if (!!this.obPrice.full)
							{
								BX.adjust(this.obPrice.full, {style: {display: 'none'}, html: ''});
							}
							if (!!this.obPrice.discount)
							{
								BX.adjust(this.obPrice.discount, {style: {display: 'none'}, html: ''});
							}
						}
					}
				}
				else
				{
					if(arOptimusOptions['THEME']['EMPTY_PRICE_TEXT'])
					{
						strPrice += '<span class="empty_price_text">' + arOptimusOptions['THEME']['EMPTY_PRICE_TEXT'] + '</span>';
					}
				}
			}
			strPrice += '</div>';
			BX.adjust(this.obPrice.price, {html: strPrice});

			if (!!this.obPrice.full)
			{
				$(this.obPrice.full).hide().html('');
				if(this.showPercent)
					$(this.obPrice.full).closest('.cost').find('.sale_block').hide();
			}

			var eventdata = {product: product, measure: measure, config: this.config, offer: this.offers[this.offerNum], obPrices: obPrices};
			BX.onCustomEvent('onAsproSkuSetPrice', [eventdata])
		}
	}
};

window.JCCatalogElementFast.prototype.Compare = function()
{
	var compareParams, compareLink;
	if($(this.obCompare).find('.added').is(':visible')){
		compareLink = this.compareData.compareUrlDel;
		this.compareData.Added = false;
	}else{
		compareLink = this.compareData.compareUrl;
		this.compareData.Added = true;
	}
	if (!!compareLink){
		switch (this.productType){
			case 1://product
			case 2://set
				compareLink = compareLink.replace('#ID#', this.product.id.toString());
				break;
			case 3://sku
				compareLink = compareLink.replace('#ID#', this.offers[this.offerNum].ID);
				break;
		}
		compareParams = {
			ajax_action: 'Y'
		};
		BX.ajax.loadJSON(
			compareLink,
			compareParams,
			BX.proxy(this.CompareResult, this)
		);
	}
};

window.JCCatalogElementFast.prototype.CompareResult = function(result)
{
	var popupContent, popupButtons, popupTitle;

	if (typeof result !== 'object')
	{
		return false;
	}
	if (result.STATUS === 'OK')
	{
		BX.onCustomEvent('OnCompareChange');
		if(!this.compareData.Added){
			$(this.obCompare).removeClass('added');
			$(this.obCompare).find('.added').hide();
			$(this.obCompare).find('.value:not(.added)').css('display','block');
		}
		else{
			$(this.obCompare).addClass('added');
			$(this.obCompare).find('.value:not(.added)').hide();
			$(this.obCompare).find('.added').css('display','block');
		}
		jsAjaxUtil.InsertDataToNode(arOptimusOptions['SITE_DIR'] + 'ajax/show_compare_preview_top.php', 'compare_line', false);
	}
	else
	{
		console.log(BX.message('ADD_ERROR_COMPARE'));
	}
	return false;
};

window.JCCatalogElementFast.prototype.CompareRedirect = function()
{
	if (!!this.compareData.comparePath)
	{
		location.href = this.compareData.comparePath;
	}
	else
	{
		this.obPopupWin.close();
	}
};

window.JCCatalogElementFast.prototype.InitBasketUrl = function()
{
	var product_url='';
	this.basketUrl = (this.basketMode === 'ADD' ? this.basketData.add_url : this.basketData.buy_url);
	switch (this.productType)
	{
		case 1://product
		case 2://set
			this.basketUrl = this.basketUrl.replace('#ID#', this.product.id.toString());
			product_url=this.product.id.toString();
			break;
		case 3://sku
			this.basketUrl = this.basketUrl.replace('#ID#', this.offers[this.offerNum].ID);
			product_url=this.offers[this.offerNum].URL;
			break;
	}
	this.basketParams = {
		'ajax_basket': 'Y'
	};
	if (this.config.showQuantity)
	{
		this.basketParams[this.basketData.quantity] = this.obQuantity.value;
	}
	if (!!this.basketData.sku_props)
	{
		this.basketParams[this.basketData.sku_props_var] = this.basketData.sku_props;
	}
	if (!!product_url)
	{
		this.basketParams["REQUEST_URI"] = product_url;
	}
};

window.JCCatalogElementFast.prototype.FillBasketProps = function()
{
	if (!this.visual.BASKET_PROP_DIV)
	{
		return;
	}
	var
		i = 0,
		propCollection = null,
		foundValues = false,
		obBasketProps = null;
	if (this.basketData.useProps && !this.basketData.emptyProps)
	{
		if (!!this.obPopupWin && !!this.obPopupWin.contentContainer)
		{
			obBasketProps = this.obPopupWin.contentContainer;
		}
	}
	else
	{
		obBasketProps = BX(this.visual.BASKET_PROP_DIV);
	}
	if (!!obBasketProps)
	{
		propCollection = obBasketProps.getElementsByTagName('select');
		if (!!propCollection && !!propCollection.length)
		{
			for (i = 0; i < propCollection.length; i++)
			{
				if (!propCollection[i].disabled)
				{
					switch(propCollection[i].type.toLowerCase())
					{
						case 'select-one':
							this.basketParams[propCollection[i].name] = propCollection[i].value;
							foundValues = true;
							break;
						default:
							break;
					}
				}
			}
		}
		propCollection = obBasketProps.getElementsByTagName('input');
		if (!!propCollection && !!propCollection.length)
		{
			for (i = 0; i < propCollection.length; i++)
			{
				if (!propCollection[i].disabled)
				{
					switch(propCollection[i].type.toLowerCase())
					{
						case 'hidden':
							this.basketParams[propCollection[i].name] = propCollection[i].value;
							foundValues = true;
							break;
						case 'radio':
							if (propCollection[i].checked)
							{
								this.basketParams[propCollection[i].name] = propCollection[i].value;
								foundValues = true;
							}
							break;
						default:
							break;
					}
				}
			}
		}
	}
	if (!foundValues)
	{
		this.basketParams[this.basketData.props] = [];
		this.basketParams[this.basketData.props][0] = 0;
	}
};

window.JCCatalogElementFast.prototype.SendToBasket = function()
{
	if (!this.canBuy)
	{
		return;
	}
	this.InitBasketUrl();
	this.FillBasketProps();
	BX.ajax.loadJSON(
		this.basketUrl,
		this.basketParams,
		BX.proxy(this.BasketResult, this)
	);
};

window.JCCatalogElementFast.prototype.Add2Basket = function()
{
	this.basketMode = 'ADD';
	this.Basket();
};

window.JCCatalogElementFast.prototype.BuyBasket = function()
{
	this.basketMode = 'BUY';
	this.Basket();
};

window.JCCatalogElementFast.prototype.Basket = function()
{
	var contentBasketProps = '';
	if (!this.canBuy)
	{
		return;
	}
	this.SendToBasket();
};

window.JCCatalogElementFast.prototype.BasketResult = function(arResult)
{
	var popupContent, popupButtons, popupTitle, productPict;
	if (!!this.obPopupWin)
	{
		this.obPopupWin.close();
	}
	if (typeof arResult !== 'object')
	{
		return false;
	}
	if (arResult.STATUS === 'OK' && this.basketMode === 'BUY')
	{
		this.BasketRedirect();
	}
	else
	{
		// this.InitPopupWindow();
		popupTitle = {
			content: BX.create('div', {
				style: { marginRight: '30px', whiteSpace: 'nowrap' },
				text: (arResult.STATUS === 'OK' ? BX.message('TITLE_SUCCESSFUL') : BX.message('TITLE_ERROR'))
			})
		};
		if (arResult.STATUS === 'OK')
		{
			BX.onCustomEvent('OnBasketChange');
			this.offers[this.offerNum].BASKET_ACTIVE=true;
			this.BasketStateRefresh("Y");
		}
		else
		{
			console.log(BX.message('ADD_ERROR_BASKET'));
		}
	}
	return false;
};

window.JCCatalogElementFast.prototype.BasketRedirect = function()
{
	location.href = (!!this.basketData.basketUrl ? this.basketData.basketUrl : BX.message('BASKET_URL'));
};

window.JCCatalogElementFast.prototype.InitPopupWindow = function()
{
	if (!!this.obPopupWin)
	{
		return;
	}
	this.obPopupWin = BX.PopupWindowManager.create('CatalogElementBasket_'+this.visual.ID, null, {
		autoHide: false,
		offsetLeft: 0,
		offsetTop: 0,
		overlay : true,
		closeByEsc: true,
		titleBar: true,
		closeIcon: {top: '10px', right: '10px'}
	});
};

window.JCCatalogElementFast.prototype.onPopupWindowShow = function(popup)
{
	BX.bind(document, 'click', BX.proxy(this.popupWindowClick, this));
};

window.JCCatalogElementFast.prototype.onPopupWindowClose = function(popup, event)
{
	BX.unbind(document, 'click', BX.proxy(this.popupWindowClick, this));
};

window.JCCatalogElementFast.prototype.popupWindowClick = function()
{
	if (!!this.obPopupPict && typeof (this.obPopupPict) === 'object')
	{
		if (this.obPopupPict.isShown())
		{
			this.obPopupPict.close();
		}
	}
};

window.JCCatalogElementFast.prototype.incViewedCounter = function()
{
	if (this.currentIsSet && !this.updateViewedCount)
	{

		switch (this.productType)
		{
			case 1:
			case 2:
				this.viewedCounter.params.PRODUCT_ID = this.product.id;
				this.viewedCounter.params.PARENT_ID = this.product.id;
				break;
			case 3:
				this.viewedCounter.params.PARENT_ID = this.product.id;
				this.viewedCounter.params.PRODUCT_ID = this.offers[this.offerNum].ID;
				break;
			default:
				return;
		}
		this.viewedCounter.params.SITE_ID = BX.message('SITE_ID');
		this.updateViewedCount = true;
		BX.ajax.post(
			this.viewedCounter.path,
			this.viewedCounter.params,
			BX.delegate(function(){ this.updateViewedCount = false; }, this)
		);
	}
};

window.JCCatalogElementFast.prototype.allowViewedCount = function(update)
{
	update = !!update;
	this.currentIsSet = true;
	if (update)
	{
		this.incViewedCounter();
	}
};
})(window);142  84652|/aspro.optimus/install/wizards/aspro/optimus/site/templates/aspro_optimus/components/bitrix/catalog.element/main2/script.min.js|3280a33fvar ItemObj={};$(document).on("click",".item-stock .store_view",(function(){scroll_block($(".tabs_section"))})),$(document).ready((function(){function equalTizerHeight(){$(".tizers_block_detail .item_block").length&&$(".tizers_block_detail .item_block").each((function(){var th=$(this).find(".text"),img=$(this).find(".image"),h=th.height(),p=26;img.length&&th.height()<img.height()&&((p=Math.floor((img.height()-th.height())/2))<0&&(p=0),th.css("padding-top",p+"px"))}))}$(".opener").click((function(){var showBlock;$(this).find(".opener_icon").toggleClass("opened"),$(this).parents(".table-view__item--has-stores").toggleClass("nb").find(".offer_stores").find(".stores_block_wrap").slideToggle(200)})),$(document).on("click",".tabs_section .tabs-head li",(function(){$(this).is(".current")||($(".tabs_section .tabs-head li").removeClass("current"),$(this).addClass("current"),$(".tabs_section ul.tabs_content li").removeClass("current"),"product_reviews_tab"==$(this).attr("id")?($(".shadow.common").hide(),$("#reviews_content").show()):($(".shadow.common").show(),$("#reviews_content").hide(),$(".tabs_section ul.tabs_content > li:eq("+$(this).index()+")").addClass("current")))})),$(".hint .icon").click((function(e){var tooltipWrapp=$(this).parents(".hint");tooltipWrapp.click((function(e){e.stopPropagation()})),tooltipWrapp.is(".active")?tooltipWrapp.removeClass("active").find(".tooltip").slideUp(200):($(".catalog_detail .hint").removeClass("active"),$(".catalog_detail .hint .tooltip").slideUp(100),tooltipWrapp.addClass("active").find(".tooltip").slideDown(200),tooltipWrapp.find(".tooltip_close").click((function(e){e.stopPropagation(),tooltipWrapp.removeClass("active").find(".tooltip").slideUp(100)})),$(document).click((function(){tooltipWrapp.removeClass("active").find(".tooltip").slideUp(100)})))})),equalTizerHeight(),BX.addCustomEvent("onWindowResize",(function(eventdata){try{ignoreResize.push(!0),equalTizerHeight()}catch(e){}finally{ignoreResize.pop()}}))})),$(".set_block").ready((function(){$(".set_block ").equalize({children:'.item:not(".r") .cost',reset:!0}),$(".set_block").equalize({children:".item .item-title",reset:!0}),$(".set_block").equalize({children:".item .item_info",reset:!1})})),function(window){if(window.JCCatalogOnlyElement||(window.JCCatalogOnlyElement=function(arParams){"object"==typeof arParams&&(this.params=arParams,this.obProduct=null,this.set_quantity=1,this.currentPriceMode="",this.currentPrices=[],this.currentPriceSelected=0,this.currentQuantityRanges=[],this.currentQuantityRangeSelected=0,this.params.MESS&&(this.mess=this.params.MESS),this.init())},window.JCCatalogOnlyElement.prototype={init:function(){var i=0,j=0,treeItems=null;this.obProduct=BX(this.params.ID),this.obProduct&&($(this.obProduct).find(".counter_wrapp .counter_block input").data("product","ob"+this.obProduct.id+"el"),this.currentPriceMode=this.params.ITEM_PRICE_MODE,this.currentPrices=this.params.ITEM_PRICES,this.currentQuantityRanges=this.params.ITEM_QUANTITY_RANGES)},setPriceAction:function(){this.set_quantity=this.params.MIN_QUANTITY_BUY,$(this.obProduct).find("input[name=quantity]").length&&(this.set_quantity=$(this.obProduct).find("input[name=quantity]").val()),this.checkPriceRange(this.set_quantity),$(this.obProduct).find(".not_matrix").hide(),$(this.obProduct).find(".with_matrix .price_value_block").html(getCurrentPrice(this.currentPrices[this.currentPriceSelected].PRICE,this.currentPrices[this.currentPriceSelected].CURRENCY,this.currentPrices[this.currentPriceSelected].PRINT_PRICE)),$(this.obProduct).find(".with_matrix .discount")&&$(this.obProduct).find(".with_matrix .discount").html(getCurrentPrice(this.currentPrices[this.currentPriceSelected].BASE_PRICE,this.currentPrices[this.currentPriceSelected].CURRENCY,this.currentPrices[this.currentPriceSelected].PRINT_BASE_PRICE)),$(this.obProduct).find(".with_matrix .sale_block .text .values_wrapper").html(getCurrentPrice(this.currentPrices[this.currentPriceSelected].DISCOUNT,this.currentPrices[this.currentPriceSelected].CURRENCY,this.currentPrices[this.currentPriceSelected].PRINT_DISCOUNT)),$(this.obProduct).find(".with_matrix .sale_block .value span").html(this.currentPrices[this.currentPriceSelected].PERCENT),$(this.obProduct).find(".with_matrix").show(),"N"!=arOptimusOptions.THEME.SHOW_TOTAL_SUMM&&void 0!==this.currentPrices[this.currentPriceSelected]&&setPriceItem($(this.obProduct),this.set_quantity,this.currentPrices[this.currentPriceSelected].PRICE)},checkPriceRange:function(quantity){if(void 0!==quantity&&"Q"==this.currentPriceMode){var range,found=!1;for(var i in this.currentQuantityRanges)if(this.currentQuantityRanges.hasOwnProperty(i)&&(range=this.currentQuantityRanges[i],parseInt(quantity)>=parseInt(range.SORT_FROM)&&("INF"==range.SORT_TO||parseInt(quantity)<=parseInt(range.SORT_TO)))){found=!0,this.currentQuantityRangeSelected=range.HASH;break}for(var k in!found&&(range=this.getMinPriceRange())&&(this.currentQuantityRangeSelected=range.HASH),this.currentPrices)if(this.currentPrices.hasOwnProperty(k)&&this.currentPrices[k].QUANTITY_HASH==this.currentQuantityRangeSelected){this.currentPriceSelected=k;break}}},getMinPriceRange:function(){var range;for(var i in this.currentQuantityRanges)this.currentQuantityRanges.hasOwnProperty(i)&&(!range||parseInt(this.currentQuantityRanges[i].SORT_FROM)<parseInt(range.SORT_FROM))&&(range=this.currentQuantityRanges[i]);return range}}),!window.JCCatalogElement){var BasketButton=function(params){BasketButton.superclass.constructor.apply(this,arguments),this.nameNode=BX.create("span",{props:{className:"bx_medium bx_bt_button",id:this.id},style:"object"==typeof params.style?params.style:{},text:params.text}),this.buttonNode=BX.create("span",{attrs:{className:params.ownerClass},children:[this.nameNode],events:this.contextEvents}),BX.browser.IsIE()&&this.buttonNode.setAttribute("hideFocus","hidefocus")};BX.extend(BasketButton,BX.PopupWindowButton),window.JCCatalogElement=function(arParams){if(this.skuVisualParams={SELECT:{TAG_BIND:"select",TAG:"option",ACTIVE_CLASS:"active",HIDE_CLASS:"hidden",EVENT:"change"},LI:{TAG_BIND:"li",TAG:"li",ACTIVE_CLASS:"active",HIDE_CLASS:"missing",EVENT:"click"}},this.productType=0,this.config={useCatalog:!0,showQuantity:!0,showPrice:!0,showAbsent:!0,showOldPrice:!1,showPercent:!1,showSkuProps:!1,showOfferGroup:!1,useCompare:!1,mainPictureMode:"IMG",showBasisPrice:!1,offerShowPreviewPictureProps:!1,basketAction:["BUY"],showClosePopup:!1},this.basketLinkURL="",this.checkQuantity=!1,this.maxQuantity=0,this.SliderImages=0,this.defaultCount=1,this.stepQuantity=1,this.isDblQuantity=!1,this.canBuy=!0,this.currentBasisPrice={},this.canSubscription=!0,this.currentIsSet=!1,this.updateViewedCount=!1,this.currentPriceMode="",this.currentPrices=[],this.currentPriceSelected=0,this.currentQuantityRanges=[],this.currentQuantityRangeSelected=0,this.precision=6,this.precisionFactor=Math.pow(10,this.precision),this.listID={main:["PICT_ID","BIG_SLIDER_ID","BIG_IMG_CONT_ID"],stickers:["STICKER_ID"],productSlider:["SLIDER_CONT","SLIDER_LIST","SLIDER_LEFT","SLIDER_RIGHT"],offerSlider:["SLIDER_CONT_OF_ID","SLIDER_LIST_OF_ID","SLIDER_LEFT_OF_ID","SLIDER_RIGHT_OF_ID"],offerSliderMobile:["SLIDER_CONT_OFM_ID","SLIDER_LIST_OFM_ID","SLIDER_LEFT_OFM_ID","SLIDER_RIGHT_OFM_ID"],offers:["TREE_ID","TREE_ITEM_ID","DISPLAY_PROP_DIV","DISPLAY_PROP_ARTICLE_DIV","OFFER_GROUP"],quantity:["QUANTITY_ID","QUANTITY_UP_ID","QUANTITY_DOWN_ID","QUANTITY_MEASURE","QUANTITY_LIMIT","BASIS_PRICE"],price:["PRICE_ID"],oldPrice:["OLD_PRICE_ID","DISCOUNT_VALUE_ID"],discountPerc:["DISCOUNT_PERC_ID"],basket:["BASKET_PROP_DIV","BUY_ID","BASKET_LINK","ADD_BASKET_ID","BASKET_ACTIONS_ID","NOT_AVAILABLE_MESS","SUBSCRIBE_ID","SUBSCRIBED_ID"],magnifier:["MAGNIFIER_ID","MAGNIFIER_AREA_ID"],compare:["COMPARE_LINK_ID"]},this.visualPostfix={PICT_ID:"_pict",BIG_SLIDER_ID:"_big_slider",BIG_IMG_CONT_ID:"_bigimg_cont",STICKER_ID:"_sticker",SLIDER_CONT:"_slider_cont",SLIDER_LIST:"_slider_list",SLIDER_LEFT:"_slider_left",SLIDER_RIGHT:"_slider_right",SLIDER_CONT_OF_ID:"_slider_cont_",SLIDER_LIST_OF_ID:"_slider_list_",SLIDER_LEFT_OF_ID:"_slider_left_",SLIDER_RIGHT_OF_ID:"_slider_right_",SLIDER_CONT_OFM_ID:"_sliderm_cont_",SLIDER_LIST_OFM_ID:"_sliderm_list_",SLIDER_LEFT_OFM_ID:"_sliderm_left_",SLIDER_RIGHT_OFM_ID:"_sliderm_right_",TREE_ID:"_skudiv",TREE_ITEM_ID:"_prop_",DISPLAY_PROP_DIV:"_sku_prop",DISPLAY_PROP_ARTICLE_DIV:"_sku_article_prop",QUANTITY_ID:"_quantity",QUANTITY_UP_ID:"_quant_up",QUANTITY_DOWN_ID:"_quant_down",QUANTITY_MEASURE:"_quant_measure",QUANTITY_LIMIT:"_quant_limit",BASIS_PRICE:"_basis_price",PRICE_ID:"_price",OLD_PRICE_ID:"_old_price",DISCOUNT_VALUE_ID:"_price_discount",DISCOUNT_PERC_ID:"_dsc_pict",BASKET_PROP_DIV:"_basket_prop",BUY_ID:"_buy_link",BASKET_LINK:"_basket_link",ADD_BASKET_ID:"_add_basket_link",BASKET_ACTIONS_ID:"_basket_actions",NOT_AVAILABLE_MESS:"_not_avail",SUBSCRIBE_ID:"_subscribe_div",SUBSCRIBED_ID:"_subscribed_div",MAGNIFIER_ID:"_magnifier",MAGNIFIER_AREA_ID:"_magnifier_area",OFFER_GROUP:"_set_group_",COMPARE_LINK_ID:"_compare_link"},this.visual={},this.basketMode="",this.product={checkQuantity:!1,maxQuantity:0,stepQuantity:1,startQuantity:1,isDblQuantity:!1,canBuy:!0,canSubscription:!0,name:"",pict:{},id:0,addUrl:"",buyUrl:"",slider:{},sliderCount:0,useSlider:!1,sliderPict:[]},this.mess={},this.basketData={useProps:!1,emptyProps:!1,quantity:"quantity",props:"prop",basketUrl:"",sku_props:"",sku_props_var:"basket_props",add_url:"",buy_url:""},this.compareData={compareUrl:"",comparePath:""},this.defaultPict={preview:null,detail:null},this.offers=[],this.offerNum=0,this.treeProps=[],this.obTreeRows=[],this.showCount=[],this.showStart=[],this.selectedValues={},this.sliders=[],this.obProduct=null,this.obQuantity=null,this.obQuantityUp=null,this.obQuantityDown=null,this.obBasisPrice=null,this.obPict=null,this.obPictAligner=null,this.obPrice={price:null,full:null,discount:null,percent:null},this.obTree=null,this.obBuyBtn=null,this.obBasketBtn=null,this.obAddToBasketBtn=null,this.obBasketActions=null,this.obNotAvail=null,this.obSkuProps=null,this.obSlider=null,this.obMeasure=null,this.obQuantityLimit={all:null,value:null},this.obCompare=null,this.viewedCounter={path:"/bitrix/components/bitrix/catalog.element/ajax.php",params:{AJAX:"Y",SITE_ID:"",PRODUCT_ID:0,PARENT_ID:0}},this.currentImg={src:"",width:0,height:0,screenWidth:0,screenHeight:0,screenOffsetX:0,screenOffsetY:0,scale:1},this.currentBigImg={src:""},this.obPopupWin=null,this.basketUrl="",this.basketParams={},this.obPopupPict=null,this.magnify={obMagnifier:null,obMagnifyPict:null,obMagnifyArea:null,obBigImg:null,obBigSlider:null,magnifyShow:!1,areaParams:{width:100,height:130,left:0,top:0,scaleFactor:1,globalLeft:0,globalTop:0,globalRight:0,globalBottom:0},magnifierParams:{top:0,left:0,width:0,height:0,ratioX:10,ratioY:13,defaultScale:1},magnifyPictParams:{marginTop:0,marginLeft:0,width:0,height:0}},this.treeRowShowSize=5,this.treeEnableArrow={display:"",cursor:"pointer",opacity:1},this.treeDisableArrow={display:"",cursor:"default",opacity:.2},this.sliderRowShowSize=5,this.sliderEnableArrow={display:"",cursor:"pointer",opacity:1},this.sliderDisableArrow={display:"",cursor:"default",opacity:.2},this.errorCode=0,"object"==typeof arParams){switch(this.params=arParams,this.initConfig(),this.params.MESS&&(this.mess=this.params.MESS),this.productType){case 0:case 1:case 2:this.initProductData();break;case 3:this.initOffersData();break;default:this.errorCode=-1}this.initBasketData(),this.initCompareData()}0===this.errorCode&&BX.ready(BX.delegate(this.Init,this)),this.params={}},window.JCCatalogElement.prototype.Init=function(){var i=0,j=0,strPrefix="",SliderImgs=null,TreeItems=null;if(this.obProduct=BX(this.visual.ID),this.obProduct||(this.errorCode=-1),this.obPict=BX(this.visual.PICT_ID),this.obPict?this.obPictAligner=this.obPict.parentNode:this.errorCode=-2,this.config.showPrice&&(this.obPrice.price=BX(this.visual.PRICE_ID),!this.obPrice.price&&this.config.useCatalog?this.errorCode=-16:(this.config.showOldPrice&&(this.obPrice.full=BX(this.visual.OLD_PRICE_ID),this.obPrice.discount=BX(this.visual.DISCOUNT_VALUE_ID),this.obPrice.full&&BX.adjust(this.obPrice.full,{style:{display:"none"},html:""})),this.config.showPercent&&(this.obPrice.percent=BX(this.visual.DISCOUNT_PERC_ID))),this.obBasketActions=BX(this.visual.BASKET_ACTIONS_ID),this.obBasketActions&&(BX.util.in_array("BUY",this.config.basketAction)&&(this.obBuyBtn=BX(this.visual.BUY_ID)),BX.util.in_array("ADD",this.config.basketAction)&&(this.obAddToBasketBtn=BX(this.visual.BUY_ID)),this.visual.BASKET_LINK&&(this.obBasketBtn=BX(this.visual.BASKET_LINK))),this.obNotAvail=BX(this.visual.NOT_AVAILABLE_MESS)),this.config.showQuantity&&(this.obQuantity=BX(this.visual.QUANTITY_ID),this.visual.QUANTITY_UP_ID&&(this.obQuantityUp=BX(this.visual.QUANTITY_UP_ID)),this.visual.QUANTITY_DOWN_ID&&(this.obQuantityDown=BX(this.visual.QUANTITY_DOWN_ID)),this.config.showBasisPrice&&(this.obBasisPrice=BX(this.visual.BASIS_PRICE))),3===this.productType){if(this.visual.TREE_ID)for(this.obTree=BX(this.visual.TREE_ID),this.obTree||(this.errorCode=-256),strPrefix=this.visual.TREE_ITEM_ID,i=0;i<this.treeProps.length;i++)if(this.obTreeRows[i]={LEFT:BX(strPrefix+this.treeProps[i].ID+"_left"),RIGHT:BX(strPrefix+this.treeProps[i].ID+"_right"),LIST:BX(strPrefix+this.treeProps[i].ID+"_list"),CONT:BX(strPrefix+this.treeProps[i].ID+"_cont")},!this.obTreeRows[i].LIST||!this.obTreeRows[i].CONT){this.errorCode=-512;break}this.visual.QUANTITY_MEASURE&&(this.obMeasure=BX(this.visual.QUANTITY_MEASURE)),this.visual.QUANTITY_LIMIT&&(this.obQuantityLimit.all=BX(this.visual.QUANTITY_LIMIT),this.obQuantityLimit.all&&(this.obQuantityLimit.value=BX.findChild(this.obQuantityLimit.all,{tagName:"span"},!1,!1),this.obQuantityLimit.value||(this.obQuantityLimit.all=null)))}if(this.config.showSkuProps&&(this.visual.DISPLAY_PROP_DIV&&(this.obSkuProps=BX(this.visual.DISPLAY_PROP_DIV)),this.visual.DISPLAY_PROP_ARTICLE_DIV&&(this.obSkuArticleProps=BX(this.visual.DISPLAY_PROP_ARTICLE_DIV))),this.config.useCompare&&(this.obCompare=BX(this.visual.COMPARE_LINK_ID)),0===this.errorCode){switch(this.config.showQuantity&&(this.obQuantityUp&&BX.bind(this.obQuantityUp,"click",BX.delegate(this.QuantityUp,this)),this.obQuantityDown&&BX.bind(this.obQuantityDown,"click",BX.delegate(this.QuantityDown,this)),this.obQuantity&&BX.bind(this.obQuantity,"change",BX.delegate(this.QuantityChange,this))),this.productType){case 0:case 1:case 2:if(this.product.useSlider){if(this.product.slider={COUNT:this.product.sliderCount,ID:this.visual.SLIDER_CONT,CONT:BX(this.visual.SLIDER_CONT),LIST:BX(this.visual.SLIDER_LIST),LEFT:BX(this.visual.SLIDER_LEFT),RIGHT:BX(this.visual.SLIDER_RIGHT),START:0},(SliderImgs=BX.findChildren(this.product.slider.LIST,{tagName:"li"},!0))&&0<SliderImgs.length)for(j=0;j<SliderImgs.length;j++)BX.bind(SliderImgs[j],"click",BX.delegate(this.ProductSelectSliderImg,this));this.product.slider.LEFT&&(BX.bind(this.product.slider.LEFT,"click",BX.delegate(this.ProductSliderRowLeft,this)),BX.adjust(this.product.slider.LEFT,{style:this.sliderDisableArrow})),this.product.slider.RIGHT&&(BX.bind(this.product.slider.RIGHT,"click",BX.delegate(this.ProductSliderRowRight,this)),BX.adjust(this.product.slider.RIGHT,{style:this.sliderEnableArrow})),this.setCurrentImg(this.product.sliderPict[0],!0)}break;case 3:for(var key in this.skuVisualParams){var TreeItems;if((TreeItems=BX.findChildren(this.obTree,{tagName:this.skuVisualParams[key].TAG_BIND},!0))&&0<TreeItems.length)for(i=0;i<TreeItems.length;i++)$(TreeItems[i]).on(this.skuVisualParams[key].EVENT,BX.delegate(this.SelectOfferProp,this))}for(i=0;i<this.offers.length;i++)if(this.offers[i].SLIDER_COUNT=parseInt(this.offers[i].SLIDER_COUNT,10),isNaN(this.offers[i].SLIDER_COUNT)&&(this.offers[i].SLIDER_COUNT=0),0===this.offers[i].SLIDER_COUNT)this.sliders[i]={COUNT:this.offers[i].SLIDER_COUNT,ID:""};else{for(j=0;j<this.offers[i].SLIDER.length;j++)this.offers[i].SLIDER[j].WIDTH=parseInt(this.offers[i].SLIDER[j].WIDTH,10),this.offers[i].SLIDER[j].HEIGHT=parseInt(this.offers[i].SLIDER[j].HEIGHT,10);if(this.sliders[i]={COUNT:this.offers[i].SLIDER_COUNT,OFFER_ID:this.offers[i].ID,ID:this.visual.SLIDER_CONT_OF_ID+this.offers[i].ID,CONT:BX(this.visual.SLIDER_CONT_OF_ID+this.offers[i].ID),LIST:BX(this.visual.SLIDER_LIST_OF_ID+this.offers[i].ID),CONT_M:BX(this.visual.SLIDER_CONT_OFM_ID+this.offers[i].ID),LIST_M:BX(this.visual.SLIDER_LIST_OFM_ID+this.offers[i].ID),LEFT:BX(this.visual.SLIDER_LEFT_OF_ID+this.offers[i].ID),RIGHT:BX(this.visual.SLIDER_RIGHT_OF_ID+this.offers[i].ID),START:0},(SliderImgs=BX.findChildren(this.sliders[i].LIST,{tagName:"li"},!0))&&0<SliderImgs.length)for(j=0;j<SliderImgs.length;j++)BX.bind(SliderImgs[j],"click",BX.delegate(this.SelectSliderImg,this));this.sliders[i].LEFT&&BX.bind(this.sliders[i].LEFT,"click",BX.delegate(this.SliderRowLeft,this)),this.sliders[i].RIGHT&&BX.bind(this.sliders[i].RIGHT,"click",BX.delegate(this.SliderRowRight,this))}this.SetCurrent()}this.obBuyBtn&&BX.bind(this.obBuyBtn,"click",BX.proxy(this.BuyBasket,this)),this.obAddToBasketBtn&&BX.bind(this.obAddToBasketBtn,"click",BX.proxy(this.Add2Basket,this)),this.obCompare&&BX.bind(this.obCompare,"click",BX.proxy(this.Compare,this)),this.setMainPictHandler(),setTimeout((function(){$(".offers_img.wof").css("opacity",1)}),400)}},window.JCCatalogElement.prototype.initConfig=function(){this.productType=parseInt(this.params.PRODUCT_TYPE,10),this.params.CONFIG&&"object"==typeof this.params.CONFIG?("undefined"!==this.params.CONFIG.USE_CATALOG&&BX.type.isBoolean(this.params.CONFIG.USE_CATALOG)&&(this.config.useCatalog=this.params.CONFIG.USE_CATALOG),this.config.showQuantity=!!this.params.CONFIG.SHOW_QUANTITY,this.config.showPrice=!!this.params.CONFIG.SHOW_PRICE,this.config.showPercent=!!this.params.CONFIG.SHOW_DISCOUNT_PERCENT,this.config.showOldPrice=!!this.params.CONFIG.SHOW_OLD_PRICE,this.config.showSkuProps=!!this.params.CONFIG.SHOW_SKU_PROPS,this.config.showOfferGroup=!!this.params.CONFIG.OFFER_GROUP,this.config.useCompare=!!this.params.CONFIG.DISPLAY_COMPARE,this.config.offerShowPreviewPictureProps=this.params.OFFER_SHOW_PREVIEW_PICTURE_PROPS,this.params.CONFIG.MAIN_PICTURE_MODE&&(this.config.mainPictureMode=this.params.CONFIG.MAIN_PICTURE_MODE),this.config.showBasisPrice=!!this.params.CONFIG.SHOW_BASIS_PRICE,this.params.CONFIG.ADD_TO_BASKET_ACTION&&(this.config.basketAction=this.params.CONFIG.ADD_TO_BASKET_ACTION),this.config.showClosePopup=!!this.params.CONFIG.SHOW_CLOSE_POPUP):("undefined"!==this.params.USE_CATALOG&&BX.type.isBoolean(this.params.USE_CATALOG)&&(this.config.useCatalog=this.params.USE_CATALOG),this.config.showQuantity=!!this.params.SHOW_QUANTITY,this.config.showPrice=!!this.params.SHOW_PRICE,this.config.showPercent=!!this.params.SHOW_DISCOUNT_PERCENT,this.config.showOldPrice=!!this.params.SHOW_OLD_PRICE,this.config.showSkuProps=!!this.params.SHOW_SKU_PROPS,this.config.showOfferGroup=!!this.params.OFFER_GROUP,this.config.useCompare=!!this.params.DISPLAY_COMPARE,this.params.MAIN_PICTURE_MODE&&(this.config.mainPictureMode=this.params.MAIN_PICTURE_MODE),this.config.showBasisPrice=!!this.params.SHOW_BASIS_PRICE,this.params.ADD_TO_BASKET_ACTION&&(this.config.basketAction=this.params.ADD_TO_BASKET_ACTION),this.config.showClosePopup=!!this.params.SHOW_CLOSE_POPUP),this.config.SKU_DETAIL_ID=this.params.SKU_DETAIL_ID,this.params.VISUAL&&"object"==typeof this.params.VISUAL&&this.params.VISUAL.ID?(this.visual.ID=this.params.VISUAL.ID,this.basketLinkURL=this.params.BASKET.BASKET_URL,this.defaultCount=this.params.DEFAULT_COUNT,this.storeQuanity=BX(this.params.STORE_QUANTITY),this.initVisualParams("main"),this.config.showQuantity&&this.initVisualParams("quantity"),this.config.showPrice&&this.initVisualParams("price"),this.config.showOldPrice&&this.initVisualParams("oldPrice"),this.config.showPercent&&this.initVisualParams("discountPerc"),this.initVisualParams("basket"),"MAGNIFIER"===this.config.mainPictureMode&&this.initVisualParams("magnifier"),this.config.useCompare&&this.initVisualParams("compare")):this.errorCode=-1},window.JCCatalogElement.prototype.initVisualParams=function(ID){var i=0,key="";if(this.listID[ID])for(i=0;i<this.listID[ID].length;i++)key=this.listID[ID][i],this.visual[key]=this.params.VISUAL[key]?this.params.VISUAL[key]:this.visual.ID+this.visualPostfix[key];else this.errorCode=-1},window.JCCatalogElement.prototype.initProductData=function(){var j=0;if(this.initVisualParams("productSlider"),this.params.PRODUCT&&"object"==typeof this.params.PRODUCT){if(this.config.showQuantity&&(this.product.checkQuantity=this.params.PRODUCT.CHECK_QUANTITY,this.product.isDblQuantity=this.params.PRODUCT.QUANTITY_FLOAT,this.product.checkQuantity&&(this.product.maxQuantity=this.product.isDblQuantity?parseFloat(this.params.PRODUCT.MAX_QUANTITY):parseInt(this.params.PRODUCT.MAX_QUANTITY,10)),this.product.stepQuantity=this.product.isDblQuantity?parseFloat(this.params.PRODUCT.STEP_QUANTITY):parseInt(this.params.PRODUCT.STEP_QUANTITY,10),this.checkQuantity=this.product.checkQuantity,this.isDblQuantity=this.product.isDblQuantity,this.maxQuantity=this.product.maxQuantity,this.stepQuantity=this.product.stepQuantity,this.isDblQuantity&&(this.stepQuantity=Math.round(this.stepQuantity*this.precisionFactor)/this.precisionFactor)),this.product.canBuy=this.params.PRODUCT.CAN_BUY,this.product.canSubscription=this.params.PRODUCT.SUBSCRIPTION,this.config.showPrice&&(this.currentBasisPrice=this.params.PRODUCT.BASIS_PRICE),this.canBuy=this.product.canBuy,this.canSubscription=this.product.canSubscription,this.product.name=this.params.PRODUCT.NAME,this.product.pict=this.params.PRODUCT.PICT,this.product.id=this.params.PRODUCT.ID,this.params.PRODUCT.ADD_URL&&(this.product.addUrl=this.params.PRODUCT.ADD_URL),this.params.PRODUCT.BUY_URL&&(this.product.buyUrl=this.params.PRODUCT.BUY_URL),this.params.PRODUCT.SLIDER_COUNT&&(this.product.sliderCount=parseInt(this.params.PRODUCT.SLIDER_COUNT,10),isNaN(this.product.sliderCount)&&(this.product.sliderCount=0),0<this.product.sliderCount&&this.params.PRODUCT.SLIDER.length&&0<this.params.PRODUCT.SLIDER.length)){for(j=0;j<this.params.PRODUCT.SLIDER.length;j++)this.product.useSlider=!0,this.params.PRODUCT.SLIDER[j].WIDTH=parseInt(this.params.PRODUCT.SLIDER[j].WIDTH,10),this.params.PRODUCT.SLIDER[j].HEIGHT=parseInt(this.params.PRODUCT.SLIDER[j].HEIGHT,10);this.product.sliderPict=this.params.PRODUCT.SLIDER,this.setCurrentImg(this.product.sliderPict[0],!1)}this.currentIsSet=!0}else this.errorCode=-1},window.JCCatalogElement.prototype.initOffersData=function(){if(this.initVisualParams("offerSlider"),this.initVisualParams("offerSliderMobile"),this.initVisualParams("offers"),this.params.OFFERS&&BX.type.isArray(this.params.OFFERS)){if(this.offers=this.params.OFFERS,this.offerNum=0,this.params.OFFER_SELECTED&&(this.offerNum=parseInt(this.params.OFFER_SELECTED,10),"offers"in this&&this.offers.length)){var objUrl=parseUrlQuery(),sku_params=this.config.SKU_DETAIL_ID,sku_id=0;if(this.config.SKU_DETAIL_ID in objUrl&&(sku_id=objUrl[this.config.SKU_DETAIL_ID]),sku_id)for(var i in this.offers)this.offers[i].ID==sku_id&&(this.offerNum=parseInt(i,10))}isNaN(this.offerNum)&&(this.offerNum=0),this.params.TREE_PROPS&&(this.treeProps=this.params.TREE_PROPS),this.params.DEFAULT_PICTURE&&(this.defaultPict.preview=this.params.DEFAULT_PICTURE.PREVIEW_PICTIRE,this.defaultPict.detail=this.params.DEFAULT_PICTURE.DETAIL_PICTURE),this.params.PRODUCT&&"object"==typeof this.params.PRODUCT&&(this.product.id=parseInt(this.params.PRODUCT.ID,10),this.product.name=this.params.PRODUCT.NAME)}else this.errorCode=-1},window.JCCatalogElement.prototype.initBasketData=function(){this.params.BASKET&&"object"==typeof this.params.BASKET&&(1!==this.productType&&2!==this.productType||(this.basketData.useProps=!!this.params.BASKET.ADD_PROPS,this.basketData.emptyProps=!!this.params.BASKET.EMPTY_PROPS),this.params.BASKET.QUANTITY&&(this.basketData.quantity=this.params.BASKET.QUANTITY),this.params.BASKET.PROPS&&(this.basketData.props=this.params.BASKET.PROPS),this.params.BASKET.BASKET_URL&&(this.basketData.basketUrl=this.params.BASKET.BASKET_URL),3===this.productType&&this.params.BASKET.SKU_PROPS&&(this.basketData.sku_props=this.params.BASKET.SKU_PROPS),this.params.BASKET.ADD_URL_TEMPLATE&&(this.basketData.add_url=this.params.BASKET.ADD_URL_TEMPLATE),this.params.BASKET.BUY_URL_TEMPLATE&&(this.basketData.buy_url=this.params.BASKET.BUY_URL_TEMPLATE),""===this.basketData.add_url&&""===this.basketData.buy_url&&(this.errorCode=-1024))},window.JCCatalogElement.prototype.initCompareData=function(){this.config.useCompare&&(this.params.COMPARE&&"object"==typeof this.params.COMPARE?(this.params.COMPARE.COMPARE_PATH&&(this.compareData.comparePath=this.params.COMPARE.COMPARE_PATH),this.params.COMPARE.COMPARE_URL_TEMPLATE_DEL&&(this.compareData.compareUrlDel=this.params.COMPARE.COMPARE_URL_TEMPLATE_DEL),this.params.COMPARE.COMPARE_URL_TEMPLATE?this.compareData.compareUrl=this.params.COMPARE.COMPARE_URL_TEMPLATE:this.config.useCompare=!1):this.config.useCompare=!1)},window.JCCatalogElement.prototype.setMainPictHandler=function(){switch(this.config.mainPictureMode){case"GALLERY":break;case"MAGNIFIER":$(this.obPict).addClass("zoom_picture"),InitZoomPict();break;case"POPUP":$(this.obPict).parent().addClass("fancy_offer")}},window.JCCatalogElement.prototype.setCurrentImg=function(img,showImage){showImage=!!showImage,"SMALL"in img?this.currentImg.src=img.SMALL.src:"SRC"in img&&(this.currentImg.src=img.SRC),"BIG"in img&&(this.currentBigImg.src=img.BIG.src),"WIDTH"in img&&(this.currentImg.width=img.WIDTH),"HEIGHT"in img&&(this.currentImg.height=img.HEIGHT),showImage&&this.obPict&&("MAGNIFIER"===this.config.mainPictureMode&&("src"in this.currentBigImg&&($(this.obPict).attr("data-large",this.currentBigImg.src),$(this.obPict).attr("xoriginal",this.currentBigImg.src)),"src"in this.currentImg&&$(this.obPict).attr("xpreview",this.currentImg.src)),"src"in this.currentImg&&this.currentImg.src&&BX.adjust(this.obPict,{props:{src:this.currentImg.src}}),"src"in this.currentBigImg&&this.currentBigImg.src&&"POPUP"===this.config.mainPictureMode&&$(this.obPict).parent().attr("href",this.currentBigImg.src))},window.JCCatalogElement.prototype.scaleImg=function(src,dest){var scaleX,scaleY,scale,result={};return dest.width>=src.width&&dest.height>=src.height?(result.width=src.width,result.height=src.height):(scaleX=dest.width/src.width,scaleY=dest.height/src.height,scale=Math.min(scaleX,scaleY),result.width=Math.max(1,parseInt(scale*src.width,10)),result.height=Math.max(1,parseInt(scale*src.height,10))),result},window.JCCatalogElement.prototype.showMagnifier=function(e){this.magnify.magnifyShow||(this.calcMagnifierParams(),this.calcMagnifyAreaSize(),this.calcMagnifyAreaPos(e),this.calcMagnifyPictSize(),this.calcMagnifyPictPos(),this.setMagnifyAreaParams(!0),this.setMagnifyPictParams(!0),this.setMagnifierParams(!0),BX.bind(document,"mousemove",BX.proxy(this.moveMagnifierArea,this)))},window.JCCatalogElement.prototype.hideMagnifier=function(){this.magnify.magnifyShow||(this.magnify.obMagnifier&&BX.adjust(this.magnify.obMagnifier,{style:{display:"none"}}),this.magnify.obMagnifyArea&&BX.adjust(this.magnify.obMagnifyArea,{style:{display:"none"}}),BX.unbind(document,"mousemove",BX.proxy(this.moveMagnifierArea,this)))},window.JCCatalogElement.prototype.moveMagnifierArea=function(e){var currentPos={X:0,Y:0},posBigImg=BX.pos(this.obPict),intersect={},params={},paramsPict={};if(currentPos=this.inRect(e,posBigImg),this.inBound(posBigImg,currentPos)){switch((intersect=this.intersectArea(currentPos,posBigImg)).X){case-1:this.magnify.areaParams.left=this.currentImg.screenOffsetX;break;case 0:this.magnify.areaParams.left=this.currentImg.screenOffsetX+currentPos.X-(this.magnify.areaParams.width>>>1);break;case 1:this.magnify.areaParams.left=this.currentImg.screenOffsetX+posBigImg.width-this.magnify.areaParams.width}switch(intersect.Y){case-1:this.magnify.areaParams.top=0;break;case 0:this.magnify.areaParams.top=currentPos.Y-(this.magnify.areaParams.height>>>1);break;case 1:this.magnify.areaParams.top=posBigImg.height-this.magnify.areaParams.height}this.magnify.magnifyPictParams.marginLeft=-parseInt((this.magnify.areaParams.left-this.currentImg.screenOffsetX)*this.currentImg.scale,10),this.magnify.magnifyPictParams.marginTop=-parseInt(this.magnify.areaParams.top*this.currentImg.scale,10),params.left=this.magnify.areaParams.left+"px",params.top=this.magnify.areaParams.top+"px",BX.adjust(this.magnify.obMagnifyArea,{style:params}),paramsPict.marginLeft=this.magnify.magnifyPictParams.marginLeft+"px",paramsPict.marginTop=this.magnify.magnifyPictParams.marginTop+"px",BX.adjust(this.magnify.obMagnifyPict,{style:paramsPict})}else this.outMagnifierArea(),this.hideMagnifier()},window.JCCatalogElement.prototype.onMagnifierArea=function(){this.magnify.magnifyShow=!0},window.JCCatalogElement.prototype.outMagnifierArea=function(){this.magnify.magnifyShow=!1},window.JCCatalogElement.prototype.calcMagnifierParams=function(){if(this.magnify.obBigImg){var pos=BX.pos(this.magnify.obBigImg,!0);this.magnify.magnifierParams.width=pos.width,this.magnify.magnifierParams.height=pos.height,this.magnify.magnifierParams.top=pos.top,this.magnify.magnifierParams.left=pos.left+pos.width+2}},window.JCCatalogElement.prototype.setMagnifierParams=function(show){if(this.magnify.obMagnifier){show=!!show;var params={top:this.magnify.magnifierParams.top+"px",left:this.magnify.magnifierParams.left+"px",width:this.magnify.magnifierParams.width+"px",height:this.magnify.magnifierParams.height+"px"};show&&(params.display=""),BX.adjust(this.magnify.obMagnifier,{style:params})}},window.JCCatalogElement.prototype.setMagnifyAreaParams=function(show){if(this.magnify.obMagnifier){show=!!show;var params={top:this.magnify.areaParams.top+"px",left:this.magnify.areaParams.left+"px",width:this.magnify.areaParams.width+"px",height:this.magnify.areaParams.height+"px"};show&&(params.display=""),BX.adjust(this.magnify.obMagnifyArea,{style:params})}},window.JCCatalogElement.prototype.calcMagnifyAreaPos=function(e){var currentPos,posBigImg,intersect;if(posBigImg=BX.pos(this.obPict),currentPos=this.inRect(e,posBigImg),this.inBound(posBigImg,currentPos)){switch((intersect=this.intersectArea(currentPos,posBigImg)).X){case-1:this.magnify.areaParams.left=this.currentImg.screenOffsetX;break;case 0:this.magnify.areaParams.left=this.currentImg.screenOffsetX+currentPos.X-(this.magnify.areaParams.width>>>1);break;case 1:this.magnify.areaParams.left=this.currentImg.screenOffsetX+posBigImg.width-this.magnify.areaParams.width}switch(intersect.Y){case-1:this.magnify.areaParams.top=0;break;case 0:this.magnify.areaParams.top=currentPos.Y-(this.magnify.areaParams.height>>>1);break;case 1:this.magnify.areaParams.top=posBigImg.height-this.magnify.areaParams.height}}},window.JCCatalogElement.prototype.inBound=function(rect,point){return 0<=point.Y&&rect.height>=point.Y&&0<=point.X&&rect.width>=point.X},window.JCCatalogElement.prototype.inRect=function(e,rect){var wndSize=BX.GetWindowSize(),currentPos={X:0,Y:0,globalX:0,globalY:0};return currentPos.globalX=e.clientX+wndSize.scrollLeft,currentPos.X=currentPos.globalX-rect.left,currentPos.globalY=e.clientY+wndSize.scrollTop,currentPos.Y=currentPos.globalY-rect.top,currentPos},window.JCCatalogElement.prototype.intersectArea=function(currentPos,rect){var intersect={X:0,Y:0},halfX=this.magnify.areaParams.width>>>1,halfY=this.magnify.areaParams.height>>>1;return currentPos.X<=halfX?intersect.X=-1:currentPos.X>=rect.width-halfX?intersect.X=1:intersect.X=0,currentPos.Y<=halfY?intersect.Y=-1:currentPos.Y>=rect.height-halfY?intersect.Y=1:intersect.Y=0,intersect},window.JCCatalogElement.prototype.calcMagnifyAreaSize=function(){var scaleX,scaleY,scale;this.magnify.magnifierParams.width<this.currentImg.width&&this.magnify.magnifierParams.height<this.currentImg.height?(scaleX=this.magnify.obBigImg.offsetWidth/this.currentImg.width,scaleY=this.magnify.obBigImg.offsetHeight/this.currentImg.height,scale=Math.min(scaleX,scaleY),this.currentImg.scale=1/scale,this.magnify.areaParams.width=Math.max(1,parseInt(scale*this.magnify.magnifierParams.width,10)),this.magnify.areaParams.height=Math.max(1,parseInt(scale*this.magnify.magnifierParams.height,10)),this.magnify.areaParams.scaleFactor=this.magnify.magnifierParams.defaultScale):(scaleX=this.obPict.offsetWidth/this.magnify.obBigImg.offsetWidth,scaleY=this.obPict.offsetHeight/this.magnify.obBigImg.offsetHeight,scale=Math.min(scaleX,scaleY),this.currentImg.scale=1/scale,this.magnify.areaParams.width=Math.max(1,parseInt(scale*this.magnify.magnifierParams.width,10)),this.magnify.areaParams.height=Math.max(1,parseInt(scale*this.magnify.magnifierParams.height,10)),scaleX=this.magnify.magnifierParams.width/this.currentImg.width,scaleY=this.magnify.magnifierParams.height/this.currentImg.height,scale=Math.max(scaleX,scaleY),this.magnify.areaParams.scaleFactor=scale)},window.JCCatalogElement.prototype.calcMagnifyPictSize=function(){this.magnify.magnifyPictParams.width=this.currentImg.width*this.magnify.areaParams.scaleFactor,this.magnify.magnifyPictParams.height=this.currentImg.height*this.magnify.areaParams.scaleFactor},window.JCCatalogElement.prototype.calcMagnifyPictPos=function(){this.magnify.magnifyPictParams.marginLeft=-parseInt((this.magnify.areaParams.left-this.currentImg.screenOffsetX)*this.currentImg.scale,10),this.magnify.magnifyPictParams.marginTop=-parseInt(this.magnify.areaParams.top*this.currentImg.scale,10)},window.JCCatalogElement.prototype.setMagnifyPictParams=function(show){if(this.magnify.obMagnifier){show=!!show;var params={width:this.magnify.magnifyPictParams.width+"px",height:this.magnify.magnifyPictParams.height+"px",marginTop:this.magnify.magnifyPictParams.marginTop+"px",marginLeft:this.magnify.magnifyPictParams.marginLeft+"px"};show&&(params.display=""),BX.adjust(this.magnify.obMagnifyPict,{style:params,props:{src:this.currentImg.src}})}},window.JCCatalogElement.prototype.ProductSliderRowLeft=function(){var target;BX.proxy_context&&this.sliderRowShowSize<this.product.slider.COUNT&&(0>this.product.slider.START&&(this.product.slider.START++,BX.adjust(this.product.slider.LIST,{style:{marginLeft:20*this.product.slider.START+"%"}}),BX.adjust(this.product.slider.RIGHT,{style:this.sliderEnableArrow})),0<=this.product.slider.START&&BX.adjust(this.product.slider.LEFT,{style:this.sliderDisableArrow}))},window.JCCatalogElement.prototype.ProductSliderRowRight=function(){var target;BX.proxy_context&&this.sliderRowShowSize<this.product.slider.COUNT&&(this.sliderRowShowSize-this.product.slider.START<this.product.slider.COUNT&&(this.product.slider.START--,BX.adjust(this.product.slider.LIST,{style:{marginLeft:20*this.product.slider.START+"%"}}),BX.adjust(this.product.slider.LEFT,{style:this.sliderEnableArrow})),this.sliderRowShowSize-this.product.slider.START>=this.product.slider.COUNT&&BX.adjust(this.product.slider.RIGHT,{style:this.sliderDisableArrow}))},window.JCCatalogElement.prototype.ProductSelectSliderImg=function(){var strValue="",target=BX.proxy_context;target&&target.hasAttribute("data-value")&&(strValue=target.getAttribute("data-value"),this.SetProductMainPict(strValue))},window.JCCatalogElement.prototype.SetProductMainPict=function(intPict){var indexPict=-1,i=0,j=0,value="",strValue="",RowItems=null;if(0<this.product.sliderCount){for(j=0;j<this.product.sliderPict.length;j++)if(intPict===this.product.sliderPict[j].ID){indexPict=j;break}if(-1<indexPict&&(this.product.sliderPict[indexPict]&&this.setCurrentImg(this.product.sliderPict[indexPict],!0),(RowItems=BX.findChildren(this.product.slider.LIST,{tagName:"li"},!1))&&0<RowItems.length))for(strValue=intPict,i=0;i<RowItems.length;i++)(value=RowItems[i].getAttribute("data-value"))===strValue?BX.addClass(RowItems[i],"active"):BX.removeClass(RowItems[i],"active")}},window.JCCatalogElement.prototype.SliderRowLeft=function(){var strValue="",index=-1,i,target=BX.proxy_context;if(target&&target.hasAttribute("data-value")){for(strValue=target.getAttribute("data-value"),i=0;i<this.sliders.length;i++)if(this.sliders[i].OFFER_ID===strValue){index=i;break}-1<index&&this.sliderRowShowSize<this.sliders[index].COUNT&&(0>this.sliders[index].START&&(this.sliders[index].START++,BX.adjust(this.sliders[index].LIST,{style:{marginLeft:20*this.sliders[index].START+"%"}}),BX.adjust(this.sliders[index].RIGHT,{style:this.sliderEnableArrow})),0<=this.sliders[index].START&&BX.adjust(this.sliders[index].LEFT,{style:this.sliderDisableArrow}))}},window.JCCatalogElement.prototype.SliderRowRight=function(){var strValue="",index=-1,i,target=BX.proxy_context;if(target&&target.hasAttribute("data-value")){for(strValue=target.getAttribute("data-value"),i=0;i<this.sliders.length;i++)if(this.sliders[i].OFFER_ID===strValue){index=i;break}-1<index&&this.sliderRowShowSize<this.sliders[index].COUNT&&(this.sliderRowShowSize-this.sliders[index].START<this.sliders[index].COUNT&&(this.sliders[index].START--,BX.adjust(this.sliders[index].LIST,{style:{marginLeft:20*this.sliders[index].START+"%"}}),BX.adjust(this.sliders[index].LEFT,{style:this.sliderEnableArrow})),this.sliderRowShowSize-this.sliders[index].START>=this.sliders[index].COUNT&&BX.adjust(this.sliders[index].RIGHT,{style:this.sliderDisableArrow}))}},window.JCCatalogElement.prototype.SelectSliderImg=function(){var strValue="",arItem=[],target=BX.proxy_context;target&&target.hasAttribute("data-value")&&(arItem=(strValue=target.getAttribute("data-value")).split("_"),this.SetMainPict(arItem[0],arItem[1]))},window.JCCatalogElement.prototype.SetMainPict=function(intSlider,intPict){var index=-1,indexPict=-1,i,j,value="",RowItems=null,strValue="";for(i=0;i<this.offers.length;i++)if(intSlider===this.offers[i].ID){index=i;break}if($(window).resize(),$(".thumbs_navigation ul").addClass("hidden_block"),this.SliderImages>1&&$(".thumbs_navigation ul:eq("+index+")").removeClass("hidden_block"),$(".thumbs_navigation").removeClass("hidden_block"),$(".fancy_offer").addClass("hidden_block"),$(this.obPict).closest(".offers_img").css("opacity",0),-1<index&&0<this.offers[index].SLIDER_COUNT){for(j=0;j<this.offers[index].SLIDER.length;j++)if(intPict===this.offers[index].SLIDER[j].ID){indexPict=j;break}if(-1<indexPict&&(this.offers[index].SLIDER[indexPict]&&this.setCurrentImg(this.offers[index].SLIDER[indexPict],!0),(RowItems=BX.findChildren(this.sliders[index].LIST,{tagName:"li"},!1))&&0<RowItems.length))for(strValue=intSlider+"_"+intPict,i=0;i<RowItems.length;i++)(value=RowItems[i].getAttribute("data-value"))===strValue?BX.addClass(RowItems[i],"current"):BX.removeClass(RowItems[i],"current")}setTimeout((function(){$(".fancy_offer").removeClass("hidden_block"),$(".offers_img").css("opacity",1)}),200)},window.JCCatalogElement.prototype.SetMainPictFromItem=function(index){if(this.obPict){var boolSet=!1,obNewPict={};this.offers[index]&&(this.offers[index].DETAIL_PICTURE?(obNewPict=this.offers[index].DETAIL_PICTURE,boolSet=!0):this.offers[index].PREVIEW_PICTURE&&(obNewPict=this.offers[index].PREVIEW_PICTURE,boolSet=!0)),boolSet||(this.defaultPict.detail?(obNewPict=this.defaultPict.detail,boolSet=!0):this.defaultPict.preview&&(obNewPict=this.defaultPict.preview,boolSet=!0)),boolSet&&this.setCurrentImg(obNewPict,!0)}},window.JCCatalogElement.prototype.showMainPictPopup=function(e){var pictContent="";return pictContent='<div style="text-align: center;"><img src="'+this.currentImg.src+'" width="'+this.currentImg.width+'" height="'+this.currentImg.height+'" name=""></div>',this.obPopupPict.setContent(pictContent),this.obPopupPict.show(),BX.PreventDefault(e)},window.JCCatalogElement.prototype.QuantityUp=function(){var curValue=0,boolSet=!0,calcPrice;0===this.errorCode&&this.config.showQuantity&&this.canBuy&&(curValue=this.isDblQuantity?parseFloat(this.obQuantity.value):parseInt(this.obQuantity.value,10),isNaN(curValue)||(curValue+=this.stepQuantity,this.checkQuantity&&curValue>this.maxQuantity&&(boolSet=!1),boolSet&&(this.isDblQuantity&&(curValue=Math.round(curValue*this.precisionFactor)/this.precisionFactor),this.obQuantity.value=curValue)))},window.JCCatalogElement.prototype.QuantityDown=function(){var curValue=0,boolSet=!0,calcPrice;0===this.errorCode&&this.config.showQuantity&&this.canBuy&&(curValue=this.isDblQuantity?parseFloat(this.obQuantity.value):parseInt(this.obQuantity.value,10),isNaN(curValue)||((curValue-=this.stepQuantity)<this.stepQuantity&&(boolSet=!1),boolSet&&(this.isDblQuantity&&(curValue=Math.round(curValue*this.precisionFactor)/this.precisionFactor),this.obQuantity.value=curValue)))},window.JCCatalogElement.prototype.QuantityChange=function(){var curValue=0,calcPrice,intCount,count;0===this.errorCode&&this.config.showQuantity&&(this.canBuy?(curValue=this.isDblQuantity?parseFloat(this.obQuantity.value):parseInt(this.obQuantity.value,10),isNaN(curValue)?this.obQuantity.value=this.stepQuantity:(this.checkQuantity&&curValue>this.maxQuantity&&(curValue=this.maxQuantity),curValue<this.stepQuantity?curValue=this.stepQuantity:(count=Math.round(curValue*this.precisionFactor/this.stepQuantity)/this.precisionFactor,intCount=parseInt(count,10),isNaN(intCount)&&(intCount=1,count=1.1),count>intCount&&(curValue=intCount<=1?this.stepQuantity:intCount*this.stepQuantity,curValue=Math.round(curValue*this.precisionFactor)/this.precisionFactor)),this.obQuantity.value=curValue)):this.obQuantity.value=this.stepQuantity)},window.JCCatalogElement.prototype.QuantitySet=function(index){var basisPrice="",strLimit;0===this.errorCode&&(this.canBuy=this.offers[index].CAN_BUY,this.currentPriceMode=this.offers[index].ITEM_PRICE_MODE,this.currentPrices=this.offers[index].ITEM_PRICES,this.currentPriceSelected=this.offers[index].ITEM_PRICE_SELECTED,this.currentQuantityRanges=this.offers[index].ITEM_QUANTITY_RANGES,this.currentQuantityRangeSelected=this.offers[index].ITEM_QUANTITY_RANGE_SELECTED,this.canBuy?(this.obBasketActions&&BX.style(this.obBasketActions,"display",""),this.obNotAvail&&BX.style(this.obNotAvail,"display","none")):(this.obBasketActions&&(BX.style(this.obBasketActions,"opacity","0"),BX.style(BX.findParent(BX(this.obQuantity),{class:"counter_block"}),"display","none")),this.obNotAvail&&BX.style(this.obNotAvail,"display","")),this.config.showQuantity&&(this.isDblQuantity=this.offers[index].QUANTITY_FLOAT,this.checkQuantity=this.offers[index].CHECK_QUANTITY,this.isDblQuantity?(this.maxQuantity=parseFloat(this.offers[index].MAX_QUANTITY),this.stepQuantity=Math.round(parseFloat(this.offers[index].STEP_QUANTITY)*this.precisionFactor)/this.precisionFactor):(this.maxQuantity=parseInt(this.offers[index].MAX_QUANTITY,10),this.stepQuantity=parseInt(this.offers[index].STEP_QUANTITY,10)),this.obMeasure&&(this.offers[index].MEASURE?BX.adjust(this.obMeasure,{html:this.offers[index].MEASURE}):BX.adjust(this.obMeasure,{html:""})),this.obQuantityLimit.all&&(this.checkQuantity?(strLimit=this.offers[index].MAX_QUANTITY,this.offers[index].MEASURE&&(strLimit+=" "+this.offers[index].MEASURE),BX.adjust(this.obQuantityLimit.value,{html:strLimit}),BX.adjust(this.obQuantityLimit.all,{style:{display:""}})):(BX.adjust(this.obQuantityLimit.value,{html:""}),BX.adjust(this.obQuantityLimit.all,{style:{display:"none"}}))),this.obBasisPrice&&(this.offers[index].BASIS_PRICE?(basisPrice=(basisPrice=(basisPrice=BX.message("BASIS_PRICE_MESSAGE")).replace("#PRICE#",BX.Currency.currencyFormat(this.offers[index].BASIS_PRICE.DISCOUNT_VALUE,this.offers[index].BASIS_PRICE.CURRENCY,!0))).replace("#MEASURE#",this.offers[index].MEASURE),BX.adjust(this.obBasisPrice,{style:{display:""},html:basisPrice})):BX.adjust(this.obBasisPrice,{style:{display:"none"},html:""}))),this.currentBasisPrice=this.offers[index].BASIS_PRICE)},window.JCCatalogElement.prototype.SelectOfferProp=function(){var i=0,strTreeValue="",arTreeItem=[],RowItems=null,target=BX.proxy_context;if(void 0!==target.options&&void 0!==target.options[target.selectedIndex]&&(target=target.options[target.selectedIndex]),target&&target.hasAttribute("data-treevalue")&&(strTreeValue=target.getAttribute("data-treevalue"),propModes=target.getAttribute("data-showtype"),arTreeItem=strTreeValue.split("_"),this.SearchOfferPropIndex(arTreeItem[0],arTreeItem[1]),(RowItems=BX.findChildren(target.parentNode,{tagName:this.skuVisualParams[propModes.toUpperCase()].TAG},!1))&&0<RowItems.length))for(i=0;i<RowItems.length;i++)value=RowItems[i].getAttribute("data-onevalue"),"TEXT"==propModes?value===arTreeItem[1]?RowItems[i].setAttribute("selected","selected"):RowItems[i].removeAttribute("selected"):value===arTreeItem[1]?$(RowItems[i]).addClass(this.skuVisualParams[propModes.toUpperCase()].ACTIVE_CLASS):$(RowItems[i]).removeClass(this.skuVisualParams[propModes.toUpperCase()].ACTIVE_CLASS)},window.JCCatalogElement.prototype.SearchOfferPropIndex=function(strPropID,strPropValue){var strName="",arShowValues=!1,arCanBuyValues=[],index=-1,i,j,arFilter={},tmpFilter=[];for(i=0;i<this.treeProps.length;i++)if(this.treeProps[i].ID===strPropID){index=i;break}if(-1<index){for(i=0;i<index;i++)arFilter[strName="PROP_"+this.treeProps[i].ID]=this.selectedValues[strName];for(arFilter[strName="PROP_"+this.treeProps[index].ID]=strPropValue,i=index+1;i<this.treeProps.length&&(strName="PROP_"+this.treeProps[i].ID,arShowValues=this.GetRowValues(arFilter,strName));i++){if(this.config.showAbsent)for(arCanBuyValues=[],tmpFilter=[],tmpFilter=BX.clone(arFilter,!0),j=0;j<arShowValues.length;j++)tmpFilter[strName]=arShowValues[j],this.GetCanBuy(tmpFilter)&&(arCanBuyValues[arCanBuyValues.length]=arShowValues[j]);else arCanBuyValues=arShowValues;this.selectedValues[strName]&&BX.util.in_array(this.selectedValues[strName],arCanBuyValues)?arFilter[strName]=this.selectedValues[strName]:arFilter[strName]=arCanBuyValues[0],this.UpdateRow(i,arFilter[strName],arShowValues,arCanBuyValues)}this.selectedValues=arFilter,this.ChangeInfo()}},window.JCCatalogElement.prototype.RowLeft=function(){var strTreeValue="",index=-1,i,target=BX.proxy_context;if(target&&target.hasAttribute("data-treevalue")){for(strTreeValue=target.getAttribute("data-treevalue"),i=0;i<this.treeProps.length;i++)if(this.treeProps[i].ID===strTreeValue){index=i;break}-1<index&&this.treeRowShowSize<this.showCount[index]&&0>this.showStart[index]&&(this.showStart[index]++,BX.adjust(this.obTreeRows[index].LIST,{style:{marginLeft:20*this.showStart[index]+"%"}}))}},window.JCCatalogElement.prototype.RowRight=function(){var strTreeValue="",index=-1,i,target=BX.proxy_context;if(target&&target.hasAttribute("data-treevalue")){for(strTreeValue=target.getAttribute("data-treevalue"),i=0;i<this.treeProps.length;i++)if(this.treeProps[i].ID===strTreeValue){index=i;break}-1<index&&this.treeRowShowSize<this.showCount[index]&&this.treeRowShowSize-this.showStart[index]<this.showCount[index]&&(this.showStart[index]--,BX.adjust(this.obTreeRows[index].LIST,{style:{marginLeft:20*this.showStart[index]+"%"}}))}},window.JCCatalogElement.prototype.UpdateRowsImages=function(){if("object"==typeof this.config.offerShowPreviewPictureProps&&this.config.offerShowPreviewPictureProps.length){var currentTree=this.selectedValues;for(var i in this.obTreeRows)if(BX.util.in_array(this.treeProps[i].CODE,this.config.offerShowPreviewPictureProps)){var RowItems=BX.findChildren(this.obTreeRows[i].LIST,{tagName:"LI"},!1);if(RowItems&&0<RowItems.length)for(var j in RowItems){var ImgItem=BX.findChild(RowItems[j],{className:"cnt_item"},!0,!1);if(ImgItem){var value=RowItems[j].getAttribute("data-onevalue");if(0!=value){var bgi=ImgItem.style.backgroundImage,obgi=ImgItem.getAttribute("data-obgi");obgi||(obgi=bgi,ImgItem.setAttribute("data-obgi",obgi));var boolOneSearch=!1,rowTree=BX.clone(currentTree,!0);for(var m in rowTree["PROP_"+this.treeProps[i].ID]=value,this.offers){for(var n in boolOneSearch=!0,rowTree)if(rowTree[n]!==this.offers[m].TREE[n]){boolOneSearch=!1;break}if(boolOneSearch){var newBgi;if("object"==typeof this.offers[m].PREVIEW_PICTURE&&this.offers[m].PREVIEW_PICTURE.SRC)bgi!==(newBgi='url("'+this.offers[m].PREVIEW_PICTURE.SRC+'")')&&(ImgItem.style.backgroundImage=newBgi,BX.addClass(ImgItem,"pp"));else boolOneSearch=!1;break}}for(var m in this.offers)if(rowTree["PROP_"+this.treeProps[i].ID]==this.offers[m].TREE["PROP_"+this.treeProps[i].ID]&&!boolOneSearch){if("object"==typeof this.offers[m].PREVIEW_PICTURE&&this.offers[m].PREVIEW_PICTURE.SRC){var newBgi='url("'+this.offers[m].PREVIEW_PICTURE.SRC+'")';ImgItem.style.backgroundImage=newBgi,BX.addClass(ImgItem,"pp"),boolOneSearch=!0}break}!boolOneSearch&&obgi&&bgi!==obgi&&(ImgItem.style.backgroundImage=obgi,BX.removeClass(ImgItem,"pp"))}}}}}},window.JCCatalogElement.prototype.UpdateRow=function(intNumber,activeID,showID,canBuyID){var i=0,showI=0,value="",countShow=0,strNewLen="",obData={},RowItems=null,pictMode=!1,extShowMode=!1,isCurrent=!1,selectIndex=0,obLeft=this.treeEnableArrow,obRight=this.treeEnableArrow,currentShowStart=0;if(-1<intNumber&&intNumber<this.obTreeRows.length&&(propMode=this.treeProps[intNumber].DISPLAY_TYPE,(RowItems=BX.findChildren(this.obTreeRows[intNumber].LIST,{tagName:this.skuVisualParams[propMode].TAG},!1))&&0<RowItems.length)){selectMode="SELECT"===this.treeProps[intNumber].DISPLAY_TYPE,countShow=showID.length,obData={style:{},props:{disabled:"",selected:""}};var lineContainer=this.obTree.querySelectorAll(".bx_item_detail_size, .bx_item_detail_scu");for(i=0;i<RowItems.length;i++)isCurrent=(value=RowItems[i].getAttribute("data-onevalue"))===activeID,BX.util.in_array(value,canBuyID)?obData.props.className=isCurrent?this.skuVisualParams[propMode].ACTIVE_CLASS:"":obData.props.className=isCurrent?this.skuVisualParams[propMode].ACTIVE_CLASS+" "+this.skuVisualParams[propMode].HIDE_CLASS:this.skuVisualParams[propMode].HIDE_CLASS,selectMode?(obData.props.disabled="disabled",obData.props.selected=isCurrent?"selected":""):obData.style.display="none",BX.util.in_array(value,showID)&&(selectMode?obData.props.disabled="":obData.style.display="",isCurrent&&(selectIndex=showI),showI++),BX.adjust(RowItems[i],obData),isCurrent&&(lineContainer[intNumber].style.display=0==value&&1==canBuyID.length?"none":"");selectMode&&$(this.obTreeRows[intNumber].LIST).parent().hasClass("ik_select")&&$(this.obTreeRows[intNumber].LIST).ikSelect("reset"),this.showCount[intNumber]=countShow,this.showStart[intNumber]=0}},window.JCCatalogElement.prototype.GetRowValues=function(arFilter,index){var arValues=[],i=0,j=0,boolSearch=!1,boolOneSearch=!0;if(0===arFilter.length){for(i=0;i<this.offers.length;i++)BX.util.in_array(this.offers[i].TREE[index],arValues)||(arValues[arValues.length]=this.offers[i].TREE[index]);boolSearch=!0}else for(i=0;i<this.offers.length;i++){for(j in boolOneSearch=!0,arFilter)if(arFilter[j]!==this.offers[i].TREE[j]){boolOneSearch=!1;break}boolOneSearch&&(BX.util.in_array(this.offers[i].TREE[index],arValues)||(arValues[arValues.length]=this.offers[i].TREE[index]),boolSearch=!0)}return!!boolSearch&&arValues},window.JCCatalogElement.prototype.GetCanBuy=function(arFilter){var i=0,j=0,boolOneSearch=!0,boolSearch=!1;for(i=0;i<this.offers.length;i++){for(j in boolOneSearch=!0,arFilter)if(arFilter[j]!==this.offers[i].TREE[j]){boolOneSearch=!1;break}if(boolOneSearch&&this.offers[i].CAN_BUY){boolSearch=!0;break}}return boolSearch},window.JCCatalogElement.prototype.SetCurrent=function(){var i=0,j=0,strName="",arShowValues=!1,arCanBuyValues=[],arFilter={},tmpFilter=[],current=this.offers[this.offerNum].TREE;for(i=0;i<this.treeProps.length&&(strName="PROP_"+this.treeProps[i].ID,arShowValues=this.GetRowValues(arFilter,strName));i++){if(BX.util.in_array(current[strName],arShowValues)?arFilter[strName]=current[strName]:(arFilter[strName]=arShowValues[0],this.offerNum=0),this.config.showAbsent)for(arCanBuyValues=[],tmpFilter=[],tmpFilter=BX.clone(arFilter,!0),j=0;j<arShowValues.length;j++)tmpFilter[strName]=arShowValues[j],this.GetCanBuy(tmpFilter)&&(arCanBuyValues[arCanBuyValues.length]=arShowValues[j]);else arCanBuyValues=arShowValues;this.UpdateRow(i,arFilter[strName],arShowValues,arCanBuyValues)}this.selectedValues=arFilter,this.ChangeInfo()},window.JCCatalogElement.prototype.ChangeInfo=function(){var index=-1,i=0,j=0,RowItems=null,boolOneSearch=!0;for(i=0;i<this.offers.length;i++){for(j in boolOneSearch=!0,this.selectedValues)if(this.selectedValues[j]!==this.offers[i].TREE[j]){boolOneSearch=!1;break}if(boolOneSearch){index=i;break}}if(this.treeProps&&this.UpdateRowsImages(),-1<index){for(i=0;i<this.offers.length;i++)this.config.showOfferGroup&&this.offers[i].OFFER_GROUP&&i!==index&&BX.adjust(BX(this.visual.OFFER_GROUP+this.offers[i].ID),{style:{display:"none"}});if(this.config.showOfferGroup&&this.offers[index].OFFER_GROUP&&BX.adjust(BX(this.visual.OFFER_GROUP+this.offers[index].ID),{style:{display:""}}),0<this.offers[index].SLIDER_COUNT?this.SetMainPict(this.offers[index].ID,this.offers[index].SLIDER[0].ID):this.SetMainPictFromItem(index),this.SetSliderPict(this.offers[index],this.offers[index].SLIDER,this.config),this.SetSliderPictMobile(this.offers[index],this.offers[index].SLIDER,this.config),this.config.showSkuProps&&this.obSkuProps){var html="",display_type=this.offers[index].TYPE_PROP;if(this.offers[index].DISPLAY_PROPERTIES&&0!==this.offers[index].DISPLAY_PROPERTIES.length){for(var i in"TABLE"!=display_type&&$(this.obSkuProps).find(".sku_block_prop").remove(),this.offers[index].DISPLAY_PROPERTIES){var class_block=this.offers[index].DISPLAY_PROPERTIES[i].HINT&&"Y"==this.offers[index].DISPLAY_PROPERTIES[i].SHOW_HINTS?" whint":"",hint_block=this.offers[index].DISPLAY_PROPERTIES[i].HINT&&"Y"==this.offers[index].DISPLAY_PROPERTIES[i].SHOW_HINTS?'<div class="hint"><span class="icon"><i>?</i></span><div class="tooltip">'+this.offers[index].DISPLAY_PROPERTIES[i].HINT+"</div></div>":"";"TABLE"==display_type?html+='<tr><td class="char_name"><span class="'+class_block+'">'+hint_block+this.offers[index].DISPLAY_PROPERTIES[i].NAME+'</span></td><td class="char_value"><span>'+this.offers[index].DISPLAY_PROPERTIES[i].VALUE+"</span></td></tr>":(html='<div class="char sku_block_prop"><div class="char_name"><span class="'+class_block+'">'+hint_block+this.offers[index].DISPLAY_PROPERTIES[i].NAME+'</span></div><div class="char_value"><span>'+this.offers[index].DISPLAY_PROPERTIES[i].VALUE+"</span></div></div>",$(this.obSkuProps).append(html))}"TABLE"==display_type&&BX.adjust(this.obSkuProps,{style:{display:""},html:html})}else"TABLE"==display_type?BX.adjust(this.obSkuProps,{style:{display:"none"},html:""}):$(this.obSkuProps).find(".sku_block_prop").remove()}this.config.showSkuProps&&this.obSkuArticleProps&&("DISPLAY_PROPERTIES_CODE"in this.offers[index]&&"ARTICLE"in this.offers[index].DISPLAY_PROPERTIES_CODE?this.offers[index].DISPLAY_PROPERTIES_CODE.ARTICLE.VALUE&&BX.adjust(this.obSkuArticleProps,{style:{display:""},html:this.offers[index].DISPLAY_PROPERTIES_CODE.ARTICLE.VALUE_FORMAT}):"Y"==this.offers[index].SHOW_ARTICLE_SKU&&this.offers[index].ARTICLE_SKU?BX.adjust(this.obSkuArticleProps,{style:{display:""},html:this.offers[index].ARTICLE_SKU}):BX.adjust(this.obSkuArticleProps,{style:{display:"none"},html:""})),setLocationSKU(this.offers[index].ID,this.config.SKU_DETAIL_ID),$(this.obBasketActions).closest(".counter_wrapp").addClass("hidden_block"),this.offerNum=index,this.QuantitySet(this.offerNum),this.setStoreBlock(this.offers[index].ID),this.setQuantityStore(this.offers[index].MAX_QUANTITY,this.offers[index].AVAILIABLE.TEXT),this.incViewedCounter(),BX.onCustomEvent("onCatalogStoreProductChange",[this.offers[this.offerNum].ID]),$(this.obPict).parent().data("id",this.offers[index].ID);var arPriceItem=this.offers[index].PRICE;"Q"==this.offers[index].ITEM_PRICE_MODE&&this.offers[index].ITEM_PRICES&&this.offers[index].USE_PRICE_COUNT&&(this.offers[index].USE_PRICE_COUNT&&this.offers[index].PRICE_MATRIX&&this.checkPriceRange(this.offers[index].CONFIG.MIN_QUANTITY_BUY),(arPriceItem=this.currentPrices[this.currentPriceSelected]).VALUE=arPriceItem.PRICE,arPriceItem.PRINT_VALUE=getCurrentPrice(arPriceItem.PRICE,arPriceItem.CURRENCY,arPriceItem.PRINT_PRICE),arPriceItem.DISCOUNT_VALUE=arPriceItem.BASE_PRICE,arPriceItem.PRINT_DISCOUNT_VALUE=getCurrentPrice(arPriceItem.BASE_PRICE,arPriceItem.CURRENCY,arPriceItem.PRINT_BASE_PRICE)),setViewedProduct(this.offers[index].ID,{PRODUCT_ID:this.offers[index].PRODUCT_ID,IBLOCK_ID:this.offers[index].IBLOCK_ID,NAME:this.product.name,DETAIL_PAGE_URL:this.offers[index].URL,PICTURE_ID:this.offers[index].PREVIEW_PICTURE?this.offers[index].PREVIEW_PICTURE.ID:this.offers[index].PARENT_PICTURE?this.offers[index].PARENT_PICTURE.ID:!!this.offers[index].SLIDER_COUNT&&this.offers[index].SLIDER[0].ID,CATALOG_MEASURE_NAME:this.offers[index].MEASURE,MIN_PRICE:arPriceItem,CAN_BUY:this.offers[index].CAN_BUY?"Y":"N",IS_OFFER:"Y",WITH_OFFERS:"N"});var obj=this.offers[index],th=$(this.obProduct),_th=this;"undefined"!=typeof arBasketAspro?this.setActualDataBlock(th,obj):void 0!==window.frameCacheVars&&BX.addCustomEvent("onFrameDataReceived",(function(){_th.setActualDataBlock(th,obj)})),$(this.obProduct).find(".quantity_block .values").length&&$(this.obProduct).find(".quantity_block .values .item span.value").text(this.offers[index].MAX_QUANTITY).css({opacity:"1"}),"Y"==this.offers[index].SHOW_DISCOUNT_TIME_EACH_SKU&&initCountdownTime($(this.obProduct),this.offers[index].DISCOUNT_ACTIVE),"Y"==arOptimusOptions.THEME.CHANGE_TITLE_ITEM&&(document.title=this.offers[index].NAME,$("h1").text(this.offers[index].NAME),ItemObj.TITLE=this.offers[index].NAME,ItemObj.WINDOW_TITLE=this.offers[index].NAME+""+this.offers[index].POSTFIX),$('.catalog_detail .tabs_section .tabs_content .form.inline input[data-sid="PRODUCT_NAME"]').attr("value",$("h1").text())}},window.JCCatalogElement.prototype.checkPriceRange=function(quantity){if(void 0!==quantity&&"Q"==this.currentPriceMode){var range,found=!1;for(var i in this.currentQuantityRanges)if(this.currentQuantityRanges.hasOwnProperty(i)&&(range=this.currentQuantityRanges[i],parseInt(quantity)>=parseInt(range.SORT_FROM)&&("INF"==range.SORT_TO||parseInt(quantity)<=parseInt(range.SORT_TO)))){found=!0,this.currentQuantityRangeSelected=range.HASH;break}for(var k in!found&&(range=this.getMinPriceRange())&&(this.currentQuantityRangeSelected=range.HASH),this.currentPrices)if(this.currentPrices.hasOwnProperty(k)&&this.currentPrices[k].QUANTITY_HASH==this.currentQuantityRangeSelected){this.currentPriceSelected=k;break}}},window.JCCatalogElement.prototype.getMinPriceRange=function(){var range;for(var i in this.currentQuantityRanges)this.currentQuantityRanges.hasOwnProperty(i)&&(!range||parseInt(this.currentQuantityRanges[i].SORT_FROM)<parseInt(range.SORT_FROM))&&(range=this.currentQuantityRanges[i]);return range},window.JCCatalogElement.prototype.setActualDataBlock=function(th,obj){this.setLikeBlock(th,".like_icons .wish_item",obj,"DELAY"),this.setLikeBlock(th,".like_icons .compare_item",obj,"COMPARE"),this.setBuyBlock(th,obj)},window.JCCatalogElement.prototype.SetSliderPict=function(obj,slider,config){var container=$(".wrapp_thumbs"),slideHtml="";for(var i in countPhoto=obj.SLIDER_COUNT,container.find(".thumbs").css({"max-width":Math.ceil(64*(countPhoto<=4?countPhoto:4)-10)}),slideHtml='<ul class="slides_block">',slider)"object"==typeof slider[i]&&(slideHtml+='<li data-big="'+slider[i].BIG.src+'"><span class="cnt"><img border="0" src="'+slider[i].THUMB.src+'" alt="" title="" /></span></li>');if(slideHtml+="</ul>",container.find(".thumbs").html(slideHtml),countPhoto>1){container.show(),container.find(".thumbs_navigation").length&&container.find(".thumbs_navigation").remove(),container.find(".thumbs").append('<span class="thumbs_navigation custom_flex"></span>'),container.find(".thumbs").removeData("flexslider"),container.find(".thumbs").flexslider({animation:"slide",selector:".slides_block > li",slideshow:!1,animationSpeed:600,directionNav:!0,controlNav:!1,pauseOnHover:!0,itemWidth:54,itemMargin:10,animationLoop:!0,controlsContainer:".thumbs_navigation"}),container.find(".thumbs .slides_block li").first().addClass("current");var pict=$(this.obPict);container.find(".thumbs").delegate("li:not(.current)","click",(function(e){var srcSmall="",srcBig="",width="",height="";index=$(this).index(),void 0!==slider[index]&&("SMALL"in slider[index]?srcSmall=slider[index].SMALL.src:"SRC"in slider[index]&&(srcSmall=slider[index].SRC),"BIG"in slider[index]&&(srcBig=slider[index].BIG.src),"WIDTH"in slider[index]&&(width=slider[index].WIDTH),"HEIGHT"in slider[index]&&(height=slider[index].HEIGHT)),$(this).addClass("current").siblings().removeClass("current").parents(".item_slider").find(".slides li").fadeOut(333),$(this).parents(".item_slider").find(".slides li").eq(index).addClass("current").stop().fadeIn(333),srcSmall&&BX.adjust(pict[0],{props:{src:srcSmall}}),pict.attr("data-large",""),srcBig&&("POPUP"===config.mainPictureMode&&pict.parent().attr("href",srcBig),"MAGNIFIER"===config.mainPictureMode&&(pict.attr("data-large",srcBig),pict.attr("xoriginal",srcBig)))}))}else container.hide()},window.JCCatalogElement.prototype.SetSliderPictMobile=function(obj,slider){var container=$(".item_slider.flex"),slideHtml="";if(countPhoto=obj.SLIDER_COUNT,slideHtml='<ul class="slides">',slider.length)for(var i in slider)"object"==typeof slider[i]&&(slideHtml+='<li data-value="'+obj.ID+"_"+slider[i].ID+'"><a href="'+slider[i].BIG.src+'" rel="item_slider" class="fancy" title="'+slider[i].TITLE+'"><img border="0" src="'+slider[i].SMALL.src+'" alt="'+slider[i].ALT+'" title="'+slider[i].TITLE+'" /></a></li>');else slideHtml+='<li data-value=""><span rel="item_slider" class="fancy" title="'+obj.NAME+'"><img border="0" src="'+obj.NO_PHOTO.SRC+'" alt="'+obj.NAME+'" title="'+obj.NAME+'" /></span></li>';slideHtml+="</ul>",container.html(slideHtml),container.removeData("flexslider"),container.flexslider({animation:"slide",slideshow:!1,slideshowSpeed:1e4,animationSpeed:600,directionNav:!1,pauseOnHover:!0,animationLoop:!1})},window.JCCatalogElement.prototype.setLikeBlock=function(th,className,obj,type){var block=th;"DELAY"==type&&(obj.CAN_BUY&&"ADD"===obj.CONFIG.ACTION?block.find(className).css("display","block"):block.find(className).hide()),block.find(className).attr("data-item",obj.ID),arBasketAspro[type]&&(block.find(className).removeClass("added"),block.find(className).find(".value").css("display","block"),block.find(className).find(".value.added").hide(),void 0!==arBasketAspro[type][obj.ID]&&(block.find(className).addClass("added"),block.find(className).find(".value").hide(),block.find(className).find(".value.added").css("display","block")))},window.JCCatalogElement.prototype.setBuyBlock=function(th,obj){var buyBlock=th.find(".offer_buy_block"),input_value=obj.CONFIG.MIN_QUANTITY_BUY;buyBlock.find(".counter_wrapp .counter_block").length&&buyBlock.find(".counter_wrapp .counter_block").attr("data-item",obj.ID),obj.offer_set_quantity&&(input_value=obj.offer_set_quantity);var $calculate=buyBlock.closest(".catalog_detail").find(".calculate-delivery");if($calculate.length&&($calculate.each((function(){var $calculateSpan=$(this).find("span[data-event=jqm]").first();if($calculateSpan.length){var $clone=$calculateSpan.clone();$clone.attr("data-param-product_id",obj.ID).attr("data-param-quantity",input_value).removeClass("clicked"),$clone.insertAfter($calculateSpan).on("click",(function(){jQuery.browser.mobile||($(this).parent().addClass("loadings"),$("body").addClass("loading_form"))})),$calculateSpan.remove()}if($(this).hasClass("with_preview")){$(this).removeClass("inited"),this.timerInitCalculateDelivery&&clearTimeout(this.timerInitCalculateDelivery);var that=this;this.timerInitCalculateDelivery=setTimeout((function(){initCalculatePreview(),that.timerInitCalculateDelivery=!1}),1e3)}})),"ADD"===this.offers[this.offerNum].CONFIG.ACTION&&!1!==this.offers[this.offerNum].CAN_BUY?$calculate.show():$calculate.hide()),th.find(".cheaper_form").length){var cheaper_form=th.find(".cheaper_form span");cheaper_form.data("name",obj.NAME),cheaper_form.data("item",obj.ID)}if(obj.CONFIG.OPTIONS.USE_PRODUCT_QUANTITY_DETAIL&&"ADD"==obj.CONFIG.ACTION&&obj.CAN_BUY){var max=obj.CONFIG.MAX_QUANTITY_BUY>0?"data-max='"+obj.CONFIG.MAX_QUANTITY_BUY+"'":"",counterHtml='<span class="minus">-</span><input type="text" class="text" name="'+obj.PRODUCT_QUANTITY_VARIABLE+'" value="'+input_value+'" /><span class="plus" '+max+">+</span>";arBasketAspro.BASKET&&void 0!==arBasketAspro.BASKET[obj.ID]?buyBlock.find(".counter_wrapp .counter_block").length?buyBlock.find(".counter_wrapp .counter_block").hide():(buyBlock.find(".counter_wrapp").prepend('<div class="counter_block big_basket" data-item="'+obj.ID+'"></div>'),buyBlock.find(".counter_wrapp .counter_block").html(counterHtml).hide()):buyBlock.find(".counter_wrapp .counter_block").length?buyBlock.find(".counter_wrapp .counter_block").html(counterHtml).show():(buyBlock.find(".counter_wrapp").prepend('<div class="counter_block big_basket" data-item="'+obj.ID+'"></div>'),buyBlock.find(".counter_wrapp .counter_block").html(counterHtml))}else buyBlock.find(".counter_wrapp .counter_block").length&&buyBlock.find(".counter_wrapp .counter_block").hide();var className="ORDER"==obj.CONFIG.ACTION||!obj.CAN_BUY||!obj.CONFIG.OPTIONS.USE_PRODUCT_QUANTITY_DETAIL||"SUBSCRIBE"==obj.CONFIG.ACTION&&"Y"==obj.CATALOG_SUBSCRIBE?"wide":"",buyBlockBtn=$('<div class="button_block"></div>');if(buyBlock.find(".counter_wrapp").find(".button_block").length?arBasketAspro.BASKET&&void 0!==arBasketAspro.BASKET[obj.ID]?(buyBlock.find(".counter_wrapp").find(".button_block").addClass("wide").html(obj.HTML),markProductAddBasket(obj.ID)):className?(buyBlock.find(".counter_wrapp").find(".button_block").addClass("wide").html(obj.HTML),"undefined"!=typeof arBasketAspro&&arBasketAspro.SUBSCRIBE&&void 0!==arBasketAspro.SUBSCRIBE[obj.ID]&&markProductSubscribe(obj.ID)):buyBlock.find(".counter_wrapp").find(".button_block").removeClass("wide").html(obj.HTML):(buyBlock.find(".counter_wrapp").append('<div class="button_block '+className+'">'+obj.HTML+"</div>"),arBasketAspro.BASKET&&void 0!==arBasketAspro.BASKET[obj.ID]&&markProductAddBasket(obj.ID),arBasketAspro.SUBSCRIBE&&void 0!==arBasketAspro.SUBSCRIBE[obj.ID]&&markProductSubscribe(obj.ID)),"NOTHING"!==obj.CONFIG.ACTION)if("ADD"==obj.CONFIG.ACTION&&obj.CAN_BUY&&"N"!=obj.SHOW_ONE_CLICK_BUY){var ocb='<span class="transparent big_btn type_block button one_click transition_bg" data-offers="Y" data-item="'+obj.ID+'" data-iblockID="'+obj.IBLOCK_ID+'" data-quantity="'+obj.CONFIG.MIN_QUANTITY_BUY+'" data-props="'+obj.OFFER_PROPS+'" onclick="oneClickBuy('+obj.ID+", "+obj.IBLOCK_ID+', this)"><span>'+obj.ONE_CLICK_BUY+"</span></span>";buyBlock.find(".wrapp_one_click").length?buyBlock.find(".wrapp_one_click").html(ocb):buyBlock.append('<div class="wrapp_one_click">'+ocb+"</div>")}else buyBlock.find(".wrapp_one_click").length&&buyBlock.find(".wrapp_one_click").remove();else buyBlock.find(".wrapp_one_click").length&&buyBlock.find(".wrapp_one_click").remove();buyBlock.fadeIn(),buyBlock.find(".counter_wrapp .counter_block input").data("product","ob"+th[0].id),this.setPriceAction("","Y"),"object"==typeof obOptimusPredictions&&obOptimusPredictions.showAll()},window.JCCatalogElement.prototype.setStoreBlock=function(id){$(".stores_tab > div").hide(),$(".stores_tab .sku_stores_"+id).show()},window.JCCatalogElement.prototype.setQuantityStore=function(quantity,text){parseFloat(quantity)>0?$(this.storeQuanity).find(".icon").removeClass("order").addClass("stock"):$(this.storeQuanity).find(".icon").removeClass("stock").addClass("order"),$(this.storeQuanity).find(".icon + span").html(text),$(".stores_tab").length||$(".item-stock .store_view").removeClass("store_view")},window.JCCatalogElement.prototype.CompareCountResult=function(result){if(result.COMPARE_COUNT){for(var i in result.ITEMS){if(result.ITEMS[i]==this.offers[this.offerNum].ID){this.offers[this.offerNum].COMPARE_ACTIVE=!0;break}this.offers[this.offerNum].COMPARE_ACTIVE=!1}this.offers[this.offerNum].COMPARE_ACTIVE?($(this.obCompare).addClass("added"),$(this.obCompare).find(".value:not(.added)").hide(),$(this.obCompare).find(".value.added").css("display","block")):($(this.obCompare).removeClass("added"),$(this.obCompare).find(".value.added").hide(),$(this.obCompare).find(".value:not(.added)").css("display","block"))}},window.JCCatalogElement.prototype.ItemInfoResult=function(result){result.HTML&&($(this.obBasketActions).html(result.HTML),$(this.obBasketActions).show(),this.obAddToBasketBtn=BX(this.visual.BUY_ID),this.obBasketBtn=BX(this.visual.BASKET_LINK),this.obSubscribeBtn=BX(this.visual.SUBSCRIBE_ID),this.obSubscribedBtn=BX(this.visual.SUBSCRIBED_ID),BX.bind(this.obAddToBasketBtn,"click",BX.delegate(this.Add2Basket,this)),$(this.obBasketActions).removeClass("wide"),this.ajax_type_item=result.BUYMISSINGGOODS,"ADD"==result.BUYMISSINGGOODS||this.canBuy?$(this.obQuantity).css("display",""):$(this.obBasketActions).addClass("wide"),result.ONE_CLICK_HTML&&$(".wrapp_one_click").html(result.ONE_CLICK_HTML)),basketParams={ajax_action:"Y"},BX.ajax.loadJSON(arOptimusOptions.SITE_DIR+"ajax/get_basket_count.php",basketParams,BX.delegate(this.BasketCountResult,this))},window.JCCatalogElement.prototype.BasketCountResult=function(result){for(var i in result.ITEMS){if(result.ITEMS[i].PRODUCT_ID==this.offers[this.offerNum].ID){this.offers[this.offerNum].BASKET_ACTIVE=!0;break}this.offers[this.offerNum].BASKET_ACTIVE=!1}for(var i in result.SUBSCRIBE_ITEMS){if(result.SUBSCRIBE_ITEMS[i].PRODUCT_ID==this.offers[this.offerNum].ID){this.offers[this.offerNum].SUBSCRIBE_ACTIVE=!0;break}this.offers[this.offerNum].SUBSCRIBE_ACTIVE=!1}this.BasketStateRefresh()},window.JCCatalogElement.prototype.BasketStateRefresh=function(buy_basket){this.offers[this.offerNum].SUBSCRIBE_ACTIVE?($(this.obBasketActions).addClass("wide"),$(this.obSubscribeBtn).hide(),$(this.obSubscribedBtn).show()):($(this.obBasketActions).addClass("wide"),$(this.obSubscribedBtn).hide(),$(this.obSubscribeBtn).show()),this.offers[this.offerNum].BASKET_ACTIVE?($(this.obAddToBasketBtn).hide(),$(this.obQuantity).closest(".counter_wrapp").find(".counter_block").hide(),$(this.obBasketBtn).show(),$(this.obBasketActions).addClass("wide")):($(this.obBasketActions).removeClass("wide"),$(this.obBasketBtn).hide(),("ADD"==this.ajax_type_item||this.canBuy)&&$(this.obQuantity).closest(".counter_wrapp").find(".counter_block").show(),$(this.obAddToBasketBtn).show()),this.canBuy||$(this.obBasketActions).addClass("wide"),this.canBuy&&$(".one_click").removeClass("hidden_block").css("opacity",1),BX.style(this.obBasketActions,"opacity","1"),$(this.obBasketActions).closest(".counter_wrapp").removeClass("hidden_block").css("opacity",1),"undefined"!==buy_basket&&"Y"==buy_basket&&($("#basket_line .basket_fly").length&&$(window).outerWidth()>768?basketFly("open"):$("#basket_line .cart").length&&($("#basket_line .cart").is(".empty_cart")&&($("#basket_line .cart").removeClass("empty_cart").find(".cart_wrapp a.basket_link").removeAttr("href").addClass("cart-call"),touchBasket(".cart:not(.empty_cart) .basket_block .link")),reloadTopBasket("add",$("#basket_line"),200,2e3,"Y")),animateBasketLine(200))},window.JCCatalogElement.prototype.setPriceAction=function(change,sku){var measure=this.offers[this.offerNum].MEASURE&&"Y"==this.offers[this.offerNum].SHOW_MEASURE?this.offers[this.offerNum].MEASURE:"",product=$(this.obProduct),check_quantity="",is_sku=void 0!==sku&&"Y"==sku;if(this.offers[this.offerNum].offer_set_quantity=this.offers[this.offerNum].CONFIG.MIN_QUANTITY_BUY,$(product).find("input[name=quantity]").length&&(this.offers[this.offerNum].offer_set_quantity=$(product).find("input[name=quantity]").val()),this.offers[this.offerNum].USE_PRICE_COUNT&&this.offers[this.offerNum].PRICE_MATRIX?(this.checkPriceRange(this.offers[this.offerNum].offer_set_quantity),this.setPriceMatrix(this.offers[this.offerNum].PRICE_MATRIX)):"PRICES"in this.offers[this.offerNum]&&this.setPrice(this.offers[this.offerNum].PRICES,measure),"N"!=arOptimusOptions.THEME.SHOW_TOTAL_SUMM){var check_quantity;if("ALWAYS"==arOptimusOptions.THEME.SHOW_TOTAL_SUMM&&(this.offers[this.offerNum].check_quantity=!0),this.offers[this.offerNum].check_quantity)check_quantity="Y";else(check_quantity=void 0!==change&&"Y"==change?change:"")&&(this.offers[this.offerNum].check_quantity=!0);void 0!==this.currentPrices[this.currentPriceSelected]&&setPriceItem(product,this.offers[this.offerNum].offer_set_quantity,this.currentPrices[this.currentPriceSelected].PRICE,check_quantity,is_sku)}},window.JCCatalogElement.prototype.setPriceMatrix=function(sPriceMatrix){var prices="";if(this.obPrice.price){var measure=this.offers[this.offerNum].MEASURE&&"Y"==this.offers[this.offerNum].SHOW_MEASURE?this.offers[this.offerNum].MEASURE:"",strPrice="";strPrice=getCurrentPrice(this.currentPrices[this.currentPriceSelected].PRICE,this.currentPrices[this.currentPriceSelected].CURRENCY,this.currentPrices[this.currentPriceSelected].PRINT_PRICE),measure&&(strPrice+='<span class="price_measure">/'+measure+"</span>"),$(this.obProduct).find(".not_matrix").hide(),$(this.obProduct).find(".with_matrix .price_value_block").html(strPrice),this.config.showOldPrice?($(this.obProduct).find(".price.discount").hide(),parseFloat(this.currentPrices[this.currentPriceSelected].BASE_PRICE)>parseFloat(this.currentPrices[this.currentPriceSelected].PRICE)?($(this.obProduct).find(".with_matrix .discount").html(getCurrentPrice(this.currentPrices[this.currentPriceSelected].BASE_PRICE,this.currentPrices[this.currentPriceSelected].CURRENCY,this.currentPrices[this.currentPriceSelected].PRINT_BASE_PRICE)),$(this.obProduct).find(".with_matrix .discount").css("display","inline-block")):($(this.obProduct).find(".with_matrix .discount").html(""),$(this.obProduct).find(".with_matrix .discount").css("display","none"))):($(this.obProduct).find(".with_matrix .discount").html(""),$(this.obProduct).find(".with_matrix .discount").css("display","none")),$(this.obProduct).find(".sale_block.normal").hide(),$(this.obProduct).find(".sale_block:not(.matrix)").hide(),this.currentPrices[this.currentPriceSelected].PERCENT>0?($(this.obProduct).find(".with_matrix .sale_block .text .values_wrapper").html(getCurrentPrice(this.currentPrices[this.currentPriceSelected].DISCOUNT,this.currentPrices[this.currentPriceSelected].CURRENCY,this.currentPrices[this.currentPriceSelected].PRINT_DISCOUNT)),$(this.obProduct).find(".with_matrix .sale_block .value span").html(this.currentPrices[this.currentPriceSelected].PERCENT),$(this.obProduct).find(".with_matrix .sale_block").show()):$(this.obProduct).find(".with_matrix .sale_block").hide(),$(this.obProduct).find(".with_matrix").show(),BX.adjust(this.obPrice.price,{html:sPriceMatrix});var eventdata={product:$(this.obProduct),measure:measure,config:this.config,offer:this.offers[this.offerNum],obPrice:this.currentPrices[this.currentPriceSelected]};BX.onCustomEvent("onAsproSkuSetPriceMatrix",[eventdata])}},window.JCCatalogElement.prototype.setPrice=function(change,sku,obPrices,measure,product,offer){var prices="";if(this.obPrice.price){var measure=this.offers[this.offerNum].MEASURE&&"Y"==this.offers[this.offerNum].SHOW_MEASURE?this.offers[this.offerNum].MEASURE:"",product=$(this.obProduct),obPrices,check_quantity="",is_sku=void 0!==sku&&"Y"==sku;if("object"==typeof(obPrices=this.offers[this.offerNum].PRICES)){var strPrice="",count=Object.keys(obPrices).length,arStikePrices=[];for(var j in arOptimusOptions.THEME.DISCOUNT_PRICE&&(arStikePrices=arOptimusOptions.THEME.DISCOUNT_PRICE.split(",")),strPrice='<div class="offers_price_wrapper">',$(this.obProduct).find(".with_matrix").hide(),$(this.obProduct).find(".not_matrix").show(),this.offers[this.offerNum].offer_set_quantity=this.offers[this.offerNum].CONFIG.MIN_QUANTITY_BUY,$(product).find("input[name=quantity]").length&&(this.offers[this.offerNum].offer_set_quantity=$(product).find("input[name=quantity]").val()),this.config.showOldPrice&&$(this.obProduct).find(".price.discount").hide(),this.config.showPercent&&(this.obPrice.percent&&BX.adjust(this.obPrice.percent,{style:{display:"none"},html:""}),$(this.obPrice.price).closest(".cost").find(".sale_block:not(.matrix)").hide(),$(this.obPrice.price).closest(".cost").find(".sale_block:not(.matrix) .value").html(""),$(this.obPrice.price).closest(".cost").find(".sale_block:not(.matrix) .text span").html("")),obPrices)obPrices[j]&&obPrices[j].VALUE>0?("GROUP_NAME"in obPrices[j]&&count>1&&(strPrice+='<div class="offers_price_title">',strPrice+=obPrices[j].GROUP_NAME,strPrice+="</div>"),strPrice+='<div class="offers_price'+(arStikePrices&&BX.util.in_array(obPrices[j].PRICE_ID,arStikePrices)?" strike_block":"")+'">',strPrice+='<span class="values_wrapper">'+getCurrentPrice(obPrices[j].DISCOUNT_VALUE,obPrices[j].CURRENCY,obPrices[j].PRINT_DISCOUNT_VALUE)+"</span>",measure&&(strPrice+='<span class="price_measure">/'+measure+"</span>"),strPrice+="</div>",obPrices[j].DISCOUNT_VALUE!==obPrices[j].VALUE?(this.config.showOldPrice&&(strPrice+='<div class="offers_price_old">',strPrice+='<span class="values_wrapper">'+getCurrentPrice(obPrices[j].VALUE,obPrices[j].CURRENCY,obPrices[j].PRINT_VALUE)+"</span>",strPrice+="</div>"),this.config.showPercent&&(strPrice+='<div class="sale_block">',obPrices[j].DISCOUNT_DIFF_PERCENT>0&&obPrices[j].DISCOUNT_DIFF_PERCENT<100&&(strPrice+='<div class="value">-',strPrice+="<span>"+obPrices[j].DISCOUNT_DIFF_PERCENT+"</span>",strPrice+="%</div>"),strPrice+='<div class="text">',strPrice+='<span class="title">'+BX.message("ITEM_ECONOMY")+"</span>",strPrice+='<span class="values_wrapper">'+getCurrentPrice(obPrices[j].DISCOUNT_DIFF,obPrices[j].CURRENCY,obPrices[j].PRINT_DISCOUNT_DIFF)+"</span>",strPrice+="</div>",strPrice+='<div class="clearfix"></div></div>')):this.config.showOldPrice&&(this.obPrice.full&&BX.adjust(this.obPrice.full,{style:{display:"none"},html:""}),this.obPrice.discount&&BX.adjust(this.obPrice.discount,{style:{display:"none"},html:""}))):arOptimusOptions.THEME.EMPTY_PRICE_TEXT&&(strPrice+='<span class="empty_price_text">'+arOptimusOptions.THEME.EMPTY_PRICE_TEXT+"</span>");strPrice+="</div>",BX.adjust(this.obPrice.price,{html:strPrice}),this.obPrice.full&&($(this.obPrice.full).hide().html(""),this.showPercent&&$(this.obPrice.full).closest(".cost").find(".sale_block").hide());var eventdata={product:product,measure:measure,config:this.config,offer:this.offers[this.offerNum],obPrices:obPrices};BX.onCustomEvent("onAsproSkuSetPrice",[eventdata])}}},window.JCCatalogElement.prototype.Compare=function(){var compareParams,compareLink;if($(this.obCompare).find(".added").is(":visible")?(compareLink=this.compareData.compareUrlDel,this.compareData.Added=!1):(compareLink=this.compareData.compareUrl,this.compareData.Added=!0),compareLink){switch(this.productType){case 1:case 2:compareLink=compareLink.replace("#ID#",this.product.id.toString());break;case 3:compareLink=compareLink.replace("#ID#",this.offers[this.offerNum].ID)}compareParams={ajax_action:"Y"},BX.ajax.loadJSON(compareLink,compareParams,BX.proxy(this.CompareResult,this))}},window.JCCatalogElement.prototype.CompareResult=function(result){var popupContent,popupButtons,popupTitle;return"object"==typeof result&&("OK"===result.STATUS?(BX.onCustomEvent("OnCompareChange"),this.compareData.Added?($(this.obCompare).addClass("added"),$(this.obCompare).find(".value:not(.added)").hide(),$(this.obCompare).find(".added").css("display","block")):($(this.obCompare).removeClass("added"),$(this.obCompare).find(".added").hide(),$(this.obCompare).find(".value:not(.added)").css("display","block")),jsAjaxUtil.InsertDataToNode(arOptimusOptions.SITE_DIR+"ajax/show_compare_preview_top.php","compare_line",!1)):console.log(BX.message("ADD_ERROR_COMPARE")),!1)},window.JCCatalogElement.prototype.CompareRedirect=function(){this.compareData.comparePath?location.href=this.compareData.comparePath:this.obPopupWin.close()},window.JCCatalogElement.prototype.InitBasketUrl=function(){var product_url="";switch(this.basketUrl="ADD"===this.basketMode?this.basketData.add_url:this.basketData.buy_url,this.productType){case 1:case 2:this.basketUrl=this.basketUrl.replace("#ID#",this.product.id.toString()),product_url=this.product.id.toString();break;case 3:this.basketUrl=this.basketUrl.replace("#ID#",this.offers[this.offerNum].ID),product_url=this.offers[this.offerNum].URL}this.basketParams={ajax_basket:"Y"},this.config.showQuantity&&(this.basketParams[this.basketData.quantity]=this.obQuantity.value),this.basketData.sku_props&&(this.basketParams[this.basketData.sku_props_var]=this.basketData.sku_props),product_url&&(this.basketParams.REQUEST_URI=product_url)},window.JCCatalogElement.prototype.FillBasketProps=function(){if(this.visual.BASKET_PROP_DIV){var i=0,propCollection=null,foundValues=!1,obBasketProps=null;if(this.basketData.useProps&&!this.basketData.emptyProps?this.obPopupWin&&this.obPopupWin.contentContainer&&(obBasketProps=this.obPopupWin.contentContainer):obBasketProps=BX(this.visual.BASKET_PROP_DIV),obBasketProps){if((propCollection=obBasketProps.getElementsByTagName("select"))&&propCollection.length)for(i=0;i<propCollection.length;i++)if(!propCollection[i].disabled)switch(propCollection[i].type.toLowerCase()){case"select-one":this.basketParams[propCollection[i].name]=propCollection[i].value,foundValues=!0}if((propCollection=obBasketProps.getElementsByTagName("input"))&&propCollection.length)for(i=0;i<propCollection.length;i++)if(!propCollection[i].disabled)switch(propCollection[i].type.toLowerCase()){case"hidden":this.basketParams[propCollection[i].name]=propCollection[i].value,foundValues=!0;break;case"radio":propCollection[i].checked&&(this.basketParams[propCollection[i].name]=propCollection[i].value,foundValues=!0)}}foundValues||(this.basketParams[this.basketData.props]=[],this.basketParams[this.basketData.props][0]=0)}},window.JCCatalogElement.prototype.SendToBasket=function(){this.canBuy&&(this.InitBasketUrl(),this.FillBasketProps(),BX.ajax.loadJSON(this.basketUrl,this.basketParams,BX.proxy(this.BasketResult,this)))},window.JCCatalogElement.prototype.Add2Basket=function(){this.basketMode="ADD",this.Basket()},window.JCCatalogElement.prototype.BuyBasket=function(){this.basketMode="BUY",this.Basket()},window.JCCatalogElement.prototype.Basket=function(){var contentBasketProps="";this.canBuy&&this.SendToBasket()},window.JCCatalogElement.prototype.BasketResult=function(arResult){var popupContent,popupButtons,popupTitle,productPict;return this.obPopupWin&&this.obPopupWin.close(),"object"==typeof arResult&&("OK"===arResult.STATUS&&"BUY"===this.basketMode?this.BasketRedirect():(popupTitle={content:BX.create("div",{style:{marginRight:"30px",whiteSpace:"nowrap"},text:"OK"===arResult.STATUS?BX.message("TITLE_SUCCESSFUL"):BX.message("TITLE_ERROR")})},"OK"===arResult.STATUS?(BX.onCustomEvent("OnBasketChange"),this.offers[this.offerNum].BASKET_ACTIVE=!0,this.BasketStateRefresh("Y")):console.log(BX.message("ADD_ERROR_BASKET"))),!1)},window.JCCatalogElement.prototype.BasketRedirect=function(){location.href=this.basketData.basketUrl?this.basketData.basketUrl:BX.message("BASKET_URL")},window.JCCatalogElement.prototype.InitPopupWindow=function(){this.obPopupWin||(this.obPopupWin=BX.PopupWindowManager.create("CatalogElementBasket_"+this.visual.ID,null,{autoHide:!1,offsetLeft:0,offsetTop:0,overlay:!0,closeByEsc:!0,titleBar:!0,closeIcon:{top:"10px",right:"10px"}}))},window.JCCatalogElement.prototype.onPopupWindowShow=function(popup){BX.bind(document,"click",BX.proxy(this.popupWindowClick,this))},window.JCCatalogElement.prototype.onPopupWindowClose=function(popup,event){BX.unbind(document,"click",BX.proxy(this.popupWindowClick,this))},window.JCCatalogElement.prototype.popupWindowClick=function(){this.obPopupPict&&"object"==typeof this.obPopupPict&&this.obPopupPict.isShown()&&this.obPopupPict.close()},window.JCCatalogElement.prototype.incViewedCounter=function(){if(this.currentIsSet&&!this.updateViewedCount){switch(this.productType){case 1:case 2:this.viewedCounter.params.PRODUCT_ID=this.product.id,this.viewedCounter.params.PARENT_ID=this.product.id;break;case 3:this.viewedCounter.params.PARENT_ID=this.product.id,this.viewedCounter.params.PRODUCT_ID=this.offers[this.offerNum].ID;break;default:return}this.viewedCounter.params.SITE_ID=BX.message("SITE_ID"),this.updateViewedCount=!0,BX.ajax.post(this.viewedCounter.path,this.viewedCounter.params,BX.delegate((function(){this.updateViewedCount=!1}),this))}},window.JCCatalogElement.prototype.allowViewedCount=function(update){update=!!update,this.currentIsSet=!0,update&&this.incViewedCounter()}}}(window);
//# sourceMappingURL=script.min.js.map139  108214|/aspro.optimus/install/wizards/aspro/optimus/site/templates/aspro_optimus/components/bitrix/catalog.element/main2/script.js|bfd41be5var ItemObj = {};

$(document).on('click', ".item-stock .store_view", function(){
	scroll_block($('.tabs_section'));
});

$(document).ready(function (){
	$(".opener").click(function(){
		$(this).find(".opener_icon").toggleClass("opened");
		var showBlock = $(this).parents(".table-view__item--has-stores").toggleClass("nb").find(".offer_stores").find(".stores_block_wrap");
		showBlock.slideToggle(200);
	});

	$(document).on("click", ".tabs_section .tabs-head li",  function () {
		if(!$(this).is(".current")){
			$(".tabs_section .tabs-head li").removeClass("current");
			$(this).addClass("current");
			$(".tabs_section ul.tabs_content li").removeClass("current");
			if($(this).attr("id") == "product_reviews_tab"){
				//$(".tabs_section ul.tabs_content > li:eq("+$(this).index()+")").addClass("current");
				$(".shadow.common").hide(); $("#reviews_content").show();
			}
			else{
				$(".shadow.common").show();
				$("#reviews_content").hide();
				$(".tabs_section ul.tabs_content > li:eq("+$(this).index()+")").addClass("current");
			}
		}
	});

	$(".hint .icon").click(function(e){
		var tooltipWrapp = $(this).parents(".hint");
		tooltipWrapp.click(function(e){e.stopPropagation();})
		if(tooltipWrapp.is(".active")){
			tooltipWrapp.removeClass("active").find(".tooltip").slideUp(200);
		}
		else{
			$(".catalog_detail .hint").removeClass('active');
			$(".catalog_detail .hint .tooltip").slideUp(100);

			tooltipWrapp.addClass("active").find(".tooltip").slideDown(200);
			tooltipWrapp.find(".tooltip_close").click(function(e){
				e.stopPropagation(); tooltipWrapp.removeClass("active").find(".tooltip").slideUp(100);
			});
			$(document).click(function(){
				tooltipWrapp.removeClass("active").find(".tooltip").slideUp(100);
			});
		}
	});

	function equalTizerHeight(){
		if($('.tizers_block_detail .item_block').length){
			$('.tizers_block_detail .item_block').each(function() {
				var th=$(this).find('.text'),
					img=$(this).find('.image'),
					h = th.height(),
					p = 26;
				if(img.length){
					if(th.height()<img.height()){
						if((p = Math.floor((img.height() - th.height()) / 2)) < 0){
							p = 0;
						}
						th.css('padding-top', p + 'px');
					}
				}
			});
		}
	}
	equalTizerHeight();
	BX.addCustomEvent('onWindowResize', function(eventdata) {
		try{
			ignoreResize.push(true);
			equalTizerHeight();
		}
		catch(e){}
		finally{
			ignoreResize.pop();
		}
	});
})
$('.set_block').ready(function(){
	$('.set_block ').equalize({children: '.item:not(".r") .cost', reset: true});
	$('.set_block').equalize({children: '.item .item-title', reset: true});
	$('.set_block').equalize({children: '.item .item_info', reset: false});
});



(function (window) {

if (!window.JCCatalogOnlyElement)
{

	window.JCCatalogOnlyElement = function (arParams)
	{
		if (typeof arParams === 'object')
		{
			this.params = arParams;

			this.obProduct = null;
			this.set_quantity = 1;

			this.currentPriceMode = '';
			this.currentPrices = [];
			this.currentPriceSelected = 0;
			this.currentQuantityRanges = [];
			this.currentQuantityRangeSelected = 0;

			if (this.params.MESS)
			{
				this.mess = this.params.MESS;
			}

			this.init();
		}
	}
	window.JCCatalogOnlyElement.prototype = {
		init: function()
		{
			var i = 0,
				j = 0,
				treeItems = null;

			this.obProduct = BX(this.params.ID);

			if(!!this.obProduct)
			{
				$(this.obProduct).find('.counter_wrapp .counter_block input').data('product', 'ob'+this.obProduct.id+'el');
				this.currentPriceMode = this.params.ITEM_PRICE_MODE;
				this.currentPrices = this.params.ITEM_PRICES;
				this.currentQuantityRanges = this.params.ITEM_QUANTITY_RANGES;
			}

		},

		setPriceAction: function()
		{
			this.set_quantity = this.params.MIN_QUANTITY_BUY;
			if($(this.obProduct).find('input[name=quantity]').length)
				this.set_quantity = $(this.obProduct).find('input[name=quantity]').val();

			this.checkPriceRange(this.set_quantity);

			$(this.obProduct).find('.not_matrix').hide();

			$(this.obProduct).find('.with_matrix .price_value_block').html(getCurrentPrice(this.currentPrices[this.currentPriceSelected].PRICE, this.currentPrices[this.currentPriceSelected].CURRENCY, this.currentPrices[this.currentPriceSelected].PRINT_PRICE));

			if($(this.obProduct).find('.with_matrix .discount'))
			{
				$(this.obProduct).find('.with_matrix .discount').html(getCurrentPrice(this.currentPrices[this.currentPriceSelected].BASE_PRICE, this.currentPrices[this.currentPriceSelected].CURRENCY, this.currentPrices[this.currentPriceSelected].PRINT_BASE_PRICE));
			}

			$(this.obProduct).find('.with_matrix .sale_block .text .values_wrapper').html(getCurrentPrice(this.currentPrices[this.currentPriceSelected].DISCOUNT, this.currentPrices[this.currentPriceSelected].CURRENCY, this.currentPrices[this.currentPriceSelected].PRINT_DISCOUNT));
			$(this.obProduct).find('.with_matrix .sale_block .value span').html(this.currentPrices[this.currentPriceSelected].PERCENT);

			$(this.obProduct).find('.with_matrix').show();

			if(arOptimusOptions['THEME']['SHOW_TOTAL_SUMM'] != 'N')
			{
				if(typeof this.currentPrices[this.currentPriceSelected] !== 'undefined')
					setPriceItem($(this.obProduct), this.set_quantity, this.currentPrices[this.currentPriceSelected].PRICE);
			}
		},

		checkPriceRange: function(quantity)
		{
			if (typeof quantity === 'undefined'|| this.currentPriceMode != 'Q')
				return;

			var range, found = false;

			for (var i in this.currentQuantityRanges)
			{
				if (this.currentQuantityRanges.hasOwnProperty(i))
				{
					range = this.currentQuantityRanges[i];

					if (
						parseInt(quantity) >= parseInt(range.SORT_FROM)
						&& (
							range.SORT_TO == 'INF'
							|| parseInt(quantity) <= parseInt(range.SORT_TO)
						)
					)
					{
						found = true;
						this.currentQuantityRangeSelected = range.HASH;
						break;
					}
				}
			}

			if (!found && (range = this.getMinPriceRange()))
			{
				this.currentQuantityRangeSelected = range.HASH;
			}

			for (var k in this.currentPrices)
			{
				if (this.currentPrices.hasOwnProperty(k))
				{
					if (this.currentPrices[k].QUANTITY_HASH == this.currentQuantityRangeSelected)
					{
						this.currentPriceSelected = k;
						break;
					}
				}
			}
		},

		getMinPriceRange: function()
		{
			var range;

			for (var i in this.currentQuantityRanges)
			{
				if (this.currentQuantityRanges.hasOwnProperty(i))
				{
					if (
						!range
						|| parseInt(this.currentQuantityRanges[i].SORT_FROM) < parseInt(range.SORT_FROM)
					)
					{
						range = this.currentQuantityRanges[i];
					}
				}
			}

			return range;
		}
	}
}

if (!!window.JCCatalogElement)
{
	return;
}

var BasketButton = function(params)
{
	BasketButton.superclass.constructor.apply(this, arguments);
	this.nameNode = BX.create('span', {
		props : { className : 'bx_medium bx_bt_button', id : this.id },
		style: typeof(params.style) === 'object' ? params.style : {},
		text: params.text
	});
	this.buttonNode = BX.create('span', {
		attrs: { className: params.ownerClass },
		children: [this.nameNode],
		events : this.contextEvents
	});
	if (BX.browser.IsIE())
	{
		this.buttonNode.setAttribute("hideFocus", "hidefocus");
	}
};
BX.extend(BasketButton, BX.PopupWindowButton);

window.JCCatalogElement = function (arParams)
{
	this.skuVisualParams = {
		SELECT:
		{
			TAG_BIND: 'select',
			TAG: 'option',
			ACTIVE_CLASS: 'active',
			HIDE_CLASS: 'hidden',
			EVENT: 'change',
		},
		LI:
		{
			TAG_BIND: 'li',
			TAG: 'li',
			ACTIVE_CLASS: 'active',
			HIDE_CLASS: 'missing',
			EVENT: 'click',
		}
	};
	this.productType = 0;

	this.config = {
		useCatalog: true,
		showQuantity: true,
		showPrice: true,
		showAbsent: true,
		showOldPrice: false,
		showPercent: false,
		showSkuProps: false,
		showOfferGroup: false,
		useCompare: false,
		mainPictureMode: 'IMG',
		showBasisPrice: false,
		offerShowPreviewPictureProps: false,
		basketAction: ['BUY'],
		showClosePopup: false
	};

	this.basketLinkURL = '';

	this.checkQuantity = false;
	this.maxQuantity = 0;
	this.SliderImages=0;
	this.defaultCount = 1;
	this.stepQuantity = 1;
	this.isDblQuantity = false;
	this.canBuy = true;
	this.currentBasisPrice = {};
	this.canSubscription = true;
	this.currentIsSet = false;
	this.updateViewedCount = false;

	this.currentPriceMode = '';
	this.currentPrices = [];
	this.currentPriceSelected = 0;
	this.currentQuantityRanges = [];
	this.currentQuantityRangeSelected = 0;

	this.precision = 6;
	this.precisionFactor = Math.pow(10,this.precision);

	this.listID = {
		main: ['PICT_ID', 'BIG_SLIDER_ID', 'BIG_IMG_CONT_ID'],
		stickers: ['STICKER_ID'],
		productSlider: ['SLIDER_CONT', 'SLIDER_LIST', 'SLIDER_LEFT', 'SLIDER_RIGHT'],
		offerSlider: ['SLIDER_CONT_OF_ID', 'SLIDER_LIST_OF_ID', 'SLIDER_LEFT_OF_ID', 'SLIDER_RIGHT_OF_ID'],
		offerSliderMobile: ['SLIDER_CONT_OFM_ID', 'SLIDER_LIST_OFM_ID', 'SLIDER_LEFT_OFM_ID', 'SLIDER_RIGHT_OFM_ID'],
		offers: ['TREE_ID', 'TREE_ITEM_ID', 'DISPLAY_PROP_DIV', 'DISPLAY_PROP_ARTICLE_DIV', 'OFFER_GROUP'],
		quantity: ['QUANTITY_ID', 'QUANTITY_UP_ID', 'QUANTITY_DOWN_ID', 'QUANTITY_MEASURE', 'QUANTITY_LIMIT', 'BASIS_PRICE'],
		price: ['PRICE_ID'],
		oldPrice: ['OLD_PRICE_ID', 'DISCOUNT_VALUE_ID'],
		discountPerc: ['DISCOUNT_PERC_ID'],
		basket: ['BASKET_PROP_DIV', 'BUY_ID', 'BASKET_LINK', 'ADD_BASKET_ID', 'BASKET_ACTIONS_ID', 'NOT_AVAILABLE_MESS', 'SUBSCRIBE_ID', 'SUBSCRIBED_ID'],
		magnifier: ['MAGNIFIER_ID', 'MAGNIFIER_AREA_ID'],
		compare: ['COMPARE_LINK_ID']
	};

	this.visualPostfix = {
		// main pict
		PICT_ID: '_pict',
		BIG_SLIDER_ID: '_big_slider',
		BIG_IMG_CONT_ID: '_bigimg_cont',
		// stickers
		STICKER_ID: '_sticker',
		// product pict slider
		SLIDER_CONT: '_slider_cont',
		SLIDER_LIST: '_slider_list',
		SLIDER_LEFT: '_slider_left',
		SLIDER_RIGHT: '_slider_right',
		// offers sliders
		SLIDER_CONT_OF_ID: '_slider_cont_',
		SLIDER_LIST_OF_ID: '_slider_list_',
		SLIDER_LEFT_OF_ID: '_slider_left_',
		SLIDER_RIGHT_OF_ID: '_slider_right_',
		// offers sliders mobile
		SLIDER_CONT_OFM_ID: '_sliderm_cont_',
		SLIDER_LIST_OFM_ID: '_sliderm_list_',
		SLIDER_LEFT_OFM_ID: '_sliderm_left_',
		SLIDER_RIGHT_OFM_ID: '_sliderm_right_',
		// offers
		TREE_ID: '_skudiv',
		TREE_ITEM_ID: '_prop_',
		DISPLAY_PROP_DIV: '_sku_prop',
		DISPLAY_PROP_ARTICLE_DIV: '_sku_article_prop',
		// quantity
		QUANTITY_ID: '_quantity',
		QUANTITY_UP_ID: '_quant_up',
		QUANTITY_DOWN_ID: '_quant_down',
		QUANTITY_MEASURE: '_quant_measure',
		QUANTITY_LIMIT: '_quant_limit',
		BASIS_PRICE: '_basis_price',
		// price and discount
		PRICE_ID: '_price',
		OLD_PRICE_ID: '_old_price',
		DISCOUNT_VALUE_ID: '_price_discount',
		DISCOUNT_PERC_ID: '_dsc_pict',
		// basket
		BASKET_PROP_DIV: '_basket_prop',
		BUY_ID: '_buy_link',
		BASKET_LINK: '_basket_link',
		ADD_BASKET_ID: '_add_basket_link',
		BASKET_ACTIONS_ID: '_basket_actions',
		NOT_AVAILABLE_MESS: '_not_avail',
		SUBSCRIBE_ID: '_subscribe_div',
		SUBSCRIBED_ID: '_subscribed_div',
		// magnifier
		MAGNIFIER_ID: '_magnifier',
		MAGNIFIER_AREA_ID: '_magnifier_area',
		// offer groups
		OFFER_GROUP: '_set_group_',
		// compare
		COMPARE_LINK_ID: '_compare_link'
	};

	this.visual = {};

	this.basketMode = '';
	this.product = {
		checkQuantity: false,
		maxQuantity: 0,
		stepQuantity: 1,
		startQuantity: 1,
		isDblQuantity: false,
		canBuy: true,
		canSubscription: true,
		name: '',
		pict: {},
		id: 0,
		addUrl: '',
		buyUrl: '',
		slider: {},
		sliderCount: 0,
		useSlider: false,
		sliderPict: []
	};
	this.mess = {};

	this.basketData = {
		useProps: false,
		emptyProps: false,
		quantity: 'quantity',
		props: 'prop',
		basketUrl: '',
		sku_props: '',
		sku_props_var: 'basket_props',
		add_url: '',
		buy_url: ''
	};
	this.compareData = {
		compareUrl: '',
		comparePath: ''
	};

	this.defaultPict = {
		preview: null,
		detail: null
	};

	this.offers = [];
	this.offerNum = 0;
	this.treeProps = [];
	this.obTreeRows = [];
	this.showCount = [];
	this.showStart = [];
	this.selectedValues = {};
	this.sliders = [];

	this.obProduct = null;
	this.obQuantity = null;
	this.obQuantityUp = null;
	this.obQuantityDown = null;
	this.obBasisPrice = null;
	this.obPict = null;
	this.obPictAligner = null;
	this.obPrice = {
		price: null,
		full: null,
		discount: null,
		percent: null
	};
	this.obTree = null;
	this.obBuyBtn = null;
	this.obBasketBtn = null;
	this.obAddToBasketBtn = null;
	this.obBasketActions = null;
	this.obNotAvail = null;
	this.obSkuProps = null;
	this.obSlider = null;
	this.obMeasure = null;
	this.obQuantityLimit = {
		all: null,
		value: null
	};
	this.obCompare = null;

	this.viewedCounter = {
		path: '/bitrix/components/bitrix/catalog.element/ajax.php',
		params: {
			AJAX: 'Y',
			SITE_ID: '',
			PRODUCT_ID: 0,
			PARENT_ID: 0
		}
	};

	this.currentImg = {
		src: '',
		width: 0,
		height: 0,
		screenWidth: 0,
		screenHeight: 0,
		screenOffsetX: 0,
		screenOffsetY: 0,
		scale: 1
	};
	this.currentBigImg = {
		src: '',
	}

	this.obPopupWin = null;
	this.basketUrl = '';
	this.basketParams = {};

	this.obPopupPict = null;
	this.magnify = {
		obMagnifier: null,
		obMagnifyPict: null,
		obMagnifyArea: null,
		obBigImg: null,
		obBigSlider: null,
		magnifyShow: false,
		areaParams : {
			width: 100,
			height: 130,
			left: 0,
			top: 0,
			scaleFactor: 1,
			globalLeft: 0,
			globalTop: 0,
			globalRight: 0,
			globalBottom: 0
		},
		magnifierParams: {
			top: 0,
			left: 0,
			width: 0,
			height: 0,
			ratioX: 10,
			ratioY: 13,
			defaultScale: 1
		},
		magnifyPictParams: {
			marginTop: 0,
			marginLeft: 0,
			width: 0,
			height: 0
		}
	};

	this.treeRowShowSize = 5;
	this.treeEnableArrow = { display: '', cursor: 'pointer', opacity: 1 };
	this.treeDisableArrow = { display: '', cursor: 'default', opacity: 0.2 };
	this.sliderRowShowSize = 5;
	this.sliderEnableArrow = { display: '', cursor: 'pointer', opacity: 1 };
	this.sliderDisableArrow = { display: '', cursor: 'default', opacity: 0.2 };

	this.errorCode = 0;
	if (typeof arParams === 'object')
	{
		this.params = arParams;
		this.initConfig();

		if (!!this.params.MESS)
		{
			this.mess = this.params.MESS;
		}
		switch (this.productType)
		{
			case 0:// no catalog
			case 1://product
			case 2://set
				this.initProductData();
				break;
			case 3://sku
				this.initOffersData();
				break;
			default:
				this.errorCode = -1;
		}

		this.initBasketData();
		this.initCompareData();
	}
	if (0 === this.errorCode)
	{
		BX.ready(BX.delegate(this.Init,this));
	}
	this.params = {};
};

window.JCCatalogElement.prototype.Init = function()
{
	var i = 0,
		j = 0,
		strPrefix = '',
		SliderImgs = null,
		TreeItems = null;

	this.obProduct = BX(this.visual.ID);
	if (!this.obProduct)
	{
		this.errorCode = -1;
	}
	this.obPict = BX(this.visual.PICT_ID);
	if (!this.obPict)
	{
		this.errorCode = -2;
	}
	else
	{
		this.obPictAligner = this.obPict.parentNode;
	}

	if (this.config.showPrice)
	{
		this.obPrice.price = BX(this.visual.PRICE_ID);
		if (!this.obPrice.price && this.config.useCatalog)
		{
			this.errorCode = -16;
		}
		else
		{
			if (this.config.showOldPrice)
			{
				this.obPrice.full = BX(this.visual.OLD_PRICE_ID);
				this.obPrice.discount = BX(this.visual.DISCOUNT_VALUE_ID);
				if(!!this.obPrice.full)
					BX.adjust(this.obPrice.full, {style: {display: 'none'}, html: ''});
				/*if (!this.obPrice.full || !this.obPrice.discount)
				{
					this.config.showOldPrice = false;
				}*/
			}
			if (this.config.showPercent)
			{
				this.obPrice.percent = BX(this.visual.DISCOUNT_PERC_ID);
				/*if (!this.obPrice.percent)
				{
					this.config.showPercent = false;
				}*/
			}
		}
		this.obBasketActions = BX(this.visual.BASKET_ACTIONS_ID);
		if (!!this.obBasketActions)
		{
			if (BX.util.in_array('BUY', this.config.basketAction))
			{
				this.obBuyBtn = BX(this.visual.BUY_ID);
			}
			if (BX.util.in_array('ADD', this.config.basketAction))
			{
				this.obAddToBasketBtn = BX(this.visual.BUY_ID);
			}
			if (!!this.visual.BASKET_LINK)
			{
				this.obBasketBtn = BX(this.visual.BASKET_LINK);
			}

		}
		this.obNotAvail = BX(this.visual.NOT_AVAILABLE_MESS);
	}

	if (this.config.showQuantity)
	{
		this.obQuantity = BX(this.visual.QUANTITY_ID);
		if (!!this.visual.QUANTITY_UP_ID)
		{
			this.obQuantityUp = BX(this.visual.QUANTITY_UP_ID);
		}
		if (!!this.visual.QUANTITY_DOWN_ID)
		{
			this.obQuantityDown = BX(this.visual.QUANTITY_DOWN_ID);
		}
		if (this.config.showBasisPrice)
		{
			this.obBasisPrice = BX(this.visual.BASIS_PRICE);
		}
	}
	if (3 === this.productType)
	{
		if (!!this.visual.TREE_ID)
		{
			this.obTree = BX(this.visual.TREE_ID);
			if (!this.obTree)
			{
				this.errorCode = -256;
			}
			strPrefix = this.visual.TREE_ITEM_ID;
			for (i = 0; i < this.treeProps.length; i++)
			{
				this.obTreeRows[i] = {
					LEFT: BX(strPrefix+this.treeProps[i].ID+'_left'),
					RIGHT: BX(strPrefix+this.treeProps[i].ID+'_right'),
					LIST: BX(strPrefix+this.treeProps[i].ID+'_list'),
					CONT: BX(strPrefix+this.treeProps[i].ID+'_cont')
				};
				if (!this.obTreeRows[i].LIST || !this.obTreeRows[i].CONT)
				{
					this.errorCode = -512;
					break;
				}
			}
		}
		if (!!this.visual.QUANTITY_MEASURE)
		{
			this.obMeasure = BX(this.visual.QUANTITY_MEASURE);
		}
		if (!!this.visual.QUANTITY_LIMIT)
		{
			this.obQuantityLimit.all = BX(this.visual.QUANTITY_LIMIT);
			if (!!this.obQuantityLimit.all)
			{
				this.obQuantityLimit.value = BX.findChild(this.obQuantityLimit.all, {tagName: 'span'}, false, false);
				if (!this.obQuantityLimit.value)
				{
					this.obQuantityLimit.all = null;
				}
			}
		}
	}

	if (this.config.showSkuProps)
	{
		if (!!this.visual.DISPLAY_PROP_DIV)
		{
			this.obSkuProps = BX(this.visual.DISPLAY_PROP_DIV);
		}
		if (!!this.visual.DISPLAY_PROP_ARTICLE_DIV)
		{
			this.obSkuArticleProps = BX(this.visual.DISPLAY_PROP_ARTICLE_DIV);
		}

	}

	if (this.config.useCompare)
	{
		this.obCompare = BX(this.visual.COMPARE_LINK_ID);
	}
	if (0 === this.errorCode)
	{

		if (this.config.showQuantity)
		{
			if (!!this.obQuantityUp)
			{
				BX.bind(this.obQuantityUp, 'click', BX.delegate(this.QuantityUp, this));
			}
			if (!!this.obQuantityDown)
			{
				BX.bind(this.obQuantityDown, 'click', BX.delegate(this.QuantityDown, this));
			}
			if (!!this.obQuantity)
			{
				BX.bind(this.obQuantity, 'change', BX.delegate(this.QuantityChange, this));
			}
		}
		switch (this.productType)
		{
			case 0://no catalog
			case 1://product
			case 2://set
				if (this.product.useSlider)
				{
					this.product.slider = {
						COUNT: this.product.sliderCount,
						ID: this.visual.SLIDER_CONT,
						CONT: BX(this.visual.SLIDER_CONT),
						LIST: BX(this.visual.SLIDER_LIST),
						LEFT: BX(this.visual.SLIDER_LEFT),
						RIGHT: BX(this.visual.SLIDER_RIGHT),
						START: 0
					};
					SliderImgs = BX.findChildren(this.product.slider.LIST, {tagName: 'li'}, true);
					if (!!SliderImgs && 0 < SliderImgs.length)
					{
						for (j = 0; j < SliderImgs.length; j++)
						{
							BX.bind(SliderImgs[j], 'click', BX.delegate(this.ProductSelectSliderImg, this));
						}
					}
					if (!!this.product.slider.LEFT)
					{
						BX.bind(this.product.slider.LEFT, 'click', BX.delegate(this.ProductSliderRowLeft, this));
						BX.adjust(this.product.slider.LEFT, { style: this.sliderDisableArrow } );

					}
					if (!!this.product.slider.RIGHT)
					{
						BX.bind(this.product.slider.RIGHT, 'click', BX.delegate(this.ProductSliderRowRight, this));
						BX.adjust(this.product.slider.RIGHT, { style: this.sliderEnableArrow } );
					}
					this.setCurrentImg(this.product.sliderPict[0], true);
				}
				break;
			case 3://sku
				for(var key in this.skuVisualParams){
					var TreeItems = BX.findChildren(this.obTree, {tagName: this.skuVisualParams[key].TAG_BIND}, true);
					if (!!TreeItems && 0 < TreeItems.length){
						for (i = 0; i < TreeItems.length; i++){
							$(TreeItems[i]).on(this.skuVisualParams[key].EVENT, BX.delegate(this.SelectOfferProp, this));
							//BX.bind(TreeItems[i], this.skuVisualParams[key].EVENT, BX.delegate(this.SelectOfferProp, this));
						}
					}
				}
				for (i = 0; i < this.offers.length; i++)
				{
					this.offers[i].SLIDER_COUNT = parseInt(this.offers[i].SLIDER_COUNT, 10);
					if (isNaN(this.offers[i].SLIDER_COUNT))
					{
						this.offers[i].SLIDER_COUNT = 0;
					}
					if (0 === this.offers[i].SLIDER_COUNT)
					{
						this.sliders[i] = {
							COUNT: this.offers[i].SLIDER_COUNT,
							ID: ''
						};
					}
					else
					{
						for (j = 0; j < this.offers[i].SLIDER.length; j++)
						{
							this.offers[i].SLIDER[j].WIDTH = parseInt(this.offers[i].SLIDER[j].WIDTH, 10);
							this.offers[i].SLIDER[j].HEIGHT = parseInt(this.offers[i].SLIDER[j].HEIGHT, 10);
						}
						this.sliders[i] = {
							COUNT: this.offers[i].SLIDER_COUNT,
							OFFER_ID: this.offers[i].ID,
							ID: this.visual.SLIDER_CONT_OF_ID+this.offers[i].ID,
							CONT: BX(this.visual.SLIDER_CONT_OF_ID+this.offers[i].ID),
							LIST: BX(this.visual.SLIDER_LIST_OF_ID+this.offers[i].ID),
							CONT_M: BX(this.visual.SLIDER_CONT_OFM_ID+this.offers[i].ID),
							LIST_M: BX(this.visual.SLIDER_LIST_OFM_ID+this.offers[i].ID),
							LEFT: BX(this.visual.SLIDER_LEFT_OF_ID+this.offers[i].ID),
							RIGHT: BX(this.visual.SLIDER_RIGHT_OF_ID+this.offers[i].ID),
							START: 0
						};
						SliderImgs = BX.findChildren(this.sliders[i].LIST, {tagName: 'li'}, true);
						if (!!SliderImgs && 0 < SliderImgs.length)
						{
							for (j = 0; j < SliderImgs.length; j++)
							{
								BX.bind(SliderImgs[j], 'click', BX.delegate(this.SelectSliderImg, this));
							}
						}
						if (!!this.sliders[i].LEFT)
						{
							BX.bind(this.sliders[i].LEFT, 'click', BX.delegate(this.SliderRowLeft, this));
						}
						if (!!this.sliders[i].RIGHT)
						{
							BX.bind(this.sliders[i].RIGHT, 'click', BX.delegate(this.SliderRowRight, this));
						}
					}
				}
				this.SetCurrent();

				break;
		}

		if (!!this.obBuyBtn)
		{
			BX.bind(this.obBuyBtn, 'click', BX.proxy(this.BuyBasket, this));
		}
		if (!!this.obAddToBasketBtn)
		{
			BX.bind(this.obAddToBasketBtn, 'click', BX.proxy(this.Add2Basket, this));
		}
		if (!!this.obCompare)
		{
			BX.bind(this.obCompare, 'click', BX.proxy(this.Compare, this));
		}

		this.setMainPictHandler();
		setTimeout(function(){
			$('.offers_img.wof').css('opacity', 1);
		},400);
	}
};

window.JCCatalogElement.prototype.initConfig = function()
{
	this.productType = parseInt(this.params.PRODUCT_TYPE, 10);
	if (!!this.params.CONFIG && typeof(this.params.CONFIG) === 'object')
	{

		if (this.params.CONFIG.USE_CATALOG !== 'undefined' && BX.type.isBoolean(this.params.CONFIG.USE_CATALOG))
		{
			this.config.useCatalog = this.params.CONFIG.USE_CATALOG;
		}
		this.config.showQuantity = !!this.params.CONFIG.SHOW_QUANTITY;
		this.config.showPrice = !!this.params.CONFIG.SHOW_PRICE;
		this.config.showPercent = !!this.params.CONFIG.SHOW_DISCOUNT_PERCENT;
		this.config.showOldPrice = !!this.params.CONFIG.SHOW_OLD_PRICE;
		this.config.showSkuProps = !!this.params.CONFIG.SHOW_SKU_PROPS;
		this.config.showOfferGroup = !!this.params.CONFIG.OFFER_GROUP;
		this.config.useCompare = !!this.params.CONFIG.DISPLAY_COMPARE;
		this.config.offerShowPreviewPictureProps = this.params.OFFER_SHOW_PREVIEW_PICTURE_PROPS;
		if (!!this.params.CONFIG.MAIN_PICTURE_MODE)
		{
			this.config.mainPictureMode = this.params.CONFIG.MAIN_PICTURE_MODE;
		}
		this.config.showBasisPrice = !!this.params.CONFIG.SHOW_BASIS_PRICE;
		if (!!this.params.CONFIG.ADD_TO_BASKET_ACTION)
		{
			this.config.basketAction = this.params.CONFIG.ADD_TO_BASKET_ACTION;
		}
		this.config.showClosePopup = !!this.params.CONFIG.SHOW_CLOSE_POPUP;
	}
	else
	{
		// old version
		if (this.params.USE_CATALOG !== 'undefined' && BX.type.isBoolean(this.params.USE_CATALOG))
		{
			this.config.useCatalog = this.params.USE_CATALOG;
		}
		this.config.showQuantity = !!this.params.SHOW_QUANTITY;
		this.config.showPrice = !!this.params.SHOW_PRICE;
		this.config.showPercent = !!this.params.SHOW_DISCOUNT_PERCENT;
		this.config.showOldPrice = !!this.params.SHOW_OLD_PRICE;
		this.config.showSkuProps = !!this.params.SHOW_SKU_PROPS;
		this.config.showOfferGroup = !!this.params.OFFER_GROUP;
		this.config.useCompare = !!this.params.DISPLAY_COMPARE;
		if (!!this.params.MAIN_PICTURE_MODE)
		{
			this.config.mainPictureMode = this.params.MAIN_PICTURE_MODE;
		}
		this.config.showBasisPrice = !!this.params.SHOW_BASIS_PRICE;
		if (!!this.params.ADD_TO_BASKET_ACTION)
		{
			this.config.basketAction = this.params.ADD_TO_BASKET_ACTION;
		}
		this.config.showClosePopup = !!this.params.SHOW_CLOSE_POPUP;
	}

	this.config.SKU_DETAIL_ID = this.params.SKU_DETAIL_ID;

	if (!this.params.VISUAL || typeof(this.params.VISUAL) !== 'object' || !this.params.VISUAL.ID)
	{
		this.errorCode = -1;
		return;
	}
	this.visual.ID = this.params.VISUAL.ID;
	this.basketLinkURL = this.params.BASKET.BASKET_URL;
	this.defaultCount = this.params.DEFAULT_COUNT;
	this.storeQuanity = BX(this.params.STORE_QUANTITY);
	this.initVisualParams('main');
	if (this.config.showQuantity)
	{
		this.initVisualParams('quantity');
	}
	if (this.config.showPrice)
	{
		this.initVisualParams('price');
	}
	if (this.config.showOldPrice)
	{
		this.initVisualParams('oldPrice');
	}
	if (this.config.showPercent)
	{
		this.initVisualParams('discountPerc');
	}
	this.initVisualParams('basket');
	if (this.config.mainPictureMode === 'MAGNIFIER')
	{
		this.initVisualParams('magnifier');
	}
	if (this.config.useCompare)
	{
		this.initVisualParams('compare');
	}
};

window.JCCatalogElement.prototype.initVisualParams = function(ID)
{
	var i = 0,
		key = '';

	if (!this.listID[ID])
	{
		this.errorCode = -1;
		return;
	}
	for (i = 0; i < this.listID[ID].length; i++)
	{
		key = this.listID[ID][i];
		this.visual[key] = (!!this.params.VISUAL[key] ? this.params.VISUAL[key] : this.visual.ID+this.visualPostfix[key]);
	}
};

window.JCCatalogElement.prototype.initProductData = function()
{
	var j = 0;
	this.initVisualParams('productSlider');
	if (!!this.params.PRODUCT && 'object' === typeof(this.params.PRODUCT))
	{
		if (this.config.showQuantity)
		{
			this.product.checkQuantity = this.params.PRODUCT.CHECK_QUANTITY;
			this.product.isDblQuantity = this.params.PRODUCT.QUANTITY_FLOAT;
			if (this.product.checkQuantity)
			{
				this.product.maxQuantity = (this.product.isDblQuantity ? parseFloat(this.params.PRODUCT.MAX_QUANTITY) : parseInt(this.params.PRODUCT.MAX_QUANTITY, 10));
			}
			this.product.stepQuantity = (this.product.isDblQuantity ? parseFloat(this.params.PRODUCT.STEP_QUANTITY) : parseInt(this.params.PRODUCT.STEP_QUANTITY, 10));

			this.checkQuantity = this.product.checkQuantity;
			this.isDblQuantity = this.product.isDblQuantity;
			this.maxQuantity = this.product.maxQuantity;
			this.stepQuantity = this.product.stepQuantity;
			if (this.isDblQuantity)
			{
				this.stepQuantity = Math.round(this.stepQuantity*this.precisionFactor)/this.precisionFactor;
			}
		}
		this.product.canBuy = this.params.PRODUCT.CAN_BUY;
		this.product.canSubscription = this.params.PRODUCT.SUBSCRIPTION;
		if (this.config.showPrice)
		{
			this.currentBasisPrice = this.params.PRODUCT.BASIS_PRICE;
		}

		this.canBuy = this.product.canBuy;
		this.canSubscription = this.product.canSubscription;

		this.product.name = this.params.PRODUCT.NAME;
		this.product.pict = this.params.PRODUCT.PICT;
		this.product.id = this.params.PRODUCT.ID;

		if (!!this.params.PRODUCT.ADD_URL)
		{
			this.product.addUrl = this.params.PRODUCT.ADD_URL;
		}
		if (!!this.params.PRODUCT.BUY_URL)
		{
			this.product.buyUrl = this.params.PRODUCT.BUY_URL;
		}

		if (!!this.params.PRODUCT.SLIDER_COUNT)
		{
			this.product.sliderCount = parseInt(this.params.PRODUCT.SLIDER_COUNT, 10);
			if (isNaN(this.product.sliderCount))
			{
				this.product.sliderCount = 0;
			}
			if (0 < this.product.sliderCount && !!this.params.PRODUCT.SLIDER.length && 0 < this.params.PRODUCT.SLIDER.length)
			{
				for (j = 0; j < this.params.PRODUCT.SLIDER.length; j++)
				{
					this.product.useSlider = true;
					this.params.PRODUCT.SLIDER[j].WIDTH = parseInt(this.params.PRODUCT.SLIDER[j].WIDTH, 10);
					this.params.PRODUCT.SLIDER[j].HEIGHT = parseInt(this.params.PRODUCT.SLIDER[j].HEIGHT, 10);
				}
				this.product.sliderPict = this.params.PRODUCT.SLIDER;
				this.setCurrentImg(this.product.sliderPict[0], false);
			}
		}
		this.currentIsSet = true;
	}
	else
	{
		this.errorCode = -1;
	}
};

window.JCCatalogElement.prototype.initOffersData = function()
{
	this.initVisualParams('offerSlider');
	this.initVisualParams('offerSliderMobile');
	this.initVisualParams('offers');
	if (!!this.params.OFFERS && BX.type.isArray(this.params.OFFERS))
	{
		this.offers = this.params.OFFERS;
		this.offerNum = 0;
		if (!!this.params.OFFER_SELECTED)
		{
			this.offerNum = parseInt(this.params.OFFER_SELECTED, 10);
			if('offers' in this)
			{
				if(this.offers.length)
				{
					var objUrl = parseUrlQuery(),
						sku_params = this.config.SKU_DETAIL_ID,
						sku_id = 0;
					if(this.config.SKU_DETAIL_ID in objUrl)
						sku_id = objUrl[this.config.SKU_DETAIL_ID];
					if(sku_id)
					{
						for(var i in this.offers)
						{
							if(this.offers[i].ID == sku_id)
								this.offerNum = parseInt(i, 10);

						}
					}
				}
			}
		}
		if (isNaN(this.offerNum))
		{
			this.offerNum = 0;
		}
		if (!!this.params.TREE_PROPS)
		{
			this.treeProps = this.params.TREE_PROPS;
		}
		if (!!this.params.DEFAULT_PICTURE)
		{
			this.defaultPict.preview = this.params.DEFAULT_PICTURE.PREVIEW_PICTIRE;
			this.defaultPict.detail = this.params.DEFAULT_PICTURE.DETAIL_PICTURE;
		}
		if (!!this.params.PRODUCT && typeof(this.params.PRODUCT) === 'object')
		{
			this.product.id = parseInt(this.params.PRODUCT.ID, 10);
			this.product.name = this.params.PRODUCT.NAME;
		}
	}
	else
	{
		this.errorCode = -1;
	}
};

window.JCCatalogElement.prototype.initBasketData = function()
{
	if (!!this.params.BASKET && 'object' === typeof(this.params.BASKET))
	{
		if (1 === this.productType || 2 === this.productType)
		{
			this.basketData.useProps = !!this.params.BASKET.ADD_PROPS;
			this.basketData.emptyProps = !!this.params.BASKET.EMPTY_PROPS;
		}

		if (!!this.params.BASKET.QUANTITY)
		{
			this.basketData.quantity = this.params.BASKET.QUANTITY;
		}
		if (!!this.params.BASKET.PROPS)
		{
			this.basketData.props = this.params.BASKET.PROPS;
		}
		if (!!this.params.BASKET.BASKET_URL)
		{
			this.basketData.basketUrl = this.params.BASKET.BASKET_URL;
		}
		if (3 === this.productType)
		{
			if (!!this.params.BASKET.SKU_PROPS)
			{
				this.basketData.sku_props = this.params.BASKET.SKU_PROPS;
			}
		}
		if (!!this.params.BASKET.ADD_URL_TEMPLATE)
		{
			this.basketData.add_url = this.params.BASKET.ADD_URL_TEMPLATE;
		}
		if (!!this.params.BASKET.BUY_URL_TEMPLATE)
		{
			this.basketData.buy_url = this.params.BASKET.BUY_URL_TEMPLATE;
		}
		if (this.basketData.add_url === '' && this.basketData.buy_url === '')
		{
			this.errorCode = -1024;
		}
	}
};

window.JCCatalogElement.prototype.initCompareData = function()
{
	if (this.config.useCompare)
	{
		if (!!this.params.COMPARE && typeof(this.params.COMPARE) === 'object')
		{
			if (!!this.params.COMPARE.COMPARE_PATH)
			{
				this.compareData.comparePath = this.params.COMPARE.COMPARE_PATH;
			}
			if (!!this.params.COMPARE.COMPARE_URL_TEMPLATE_DEL)
			{
				this.compareData.compareUrlDel = this.params.COMPARE.COMPARE_URL_TEMPLATE_DEL;
			}
			if (!!this.params.COMPARE.COMPARE_URL_TEMPLATE)
			{
				this.compareData.compareUrl = this.params.COMPARE.COMPARE_URL_TEMPLATE;
			}
			else
			{
				this.config.useCompare = false;
			}
		}
		else
		{
			this.config.useCompare = false;
		}
	}
};

window.JCCatalogElement.prototype.setMainPictHandler = function()
{
	switch (this.config.mainPictureMode)
	{
		case 'GALLERY':
			break;
		case 'MAGNIFIER':
			$(this.obPict).addClass('zoom_picture');
			InitZoomPict();
			break;
		case 'POPUP':
			$(this.obPict).parent().addClass('fancy_offer');
			break;
		default:
			break;
	}
};

window.JCCatalogElement.prototype.setCurrentImg = function(img, showImage)
{
	showImage = !!showImage;
	if('SMALL' in img){
		this.currentImg.src = img.SMALL.src;
	}else if ('SRC' in img) {
		this.currentImg.src = img.SRC
	};
	if('BIG' in img){
		this.currentBigImg.src = img.BIG.src;
	}
	if('WIDTH' in img){
		this.currentImg.width = img.WIDTH;
	}
	if('HEIGHT' in img){
		this.currentImg.height = img.HEIGHT;
	}
	if (showImage && !!this.obPict)
	{
		if (this.config.mainPictureMode === 'MAGNIFIER')
		{
			if('src' in this.currentBigImg){
				$(this.obPict).attr('data-large',this.currentBigImg.src);
				$(this.obPict).attr('xoriginal',this.currentBigImg.src);
			}
			if('src' in this.currentImg)
				$(this.obPict).attr('xpreview',this.currentImg.src);
		}
		if('src' in this.currentImg){
			if (this.currentImg.src){
				BX.adjust(this.obPict, { props: { src: this.currentImg.src } });
			}
		}
		if('src' in this.currentBigImg){
			if (this.currentBigImg.src){
				if(this.config.mainPictureMode === 'POPUP'){
					$(this.obPict).parent().attr('href',this.currentBigImg.src);
				}
			}
		}

	}
};

window.JCCatalogElement.prototype.scaleImg = function(src, dest)
{
	var
		scaleX,
		scaleY,
		scale,
		result = {};

	if (dest.width >= src.width && dest.height >= src.height)
	{
		result.width = src.width;
		result.height = src.height;
	}
	else
	{
		scaleX = dest.width/src.width;
		scaleY = dest.height/src.height;
		scale =  Math.min(scaleX, scaleY);
		result.width = Math.max(1, parseInt(scale*src.width , 10));
		result.height = Math.max(1, parseInt(scale*src.height , 10));
	}
	return result;
};

window.JCCatalogElement.prototype.showMagnifier = function(e)
{
	if (!this.magnify.magnifyShow)
	{
		this.calcMagnifierParams();
		this.calcMagnifyAreaSize();
		this.calcMagnifyAreaPos(e);
		this.calcMagnifyPictSize();
		this.calcMagnifyPictPos();
		this.setMagnifyAreaParams(true);
		this.setMagnifyPictParams(true);
		this.setMagnifierParams(true);
		BX.bind(document, 'mousemove', BX.proxy(this.moveMagnifierArea, this));
	}
};

window.JCCatalogElement.prototype.hideMagnifier = function()
{
	if (!this.magnify.magnifyShow)
	{
		if (!!this.magnify.obMagnifier)
		{
			BX.adjust(this.magnify.obMagnifier, { style: { display: 'none' } });
		}
		if (!!this.magnify.obMagnifyArea)
		{
			BX.adjust(this.magnify.obMagnifyArea, { style: { display: 'none' } });
		}
		BX.unbind(document, 'mousemove', BX.proxy(this.moveMagnifierArea, this));
	}
};

window.JCCatalogElement.prototype.moveMagnifierArea = function(e)
{
	var
		currentPos = {
			X: 0,
			Y: 0
		},
		posBigImg = BX.pos(this.obPict),
		intersect = {},
		params = {},
		paramsPict = {};

	currentPos = this.inRect(e, posBigImg);
	if (this.inBound(posBigImg, currentPos))
	{
		intersect = this.intersectArea(currentPos, posBigImg);
		switch (intersect.X)
		{
			case -1:
				this.magnify.areaParams.left = this.currentImg.screenOffsetX;
				break;
			case 0:
				this.magnify.areaParams.left = this.currentImg.screenOffsetX + currentPos.X - (this.magnify.areaParams.width >>> 1);
				break;
			case 1:
				this.magnify.areaParams.left = this.currentImg.screenOffsetX + posBigImg.width - this.magnify.areaParams.width;
				break;
		}
		switch (intersect.Y)
		{
			case -1:
				this.magnify.areaParams.top = 0;
				break;
			case 0:
				this.magnify.areaParams.top = currentPos.Y - (this.magnify.areaParams.height >>> 1);
				break;
			case 1:
				this.magnify.areaParams.top = posBigImg.height - this.magnify.areaParams.height;
				break;
		}
		this.magnify.magnifyPictParams.marginLeft = -parseInt(((this.magnify.areaParams.left-this.currentImg.screenOffsetX)*this.currentImg.scale), 10);
		this.magnify.magnifyPictParams.marginTop = -parseInt(((this.magnify.areaParams.top)*this.currentImg.scale), 10);
		params.left = this.magnify.areaParams.left+'px';
		params.top = this.magnify.areaParams.top+'px';
		BX.adjust(this.magnify.obMagnifyArea, { style: params });
		paramsPict.marginLeft = this.magnify.magnifyPictParams.marginLeft+'px';
		paramsPict.marginTop = this.magnify.magnifyPictParams.marginTop+'px';
		BX.adjust(this.magnify.obMagnifyPict, { style: paramsPict });
	}
	else
	{
		this.outMagnifierArea();
		this.hideMagnifier();
	}
};

window.JCCatalogElement.prototype.onMagnifierArea = function()
{
	this.magnify.magnifyShow = true;
};

window.JCCatalogElement.prototype.outMagnifierArea = function()
{
	this.magnify.magnifyShow = false;
};

window.JCCatalogElement.prototype.calcMagnifierParams = function()
{
	if (!!this.magnify.obBigImg)
	{
		var pos = BX.pos(this.magnify.obBigImg, true);

		this.magnify.magnifierParams.width = pos.width;
		this.magnify.magnifierParams.height = pos.height;
		this.magnify.magnifierParams.top = pos.top;
		this.magnify.magnifierParams.left = pos.left + pos.width + 2;
	}
};

window.JCCatalogElement.prototype.setMagnifierParams = function(show)
{
	if (!!this.magnify.obMagnifier)
	{
		show = !!show;
		var params = {
			top: this.magnify.magnifierParams.top+'px',
			left: this.magnify.magnifierParams.left+'px',
			width: this.magnify.magnifierParams.width+'px',
			height: this.magnify.magnifierParams.height+'px'
		};
		if (show)
		{
			params.display = '';
		}
		BX.adjust(this.magnify.obMagnifier, { style: params });
	}
};

window.JCCatalogElement.prototype.setMagnifyAreaParams = function(show)
{
	if (!!this.magnify.obMagnifier)
	{
		show = !!show;
		var params = {
			top: this.magnify.areaParams.top+'px',
			left: this.magnify.areaParams.left+'px',
			width: this.magnify.areaParams.width+'px',
			height: this.magnify.areaParams.height+'px'
		};
		if (show)
		{
			params.display = '';
		}
		BX.adjust(this.magnify.obMagnifyArea, { style: params });
	}
};

window.JCCatalogElement.prototype.calcMagnifyAreaPos = function(e)
{
	var currentPos,
		posBigImg,
		intersect;

	posBigImg = BX.pos(this.obPict);
	currentPos = this.inRect(e, posBigImg);
	if (this.inBound(posBigImg, currentPos))
	{
		intersect = this.intersectArea(currentPos, posBigImg);
		switch (intersect.X)
		{
			case -1:
				this.magnify.areaParams.left = this.currentImg.screenOffsetX;
				break;
			case 0:
				this.magnify.areaParams.left = this.currentImg.screenOffsetX + currentPos.X - (this.magnify.areaParams.width >>> 1);
				break;
			case 1:
				this.magnify.areaParams.left = this.currentImg.screenOffsetX + posBigImg.width - this.magnify.areaParams.width;
				break;
		}
		switch (intersect.Y)
		{
			case -1:
				this.magnify.areaParams.top = 0;
				break;
			case 0:
				this.magnify.areaParams.top = currentPos.Y - (this.magnify.areaParams.height >>> 1);
				break;
			case 1:
				this.magnify.areaParams.top = posBigImg.height - this.magnify.areaParams.height;
				break;
		}
	}
};

window.JCCatalogElement.prototype.inBound = function(rect, point)
{
	return ((0 <= point.Y && rect.height >= point.Y) && (0 <= point.X && rect.width >= point.X));
};

window.JCCatalogElement.prototype.inRect = function(e, rect)
{
	var wndSize = BX.GetWindowSize(),
		currentPos = {
			X: 0,
			Y: 0,
			globalX: 0,
			globalY: 0
		};

	currentPos.globalX = e.clientX + wndSize.scrollLeft;
	currentPos.X = currentPos.globalX - rect.left;
	currentPos.globalY = e.clientY + wndSize.scrollTop;
	currentPos.Y = currentPos.globalY - rect.top;
	return currentPos;
};

window.JCCatalogElement.prototype.intersectArea = function(currentPos, rect)
{
	var intersect = {
			X: 0,
			Y: 0
		},
		halfX = this.magnify.areaParams.width >>> 1,
		halfY = this.magnify.areaParams.height >>> 1;

	if (currentPos.X <= halfX)
	{
		intersect.X = -1;
	}
	else if (currentPos.X >= (rect.width - halfX))
	{
		intersect.X = 1;
	}
	else
	{
		intersect.X = 0;
	}
	if (currentPos.Y <= halfY)
	{
		intersect.Y = -1;
	}
	else if (currentPos.Y >= (rect.height - halfY))
	{
		intersect.Y = 1;
	}
	else
	{
		intersect.Y = 0;
	}

	return intersect;
};

window.JCCatalogElement.prototype.calcMagnifyAreaSize = function()
{
	var scaleX,
		scaleY,
		scale;

	if (
		this.magnify.magnifierParams.width < this.currentImg.width &&
			this.magnify.magnifierParams.height < this.currentImg.height
		)
	{
		scaleX = this.magnify.obBigImg.offsetWidth/this.currentImg.width;
		scaleY = this.magnify.obBigImg.offsetHeight/this.currentImg.height;
		scale =  Math.min(scaleX, scaleY);
		this.currentImg.scale = 1/scale;
		this.magnify.areaParams.width = Math.max(1, parseInt(scale*this.magnify.magnifierParams.width , 10));
		this.magnify.areaParams.height = Math.max(1, parseInt(scale*this.magnify.magnifierParams.height , 10));
		this.magnify.areaParams.scaleFactor = this.magnify.magnifierParams.defaultScale;
	}
	else
	{
		scaleX = this.obPict.offsetWidth/this.magnify.obBigImg.offsetWidth;
		scaleY = this.obPict.offsetHeight/this.magnify.obBigImg.offsetHeight;
		scale =  Math.min(scaleX, scaleY);
		this.currentImg.scale = 1/scale;
		this.magnify.areaParams.width = Math.max(1, parseInt(scale*this.magnify.magnifierParams.width , 10));
		this.magnify.areaParams.height = Math.max(1, parseInt(scale*this.magnify.magnifierParams.height , 10));

		scaleX = this.magnify.magnifierParams.width/this.currentImg.width;
		scaleY = this.magnify.magnifierParams.height/this.currentImg.height;
		scale = Math.max(scaleX, scaleY);
		this.magnify.areaParams.scaleFactor = scale;
	}
};

window.JCCatalogElement.prototype.calcMagnifyPictSize = function()
{
	this.magnify.magnifyPictParams.width = this.currentImg.width*this.magnify.areaParams.scaleFactor;
	this.magnify.magnifyPictParams.height = this.currentImg.height*this.magnify.areaParams.scaleFactor;
};

window.JCCatalogElement.prototype.calcMagnifyPictPos = function()
{
	this.magnify.magnifyPictParams.marginLeft = -parseInt(((this.magnify.areaParams.left-this.currentImg.screenOffsetX)*this.currentImg.scale), 10);
	this.magnify.magnifyPictParams.marginTop = -parseInt(((this.magnify.areaParams.top)*this.currentImg.scale), 10);
};

window.JCCatalogElement.prototype.setMagnifyPictParams = function(show)
{
	if (!!this.magnify.obMagnifier)
	{
		show = !!show;
		var params = {
			width: this.magnify.magnifyPictParams.width+'px',
			height: this.magnify.magnifyPictParams.height+'px',
			marginTop: this.magnify.magnifyPictParams.marginTop+'px',
			marginLeft: this.magnify.magnifyPictParams.marginLeft+'px'
		};
		if (show)
		{
			params.display = '';
		}
		BX.adjust(this.magnify.obMagnifyPict, { style: params, props: { src: this.currentImg.src } });
	}
};

window.JCCatalogElement.prototype.ProductSliderRowLeft = function()
{
	var target = BX.proxy_context;
	if (!!target)
	{
		if (this.sliderRowShowSize < this.product.slider.COUNT)
		{
			if (0 > this.product.slider.START)
			{
				this.product.slider.START++;
				BX.adjust(this.product.slider.LIST, { style: { marginLeft: this.product.slider.START*20+'%' }});
				BX.adjust(this.product.slider.RIGHT, { style: this.sliderEnableArrow });
			}

			if (0 <= this.product.slider.START)
			{
				BX.adjust(this.product.slider.LEFT, { style: this.sliderDisableArrow });
			}
		}
	}
};

window.JCCatalogElement.prototype.ProductSliderRowRight = function()
{
	var target = BX.proxy_context;
	if (!!target)
	{
		if (this.sliderRowShowSize < this.product.slider.COUNT)
		{
			if ((this.sliderRowShowSize - this.product.slider.START) < this.product.slider.COUNT)
			{
				this.product.slider.START--;
				BX.adjust(this.product.slider.LIST, { style: { marginLeft: this.product.slider.START*20+'%' }});
				BX.adjust(this.product.slider.LEFT, { style: this.sliderEnableArrow } );
			}

			if ((this.sliderRowShowSize - this.product.slider.START) >= this.product.slider.COUNT)
			{
				BX.adjust(this.product.slider.RIGHT, { style: this.sliderDisableArrow } );
			}
		}
	}
};

window.JCCatalogElement.prototype.ProductSelectSliderImg = function()
{
	var strValue = '',
		target = BX.proxy_context;
	if (!!target && target.hasAttribute('data-value'))
	{
		strValue = target.getAttribute('data-value');
		this.SetProductMainPict(strValue);
	}
};

window.JCCatalogElement.prototype.SetProductMainPict = function(intPict)
{
	var indexPict = -1,
		i = 0,
		j = 0,
		value = '',
		strValue = '',
		RowItems = null;
	if (0 < this.product.sliderCount)
	{
		for (j = 0; j < this.product.sliderPict.length; j++)
		{
			if (intPict === this.product.sliderPict[j].ID)
			{
				indexPict = j;
				break;
			}
		}
		if (-1 < indexPict)
		{
			if (!!this.product.sliderPict[indexPict])
			{
				this.setCurrentImg(this.product.sliderPict[indexPict], true);
			}
			RowItems = BX.findChildren(this.product.slider.LIST, {tagName: 'li'}, false);
			if (!!RowItems && 0 < RowItems.length)
			{
				strValue = intPict;
				for (i = 0; i < RowItems.length; i++)
				{
					value = RowItems[i].getAttribute('data-value');
					if (value === strValue)
					{
						BX.addClass(RowItems[i], 'active');
					}
					else
					{
						BX.removeClass(RowItems[i], 'active');
					}
				}
			}
		}
	}
};

window.JCCatalogElement.prototype.SliderRowLeft = function()
{
	var strValue = '',
		index = -1,
		i,
		target = BX.proxy_context;
	if (!!target && target.hasAttribute('data-value'))
	{
		strValue = target.getAttribute('data-value');
		for (i = 0; i < this.sliders.length; i++)
		{
			if (this.sliders[i].OFFER_ID === strValue)
			{
				index = i;
				break;
			}
		}
		if (-1 < index && this.sliderRowShowSize < this.sliders[index].COUNT)
		{
			if (0 > this.sliders[index].START)
			{
				this.sliders[index].START++;
				BX.adjust(this.sliders[index].LIST, { style: { marginLeft: this.sliders[index].START*20+'%' }});
				BX.adjust(this.sliders[index].RIGHT, { style: this.sliderEnableArrow });
			}

			if (0 <= this.sliders[index].START)
			{
				BX.adjust(this.sliders[index].LEFT, { style: this.sliderDisableArrow });
			}
		}
	}
};

window.JCCatalogElement.prototype.SliderRowRight = function()
{
	var strValue = '',
		index = -1,
		i,
		target = BX.proxy_context;
	if (!!target && target.hasAttribute('data-value'))
	{
		strValue = target.getAttribute('data-value');
		for (i = 0; i < this.sliders.length; i++)
		{
			if (this.sliders[i].OFFER_ID === strValue)
			{
				index = i;
				break;
			}
		}
		if (-1 < index && this.sliderRowShowSize < this.sliders[index].COUNT)
		{
			if ((this.sliderRowShowSize - this.sliders[index].START) < this.sliders[index].COUNT)
			{
				this.sliders[index].START--;
				BX.adjust(this.sliders[index].LIST, { style: { marginLeft: this.sliders[index].START*20+'%' }});
				BX.adjust(this.sliders[index].LEFT, { style: this.sliderEnableArrow } );
			}

			if ((this.sliderRowShowSize - this.sliders[index].START) >= this.sliders[index].COUNT)
			{
				BX.adjust(this.sliders[index].RIGHT, { style: this.sliderDisableArrow } );
			}
		}
	}
};

window.JCCatalogElement.prototype.SelectSliderImg = function()
{
	var strValue = '',
		arItem = [],
		target = BX.proxy_context;
	if (!!target && target.hasAttribute('data-value'))
	{
		strValue = target.getAttribute('data-value');
		arItem = strValue.split('_');
		this.SetMainPict(arItem[0], arItem[1]);
	}
};

window.JCCatalogElement.prototype.SetMainPict = function(intSlider, intPict)
{
	var index = -1,
		indexPict = -1,
		i,
		j,
		value = '',
		RowItems = null,
		strValue = '';

	for (i = 0; i < this.offers.length; i++)
	{
		if (intSlider === this.offers[i].ID)
		{
			index = i;
			break;
		}
	}

	$(window).resize();
	$('.thumbs_navigation ul').addClass('hidden_block');
	if(this.SliderImages>1){
		$('.thumbs_navigation ul:eq('+index+')').removeClass('hidden_block');
	}
	$('.thumbs_navigation').removeClass('hidden_block');

	$('.fancy_offer').addClass('hidden_block');
	$(this.obPict).closest('.offers_img').css('opacity', 0);

	if (-1 < index)
	{
		if (0 < this.offers[index].SLIDER_COUNT)
		{
			for (j = 0; j < this.offers[index].SLIDER.length; j++)
			{
				if (intPict === this.offers[index].SLIDER[j].ID)
				{
					indexPict = j;
					break;
				}
			}
			if (-1 < indexPict)
			{
				if (!!this.offers[index].SLIDER[indexPict])
				{
					this.setCurrentImg(this.offers[index].SLIDER[indexPict], true);
				}

				RowItems = BX.findChildren(this.sliders[index].LIST, {tagName: 'li'}, false);
				if (!!RowItems && 0 < RowItems.length)
				{
					strValue = intSlider+'_'+intPict;
					for (i = 0; i < RowItems.length; i++)
					{
						value = RowItems[i].getAttribute('data-value');
						if (value === strValue)
						{
							BX.addClass(RowItems[i], 'current');
						}
						else
						{
							BX.removeClass(RowItems[i], 'current');
						}
					}
				}
			}
		}
	}
	setTimeout(function(){
		$('.fancy_offer').removeClass('hidden_block');
		$('.offers_img').css('opacity', 1);
	}, 200);
};

window.JCCatalogElement.prototype.SetMainPictFromItem = function(index)
{
	if (!!this.obPict)
	{
		var boolSet = false,
			obNewPict = {};

		if (!!this.offers[index])
		{
			if (!!this.offers[index].DETAIL_PICTURE)
			{
				obNewPict = this.offers[index].DETAIL_PICTURE;
				boolSet = true;
			}
			else if (!!this.offers[index].PREVIEW_PICTURE)
			{
				obNewPict = this.offers[index].PREVIEW_PICTURE;
				boolSet = true;
			}
		}
		if (!boolSet)
		{
			if (!!this.defaultPict.detail)
			{
				obNewPict = this.defaultPict.detail;
				boolSet = true;
			}
			else if (!!this.defaultPict.preview)
			{
				obNewPict = this.defaultPict.preview;
				boolSet = true;
			}
		}
		if (boolSet)
		{
			this.setCurrentImg(obNewPict, true);
		}
	}
};

window.JCCatalogElement.prototype.showMainPictPopup = function(e)
{
	var pictContent = '';

	pictContent = '<div style="text-align: center;"><img src="'+
		this.currentImg.src+
		'" width="'+this.currentImg.width+'" height="'+this.currentImg.height+'" name=""></div>';
	this.obPopupPict.setContent(pictContent);
	this.obPopupPict.show();
	return BX.PreventDefault(e);
};

window.JCCatalogElement.prototype.QuantityUp = function()
{
	var curValue = 0,
		boolSet = true,
		calcPrice;

	if (0 === this.errorCode && this.config.showQuantity && this.canBuy)
	{
		curValue = (this.isDblQuantity ? parseFloat(this.obQuantity.value) : parseInt(this.obQuantity.value, 10));
		if (!isNaN(curValue))
		{
			curValue += this.stepQuantity;
			if (this.checkQuantity)
			{
				if (curValue > this.maxQuantity)
				{
					boolSet = false;
				}
			}

			if (boolSet)
			{
				if (this.isDblQuantity)
				{
					curValue = Math.round(curValue*this.precisionFactor)/this.precisionFactor;
				}
				this.obQuantity.value = curValue;
			}
		}
	}
};

window.JCCatalogElement.prototype.QuantityDown = function()
{
	var curValue = 0,
		boolSet = true,
		calcPrice;

	if (0 === this.errorCode && this.config.showQuantity && this.canBuy)
	{
		curValue = (this.isDblQuantity ? parseFloat(this.obQuantity.value) : parseInt(this.obQuantity.value, 10));
		if (!isNaN(curValue))
		{
			curValue -= this.stepQuantity;
			if (curValue < this.stepQuantity)
			{
				boolSet = false;
			}
			if (boolSet)
			{
				if (this.isDblQuantity)
				{
					curValue = Math.round(curValue*this.precisionFactor)/this.precisionFactor;
				}
				this.obQuantity.value = curValue;
			}
		}
	}
};

window.JCCatalogElement.prototype.QuantityChange = function()
{
	var curValue = 0,
		calcPrice,
		intCount,
		count;

	if (0 === this.errorCode && this.config.showQuantity)
	{
		if (this.canBuy)
		{
			curValue = (this.isDblQuantity ? parseFloat(this.obQuantity.value) : parseInt(this.obQuantity.value, 10));
			if (!isNaN(curValue))
			{
				if (this.checkQuantity)
				{
					if (curValue > this.maxQuantity)
					{
						curValue = this.maxQuantity;
					}
				}
				if (curValue < this.stepQuantity)
				{
					curValue = this.stepQuantity;
				}
				else
				{
					count = Math.round((curValue*this.precisionFactor)/this.stepQuantity)/this.precisionFactor;
					intCount = parseInt(count, 10);
					if (isNaN(intCount))
					{
						intCount = 1;
						count = 1.1;
					}
					if (count > intCount)
					{
						curValue = (intCount <= 1 ? this.stepQuantity : intCount*this.stepQuantity);
						curValue = Math.round(curValue*this.precisionFactor)/this.precisionFactor;
					}
				}
				this.obQuantity.value = curValue;
			}
			else
			{
				this.obQuantity.value = this.stepQuantity;
			}
		}
		else
		{
			this.obQuantity.value = this.stepQuantity;
		}
	}
};

window.JCCatalogElement.prototype.QuantitySet = function(index)
{
	var basisPrice = '',
		strLimit;
	if (this.errorCode === 0)
	{
		this.canBuy = this.offers[index].CAN_BUY;

		this.currentPriceMode = this.offers[index].ITEM_PRICE_MODE;
		this.currentPrices = this.offers[index].ITEM_PRICES;
		this.currentPriceSelected = this.offers[index].ITEM_PRICE_SELECTED;
		this.currentQuantityRanges = this.offers[index].ITEM_QUANTITY_RANGES;
		this.currentQuantityRangeSelected = this.offers[index].ITEM_QUANTITY_RANGE_SELECTED;

		if (this.canBuy)
		{
			if (!!this.obBasketActions)
			{
				BX.style(this.obBasketActions, 'display', '');
			}
			if (!!this.obNotAvail)
			{
				BX.style(this.obNotAvail, 'display', 'none');
			}
		}
		else
		{
			if (!!this.obBasketActions)
			{
				//BX.style(this.obBasketActions, 'display', 'none');
				BX.style(this.obBasketActions, 'opacity', '0');
				BX.style(BX.findParent(BX(this.obQuantity), { 'class':'counter_block' }), 'display', 'none');
			}
			if (!!this.obNotAvail)
			{
				BX.style(this.obNotAvail, 'display', '');
			}
		}
		if (this.config.showQuantity)
		{
			this.isDblQuantity = this.offers[index].QUANTITY_FLOAT;
			this.checkQuantity = this.offers[index].CHECK_QUANTITY;
			if (this.isDblQuantity)
			{
				this.maxQuantity = parseFloat(this.offers[index].MAX_QUANTITY);
				this.stepQuantity = Math.round(parseFloat(this.offers[index].STEP_QUANTITY)*this.precisionFactor)/this.precisionFactor;
			}
			else
			{
				this.maxQuantity = parseInt(this.offers[index].MAX_QUANTITY, 10);
				this.stepQuantity = parseInt(this.offers[index].STEP_QUANTITY, 10);
			}
			/*this.obQuantity.value = this.stepQuantity;
			this.obQuantity.disabled = !this.canBuy;*/
			if (!!this.obMeasure)
			{
				if (!!this.offers[index].MEASURE)
				{
					BX.adjust(this.obMeasure, { html : this.offers[index].MEASURE});
				}
				else
				{
					BX.adjust(this.obMeasure, { html : ''});
				}
			}
			if (!!this.obQuantityLimit.all)
			{
				if (!this.checkQuantity)
				{
					BX.adjust(this.obQuantityLimit.value, { html: '' });
					BX.adjust(this.obQuantityLimit.all, { style: {display: 'none'} });
				}
				else
				{
					strLimit = this.offers[index].MAX_QUANTITY;
					if (!!this.offers[index].MEASURE)
					{
						strLimit += (' '+this.offers[index].MEASURE);
					}
					BX.adjust(this.obQuantityLimit.value, { html: strLimit});
					BX.adjust(this.obQuantityLimit.all, { style: {display: ''} });
				}
			}
			if (!!this.obBasisPrice)
			{
				if (!!this.offers[index].BASIS_PRICE)
				{
					basisPrice = BX.message('BASIS_PRICE_MESSAGE');
					basisPrice = basisPrice.replace(
						'#PRICE#',
						BX.Currency.currencyFormat(this.offers[index].BASIS_PRICE.DISCOUNT_VALUE, this.offers[index].BASIS_PRICE.CURRENCY, true)
					);
					basisPrice = basisPrice.replace('#MEASURE#', this.offers[index].MEASURE);
					BX.adjust(this.obBasisPrice, { style: { display: '' }, html: basisPrice });
				}
				else
				{
					BX.adjust(this.obBasisPrice, { style: { display: 'none' }, html: '' });
				}
			}

		}
		this.currentBasisPrice = this.offers[index].BASIS_PRICE;
	}
};

window.JCCatalogElement.prototype.SelectOfferProp = function()
{
	var i = 0,
		strTreeValue = '',
		arTreeItem = [],
		RowItems = null,
		target = BX.proxy_context;
	if(typeof target.options !== 'undefined' && typeof target.options[target.selectedIndex] !== 'undefined')
		target = target.options[target.selectedIndex];
	if (!!target && target.hasAttribute('data-treevalue'))
	{
		strTreeValue = target.getAttribute('data-treevalue');
		propModes = target.getAttribute('data-showtype');
		arTreeItem = strTreeValue.split('_');
		this.SearchOfferPropIndex(arTreeItem[0], arTreeItem[1]);
		RowItems = BX.findChildren(target.parentNode, {tagName: this.skuVisualParams[propModes.toUpperCase()].TAG}, false);
		if (!!RowItems && 0 < RowItems.length)
		{
			for (i = 0; i < RowItems.length; i++)
			{
				value = RowItems[i].getAttribute('data-onevalue');

				// for SELECTBOXES
				if(propModes == 'TEXT'){
					if (value === arTreeItem[1]){
						RowItems[i].setAttribute('selected', 'selected');
					}else{
						RowItems[i].removeAttribute('selected');
					}
				}else{
					if (value === arTreeItem[1]){
						$(RowItems[i]).addClass(this.skuVisualParams[propModes.toUpperCase()].ACTIVE_CLASS);
					}else{
						$(RowItems[i]).removeClass(this.skuVisualParams[propModes.toUpperCase()].ACTIVE_CLASS);
					}
				}
			}
		}
	}
};

window.JCCatalogElement.prototype.SearchOfferPropIndex = function(strPropID, strPropValue)
{
	var strName = '',
		arShowValues = false,
		arCanBuyValues = [],
		index = -1,
		i, j,
		arFilter = {},
		tmpFilter = [];

	for (i = 0; i < this.treeProps.length; i++)
	{
		if (this.treeProps[i].ID === strPropID)
		{
			index = i;
			break;
		}
	}

	if (-1 < index)
	{
		for (i = 0; i < index; i++)
		{
			strName = 'PROP_'+this.treeProps[i].ID;
			arFilter[strName] = this.selectedValues[strName];
		}
		strName = 'PROP_'+this.treeProps[index].ID;
		arFilter[strName] = strPropValue;
		for (i = index+1; i < this.treeProps.length; i++)
		{
			strName = 'PROP_'+this.treeProps[i].ID;
			arShowValues = this.GetRowValues(arFilter, strName);
			if (!arShowValues)
			{
				break;
			}
			if (this.config.showAbsent)
			{
				arCanBuyValues = [];
				tmpFilter = [];
				tmpFilter = BX.clone(arFilter, true);
				for (j = 0; j < arShowValues.length; j++)
				{
					tmpFilter[strName] = arShowValues[j];
					if (this.GetCanBuy(tmpFilter))
					{
						arCanBuyValues[arCanBuyValues.length] = arShowValues[j];
					}
				}
			}
			else
			{
				arCanBuyValues = arShowValues;
			}
			if (!!this.selectedValues[strName] && BX.util.in_array(this.selectedValues[strName], arCanBuyValues))
			{
				arFilter[strName] = this.selectedValues[strName];
			}
			else
			{
				arFilter[strName] = arCanBuyValues[0];
			}
			this.UpdateRow(i, arFilter[strName], arShowValues, arCanBuyValues);
		}
		this.selectedValues = arFilter;

		this.ChangeInfo();
	}
};

window.JCCatalogElement.prototype.RowLeft = function()
{
	var strTreeValue = '',
		index = -1,
		i,
		target = BX.proxy_context;
	if (!!target && target.hasAttribute('data-treevalue'))
	{
		strTreeValue = target.getAttribute('data-treevalue');
		for (i = 0; i < this.treeProps.length; i++)
		{
			if (this.treeProps[i].ID === strTreeValue)
			{
				index = i;
				break;
			}
		}
		if (-1 < index && this.treeRowShowSize < this.showCount[index])
		{
			if (0 > this.showStart[index])
			{
				this.showStart[index]++;
				BX.adjust(this.obTreeRows[index].LIST, { style: { marginLeft: this.showStart[index]*20+'%' }});
				//BX.adjust(this.obTreeRows[index].RIGHT, { style: this.treeEnableArrow });
			}

			/*if (0 <= this.showStart[index])
			{
				BX.adjust(this.obTreeRows[index].LEFT, { style: this.treeDisableArrow });
			}*/
		}
	}
};

window.JCCatalogElement.prototype.RowRight = function()
{
	var strTreeValue = '',
		index = -1,
		i,
		target = BX.proxy_context;
	if (!!target && target.hasAttribute('data-treevalue'))
	{
		strTreeValue = target.getAttribute('data-treevalue');
		for (i = 0; i < this.treeProps.length; i++)
		{
			if (this.treeProps[i].ID === strTreeValue)
			{
				index = i;
				break;
			}
		}
		if (-1 < index && this.treeRowShowSize < this.showCount[index])
		{
			if ((this.treeRowShowSize - this.showStart[index]) < this.showCount[index])
			{
				this.showStart[index]--;
				BX.adjust(this.obTreeRows[index].LIST, { style: { marginLeft: this.showStart[index]*20+'%' }});
				//BX.adjust(this.obTreeRows[index].LEFT, { style: this.treeEnableArrow });
			}

			/*if ((this.treeRowShowSize - this.showStart[index]) >= this.showCount[index])
			{
				BX.adjust(this.obTreeRows[index].RIGHT, { style: this.treeDisableArrow });
			}*/
		}
	}
};

window.JCCatalogElement.prototype.UpdateRowsImages = function()
{
	if(typeof this.config.offerShowPreviewPictureProps === 'object' && this.config.offerShowPreviewPictureProps.length){
		var currentTree = this.selectedValues;

		for(var i in this.obTreeRows){
			if(BX.util.in_array(this.treeProps[i].CODE, this.config.offerShowPreviewPictureProps)){
				var RowItems = BX.findChildren(this.obTreeRows[i].LIST, {tagName: 'LI'}, false);
				if(!!RowItems && 0 < RowItems.length){
					for(var j in RowItems){
						var ImgItem = BX.findChild(RowItems[j], {className: 'cnt_item'}, true, false);
						if(ImgItem){
							var value = RowItems[j].getAttribute('data-onevalue');
							if(value != 0){
								var bgi = ImgItem.style.backgroundImage;
								var obgi = ImgItem.getAttribute('data-obgi');
								if(!obgi){
									obgi = bgi;
									ImgItem.setAttribute('data-obgi', obgi);
								}

								var boolOneSearch = false;
								var rowTree = BX.clone(currentTree, true);
								rowTree['PROP_' + this.treeProps[i].ID] = value;

								for(var m in this.offers){
									boolOneSearch = true;
									for(var n in rowTree){
										if(rowTree[n] !== this.offers[m].TREE[n]){
											boolOneSearch = false;
											break;
										}
									}
									if(boolOneSearch){
										if(typeof this.offers[m].PREVIEW_PICTURE === 'object' && this.offers[m].PREVIEW_PICTURE.SRC){
											var newBgi = 'url("' + this.offers[m].PREVIEW_PICTURE.SRC + '")';
											if(bgi !== newBgi){
												ImgItem.style.backgroundImage = newBgi;
												BX.addClass(ImgItem, 'pp');
											}
										}
										else{
											boolOneSearch = false;
										}
										break;
									}
								}

								for(var m in this.offers)
								{
									if(rowTree['PROP_' + this.treeProps[i].ID] == this.offers[m].TREE['PROP_' + this.treeProps[i].ID] && !boolOneSearch)
									{
										if(typeof this.offers[m].PREVIEW_PICTURE === 'object' && this.offers[m].PREVIEW_PICTURE.SRC)
										{
											var newBgi = 'url("' + this.offers[m].PREVIEW_PICTURE.SRC + '")';
											ImgItem.style.backgroundImage = newBgi;
											BX.addClass(ImgItem, 'pp');
											boolOneSearch = true;
										}
										break
									}
								}

								if(!boolOneSearch && obgi && bgi !== obgi){
									ImgItem.style.backgroundImage = obgi;
									BX.removeClass(ImgItem, 'pp');
								}
							}
						}
					}
				}
			}
		}
	}
}

window.JCCatalogElement.prototype.UpdateRow = function(intNumber, activeID, showID, canBuyID)
{
	var i = 0,
		showI = 0,
		value = '',
		countShow = 0,
		strNewLen = '',
		obData = {},
		RowItems = null,
		pictMode = false,
		extShowMode = false,
		isCurrent = false,
		selectIndex = 0,
		obLeft = this.treeEnableArrow,
		obRight = this.treeEnableArrow,
		currentShowStart = 0;

	if (-1 < intNumber && intNumber < this.obTreeRows.length)
	{
		propMode = this.treeProps[intNumber].DISPLAY_TYPE;
		RowItems = BX.findChildren(this.obTreeRows[intNumber].LIST, {tagName: this.skuVisualParams[propMode].TAG}, false);
		if (!!RowItems && 0 < RowItems.length)
		{
			selectMode = ('SELECT' === this.treeProps[intNumber].DISPLAY_TYPE);
			countShow = showID.length;
			obData = {
				style: {},
				props: {
					disabled: '',
					selected: '',
				},
			};

			var lineContainer = this.obTree.querySelectorAll('.bx_item_detail_size, .bx_item_detail_scu');

			for (i = 0; i < RowItems.length; i++){
				value = RowItems[i].getAttribute('data-onevalue');
				isCurrent = (value === activeID/* && value !=0 */);

				if (BX.util.in_array(value, canBuyID)){
					obData.props.className = (isCurrent ? this.skuVisualParams[propMode].ACTIVE_CLASS : '');

				}else{
					obData.props.className = (isCurrent ? this.skuVisualParams[propMode].ACTIVE_CLASS+' '+this.skuVisualParams[propMode].HIDE_CLASS : this.skuVisualParams[propMode].HIDE_CLASS);

				}
				// obData.props.className = (isCurrent ? this.skuVisualParams[propMode].ACTIVE_CLASS : '');

				if(selectMode){
					obData.props.disabled = 'disabled';
					obData.props.selected = (isCurrent ? 'selected' : '');
				}else{
					obData.style.display = 'none';
				}

				if (BX.util.in_array(value, showID)){
					if(selectMode){
						obData.props.disabled = '';
					}else{
						obData.style.display = '';
					}
					if (isCurrent){
						selectIndex = showI;
					}
					showI++;
				}
				BX.adjust(RowItems[i], obData);

				if(isCurrent)
				{
					lineContainer[intNumber].style.display = (value == 0 && canBuyID.length == 1) ? 'none' : '';
				}
			}

			if(selectMode){
				if($(this.obTreeRows[intNumber].LIST).parent().hasClass('ik_select'))
					$(this.obTreeRows[intNumber].LIST).ikSelect('reset');
			}

			this.showCount[intNumber] = countShow;
			this.showStart[intNumber] = currentShowStart;
		}
	}
};

window.JCCatalogElement.prototype.GetRowValues = function(arFilter, index)
{
	var arValues = [],
		i = 0,
		j = 0,
		boolSearch = false,
		boolOneSearch = true;

	if (0 === arFilter.length)
	{
		for (i = 0; i < this.offers.length; i++)
		{
			if (!BX.util.in_array(this.offers[i].TREE[index], arValues))
			{
				arValues[arValues.length] = this.offers[i].TREE[index];
			}
		}
		boolSearch = true;
	}
	else
	{
		for (i = 0; i < this.offers.length; i++)
		{
			boolOneSearch = true;
			for (j in arFilter)
			{
				if (arFilter[j] !== this.offers[i].TREE[j])
				{
					boolOneSearch = false;
					break;
				}
			}
			if (boolOneSearch)
			{
				if (!BX.util.in_array(this.offers[i].TREE[index], arValues))
				{
					arValues[arValues.length] = this.offers[i].TREE[index];
				}
				boolSearch = true;
			}
		}
	}
	return (boolSearch ? arValues : false);
};

window.JCCatalogElement.prototype.GetCanBuy = function(arFilter)
{
	var i = 0,
		j = 0,
		boolOneSearch = true,
		boolSearch = false;

	for (i = 0; i < this.offers.length; i++)
	{
		boolOneSearch = true;
		for (j in arFilter)
		{
			if (arFilter[j] !== this.offers[i].TREE[j])
			{
				boolOneSearch = false;
				break;
			}
		}
		if (boolOneSearch)
		{
			if (this.offers[i].CAN_BUY)
			{
				boolSearch = true;
				break;
			}
		}
	}
	return boolSearch;
};

window.JCCatalogElement.prototype.SetCurrent = function()
{
	var i = 0,
		j = 0,
		strName = '',
		arShowValues = false,
		arCanBuyValues = [],
		arFilter = {},
		tmpFilter = [],
		current = this.offers[this.offerNum].TREE;

	for (i = 0; i < this.treeProps.length; i++)
	{
		strName = 'PROP_'+this.treeProps[i].ID;
		arShowValues = this.GetRowValues(arFilter, strName);
		if (!arShowValues)
		{
			break;
		}
		if (BX.util.in_array(current[strName], arShowValues))
		{
			arFilter[strName] = current[strName];
		}
		else
		{
			arFilter[strName] = arShowValues[0];
			this.offerNum = 0;
		}
		if (this.config.showAbsent)
		{
			arCanBuyValues = [];
			tmpFilter = [];
			tmpFilter = BX.clone(arFilter, true);
			for (j = 0; j < arShowValues.length; j++)
			{
				tmpFilter[strName] = arShowValues[j];
				if (this.GetCanBuy(tmpFilter))
				{
					arCanBuyValues[arCanBuyValues.length] = arShowValues[j];
				}
			}
		}
		else
		{
			arCanBuyValues = arShowValues;
		}

		this.UpdateRow(i, arFilter[strName], arShowValues, arCanBuyValues);
	}

	this.selectedValues = arFilter;
	this.ChangeInfo();
};

window.JCCatalogElement.prototype.ChangeInfo = function()
{
	var index = -1,
		i = 0,
		j = 0,
		RowItems=null,
		boolOneSearch = true;

	for (i = 0; i < this.offers.length; i++)
	{
		boolOneSearch = true;
		for (j in this.selectedValues)
		{
			if (this.selectedValues[j] !== this.offers[i].TREE[j])
			{
				boolOneSearch = false;
				break;
			}
		}
		if (boolOneSearch)
		{
			index = i;
			break;
		}
	}

	if(this.treeProps){			
		this.UpdateRowsImages();
	}

	if (-1 < index)
	{

		for (i = 0; i < this.offers.length; i++)
		{

			if (this.config.showOfferGroup && this.offers[i].OFFER_GROUP)
			{
				if (i !== index)
				{
					BX.adjust(BX(this.visual.OFFER_GROUP+this.offers[i].ID), { style: {display: 'none'} });
				}
			}
			/*set slider*/
			/*if (!!this.sliders[i].ID)
			{
				if (i === index)
				{
					this.sliders[i].START = 0;
					if(this.sliders[i].CONT){

						RowItems = $(this.sliders[i].CONT).find("li");
						this.SliderImages=RowItems.length;
						if(this.SliderImages>1){
							BX.adjust(this.sliders[i].CONT, {style: { display: ''}});
						}else{
							BX.adjust(this.sliders[i].CONT, {style: { display: 'none'}});
						}
					}
					BX.adjust(this.sliders[i].CONT_M, {style: { display: ''}});
				}
				else
				{
					if(this.sliders[i].CONT)
						BX.adjust(this.sliders[i].CONT, {style: { display: 'none'}});
					BX.adjust(this.sliders[i].CONT_M, {style: { display: 'none'}});
				}
			}*/
		}


		if (this.config.showOfferGroup && this.offers[index].OFFER_GROUP)
		{
			BX.adjust(BX(this.visual.OFFER_GROUP+this.offers[index].ID), { style: {display: ''} });
		}
		if (0 < this.offers[index].SLIDER_COUNT)
		{
			this.SetMainPict(this.offers[index].ID, this.offers[index].SLIDER[0].ID);
		}
		else
		{
			this.SetMainPictFromItem(index);
		}

		/*set slider images start*/
		this.SetSliderPict(this.offers[index], this.offers[index].SLIDER, this.config);
		/*set slider images end*/

		/*set mobile slider images start*/
		this.SetSliderPictMobile(this.offers[index], this.offers[index].SLIDER, this.config);
		/*set mobile slider images end*/

		if (this.config.showSkuProps && !!this.obSkuProps)
		{
			var html ='',
				display_type = this.offers[index].TYPE_PROP;
			if (!this.offers[index].DISPLAY_PROPERTIES || this.offers[index].DISPLAY_PROPERTIES.length === 0)
			{
				if(display_type == "TABLE")
					BX.adjust(this.obSkuProps, {style: {display: 'none'}, html: ''});
				else
					$(this.obSkuProps).find('.sku_block_prop').remove();
			}
			else
			{
				if(display_type != "TABLE")
					$(this.obSkuProps).find('.sku_block_prop').remove();

				for(var i in this.offers[index].DISPLAY_PROPERTIES)
				{
					var class_block = ((this.offers[index].DISPLAY_PROPERTIES[i].HINT && this.offers[index].DISPLAY_PROPERTIES[i].SHOW_HINTS == "Y") ? ' whint' : ''),
						hint_block = ((this.offers[index].DISPLAY_PROPERTIES[i].HINT && this.offers[index].DISPLAY_PROPERTIES[i].SHOW_HINTS=="Y") ? '<div class="hint"><span class="icon"><i>?</i></span><div class="tooltip">' + this.offers[index].DISPLAY_PROPERTIES[i].HINT + '</div></div>' : '');
					if(display_type == "TABLE")
						html += '<tr><td class="char_name"><span class="'+class_block+'">'+hint_block+this.offers[index].DISPLAY_PROPERTIES[i].NAME+'</span></td><td class="char_value"><span>'+this.offers[index].DISPLAY_PROPERTIES[i].VALUE+'</span></td></tr>';
					else
					{
						html = '<div class="char sku_block_prop"><div class="char_name"><span class="'+class_block+'">'+hint_block+this.offers[index].DISPLAY_PROPERTIES[i].NAME+'</span></div><div class="char_value"><span>'+this.offers[index].DISPLAY_PROPERTIES[i].VALUE+'</span></div></div>';
						$(this.obSkuProps).append(html);
					}
				}

				if(display_type == "TABLE")
					BX.adjust(this.obSkuProps, {style: {display: ''}, html: html});
			}
		}

		if (this.config.showSkuProps && !!this.obSkuArticleProps)
		{
			if ('DISPLAY_PROPERTIES_CODE' in this.offers[index])
			{
				if ('ARTICLE' in this.offers[index].DISPLAY_PROPERTIES_CODE)
				{
					if(this.offers[index].DISPLAY_PROPERTIES_CODE.ARTICLE.VALUE)
						BX.adjust(this.obSkuArticleProps, {style: {display: ''}, html: this.offers[index].DISPLAY_PROPERTIES_CODE.ARTICLE.VALUE_FORMAT});
				}
				else if(this.offers[index].SHOW_ARTICLE_SKU == 'Y' && this.offers[index].ARTICLE_SKU)
					BX.adjust(this.obSkuArticleProps, {style: {display: ''}, html: this.offers[index].ARTICLE_SKU});
				else
					BX.adjust(this.obSkuArticleProps, {style: {display: 'none'}, html: ''});
			}
			else if(this.offers[index].SHOW_ARTICLE_SKU == 'Y' && this.offers[index].ARTICLE_SKU)
			{
				BX.adjust(this.obSkuArticleProps, {style: {display: ''}, html: this.offers[index].ARTICLE_SKU});
			}
			else
			{
				BX.adjust(this.obSkuArticleProps, {style: {display: 'none'}, html: ''});
			}
		}

		setLocationSKU(this.offers[index].ID, this.config.SKU_DETAIL_ID);

		$(this.obBasketActions).closest('.counter_wrapp').addClass('hidden_block');

		this.offerNum = index;
		this.QuantitySet(this.offerNum);
		this.setStoreBlock(this.offers[index].ID);
		this.setQuantityStore(this.offers[index].MAX_QUANTITY, this.offers[index].AVAILIABLE.TEXT);

		this.incViewedCounter();
		BX.onCustomEvent('onCatalogStoreProductChange', [this.offers[this.offerNum].ID]);
		$(this.obPict).parent().data('id', this.offers[index].ID);

		var arPriceItem = this.offers[index].PRICE;
		if(this.offers[index].ITEM_PRICE_MODE == 'Q' && this.offers[index].ITEM_PRICES && this.offers[index].USE_PRICE_COUNT)
		{
			if(this.offers[index].USE_PRICE_COUNT && this.offers[index].PRICE_MATRIX)
				this.checkPriceRange(this.offers[index].CONFIG.MIN_QUANTITY_BUY);
			arPriceItem = this.currentPrices[this.currentPriceSelected];
			arPriceItem.VALUE = arPriceItem.PRICE;
			arPriceItem.PRINT_VALUE = getCurrentPrice(arPriceItem.PRICE, arPriceItem.CURRENCY, arPriceItem.PRINT_PRICE);
			arPriceItem.DISCOUNT_VALUE = arPriceItem.BASE_PRICE;
			arPriceItem.PRINT_DISCOUNT_VALUE = getCurrentPrice(arPriceItem.BASE_PRICE, arPriceItem.CURRENCY, arPriceItem.PRINT_BASE_PRICE);
		}

		setViewedProduct(this.offers[index].ID, {
			'PRODUCT_ID': this.offers[index].PRODUCT_ID,
			'IBLOCK_ID': this.offers[index].IBLOCK_ID,
			'NAME': this.product.name,
			'DETAIL_PAGE_URL': this.offers[index].URL,
			//'PICTURE_ID': this.offers[index].PREVIEW_PICTURE ? this.offers[index].PREVIEW_PICTURE.ID : (this.offers[index].SLIDER_COUNT ? this.offers[index].SLIDER[0].ID : false),
			'PICTURE_ID': this.offers[index].PREVIEW_PICTURE ? this.offers[index].PREVIEW_PICTURE.ID : (this.offers[index].PARENT_PICTURE ? this.offers[index].PARENT_PICTURE.ID : (this.offers[index].SLIDER_COUNT ? this.offers[index].SLIDER[0].ID : false)),
			'CATALOG_MEASURE_NAME': this.offers[index].MEASURE,
			'MIN_PRICE': arPriceItem,
			'CAN_BUY': this.offers[index].CAN_BUY ? 'Y' : 'N',
			'IS_OFFER': 'Y',
			'WITH_OFFERS': 'N'
		});


		var obj=this.offers[index],
			th=$(this.obProduct),
			_th = this;

		if(typeof arBasketAspro !=="undefined")
		{
			this.setActualDataBlock(th, obj);
		}
		else
		{
			if(typeof window.frameCacheVars !== "undefined")
			{
				BX.addCustomEvent("onFrameDataReceived", function(){
					_th.setActualDataBlock(th, obj);
				});
			}
		}

		/*quantity discount start*/

		if($(this.obProduct).find('.quantity_block .values').length)
			$(this.obProduct).find('.quantity_block .values .item span.value').text(this.offers[index].MAX_QUANTITY).css({'opacity':'1'});

		if(this.offers[index].SHOW_DISCOUNT_TIME_EACH_SKU == 'Y')
			initCountdownTime($(this.obProduct), this.offers[index].DISCOUNT_ACTIVE);

		/*quantity discount end*/

		if(arOptimusOptions['THEME']['CHANGE_TITLE_ITEM'] == 'Y')
		{
			document.title = this.offers[index].NAME;
			$('h1').text(this.offers[index].NAME);
			ItemObj.TITLE = this.offers[index].NAME;
			ItemObj.WINDOW_TITLE = this.offers[index].NAME+''+this.offers[index].POSTFIX;
		}

		$('.catalog_detail .tabs_section .tabs_content .form.inline input[data-sid="PRODUCT_NAME"]').attr('value', $('h1').text());
	}
};

window.JCCatalogElement.prototype.checkPriceRange = function(quantity)
{
	if (typeof quantity === 'undefined'|| this.currentPriceMode != 'Q')
		return;

	var range, found = false;
	for (var i in this.currentQuantityRanges)
	{
		if (this.currentQuantityRanges.hasOwnProperty(i))
		{
			range = this.currentQuantityRanges[i];

			if (
				parseInt(quantity) >= parseInt(range.SORT_FROM)
				&& (
					range.SORT_TO == 'INF'
					|| parseInt(quantity) <= parseInt(range.SORT_TO)
				)
			)
			{
				found = true;
				this.currentQuantityRangeSelected = range.HASH;
				break;
			}
		}
	}

	if (!found && (range = this.getMinPriceRange()))
	{
		this.currentQuantityRangeSelected = range.HASH;
	}

	for (var k in this.currentPrices)
	{
		if (this.currentPrices.hasOwnProperty(k))
		{
			if (this.currentPrices[k].QUANTITY_HASH == this.currentQuantityRangeSelected)
			{
				this.currentPriceSelected = k;
				break;
			}
		}
	}
};

window.JCCatalogElement.prototype.getMinPriceRange = function()
{
	var range;

	for (var i in this.currentQuantityRanges)
	{
		if (this.currentQuantityRanges.hasOwnProperty(i))
		{
			if (
				!range
				|| parseInt(this.currentQuantityRanges[i].SORT_FROM) < parseInt(range.SORT_FROM)
			)
			{
				range = this.currentQuantityRanges[i];
			}
		}
	}

	return range;
}

/*set blocks start*/
window.JCCatalogElement.prototype.setActualDataBlock = function(th, obj)
{
	/*like block start*/
	this.setLikeBlock(th, '.like_icons .wish_item', obj, 'DELAY');
	this.setLikeBlock(th, '.like_icons .compare_item',obj, 'COMPARE');
	/*like block end*/

	/*buy block start*/
	this.setBuyBlock(th, obj);
	/*buy block end*/
}
/*set blocks end*/

/*set slider offers*/
window.JCCatalogElement.prototype.SetSliderPict = function(obj, slider, config)
{
	var container=$('.wrapp_thumbs'),
		slideHtml='';
		countPhoto=obj.SLIDER_COUNT;
		container.find('.thumbs').css({
			'max-width':Math.ceil(((countPhoto <= 4 ? countPhoto : 4) * 64) - 10)
		});

		slideHtml='<ul class="slides_block">';
		for(var i in slider){
			if(typeof(slider[i]) == 'object')
			{
				slideHtml+='<li data-big="'+slider[i].BIG.src+'">'+
				'<span class="cnt"><img border="0" src="'+slider[i].THUMB.src+'" alt="" title="" /></span>'+
				'</li>';
			}
		}
		slideHtml+='</ul>';


		container.find('.thumbs').html(slideHtml);
	if(countPhoto>1){
		container.show();

		if(container.find('.thumbs_navigation').length){
			container.find('.thumbs_navigation').remove();
		}
		container.find('.thumbs').append('<span class="thumbs_navigation custom_flex"></span>');

		/* init flexslider start */
		container.find('.thumbs').removeData("flexslider");
		container.find('.thumbs').flexslider({
			animation: "slide",
			selector: ".slides_block > li",
			slideshow: false,
			animationSpeed: 600,
			directionNav: true,
			controlNav: false,
			pauseOnHover: true,
			itemWidth: 54,
			itemMargin: 10,
			animationLoop: true,
			controlsContainer: ".thumbs_navigation",
		});
		/* init flexslider end */
		container.find('.thumbs .slides_block li').first().addClass('current');

		var pict=$(this.obPict);
		container.find('.thumbs').delegate('li:not(.current)', 'click', function(e){
			var srcSmall='',
				srcBig='',
				width='',
				height=''
				index=$(this).index();

			if(typeof slider[index] !== 'undefined')
			{
				if('SMALL' in slider[index]){
					srcSmall = slider[index].SMALL.src;
				}else if ('SRC' in slider[index]) {
					srcSmall = slider[index].SRC
				};
				if('BIG' in slider[index]){
					srcBig = slider[index].BIG.src;
				}
				if('WIDTH' in slider[index]){
					width = slider[index].WIDTH;
				}
				if('HEIGHT' in slider[index]){
					height = slider[index].HEIGHT;
				}
			}

			$(this).addClass('current').siblings().removeClass('current').parents('.item_slider').find('.slides li').fadeOut(333);
			$(this).parents('.item_slider').find('.slides li').eq(index).addClass('current').stop().fadeIn(333);


			if(srcSmall){
				BX.adjust(pict[0], { props: { src: srcSmall } });
			}
			pict.attr('data-large','');

			if(srcBig){
				if(config.mainPictureMode === 'POPUP'){
					pict.parent().attr('href',srcBig);
				}
				if(config.mainPictureMode === 'MAGNIFIER'){
					pict.attr('data-large',srcBig);
					pict.attr('xoriginal',srcBig);
				}
			}
		});

	}else{
		container.hide();
	}
}

/*set mobile slider offers*/
window.JCCatalogElement.prototype.SetSliderPictMobile = function(obj, slider)
{
	var container=$('.item_slider.flex'),
		slideHtml='';
		countPhoto=obj.SLIDER_COUNT;

	slideHtml='<ul class="slides">';
	if(!slider.length){
		slideHtml+='<li data-value="">'+
			'<span rel="item_slider" class="fancy" title="'+obj.NAME+'"><img border="0" src="'+obj.NO_PHOTO.SRC+'" alt="'+obj.NAME+'" title="'+obj.NAME+'" /></span>'+
			'</li>';
	}else{
		for(var i in slider){
			if(typeof(slider[i]) == 'object')
			{
				slideHtml+='<li data-value="'+obj.ID+'_'+slider[i].ID+'">'+
				'<a href="'+slider[i].BIG.src+'" rel="item_slider" class="fancy" title="'+slider[i].TITLE+'"><img border="0" src="'+slider[i].SMALL.src+'" alt="'+slider[i].ALT+'" title="'+slider[i].TITLE+'" /></a>'+
				'</li>';
			}
		}
	}
	slideHtml+='</ul>';

	container.html(slideHtml);

	/* init flexslider start */
	container.removeData("flexslider");
	container.flexslider({
		animation: "slide",
		slideshow: false,
		slideshowSpeed: 10000,
		animationSpeed: 600,
		directionNav: false,
		pauseOnHover: true,
		animationLoop: false,
	});
	/* init flexslider end */
}

/*set compare/wish*/
window.JCCatalogElement.prototype.setLikeBlock = function(th, className, obj, type)
{
	var block=th;
	if(type=="DELAY"){
		if(obj.CAN_BUY && obj.CONFIG.ACTION === "ADD"){
			block.find(className).css('display','block');
		}else{
			block.find(className).hide();
		}
	}
	block.find(className).attr('data-item', obj.ID);

	if(arBasketAspro[type]){
		block.find(className).removeClass('added');
		block.find(className).find('.value').css('display','block');
		block.find(className).find('.value.added').hide();

		if(arBasketAspro[type][obj.ID]!==undefined){
			block.find(className).addClass('added');
			block.find(className).find('.value').hide();
			block.find(className).find('.value.added').css('display','block');
		}
	}
}

/*set buy*/
window.JCCatalogElement.prototype.setBuyBlock = function(th, obj)
{
	var buyBlock=th.find('.offer_buy_block'),
		input_value = obj.CONFIG.MIN_QUANTITY_BUY;

	if(buyBlock.find('.counter_wrapp .counter_block').length){
		buyBlock.find('.counter_wrapp .counter_block').attr('data-item', obj.ID);
	}

	// if(this.offers[this.offerNum].offer_set_quantity)
	if(obj.offer_set_quantity)
		input_value = obj.offer_set_quantity;

	var $calculate = buyBlock.closest(".catalog_detail").find(".calculate-delivery");
	if ($calculate.length) {
		
		$calculate.each(function () {
		var $calculateSpan = $(this).find("span[data-event=jqm]").first();

		if ($calculateSpan.length) {
			var $clone = $calculateSpan.clone();
			$clone.attr("data-param-product_id", obj.ID).attr("data-param-quantity", input_value).removeClass("clicked");
			$clone.insertAfter($calculateSpan).on("click", function () {
			if (!jQuery.browser.mobile) {
				$(this).parent().addClass("loadings");
				$('body').addClass("loading_form");
			}
			});
			$calculateSpan.remove();
		}

		if ($(this).hasClass("with_preview")) {
			$(this).removeClass("inited");

			if (this.timerInitCalculateDelivery) {
			clearTimeout(this.timerInitCalculateDelivery);
			}

			var that = this;
			this.timerInitCalculateDelivery = setTimeout(function () {
			initCalculatePreview();
			that.timerInitCalculateDelivery = false;
			}, 1000);
		}
		});

		if (this.offers[this.offerNum].CONFIG.ACTION === "ADD" && this.offers[this.offerNum].CAN_BUY !== false) {
		$calculate.show();
		} else {
		$calculate.hide();
		}
	}

	if(th.find('.cheaper_form').length)
	{
		var cheaper_form = th.find('.cheaper_form span');
		cheaper_form.data('name', obj.NAME);
		cheaper_form.data('item', obj.ID);
	}

	if((obj.CONFIG.OPTIONS.USE_PRODUCT_QUANTITY_DETAIL && obj.CONFIG.ACTION == "ADD") && obj.CAN_BUY){
		var max=(obj.CONFIG.MAX_QUANTITY_BUY>0 ? "data-max='"+obj.CONFIG.MAX_QUANTITY_BUY+"'" : ""),
			counterHtml='<span class="minus">-</span>'+
				'<input type="text" class="text" name="'+obj.PRODUCT_QUANTITY_VARIABLE+'" value="'+input_value+'" />'+
				'<span class="plus" '+max+'>+</span>';
		if(arBasketAspro["BASKET"] && arBasketAspro["BASKET"][obj.ID]!==undefined){
			if(buyBlock.find('.counter_wrapp .counter_block').length){
				buyBlock.find('.counter_wrapp .counter_block').hide();
			}else{
				buyBlock.find('.counter_wrapp').prepend('<div class="counter_block big_basket" data-item="'+obj.ID+'"></div>');
				buyBlock.find('.counter_wrapp .counter_block').html(counterHtml).hide();
			}
		}else{
			if(buyBlock.find('.counter_wrapp .counter_block').length){
				buyBlock.find('.counter_wrapp .counter_block').html(counterHtml).show();
			}else{
				buyBlock.find('.counter_wrapp').prepend('<div class="counter_block big_basket" data-item="'+obj.ID+'"></div>');
				buyBlock.find('.counter_wrapp .counter_block').html(counterHtml);
			}
		}
	}else{
		if(buyBlock.find('.counter_wrapp .counter_block').length){
			buyBlock.find('.counter_wrapp .counter_block').hide();
		}
	}

	var className=((obj.CONFIG.ACTION == "ORDER") || !obj.CAN_BUY || !obj.CONFIG.OPTIONS.USE_PRODUCT_QUANTITY_DETAIL || (obj.CONFIG.ACTION == "SUBSCRIBE" && obj.CATALOG_SUBSCRIBE == "Y") ? "wide" : "" ),
		buyBlockBtn=$('<div class="button_block"></div>');

	if(buyBlock.find('.counter_wrapp').find('.button_block').length){
		if(arBasketAspro["BASKET"] && arBasketAspro["BASKET"][obj.ID]!==undefined){
			buyBlock.find('.counter_wrapp').find('.button_block').addClass('wide').html(obj.HTML);
			markProductAddBasket(obj.ID);
		}else{
			if(className){
				buyBlock.find('.counter_wrapp').find('.button_block').addClass('wide').html(obj.HTML);
				if(typeof arBasketAspro !=="undefined"){
					if(arBasketAspro["SUBSCRIBE"] && arBasketAspro["SUBSCRIBE"][obj.ID]!==undefined){
						markProductSubscribe(obj.ID);
					}
				}
			}else{
				buyBlock.find('.counter_wrapp').find('.button_block').removeClass('wide').html(obj.HTML);
			}
		}
	}else{
		buyBlock.find('.counter_wrapp').append('<div class="button_block '+className+'">'+obj.HTML+'</div>');
		if(arBasketAspro["BASKET"] && arBasketAspro["BASKET"][obj.ID]!==undefined)
			markProductAddBasket(obj.ID);
		if(arBasketAspro["SUBSCRIBE"] && arBasketAspro["SUBSCRIBE"][obj.ID]!==undefined)
			markProductSubscribe(obj.ID);
	}

	if(obj.CONFIG.ACTION !== "NOTHING"){
		if(obj.CONFIG.ACTION == "ADD" && obj.CAN_BUY && obj.SHOW_ONE_CLICK_BUY!="N"){
			var ocb='<span class="transparent big_btn type_block button one_click transition_bg" data-offers="Y" data-item="'+obj.ID+'" data-iblockID="'+obj.IBLOCK_ID+'" data-quantity="'+obj.CONFIG.MIN_QUANTITY_BUY+'" data-props="'+obj.OFFER_PROPS+'" onclick="oneClickBuy('+obj.ID+', '+obj.IBLOCK_ID+', this)">'+
				'<span>'+obj.ONE_CLICK_BUY+'</span>'+
				'</span>';
			if(buyBlock.find('.wrapp_one_click').length){
				buyBlock.find('.wrapp_one_click').html(ocb);
			}else{
				buyBlock.append('<div class="wrapp_one_click">'+ocb+'</div>');
			}
		}else{
			if(buyBlock.find('.wrapp_one_click').length){
				buyBlock.find('.wrapp_one_click').remove();
			}
		}
	}else{
		if(buyBlock.find('.wrapp_one_click').length){
			buyBlock.find('.wrapp_one_click').remove();
		}
	}

	buyBlock.fadeIn();

	buyBlock.find('.counter_wrapp .counter_block input').data('product', 'ob'+th[0].id);

	this.setPriceAction('', 'Y');

	if(typeof obOptimusPredictions === 'object'){
		obOptimusPredictions.showAll();
	}
}

/*set store block*/
window.JCCatalogElement.prototype.setStoreBlock = function(id)
{
	$('.stores_tab > div').hide();
	$('.stores_tab .sku_stores_'+id).show();
}

/*set store quantity*/
window.JCCatalogElement.prototype.setQuantityStore = function(quantity, text)
{
	if(parseFloat(quantity)>0){
		$(this.storeQuanity).find('.icon').removeClass('order').addClass('stock');
	}else{
		$(this.storeQuanity).find('.icon').removeClass('stock').addClass('order');
	}
	$(this.storeQuanity).find('.icon + span').html(text);
	if(!$(".stores_tab").length){
		$('.item-stock .store_view').removeClass('store_view');
	}
}

/*get compare sku*/
window.JCCatalogElement.prototype.CompareCountResult = function(result)
{
	if(result.COMPARE_COUNT){
		for(var i in result.ITEMS){
			if(result.ITEMS[i]==this.offers[this.offerNum].ID){
				this.offers[this.offerNum].COMPARE_ACTIVE=true;
				break;
			}else{
				this.offers[this.offerNum].COMPARE_ACTIVE=false;
			}
		}
		if(this.offers[this.offerNum].COMPARE_ACTIVE){
			$(this.obCompare).addClass('added');
			$(this.obCompare).find('.value:not(.added)').hide();
			$(this.obCompare).find('.value.added').css('display','block');
		}else{
			$(this.obCompare).removeClass('added');
			$(this.obCompare).find('.value.added').hide();
			$(this.obCompare).find('.value:not(.added)').css('display','block');
		}
	}
}

/*get item info*/
window.JCCatalogElement.prototype.ItemInfoResult = function(result)
{
	if(result.HTML){
		$(this.obBasketActions).html(result.HTML);
		$(this.obBasketActions).show();
		this.obAddToBasketBtn = BX(this.visual.BUY_ID);
		this.obBasketBtn = BX(this.visual.BASKET_LINK);
		this.obSubscribeBtn = BX(this.visual.SUBSCRIBE_ID);
		this.obSubscribedBtn = BX(this.visual.SUBSCRIBED_ID);
		BX.bind(this.obAddToBasketBtn, 'click', BX.delegate(this.Add2Basket, this));
		$(this.obBasketActions).removeClass('wide');
		this.ajax_type_item=result.BUYMISSINGGOODS;
		if(result.BUYMISSINGGOODS!="ADD" && !this.canBuy){
			$(this.obBasketActions).addClass('wide');
		}else{
			$(this.obQuantity).css('display','');
		}
		if(result.ONE_CLICK_HTML){
			$('.wrapp_one_click').html(result.ONE_CLICK_HTML);
		}

	}
	//if(this.canBuy){
		basketParams = {
			ajax_action: 'Y'
		};
		BX.ajax.loadJSON(
			arOptimusOptions['SITE_DIR']+'ajax/get_basket_count.php',
			basketParams,
			BX.delegate(this.BasketCountResult, this)
		);
	//}
}

/*get basket items*/
window.JCCatalogElement.prototype.BasketCountResult = function(result)
{
	//if(result.TOTAL_COUNT){
		for(var i in result.ITEMS){
			if(result.ITEMS[i].PRODUCT_ID==this.offers[this.offerNum].ID){
				this.offers[this.offerNum].BASKET_ACTIVE=true;
				break;
			}else{
				this.offers[this.offerNum].BASKET_ACTIVE=false;
			}
		}
		for(var i in result.SUBSCRIBE_ITEMS){
			if(result.SUBSCRIBE_ITEMS[i].PRODUCT_ID==this.offers[this.offerNum].ID){
				this.offers[this.offerNum].SUBSCRIBE_ACTIVE=true;
				break;
			}else{
				this.offers[this.offerNum].SUBSCRIBE_ACTIVE=false;
			}
		}

		this.BasketStateRefresh();
	//}
}

window.JCCatalogElement.prototype.BasketStateRefresh = function(buy_basket)
{
	if(this.offers[this.offerNum].SUBSCRIBE_ACTIVE){
		$(this.obBasketActions).addClass('wide');
		$(this.obSubscribeBtn).hide();
		$(this.obSubscribedBtn).show();
	}else{
		$(this.obBasketActions).addClass('wide');
		$(this.obSubscribedBtn).hide();
		$(this.obSubscribeBtn).show();
	}

	if(this.offers[this.offerNum].BASKET_ACTIVE){
		$(this.obAddToBasketBtn).hide();
		$(this.obQuantity).closest('.counter_wrapp').find('.counter_block').hide();
		$(this.obBasketBtn).show();
		$(this.obBasketActions).addClass('wide');
	}else{
		$(this.obBasketActions).removeClass('wide');
		$(this.obBasketBtn).hide();
		if(this.ajax_type_item=="ADD" || this.canBuy)
			$(this.obQuantity).closest('.counter_wrapp').find('.counter_block').show();
		$(this.obAddToBasketBtn).show();
	}
	if(!this.canBuy){
		$(this.obBasketActions).addClass('wide');
	}
	if(this.canBuy){
		$('.one_click').removeClass('hidden_block').css('opacity', 1);
	}
	BX.style(this.obBasketActions, 'opacity', '1');
	$(this.obBasketActions).closest('.counter_wrapp').removeClass('hidden_block').css('opacity',1);

	if(buy_basket!== 'undefined' && buy_basket=="Y"){
		if($("#basket_line .basket_fly").length && $(window).outerWidth()>768)
		{
			// preAnimateBasketFly($("#basket_line .basket_fly"), 200, 333);
			basketFly('open');
		}
		else if($("#basket_line .cart").length)
		{
			if($("#basket_line .cart").is(".empty_cart"))
			{
				$("#basket_line .cart").removeClass("empty_cart").find(".cart_wrapp a.basket_link").removeAttr("href").addClass("cart-call");
				touchBasket('.cart:not(.empty_cart) .basket_block .link');
			}
			reloadTopBasket('add', $('#basket_line'), 200, 2000, 'Y');
			/*if($(window).outerWidth() > 520){
				//if(arOptimusOptions['THEME']['SHOW_BASKET_ONADDTOCART'] !== 'N'){
					preAnimateBasketPopup('', $('.card_popup_frame'), 0, 200);
				//}
			};*/
		}
		animateBasketLine(200);
	}
}

window.JCCatalogElement.prototype.setPriceAction = function(change, sku)
{
	var measure = this.offers[this.offerNum].MEASURE && this.offers[this.offerNum].SHOW_MEASURE=="Y" ? this.offers[this.offerNum].MEASURE : '';
	var product = $(this.obProduct),
		check_quantity = '',
		is_sku = (typeof sku !== 'undefined' && sku == 'Y');

	this.offers[this.offerNum].offer_set_quantity = this.offers[this.offerNum].CONFIG.MIN_QUANTITY_BUY;
	if($(product).find('input[name=quantity]').length)
		this.offers[this.offerNum].offer_set_quantity = $(product).find('input[name=quantity]').val();

	if(this.offers[this.offerNum].USE_PRICE_COUNT && this.offers[this.offerNum].PRICE_MATRIX)
	{
		this.checkPriceRange(this.offers[this.offerNum].offer_set_quantity);
		this.setPriceMatrix(this.offers[this.offerNum].PRICE_MATRIX);
	}
	else
	{
		if('PRICES' in this.offers[this.offerNum])
			this.setPrice(this.offers[this.offerNum].PRICES, measure);
	}

	if(arOptimusOptions['THEME']['SHOW_TOTAL_SUMM'] != 'N')
	{
		if(arOptimusOptions['THEME']['SHOW_TOTAL_SUMM'] == 'ALWAYS')
			this.offers[this.offerNum].check_quantity = true;

		if(this.offers[this.offerNum].check_quantity)
			check_quantity = 'Y';
		else
		{
			var check_quantity = ((typeof change !== 'undefined' && change == 'Y') ? change : '');
			if(check_quantity)
				this.offers[this.offerNum].check_quantity = true;
		}
		if(typeof this.currentPrices[this.currentPriceSelected] !== 'undefined')
			setPriceItem(product, this.offers[this.offerNum].offer_set_quantity, this.currentPrices[this.currentPriceSelected].PRICE, check_quantity, is_sku);
	}
}

window.JCCatalogElement.prototype.setPriceMatrix = function(sPriceMatrix)
{
	var prices = '';
	if (!!this.obPrice.price)
	{
		var measure = this.offers[this.offerNum].MEASURE && this.offers[this.offerNum].SHOW_MEASURE=="Y" ? this.offers[this.offerNum].MEASURE : '',
			strPrice = '';
		strPrice = getCurrentPrice(this.currentPrices[this.currentPriceSelected].PRICE, this.currentPrices[this.currentPriceSelected].CURRENCY, this.currentPrices[this.currentPriceSelected].PRINT_PRICE);
		if(measure)
			strPrice += '<span class="price_measure">/'+measure+'</span>';
		$(this.obProduct).find('.not_matrix').hide();
		$(this.obProduct).find('.with_matrix .price_value_block').html(strPrice);

		if (this.config.showOldPrice)
		{
			$(this.obProduct).find('.price.discount').hide();
			if(parseFloat(this.currentPrices[this.currentPriceSelected].BASE_PRICE) > parseFloat(this.currentPrices[this.currentPriceSelected].PRICE))
			{
				$(this.obProduct).find('.with_matrix .discount').html(getCurrentPrice(this.currentPrices[this.currentPriceSelected].BASE_PRICE, this.currentPrices[this.currentPriceSelected].CURRENCY, this.currentPrices[this.currentPriceSelected].PRINT_BASE_PRICE));
				$(this.obProduct).find('.with_matrix .discount').css('display', 'inline-block');
			}
			else
			{
				$(this.obProduct).find('.with_matrix .discount').html('');
				$(this.obProduct).find('.with_matrix .discount').css('display', 'none');
			}
		}
		else
		{
			$(this.obProduct).find('.with_matrix .discount').html('');
			$(this.obProduct).find('.with_matrix .discount').css('display', 'none');
		}

		$(this.obProduct).find('.sale_block.normal').hide();
		$(this.obProduct).find('.sale_block:not(.matrix)').hide();
		if(this.currentPrices[this.currentPriceSelected].PERCENT > 0)
		{
			$(this.obProduct).find('.with_matrix .sale_block .text .values_wrapper').html(getCurrentPrice(this.currentPrices[this.currentPriceSelected].DISCOUNT, this.currentPrices[this.currentPriceSelected].CURRENCY, this.currentPrices[this.currentPriceSelected].PRINT_DISCOUNT));
			$(this.obProduct).find('.with_matrix .sale_block .value span').html(this.currentPrices[this.currentPriceSelected].PERCENT);
			$(this.obProduct).find('.with_matrix .sale_block').show();
		}
		else
		{
			$(this.obProduct).find('.with_matrix .sale_block').hide();
		}
		$(this.obProduct).find('.with_matrix').show();

		BX.adjust(this.obPrice.price, {html: sPriceMatrix});

		var eventdata = {product: $(this.obProduct), measure: measure, config: this.config, offer: this.offers[this.offerNum], obPrice: this.currentPrices[this.currentPriceSelected]};
		BX.onCustomEvent('onAsproSkuSetPriceMatrix', [eventdata])
	}
}

window.JCCatalogElement.prototype.setPrice = function(change, sku, obPrices, measure, product, offer)
{
	var prices = '';
	if (!!this.obPrice.price)
	{
		var measure = this.offers[this.offerNum].MEASURE && this.offers[this.offerNum].SHOW_MEASURE=="Y" ? this.offers[this.offerNum].MEASURE : '',
			product = $(this.obProduct),
			obPrices = this.offers[this.offerNum].PRICES,
			check_quantity = '',
			is_sku = (typeof sku !== 'undefined' && sku == 'Y');

		if(typeof(obPrices) == 'object')
		{
			var strPrice = '',
				count = Object.keys(obPrices).length,
				arStikePrices = [];

			if(arOptimusOptions['THEME']['DISCOUNT_PRICE'])
			{
				arStikePrices = arOptimusOptions['THEME']['DISCOUNT_PRICE'].split(',');
			}

			strPrice = '<div class="offers_price_wrapper">';
			$(this.obProduct).find('.with_matrix').hide();
			$(this.obProduct).find('.not_matrix').show();

			this.offers[this.offerNum].offer_set_quantity = this.offers[this.offerNum].CONFIG.MIN_QUANTITY_BUY;
			if($(product).find('input[name=quantity]').length)
				this.offers[this.offerNum].offer_set_quantity = $(product).find('input[name=quantity]').val();

			if(this.config.showOldPrice)
			{
				$(this.obProduct).find('.price.discount').hide();
			}

			if (this.config.showPercent)
			{
				if (!!this.obPrice.percent)
				{
					BX.adjust(this.obPrice.percent, {style: {display: 'none'}, html: ''});
				}

				$(this.obPrice.price).closest('.cost').find('.sale_block:not(.matrix)').hide();
				$(this.obPrice.price).closest('.cost').find('.sale_block:not(.matrix) .value').html('');
				$(this.obPrice.price).closest('.cost').find('.sale_block:not(.matrix) .text span').html('');
			}

			for(var j in obPrices)
			{
				if(obPrices[j] && obPrices[j].VALUE > 0)
				{
					if('GROUP_NAME' in obPrices[j])
					{
						if(count > 1)
						{
							strPrice += '<div class="offers_price_title">';
							strPrice += obPrices[j].GROUP_NAME;
							strPrice += '</div>';
						}
					}


					strPrice += '<div class="offers_price'+(arStikePrices ? (BX.util.in_array(obPrices[j].PRICE_ID, arStikePrices) ? ' strike_block' : '') : '')+'">';
						strPrice += '<span class="values_wrapper">'+getCurrentPrice(obPrices[j].DISCOUNT_VALUE, obPrices[j].CURRENCY, obPrices[j].PRINT_DISCOUNT_VALUE)+'</span>';
						if(measure)
							strPrice += '<span class="price_measure">/'+measure+'</span>';

					strPrice += '</div>';
					if (obPrices[j].DISCOUNT_VALUE !== obPrices[j].VALUE)
					{
						if(this.config.showOldPrice)
						{
							strPrice += '<div class="offers_price_old">';
								strPrice += '<span class="values_wrapper">'+getCurrentPrice(obPrices[j].VALUE, obPrices[j].CURRENCY, obPrices[j].PRINT_VALUE)+'</span>';
							strPrice += '</div>';
						}
						if(this.config.showPercent)
						{
							strPrice += '<div class="sale_block">';
								if(obPrices[j].DISCOUNT_DIFF_PERCENT > 0 && obPrices[j].DISCOUNT_DIFF_PERCENT < 100)
								{
									strPrice += '<div class="value">-';
										strPrice += '<span>'+obPrices[j].DISCOUNT_DIFF_PERCENT+'</span>';
									strPrice += '%</div>';
								}
								strPrice += '<div class="text">';
									strPrice += '<span class="title">'+BX.message('ITEM_ECONOMY')+'</span>';
									strPrice += '<span class="values_wrapper">'+getCurrentPrice(obPrices[j].DISCOUNT_DIFF, obPrices[j].CURRENCY, obPrices[j].PRINT_DISCOUNT_DIFF)+'</span>';
								strPrice += '</div>';
							strPrice += '<div class="clearfix"></div></div>';
						}
					}
					else
					{
						if (this.config.showOldPrice)
						{
							if (!!this.obPrice.full)
							{
								BX.adjust(this.obPrice.full, {style: {display: 'none'}, html: ''});
							}
							if (!!this.obPrice.discount)
							{
								BX.adjust(this.obPrice.discount, {style: {display: 'none'}, html: ''});
							}
						}
					}
				}
				else
				{
					if(arOptimusOptions['THEME']['EMPTY_PRICE_TEXT'])
					{
						strPrice += '<span class="empty_price_text">' + arOptimusOptions['THEME']['EMPTY_PRICE_TEXT'] + '</span>';
					}
				}
			}
			strPrice += '</div>';
			BX.adjust(this.obPrice.price, {html: strPrice});

			if (!!this.obPrice.full)
			{
				$(this.obPrice.full).hide().html('');
				if(this.showPercent)
					$(this.obPrice.full).closest('.cost').find('.sale_block').hide();
			}

			var eventdata = {product: product, measure: measure, config: this.config, offer: this.offers[this.offerNum], obPrices: obPrices};
			BX.onCustomEvent('onAsproSkuSetPrice', [eventdata])
		}
	}
};

window.JCCatalogElement.prototype.Compare = function()
{
	var compareParams, compareLink;
	if($(this.obCompare).find('.added').is(':visible')){
		compareLink = this.compareData.compareUrlDel;
		this.compareData.Added = false;
	}else{
		compareLink = this.compareData.compareUrl;
		this.compareData.Added = true;
	}
	if (!!compareLink){
		switch (this.productType){
			case 1://product
			case 2://set
				compareLink = compareLink.replace('#ID#', this.product.id.toString());
				break;
			case 3://sku
				compareLink = compareLink.replace('#ID#', this.offers[this.offerNum].ID);
				break;
		}
		compareParams = {
			ajax_action: 'Y'
		};
		BX.ajax.loadJSON(
			compareLink,
			compareParams,
			BX.proxy(this.CompareResult, this)
		);
	}
};

window.JCCatalogElement.prototype.CompareResult = function(result)
{
	var popupContent, popupButtons, popupTitle;

	if (typeof result !== 'object')
	{
		return false;
	}
	if (result.STATUS === 'OK')
	{
		BX.onCustomEvent('OnCompareChange');
		if(!this.compareData.Added){
			$(this.obCompare).removeClass('added');
			$(this.obCompare).find('.added').hide();
			$(this.obCompare).find('.value:not(.added)').css('display','block');
		}
		else{
			$(this.obCompare).addClass('added');
			$(this.obCompare).find('.value:not(.added)').hide();
			$(this.obCompare).find('.added').css('display','block');
		}
		jsAjaxUtil.InsertDataToNode(arOptimusOptions['SITE_DIR'] + 'ajax/show_compare_preview_top.php', 'compare_line', false);
	}
	else
	{
		console.log(BX.message('ADD_ERROR_COMPARE'));
	}
	return false;
};

window.JCCatalogElement.prototype.CompareRedirect = function()
{
	if (!!this.compareData.comparePath)
	{
		location.href = this.compareData.comparePath;
	}
	else
	{
		this.obPopupWin.close();
	}
};

window.JCCatalogElement.prototype.InitBasketUrl = function()
{
	var product_url='';
	this.basketUrl = (this.basketMode === 'ADD' ? this.basketData.add_url : this.basketData.buy_url);
	switch (this.productType)
	{
		case 1://product
		case 2://set
			this.basketUrl = this.basketUrl.replace('#ID#', this.product.id.toString());
			product_url=this.product.id.toString();
			break;
		case 3://sku
			this.basketUrl = this.basketUrl.replace('#ID#', this.offers[this.offerNum].ID);
			product_url=this.offers[this.offerNum].URL;
			break;
	}
	this.basketParams = {
		'ajax_basket': 'Y'
	};
	if (this.config.showQuantity)
	{
		this.basketParams[this.basketData.quantity] = this.obQuantity.value;
	}
	if (!!this.basketData.sku_props)
	{
		this.basketParams[this.basketData.sku_props_var] = this.basketData.sku_props;
	}
	if (!!product_url)
	{
		this.basketParams["REQUEST_URI"] = product_url;
	}
};

window.JCCatalogElement.prototype.FillBasketProps = function()
{
	if (!this.visual.BASKET_PROP_DIV)
	{
		return;
	}
	var
		i = 0,
		propCollection = null,
		foundValues = false,
		obBasketProps = null;
	if (this.basketData.useProps && !this.basketData.emptyProps)
	{
		if (!!this.obPopupWin && !!this.obPopupWin.contentContainer)
		{
			obBasketProps = this.obPopupWin.contentContainer;
		}
	}
	else
	{
		obBasketProps = BX(this.visual.BASKET_PROP_DIV);
	}
	if (!!obBasketProps)
	{
		propCollection = obBasketProps.getElementsByTagName('select');
		if (!!propCollection && !!propCollection.length)
		{
			for (i = 0; i < propCollection.length; i++)
			{
				if (!propCollection[i].disabled)
				{
					switch(propCollection[i].type.toLowerCase())
					{
						case 'select-one':
							this.basketParams[propCollection[i].name] = propCollection[i].value;
							foundValues = true;
							break;
						default:
							break;
					}
				}
			}
		}
		propCollection = obBasketProps.getElementsByTagName('input');
		if (!!propCollection && !!propCollection.length)
		{
			for (i = 0; i < propCollection.length; i++)
			{
				if (!propCollection[i].disabled)
				{
					switch(propCollection[i].type.toLowerCase())
					{
						case 'hidden':
							this.basketParams[propCollection[i].name] = propCollection[i].value;
							foundValues = true;
							break;
						case 'radio':
							if (propCollection[i].checked)
							{
								this.basketParams[propCollection[i].name] = propCollection[i].value;
								foundValues = true;
							}
							break;
						default:
							break;
					}
				}
			}
		}
	}
	if (!foundValues)
	{
		this.basketParams[this.basketData.props] = [];
		this.basketParams[this.basketData.props][0] = 0;
	}
};

window.JCCatalogElement.prototype.SendToBasket = function()
{
	if (!this.canBuy)
	{
		return;
	}
	this.InitBasketUrl();
	this.FillBasketProps();
	BX.ajax.loadJSON(
		this.basketUrl,
		this.basketParams,
		BX.proxy(this.BasketResult, this)
	);
};

window.JCCatalogElement.prototype.Add2Basket = function()
{
	this.basketMode = 'ADD';
	this.Basket();
};

window.JCCatalogElement.prototype.BuyBasket = function()
{
	this.basketMode = 'BUY';
	this.Basket();
};

window.JCCatalogElement.prototype.Basket = function()
{
	var contentBasketProps = '';
	if (!this.canBuy)
	{
		return;
	}
	this.SendToBasket();
};

window.JCCatalogElement.prototype.BasketResult = function(arResult)
{
	var popupContent, popupButtons, popupTitle, productPict;
	if (!!this.obPopupWin)
	{
		this.obPopupWin.close();
	}
	if (typeof arResult !== 'object')
	{
		return false;
	}
	if (arResult.STATUS === 'OK' && this.basketMode === 'BUY')
	{
		this.BasketRedirect();
	}
	else
	{
		// this.InitPopupWindow();
		popupTitle = {
			content: BX.create('div', {
				style: { marginRight: '30px', whiteSpace: 'nowrap' },
				text: (arResult.STATUS === 'OK' ? BX.message('TITLE_SUCCESSFUL') : BX.message('TITLE_ERROR'))
			})
		};
		if (arResult.STATUS === 'OK')
		{
			BX.onCustomEvent('OnBasketChange');
			this.offers[this.offerNum].BASKET_ACTIVE=true;
			this.BasketStateRefresh("Y");
		}
		else
		{
			console.log(BX.message('ADD_ERROR_BASKET'));
		}
	}
	return false;
};

window.JCCatalogElement.prototype.BasketRedirect = function()
{
	location.href = (!!this.basketData.basketUrl ? this.basketData.basketUrl : BX.message('BASKET_URL'));
};

window.JCCatalogElement.prototype.InitPopupWindow = function()
{
	if (!!this.obPopupWin)
	{
		return;
	}
	this.obPopupWin = BX.PopupWindowManager.create('CatalogElementBasket_'+this.visual.ID, null, {
		autoHide: false,
		offsetLeft: 0,
		offsetTop: 0,
		overlay : true,
		closeByEsc: true,
		titleBar: true,
		closeIcon: {top: '10px', right: '10px'}
	});
};

window.JCCatalogElement.prototype.onPopupWindowShow = function(popup)
{
	BX.bind(document, 'click', BX.proxy(this.popupWindowClick, this));
};

window.JCCatalogElement.prototype.onPopupWindowClose = function(popup, event)
{
	BX.unbind(document, 'click', BX.proxy(this.popupWindowClick, this));
};

window.JCCatalogElement.prototype.popupWindowClick = function()
{
	if (!!this.obPopupPict && typeof (this.obPopupPict) === 'object')
	{
		if (this.obPopupPict.isShown())
		{
			this.obPopupPict.close();
		}
	}
};

window.JCCatalogElement.prototype.incViewedCounter = function()
{
	if (this.currentIsSet && !this.updateViewedCount)
	{

		switch (this.productType)
		{
			case 1:
			case 2:
				this.viewedCounter.params.PRODUCT_ID = this.product.id;
				this.viewedCounter.params.PARENT_ID = this.product.id;
				break;
			case 3:
				this.viewedCounter.params.PARENT_ID = this.product.id;
				this.viewedCounter.params.PRODUCT_ID = this.offers[this.offerNum].ID;
				break;
			default:
				return;
		}
		this.viewedCounter.params.SITE_ID = BX.message('SITE_ID');
		this.updateViewedCount = true;
		BX.ajax.post(
			this.viewedCounter.path,
			this.viewedCounter.params,
			BX.delegate(function(){ this.updateViewedCount = false; }, this)
		);
	}
};

window.JCCatalogElement.prototype.allowViewedCount = function(update)
{
	update = !!update;
	this.currentIsSet = true;
	if (update)
	{
		this.incViewedCounter();
	}
};
})(window);142  11329|/aspro.optimus/install/wizards/aspro/optimus/site/templates/aspro_optimus/components/bitrix/sale.basket.basket/fly/template.php|8eb599fc<?if (!defined("B_PROLOG_INCLUDED") || B_PROLOG_INCLUDED!==true)die();?>
<?
$normalCount = count($arResult["ITEMS"]["AnDelCanBuy"]);
$delayCount = count($arResult["ITEMS"]["DelDelCanBuy"]);
$subscribeCount = count($arResult["ITEMS"]["ProdSubscribe"]);
$naCount = count($arResult["ITEMS"]["nAnCanBuy"]);
$compareCount = count((array)$_SESSION["CATALOG_COMPARE_LIST"][COptimusCache::$arIBlocks[SITE_ID]['aspro_optimus_catalog']['aspro_optimus_catalog'][0]]["ITEMS"]);
$arParamsExport=$arParams;
unset($arParamsExport['INNER']);
$paramsString = urlencode(serialize($arParamsExport));

// update basket counters
CModule::IncludeModule('aspro.optimus');
$title_basket =  ($normalCount ? GetMessage("BASKET_COUNT", array("#PRICE#" => $arResult['allSum_FORMATED'])) : GetMessage("EMPTY_BLOCK_BASKET"));
$title_delay = ($delayCount ? GetMessage("BASKET_DELAY_COUNT", array("#PRICE#" => $arResult["DELAY_PRICE"]["SUMM_FORMATED"])) : GetMessage("EMPTY_BLOCK_DELAY"));

$arCounters = COptimus::updateBasketCounters(array('READY' => array('COUNT' => $normalCount, 'TITLE' => $title_basket, 'HREF' => $arParams["PATH_TO_BASKET"]), 'DELAY' => array('COUNT' => $delayCount, 'TITLE' => $title_delay, 'HREF' => $arParams["PATH_TO_BASKET"]), 'COMPARE' => array('COUNT' => $compareCount, 'HREF' => $arParams["PATH_TO_COMPARE"]), 'PERSONAL' => array('HREF' => $arParams["PATH_TO_AUTH"])));
?>
<?if($arParams['INNER'] !==true && $_SERVER['REQUEST_METHOD'] !== 'POST'):?>
	<div class="basket_fly loaded<?if (strlen($arResult["ERROR_MESSAGE"]) > 0):?> basket_empty<?endif;?>">
<?endif;?>
	<div class="wrap_cont">
	<?$frame = $this->createFrame()->begin('');?>
	<input type="hidden" name="total_price" value="<?=$arResult['allSum_FORMATED']?>" />
	<input type="hidden" name="total_discount_price" value="<?=$arResult['allSum_FORMATED']?>" />
	<input type="hidden" name="total_count" value="<?=$normalCount;?>" />
	<input type="hidden" name="delay_count" value="<?=$delayCount;?>" />

	<div class="opener">
		<div title="<?=$arCounters['READY']['TITLE']?>" data-type="AnDelCanBuy" class="basket_count small clicked<?=(!$arCounters['READY']['COUNT'] ? ' empty' : '')?>">
			<a href="<?=$arCounters['READY']['HREF']?>"></a>
			<div class="wraps_icon_block basket">
				<div class="count<?=(!$arCounters['READY']['COUNT'] ? ' empty_items' : '')?>">
					<span>
						<span class="items">
							<span><?=$arCounters['READY']['COUNT']?></span>
						</span>
					</span>
				</div>
			</div>
		</div>
		<div title="<?=$arCounters['DELAY']['TITLE']?>" data-type="DelDelCanBuy" class="wish_count small clicked<?=(!$arCounters['DELAY']['COUNT'] ? ' empty' : '')?>">
			<a href="<?=$arCounters['DELAY']['HREF']?>"></a>
			<div class="wraps_icon_block delay">
				<div class="count<?=(!$arCounters['DELAY']['COUNT'] ? ' empty_items' : '')?>">
					<span>
						<span class="items">
							<span><?=$arCounters['DELAY']['COUNT']?></span>
						</span>
					</span>
				</div>
			</div>
		</div>
		<div title="<?=$arCounters['COMPARE']['TITLE']?>" class="compare_count small">
			<a href="<?=$arCounters['COMPARE']['HREF']?>"></a>
			<div id="compare_fly" class="wraps_icon_block compare">
				<div class="count<?=(!$arCounters['COMPARE']['COUNT'] ? ' empty_items' : '')?>">
					<span>
						<span class="items">
							<span><?=$arCounters['COMPARE']['COUNT']?></span>
						</span>
					</span>
				</div>
			</div>
		</div>
		<div title="<?=$arCounters['PERSONAL']['TITLE']?>" class="user_block small">
			<a href="<?=$arCounters['PERSONAL']['HREF']?>"></a>
			<div class="wraps_icon_block<?=($arCounters['PERSONAL']['SRC'] ? ' w_img' : ' no_img')?><?=($arCounters['PERSONAL']['ID'] ? ' user_auth' : ' user_reg')?>"<?=($arCounters['PERSONAL']['SRC'] ? " style='background:url(".$arCounters['PERSONAL']['SRC'].") center center no-repeat;'" : "")?>></div>
		</div>
	</div>
	<script src="<?=(((COption::GetOptionString('main', 'use_minified_assets', 'N', $siteID) === 'Y') && file_exists($_SERVER['DOCUMENT_ROOT'].$templateFolder.'/script.min.js')) ? $templateFolder.'/script.min.js' : $templateFolder.'/script.js')?>" type="text/javascript"></script>
	<?
		include($_SERVER["DOCUMENT_ROOT"].$templateFolder."/functions.php");
		$arUrls = Array("delete" => SITE_DIR."ajax/show_basket_fly.php?action=delete&id=#ID#",
						"delay" => SITE_DIR."ajax/show_basket_fly.php?action=delay&id=#ID#",
						"add" => SITE_DIR."ajax/show_basket_fly.php?action=add&id=#ID#");


		if (is_array($arResult["WARNING_MESSAGE"]) && !empty($arResult["WARNING_MESSAGE"])) { foreach ($arResult["WARNING_MESSAGE"] as $v) { echo ShowError($v); } }

		$arMenu = array(array("ID"=>"AnDelCanBuy", "TITLE"=>GetMessage("SALE_BASKET_ITEMS"), "COUNT"=>$normalCount, "FILE"=>"/basket_items.php"));
		if ($delayCount) { $arMenu[] = array("ID"=>"DelDelCanBuy", "TITLE"=>GetMessage("SALE_BASKET_ITEMS_DELAYED"), "COUNT"=>$delayCount, "FILE"=>"/basket_items_delayed.php"); }
		//if ($subscribeCount) { $arMenu[] = array("ID"=>"ProdSubscribe", "TITLE"=>GetMessage("SALE_BASKET_ITEMS_SUBSCRIBED"), "COUNT"=>$subscribeCount, "FILE"=>"/basket_items_subscribed.php"); }
		//if ($naCount) { $arMenu[] = array("ID"=>"nAnCanBuy", "TITLE"=>GetMessage("SALE_BASKET_ITEMS_NOT_AVAILABLE"), "COUNT"=>$naCount, "FILE"=>"/basket_items_not_available.php"); }

	?>
		<div class="basket_sort">
			<a class="basket_title dark_link" href="<?=$arParams["PATH_TO_BASKET"]?>"><?=GetMessage("BASKET_TITLE");?><i class="fa basket-go"></i></a>
			<ul class="tabs">
				<?if (strlen($arResult["ERROR_MESSAGE"]) <= 0){?>
					<?foreach($arMenu as $key => $arElement){?>
						<li<?=($arElement["SELECTED"] ? ' class="cur"' : '');?> item-section="<?=$arElement["ID"]?>" data-type="<?=$arElement["ID"]?>">
							<div class="wrap_li">
								<span><?=$arElement["TITLE"]?></span>
								<span class="quantity">&nbsp;(<span class="count"><?=$arElement["COUNT"]?></span>)</span>
							</div>
						</li>
					<?}?>
				<?}?>
			</ul>
			<span class="wrap_remove_button">
				<?if($normalCount){?>
					<span class="button grey_br transparent remove_all_basket AnDelCanBuy cur" data-type="basket"><?=GetMessage('CLEAR_BASKET')?></span>
				<?}?>
				<?if($delayCount){?>
					<span class="button grey_br transparent remove_all_basket DelDelCanBuy" data-type="delay"><?=GetMessage('CLEAR_BASKET')?></span>
				<?}?>
			</span>
		</div>

		<form method="post" action="<?=POST_FORM_ACTION_URI?>" name="basket_form" id="basket_form" class="basket_wrapp">
			<?if (strlen($arResult["ERROR_MESSAGE"]) <= 0){?>
				<ul class="tabs_content basket">
					<?foreach($arMenu as $key => $arElement){?>
						<li<?=($arElement["SELECTED"] ? ' class="cur"' : '');?> item-section="<?=$arElement["ID"]?>"><?include($_SERVER["DOCUMENT_ROOT"].$templateFolder.$arElement["FILE"]);?></li>
					<?}?>
				</ul>
			<?}else{?>
				<ul class="tabs_content basket"><li class="cur" item-section="AnDelCanBuy"><?include($_SERVER["DOCUMENT_ROOT"].$templateFolder."/basket_items.php");?></ul>
			<?}?>
			<input id="fly_basket_params" type="hidden" name="PARAMS" value='<?=$paramsString?>' />
		</form>

		<script>
			$(document).ready(function(){
				$(document).on("submit", "#basket_line .basket_fly",  function (e) {	
					e.preventDefault();
				});
				$('#basket_line .basket_fly a.apply-button').click(function()
				{
					$('#basket_line .basket_fly form[name^=basket_form]').prepend('<input type="hidden" name="BasketRefresh" value="Y" />');
					$.post( arOptimusOptions['SITE_DIR']+'basket/', $("#basket_line .basket_fly form[name^=basket_form]").serialize(), $.proxy(
					function( data)
					{
						$('#basket_line .basket_fly form[name^=basket_form] input[name=BasketRefresh]').remove();
					}));
				});

				$(document).on("click", "#basket_line .basket_fly .tabs > li",  function () 	
				{
					$("#basket_line .basket_fly .tabs > li").removeClass("cur");
					$("#basket_line .basket_fly .tabs_content > li").removeClass("cur");
					$("#basket_line .basket_fly .basket_sort .remove_all_basket").removeClass("cur");
					$("#basket_line .basket_fly .tabs > li:eq("+$(this).index()+")").addClass("cur");
					$("#basket_line .basket_fly .tabs_content > li:eq("+$(this).index()+")").addClass("cur");
					$("#basket_line .basket_fly .basket_sort .remove_all_basket."+$(this).data('type')).addClass("cur");
				});

				$(document).on("click", "#basket_line .basket_fly .back_button, #basket_line .basket_fly .close",  function (e) {		
					$("#basket_line .basket_fly .opener > div").trigger('click');
				});
			});


			<?if ($arParams["AJAX_MODE_CUSTOM"]=="Y"):?>
				var animateRow = function(row)
				{
					$(row).find("td.thumb-cell img").css({"maxHeight": "inherit", "maxWidth": "inherit"}).fadeTo(50, 0);
					var columns = $(row).find("td");
					$(columns).wrapInner('<div class="slide"></div>');
					$(row).find(".summ-cell").wrapInner('<div class="slide"></div>');
					setTimeout(function(){$(columns).animate({"paddingTop": 0, "paddingBottom": 0}, 50)}, 0);
					$(columns).find(".slide").slideUp(333);
				}

				$("#basket_form").ready(function()
				{
					$('form[name^=basket_form] .counter_block input[type=text]').change( function(e)
					{
						e.preventDefault();
						// updateQuantity($(this).attr("id"), $(this).attr("data-id"), $(this).attr("step"));
					});

					$('.basket_sort .remove_all_basket').click(function(e){
						if(!$(this).hasClass('disabled')){
							$(this).addClass('disabled');
							delete_all_items($(this).data("type"), $(".tabs_content li:eq("+$(this).index()+")").attr("item-section"), 333);

						}
						$(this).removeClass('disabled');
					})

					$('form[name^=basket_form] .remove').unbind('click').click(function(e){
						e.preventDefault();
						var row = $(this).parents("tr").first();
						row.fadeTo(100 , 0.05, function() {});
						deleteProduct($(this).parents("tr[data-id]").attr('data-id'), $(this).parents("li").attr("item-section"), $(this).parents("tr[data-id]").attr('product-id'), $(this).parents("tr[data-id]"));
						markProductRemoveBasket($(this).parents("tr[data-id]").attr('product-id'));
						return false;
					});

					$('form[name^=basket_form] .delay .wish_item').unbind('click').click(function(e){
						delayProduct($(this).parents("tr[data-id]").attr('data-id'), $(this).parents("li").attr("item-section"), $(this).parents("tr[data-id]"));
						var row = $(this).parents("tr").first();
						row.fadeTo(100 , 0.05, function() {});
						markProductDelay($(this).parents("tr[data-id]").attr('product-id'));
					});

					$('form[name^=basket_form] .add .wish_item').unbind('click').click(function(e){
						var basketId = $(this).parents("tr[data-id]").attr('data-id');
						var controlId =  "QUANTITY_INPUT_"+basketId;
						var ratio =  $(this).parents("tr[data-id]").find("#"+controlId).attr("step");
						var quantity =  $(this).parents("tr[data-id]").find("#"+controlId).attr("value");
						var row = $(this).parents("tr").first();
						row.fadeTo(100 , 0.05, function() {});
						addProduct(basketId, $(this).parents("li").attr("item-section"), $(this).parents("tr[data-id]"));
						markProductAddBasket($(this).parents("tr[data-id]").attr('product-id'));
					});
				});
			<?endif;?>
		</script>
	<?$frame->end();?>
	</div>
<?if($arParams['INNER'] !==true && $_SERVER['REQUEST_METHOD'] !== 'POST'):?>
	</div>
<?endif;?>59   292250|/aspro.optimus/classes/general/COptimus.php|d3046579<?
/**
 * Optimus module
 * @copyright 2016 Aspro
 */

if(!defined('OPTIMUS_MODULE_ID')){
	define('OPTIMUS_MODULE_ID', 'aspro.optimus');
}

IncludeModuleLangFile(__FILE__);
use \Bitrix\Main\Type\Collection,
	\Bitrix\Main\Loader,
	\Bitrix\Main\IO\File,
	\Bitrix\Main\Localization\Loc,
	\Bitrix\Main\Config\Option;

class COptimus{
    const partnerName	= "aspro";
    const solutionName	= "optimus";
	const moduleID		= OPTIMUS_MODULE_ID;
    const wizardID		= "aspro:optimus";
	const devMode 		= false;

	private static $arMetaParams = array();

    function ShowPanel(){
        if($GLOBALS["USER"]->IsAdmin() && COption::GetOptionString("main", "wizard_solution", "", SITE_ID) == self::solutionName){
            $GLOBALS["APPLICATION"]->SetAdditionalCSS("/bitrix/wizards/".self::partnerName."/".self::solutionName."/css/panel.css");
            $arMenu = array(
                array(
                    "ACTION" => "jsUtils.Redirect([], '".CUtil::JSEscape("/bitrix/admin/wizard_install.php?lang=".LANGUAGE_ID."&wizardSiteID=".SITE_ID."&wizardName=".self::wizardID."&".bitrix_sessid_get())."')",
                    "ICON" => "bx-popup-item-wizard-icon",
                    "TITLE" => GetMessage("STOM_BUTTON_TITLE_W1"),
                    "TEXT" => GetMessage("STOM_BUTTON_NAME_W1"),
                ),
            );
            $GLOBALS["APPLICATION"]->AddPanelButton(array(
                "HREF" => "/bitrix/admin/wizard_install.php?lang=".LANGUAGE_ID."&wizardName=".self::wizardID."&wizardSiteID=".SITE_ID."&".bitrix_sessid_get(),
                "ID" => self::solutionName."_wizard",
                "ICON" => "bx-panel-site-wizard-icon",
                "MAIN_SORT" => 2500,
                "TYPE" => "BIG",
                "SORT" => 10,
                "ALT" => GetMessage("SCOM_BUTTON_DESCRIPTION"),
                "TEXT" => GetMessage("SCOM_BUTTON_NAME"),
                "MENU" => $arMenu,
            ));
        }
    }

	public static function ShowPageType($type = 'indexblocks'){
        global $APPLICATION, $TEMPLATE_OPTIONS;
        $path = $_SERVER['DOCUMENT_ROOT'].SITE_TEMPLATE_PATH.'/page_blocks/'.$type.'_';
        $file = null;

        if(is_array($TEMPLATE_OPTIONS) && $TEMPLATE_OPTIONS){
            switch($type){
                case 'page_contacts':
                    $path = str_replace('//', '/', $_SERVER['DOCUMENT_ROOT'].'/'.SITE_DIR.'contacts/'.$type);
                    $file = $path.'_'.$TEMPLATE_OPTIONS['PAGE_CONTACTS']['VALUE'].'.php';
                    break;
                case 'search_title_component':
                    $path = str_replace('//', '/', $_SERVER['DOCUMENT_ROOT'].'/'.SITE_DIR.'include/footer/');
                    $file = $path.'site-search.php';
                    break;
                case 'basket_component':
                    $path = str_replace('//', '/', $_SERVER['DOCUMENT_ROOT'].'/'.SITE_DIR.'include/footer/');
                    $file = $path.'site-basket.php';
                    break;
                case 'auth_component':
                    $path = str_replace('//', '/', $_SERVER['DOCUMENT_ROOT'].'/'.SITE_DIR.'include/footer/');
                    $file = $path.'site-auth.php';
                    break;
                case 'bottom_counter':
                    $bIndexBot = (isset($_SERVER['HTTP_ACCEPT_LANGUAGE']) && strpos($_SERVER['HTTP_ACCEPT_LANGUAGE'], ',') === false); // is indexed yandex/google bot
                    if(!$bIndexBot)
                    {
                        $path = str_replace('//', '/', $_SERVER['DOCUMENT_ROOT'].'/'.SITE_DIR.'include/');
                        $file = $path.'invis-counter.php';
                    }
                    break;
                case 'page_width':
                    $APPLICATION->SetAdditionalCSS(SITE_TEMPLATE_PATH.'/css/width-'.$TEMPLATE_OPTIONS['PAGE_WIDTH']['VALUE'].'.css');
                    break;
                case 'h1_style':
                    if ($TEMPLATE_OPTIONS['H1_STYLE']['VALUE']=='Normal')
                        $APPLICATION->SetAdditionalCSS(SITE_TEMPLATE_PATH.'/css/h1-normal.css');
                    else
                        $APPLICATION->SetAdditionalCSS(SITE_TEMPLATE_PATH.'/css/h1-bold.css');
                    break;
                case 'footer':
                    $file = $path.(isset($TEMPLATE_OPTIONS['FOOTER_TYPE']['VALUE']) && $TEMPLATE_OPTIONS['FOOTER_TYPE']['VALUE'] ? $TEMPLATE_OPTIONS['FOOTER_TYPE']['VALUE'] : $TEMPLATE_OPTIONS['FOOTER_TYPE']).'.php';
                    break;
                case 'header':
                    $file = $path.$TEMPLATE_OPTIONS['HEADER_TYPE']['VALUE'].'.php';
                    break;
                case 'header_fixed':
                    $file = $path.'.php';
                    break;
                case 'header_fixed_mobile':
                    $file = $path.'.php';
                    break;
                case 'header_mobile_menu':
                    $file = $path.$TEMPLATE_OPTIONS['HEADER_MOBILE_MENU']['VALUE'].'.php';
                    break;
                case 'header_mobile_menu':
                    $file = $path.$TEMPLATE_OPTIONS['HEADER_MOBILE_MENU']['VALUE'].'.php';
                    break;
                case 'page_title':
                    $file = $path.$TEMPLATE_OPTIONS['PAGE_TITLE']['VALUE'].'.php';
                    break;
                case 'left_block':
                    $file = $path.$TEMPLATE_OPTIONS['LEFT_BLOCK']['VALUE'].'.php';
                    break;
                default:
                    $path = str_replace('//', '/', $_SERVER['DOCUMENT_ROOT'].'/'.SITE_DIR.$type);
                    $file = $path.'_'.$TEMPLATE_OPTIONS['INDEX_TYPE']['VALUE'].'.php';
                    break;
			}

            if ($file)
                @include_once $file;

        }
    }

    function BeforeSendEvent(\Bitrix\Main\Event $event){
		if(isset($_REQUEST["ONE_CLICK_BUY"]) && method_exists('\Bitrix\Sale\Compatible\EventCompatibility', 'setDisableMailSend')){
			\Bitrix\Sale\Compatible\EventCompatibility::setDisableMailSend(true);
			if(method_exists('\Bitrix\Sale\Notify', 'setNotifyDisable'))
				\Bitrix\Sale\Notify::setNotifyDisable(true);
		}
	}

	function Check(){
	}

	function Start($siteID){
		global  $APPLICATION, $SITE_THEME, $TEMPLATE_OPTIONS, $THEME_SWITCHER, $STARTTIME;
		$STARTTIME = time() * 1000;
		$SITE_THEME = COption::GetOptionString(self::moduleID, "COLOR_THEME", 'BLUE', $siteID);
		$SITE_THEMEBG = COption::GetOptionString(self::moduleID, "BGCOLOR_THEME", 'LIGHT', $siteID);
		$TEMPLATE_OPTIONS = self::GetTemplateOptions($siteID);
		$THEME_SWITCHER = COption::GetOptionString(self::moduleID, 'THEME_SWITCHER', 'N', $siteID);

		define("ASPRO_TEMPLATE_LOADED", true);

		if($TEMPLATE_OPTIONS && is_array($TEMPLATE_OPTIONS)){
			// reset theme
			if($_REQUEST["theme"] == "default"){
				foreach($TEMPLATE_OPTIONS as $templateOptionKey => $templateOptionValue){
					if(isset($templateOptionValue["DEFAULT"])){
						$default = $templateOptionValue["DEFAULT"];
						$TEMPLATE_OPTIONS[$templateOptionKey]["CURRENT_VALUE"] = strToUpper($default);
						$_SESSION[SITE_ID][strToUpper($templateOptionKey)] = strToUpper($default);
					}
				}
				COption::SetOptionString(self::moduleID, "NeedGenerateCustomTheme", 'Y', '', $siteID);
				COption::SetOptionString(self::moduleID, "NeedGenerateCustomThemeBG", 'Y', '', $siteID);
			}
			else{
				foreach($TEMPLATE_OPTIONS as $templateOptionKey => $templateOptionValue){
					// read theme from $_SESSION if $THEME_SWITCHER == Y
					$arOptionValues = array();
					if($templateOptionValue["VALUES"] && is_array($templateOptionValue["VALUES"])){
						foreach($templateOptionValue["VALUES"] as  $i => $j){
							$arOptionValues[] = $j["VALUE"];
						}
					}
					if(($THEME_SWITCHER == "Y") && $_SESSION[$siteID] && is_array($_SESSION[$siteID])){
						foreach($_SESSION[SITE_ID] as $sessionKey => $sessionValue){
							if($sessionKey == $templateOptionValue["ID"] && (($templateOptionValue["ID"] == "CUSTOM_COLOR_THEME" || $templateOptionValue["ID"] == "CUSTOM_BGCOLOR_THEME") || in_array($sessionValue, $arOptionValues))){
								$TEMPLATE_OPTIONS[$templateOptionKey]["CURRENT_VALUE"] = $sessionValue;
							}
						}
					}

					// save theme changes in $_SESSION if $THEME_SWITCHER == Y
					if($_REQUEST && is_array($_REQUEST)){
						foreach($_REQUEST as $requestKey => $requestValue){
							if(strToUpper($requestKey) == $templateOptionValue["ID"] && (($templateOptionValue["ID"] == "CUSTOM_COLOR_THEME" || $templateOptionValue["ID"] == "CUSTOM_BGCOLOR_THEME") || in_array(strToUpper($requestValue), $arOptionValues))){
								if(($templateOptionValue["ID"] == "CUSTOM_COLOR_THEME") || ($templateOptionValue["ID"] == "CUSTOM_BGCOLOR_THEME")){
									$requestValue = str_replace('#', '', $requestValue);
									$requestValue = (strlen($requestValue) ? $requestValue : $templateOptionValue['DEFAULT']);
								}

								if($templateOptionValue["ID"] == "COLOR_THEME" && $requestValue == 'CUSTOM'){
									COption::SetOptionString(self::moduleID, "NeedGenerateCustomTheme", 'Y', '', $siteID);
								}
								if($templateOptionValue["ID"] == "BGCOLOR_THEME" && $requestValue == 'CUSTOM'){
									COption::SetOptionString(self::moduleID, "NeedGenerateCustomThemeBG", 'Y', '', $siteID);
								}

								if($THEME_SWITCHER == "Y"){
									$_SESSION[$siteID][strToUpper($requestKey)] = strToUpper($requestValue);
									$TEMPLATE_OPTIONS[$templateOptionKey]["CURRENT_VALUE"] = strToUpper($requestValue);
								}
							}
						}
					}
				}
			}
		}
		
		// global flag for OnEndBufferContentHandler		
		$GLOBALS['_USE_LAZY_LOAD_OPTIMUS_'] = $TEMPLATE_OPTIONS['USE_LAZY_LOAD']["CURRENT_VALUE"] === 'Y';

		if(isset($_REQUEST["color_theme"]) && $_REQUEST["color_theme"]){
			LocalRedirect($_SERVER["HTTP_REFERER"]);
		}

		$SITE_THEME = $TEMPLATE_OPTIONS["COLOR_THEME"]["CURRENT_VALUE"];
		$SITE_THEMEBG = $TEMPLATE_OPTIONS["BGCOLOR_THEME"]["CURRENT_VALUE"];
		$SITE_TYPE_HOVER_IMG = $TEMPLATE_OPTIONS["DETAIL_PICTURE_MODE"]["CURRENT_VALUE"];

		$SITE_THEME_PATH = SITE_TEMPLATE_PATH.'/themes/'.strToLower($SITE_THEME.($SITE_THEME !== 'CUSTOM' ? '' : '_'.$siteID));
		$SITE_THEMEBG_PATH = SITE_TEMPLATE_PATH.'/bg_color/'.strToLower($SITE_THEMEBG.($SITE_THEMEBG !== 'CUSTOM' ? '' : '_'.$siteID));
		$APPLICATION->SetAdditionalCSS($SITE_THEME_PATH.'/theme.css', true);
		$APPLICATION->SetAdditionalCSS($SITE_THEMEBG_PATH.'/bgcolors.css', true);
		COptimus::GenerateThemes($siteID);

		if(CModule::IncludeModuleEx(self::moduleID) == 1){

			$bNAjaxMode = ((!isset($_SERVER['HTTP_X_REQUESTED_WITH']) ||(isset($_SERVER['HTTP_X_REQUESTED_WITH']) && strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) != 'xmlhttprequest')) && (strtolower($_REQUEST['ajax']) != 'y'));

			$bIndexBot = (isset($_SERVER['HTTP_ACCEPT_LANGUAGE']) && strpos($_SERVER['HTTP_USER_AGENT'], 'Lighthouse') !== false); // is indexed yandex/google bot

			$APPLICATION->SetPageProperty("viewport", "initial-scale=1.0, width=device-width");
			$APPLICATION->SetPageProperty("HandheldFriendly", "true");
			$APPLICATION->SetPageProperty("apple-mobile-web-app-capable", "yes");
			$APPLICATION->SetPageProperty("apple-mobile-web-app-status-bar-style", "black");
			$APPLICATION->SetPageProperty("SKYPE_TOOLBAR", "SKYPE_TOOLBAR_PARSER_COMPATIBLE");

			if(!$bIndexBot)
				$APPLICATION->SetAdditionalCSS(SITE_TEMPLATE_PATH.'/css/jquery.fancybox.css');

			$APPLICATION->SetAdditionalCSS(SITE_TEMPLATE_PATH.'/css/styles.css');
			if($SITE_TYPE_HOVER_IMG == 'MAGNIFIER')
				$APPLICATION->SetAdditionalCSS(SITE_TEMPLATE_PATH.'/css/xzoom.css');
			if($_REQUEST && isset($_REQUEST['print'])){
				$APPLICATION->SetAdditionalCSS(SITE_TEMPLATE_PATH.'/css/print.css', true);
			}else{
				$APPLICATION->SetAdditionalCSS(((COption::GetOptionString('main', 'use_minified_assets', 'N', $siteID) === 'Y') && file_exists($_SERVER['DOCUMENT_ROOT'].SITE_TEMPLATE_PATH.'/css/media.min.css')) ? SITE_TEMPLATE_PATH.'/css/media.min.css' : SITE_TEMPLATE_PATH.'/css/media.css', true);
			}

			$sCustomFont = \Bitrix\Main\Config\Option::get('aspro.optimus', 'CUSTOM_FONT', '');
			if($bNAjaxMode)
			{
				if(!$bIndexBot)
				{

					if($GLOBALS['_USE_LAZY_LOAD_OPTIMUS_']){
						$APPLICATION->AddHeadString('<script>window.lazySizesConfig = window.lazySizesConfig || {};lazySizesConfig.loadMode = 2;lazySizesConfig.expand = 100;lazySizesConfig.expFactor = 1;lazySizesConfig.hFac = 0.1;window.lazySizesConfig.lazyClass = "lazy";</script>');
						$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/lazysizes.min.js');
						$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/ls.unveilhooks.min.js');
					}

					if($sCustomFont)
						$APPLICATION->AddHeadString('<'.$sCustomFont.'>');
					$APPLICATION->SetAdditionalCSS(SITE_TEMPLATE_PATH.'/css/fonts/font-awesome/css/font-awesome.min.css', true);
					$APPLICATION->SetAdditionalCSS(SITE_TEMPLATE_PATH.'/css/print.css', true);
					$APPLICATION->SetAdditionalCSS(SITE_TEMPLATE_PATH.'/css/animation/animation_ext.css');
					$APPLICATION->SetAdditionalCSS(SITE_TEMPLATE_PATH.'/css/jquery.mCustomScrollbar.min.css');
					$APPLICATION->SetAdditionalCSS(SITE_TEMPLATE_PATH.'/css/custom.css', true);
					$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.actual.min.js');
					$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jqModal.js');
					$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.fancybox.js');
					$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.history.js');
					$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.flexslider.js');
					$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.validate.min.js');
					$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.inputmask.bundle.min.js');
					$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.easing.1.3.js');
					$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/equalize.min.js');
					$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.alphanumeric.js');
					$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.cookie.js');
					$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.plugin.min.js');
					$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.countdown.min.js');
					$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.countdown-ru.js');
					$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.ikSelect.js');
					$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/sly.js');
					$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/equalize_ext.js');
					$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.mousewheel-3.0.6.min.js');
					$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.mCustomScrollbar.min.js');
					$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.dotdotdot.js');
					$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/velocity.js');
					$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/velocity.ui.js');
					$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/jquery.appear.js');
					// $APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/zoomsl-3.0.js');
					if($SITE_TYPE_HOVER_IMG == 'MAGNIFIER')
						$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/xzoom.js');
					$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/main.js');
					$APPLICATION->AddHeadScript(SITE_TEMPLATE_PATH.'/js/custom.js', true);
				}

				if(strlen($TEMPLATE_OPTIONS['FAVICON_IMAGE']['CURRENT_IMG'])){
					
					$file_ext = pathinfo($TEMPLATE_OPTIONS['FAVICON_IMAGE']['CURRENT_IMG'], PATHINFO_EXTENSION);
					$fav_ext = $file_ext ? $file_ext : 'ico';
					$fav_type = '';

					switch ($fav_ext) {
						case 'ico': 
							$fav_type = 'image/x-icon';
							break;
						case 'svg': 
							$fav_type = 'image/svg+xml';
							break;
						case 'png': 
							$fav_type = 'image/png';
							break;
						case 'jpg': 
							$fav_type = 'image/jpeg';
							break;
						case 'gif': 
							$fav_type = 'image/gif';
							break;
						case 'bmp': 
							$fav_type = 'image/bmp';
							break;
					}

					$APPLICATION->AddHeadString('<link rel="shortcut icon" href="'.$TEMPLATE_OPTIONS['FAVICON_IMAGE']['CURRENT_IMG'].'" type="'.$fav_type.'" />', true);
				}
				if(strlen($TEMPLATE_OPTIONS['APPLE_TOUCH_ICON_IMAGE']['CURRENT_IMG'])){
					$APPLICATION->AddHeadString('<link rel="apple-touch-icon" sizes="180x180" href="'.$TEMPLATE_OPTIONS['APPLE_TOUCH_ICON_IMAGE']['CURRENT_IMG'].'" />', true);
				}
			}

			if(!$bIndexBot)
			{
				CJSCore::Init(array("jquery", "ls"));
				CAjax::Init();
			}
			else
			{
				CJSCore::Init(array("jquery"));
			}
			\Bitrix\Main\Loader::includeModule('iblock');
			\Bitrix\Main\Loader::includeModule('sale');
			\Bitrix\Main\Loader::includeModule('catalog');

			if(self::IsBasketPage())
			{
				CJSCore::Init(array('fx'));
			}

			self::showBgImage($siteID);?>

			<?//clear basket session counter in basket page?>
			<?if($_COOKIE['click_basket'] && $_COOKIE['click_basket'] == 'Y'):?>
				<?self::clearBasketCounters();?>
				<?unset($_COOKIE['click_basket'])?>
				<script>
					$.removeCookie('click_basket', {path: '/'});
				</script>
			<?endif;?>

			<?return true;
		}
		else{
			$APPLICATION->SetAdditionalCSS(SITE_TEMPLATE_PATH.'/css/styles.css');
			$APPLICATION->SetTitle(GetMessage("ERROR_INCLUDE_MODULE"));
			$APPLICATION->IncludeFile(SITE_DIR."include/error_include_module.php", Array(), Array()); die();
		}
	}

	static function checkBgImage($siteID){
		global $APPLICATION;
		static $arBanner;
		if($arBanner===NULL){
			$arItems = COptimusCache::CIBLockElement_GetList(array("SORT" => "ASC", 'CACHE' => array('TAG' => COptimusCache::GetIBlockCacheTag(COptimusCache::$arIBlocks[$siteID]["aspro_optimus_adv"]["aspro_optimus_bg_images"][0]))), array('IBLOCK_ID' => COptimusCache::$arIBlocks[$siteID]["aspro_optimus_adv"]["aspro_optimus_bg_images"][0], "ACTIVE"=>"Y"), false, false, array("ID", "NAME", "PREVIEW_PICTURE", "PROPERTY_URL", "PROPERTY_FIXED_BANNER", "PROPERTY_URL_NOT_SHOW"));
			$arBanner=array();
			if($arItems){
				$curPage=$APPLICATION->GetCurPage();
				foreach($arItems as $arItem){
					if(isset($arItem["PROPERTY_URL_VALUE"]) && $arItem["PREVIEW_PICTURE"]){
						if(!is_array($arItem["PROPERTY_URL_VALUE"]))
							$arItem["PROPERTY_URL_VALUE"]=array($arItem["PROPERTY_URL_VALUE"]);
						if($arItem["PROPERTY_URL_VALUE"]){
							foreach($arItem["PROPERTY_URL_VALUE"] as $url){
								$url=str_replace("SITE_DIR", SITE_DIR, $url);
								if($arItem["PROPERTY_URL_NOT_SHOW_VALUE"]){
									if(!is_array($arItem["PROPERTY_URL_NOT_SHOW_VALUE"]))
										$arItem["PROPERTY_URL_NOT_SHOW_VALUE"]=array($arItem["PROPERTY_URL_NOT_SHOW_VALUE"]);
									foreach($arItem["PROPERTY_URL_NOT_SHOW_VALUE"] as $url_not_show){
										$url_not_show=str_replace("SITE_DIR", SITE_DIR, $url_not_show);
										if(CSite::InDir($url_not_show)){
											break 2;
										}
									}
									foreach($arItem["PROPERTY_URL_NOT_SHOW_VALUE"] as $url_not_show){
										$url_not_show=str_replace("SITE_DIR", SITE_DIR, $url_not_show);
										if(CSite::InDir($url_not_show)){
											// continue;
											break 2;
										}else{
											if(CSite::InDir($url)){
												$arBanner=$arItem;
												break;
											}
										}
									}
								}else{
									if(CSite::InDir($url)){
										$arBanner=$arItem;
										break;
									}
								}
							}
						}
					}
				}
			}
		}
		return $arBanner;
	}

	function showBgImage($siteID){
		global $APPLICATION;
		$arBanner=self::checkBgImage($siteID);
		if($arBanner){
			$image=CFile::GetFileArray($arBanner["PREVIEW_PICTURE"]);
			$class="bg_image_site";
			if($arBanner["PROPERTY_FIXED_BANNER_VALUE"]=="Y")
				$class.=" fixed";
			if(self::IsMainPage())
				$class.=" opacity";
			$APPLICATION->AddHeadString('<script>$(document).ready(function(){$(\'body\').append("<span class=\''.$class.'\' style=\'background-image:url('.$image["SRC"].');\'></span>");})</script>');
		}
		return true;
	}

	function ShowLogo(){
		global $arSite, $TEMPLATE_OPTIONS;

		$text = '<a href="'.SITE_DIR.'">';
		if($arImg = unserialize(Option::get(self::moduleID, "LOGO_IMAGE", serialize(array()))))
			$text .= '<img src="'.CFile::GetPath($arImg[0]).'" alt="'.$arSite["SITE_NAME"].'" title="'.$arSite["SITE_NAME"].'" data-src="" />';
		elseif(self::checkContentFile(SITE_DIR.'/include/logo_svg.php'))
			$text .= File::getFileContents($_SERVER['DOCUMENT_ROOT'].SITE_DIR.'/include/logo_svg.php');
		else
			$text .= '<img src="'.$TEMPLATE_OPTIONS["LOGO_IMAGE"]["CURRENT_IMG"].'" alt="'.$arSite["SITE_NAME"].'" title="'.$arSite["SITE_NAME"].'" data-src="" />';
		$text .= '</a>';

		echo $text;
		?>
	<?}

	static function getCurrentPageClass(){
		static $result;
		global $TEMPLATE_OPTIONS, $APPLICATION;
		$arHidePage = array("front_page", "catalog_page");

		if(!isset($result)){
			if(self::IsMainPage())
				$result = 'front';
			if(self::IsAuthSection())
				$result = 'auth';
			if(self::IsBasketPage())
				$result = 'basket';
			if(self::IsCatalogPage())
				$result = 'catalog';
			if(self::IsPersonalPage())
				$result = 'personal';
			if(self::IsOrderPage())
				$result = 'order';
			if($result)
				$result.='_page';

			if($APPLICATION->GetProperty('HIDE_LEFT_BLOCK') == 'Y')
				$result .= ' wides';

			if($TEMPLATE_OPTIONS['MENU_POSITION_MAIN']['CURRENT_VALUE'] == 'HIDE' && in_array($result, $arHidePage))
				$result = 'hide_catalog';

			$result .= ($TEMPLATE_OPTIONS['USE_FAST_VIEW_PAGE_DETAIL']['CURRENT_VALUE'] != 'N' ? ' with_fast_view ' : '');
			$result .= (\Bitrix\Main\Config\Option::get(self::moduleID, 'SHOW_DELAY', 'Y') != 'N' ? '' : ' hidden-delay');
			$result .= (\Bitrix\Main\Config\Option::get(self::moduleID, 'SHOW_COMPARE', 'Y') != 'N' ? '' : ' hidden-compare');
			$result .= ($TEMPLATE_OPTIONS['MOBILE_CATALOG_BLOCK_COMPACT']['CURRENT_VALUE'] != 'N' ? ' compact-catalog' : '');
		}
		return $result;
	}

	static function IsMainPage(){
		static $result;

		if(!isset($result)){
			$result = CSite::InDir(SITE_DIR.'index.php');
		}

		return $result;
	}

	static function IsAuthSection(){
		static $result;

		if(!isset($result)){
			$result = CSite::InDir(SITE_DIR.'auth/');
		}

		return $result;
	}

	static function IsBasketPage($page = ''){
		static $result;

		if(!isset($result)){
			if(!$page)
			{
				$page = \Bitrix\Main\Config\Option::get(self::moduleID, 'BASKET_PAGE_URL', SITE_DIR.'basket/', SITE_ID);
				$page = str_replace('#SITE_DIR#', SITE_DIR, $page);
			}
			$result = CSite::InDir($page);
		}

		return $result;
	}

	static function IsCatalogPage($page = ''){
		static $result;

		if(!isset($result)){
			if(!$page)
			{
				$page = \Bitrix\Main\Config\Option::get(self::moduleID, 'CATALOG_PAGE_URL', SITE_DIR.'catalog/', SITE_ID);
				$page = str_replace('#SITE_DIR#', SITE_DIR, $page);
			}
			$result = CSite::InDir($page);
		}

		return $result;
	}

	static function IsOrderPage($page = ''){
		static $result;
		global $APPLICATION;

		if(!isset($result)){
			if(!$page)
			{
				$page = \Bitrix\Main\Config\Option::get(self::moduleID, 'ORDER_PAGE_URL', SITE_DIR.'order/', SITE_ID);
				$page = str_replace('#SITE_DIR#', SITE_DIR, $page);
			}
			$result = CSite::InDir($page);

			if(!$result)
			{
				if($APPLICATION->GetProperty('HIDE_LEFT_BLOCK') == 'Y')
					$result = true;
			}
		}

		return $result;
	}

	static function IsPersonalPage(){
		static $result;

		if(!isset($result)){
			if(!$page)
			{
				$page = \Bitrix\Main\Config\Option::get(self::moduleID, 'PERSONAL_PAGE_URL', SITE_DIR.'personal/', SITE_ID);
				$page = str_replace('#SITE_DIR#', SITE_DIR, $page);
			}
			$result = CSite::InDir($page);
		}

		return $result;
	}

	function GenerateMinCss($file){
		if(file_exists($file)){
			$content = @file_get_contents($file);
			if($content !== false){
				$content = preg_replace('!/\*[^*]*\*+([^/][^*]*\*+)*/!', '', $content);
				$content = str_replace(array("\r\n", "\r", "\n", "\t"), '', $content);
				$content = preg_replace('/ {2,}/', ' ', $content);
				$content = str_replace(array(' : ', ': ', ' :',), ':', $content);
				$content = str_replace(array(' ; ', '; ', ' ;'), ';', $content);
				$content = str_replace(array(' > ', '> ', ' >'), '>', $content);
				$content = str_replace(array(' + ', '+ ', ' +'), '+', $content);
				$content = str_replace(array(' { ', '{ ', ' {'), '{', $content);
				$content = str_replace(array(' } ', '} ', ' }'), '}', $content);
				$content = str_replace(array(' ( ', '( ', ' ('), '(', $content);
				$content = str_replace(array(' ) ', ') ', ' )'), ')', $content);
				$content = str_replace('and(', 'and (', $content);
				$content = str_replace(')li', ') li', $content);
				$content = str_replace(').', ') .', $content);
				@file_put_contents(dirname($file).'/'.basename($file, '.css').'.min.css', $content);
			}
		}

		return false;
	}

	function GenerateThemes($siteID){
		global $SITE_THEME, $TEMPLATE_OPTIONS, $THEME_SWITCHER;
		$arBaseColors = $TEMPLATE_OPTIONS['COLOR_THEME']['VALUES'];
		$arBaseBgColors = $TEMPLATE_OPTIONS['BGCOLOR_THEME']['VALUES'];
		$isCustomTheme = $TEMPLATE_OPTIONS['COLOR_THEME']['CURRENT_VALUE'] === 'CUSTOM';
		$isCustomThemeBG = $TEMPLATE_OPTIONS['BGCOLOR_THEME']['CURRENT_VALUE'] === 'CUSTOM';

		$bNeedGenerateAllThemes = COption::GetOptionString(self::moduleID, 'NeedGenerateThemes', 'N', $siteID) === 'Y';
		$bNeedGenerateCustomTheme = COption::GetOptionString(self::moduleID, 'NeedGenerateCustomTheme', 'N', $siteID) === 'Y';
		$bNeedGenerateCustomThemeBG = COption::GetOptionString(self::moduleID, 'NeedGenerateCustomThemeBG', 'N', $siteID) === 'Y';

		$baseColorCustom = $baseColorBGCustom = '';
		$lastGeneratedBaseColorCustom = COption::GetOptionString(self::moduleID, 'LastGeneratedBaseColorCustom', '', $siteID);
		if(isset($TEMPLATE_OPTIONS['CUSTOM_COLOR_THEME'])){
			$baseColorCustom = str_replace('#', '', $TEMPLATE_OPTIONS['CUSTOM_COLOR_THEME']['CURRENT_VALUE']);
			$baseColorCustom = '#'.(strlen($baseColorCustom) ? $baseColorCustom : $TEMPLATE_OPTIONS['CUSTOM_COLOR_THEME']['DEFAULT']);
		}
		$lastGeneratedBaseColorBGCustom = COption::GetOptionString(self::moduleID, 'LastGeneratedBaseColorBGCustom', '', $siteID);
		if(isset($TEMPLATE_OPTIONS['CUSTOM_BGCOLOR_THEME'])){
			$baseColorBGCustom = str_replace('#', '', $TEMPLATE_OPTIONS['CUSTOM_BGCOLOR_THEME']['CURRENT_VALUE']);
			$baseColorBGCustom = (strlen($baseColorBGCustom) ? $baseColorBGCustom : $TEMPLATE_OPTIONS['CUSTOM_BGCOLOR_THEME']['DEFAULT']);
		}

		$bGenerateAll = self::devMode || $bNeedGenerateAllThemes;
		$bGenerateCustom = $bGenerateAll || $bNeedGenerateCustomTheme || ($THEME_SWITCHER === 'Y' && $isCustomTheme && strlen($baseColorCustom) && $baseColorCustom != $lastGeneratedBaseColorCustom);
		$bGenerateCustomBG = $bGenerateAll || $bNeedGenerateCustomThemeBG || ($THEME_SWITCHER === 'Y' && $isCustomThemeBG && strlen($baseColorBGCustom) && $baseColorBGCustom != $lastGeneratedBaseColorBGCustom);
		if($arBaseColors && is_array($arBaseColors) && ($bGenerateAll || $bGenerateCustom || $isCustomThemeBG)){
			if(!class_exists('lessc')){
				include_once 'lessc.inc.php';
			}
			$less = new lessc;
			try{

				if(defined('SITE_TEMPLATE_PATH'))
				{
					$templateName = array_pop(explode('/', SITE_TEMPLATE_PATH));
				}

				foreach($arBaseColors as $arColor){
					if(($bCustom = ($arColor['VALUE'] == 'CUSTOM')) && $bGenerateCustom){
						if(strlen($baseColorCustom)){
							$less->setVariables(array('bcolor' => $baseColorCustom));
						}
					}
					elseif($bGenerateAll){
						$less->setVariables(array('bcolor' => $arColor['COMPONENT_VALUE']));
					}

					if($bGenerateAll || ($bCustom && $bGenerateCustom)){
						if(defined('SITE_TEMPLATE_PATH')){
							$themeDirPath = $_SERVER['DOCUMENT_ROOT'].SITE_TEMPLATE_PATH.'/themes/'.strToLower($arColor['VALUE'].($arColor['VALUE'] !== 'CUSTOM' ? '' : '_'.$siteID)).'/';
							if(!is_dir($themeDirPath)) mkdir($themeDirPath, 0755, true);
							$output = $less->compileFile(__DIR__.'/../../css/theme.less', $themeDirPath.'theme.css');
							if($output){
								if($bCustom){
									COption::SetOptionString(self::moduleID, 'LastGeneratedBaseColorCustom', $baseColorCustom, '', $siteID);
								}
								self::GenerateMinCss($themeDirPath.'theme.css');
							}

							if($templateName && $templateName != 'aspro_optimus') {

								$themeDirPath = $_SERVER['DOCUMENT_ROOT'].'/bitrix/templates/aspro_optimus'.'/themes/'.strToLower($colorCode.($colorCode !== 'CUSTOM' ? '' : '_'.$siteID)).'/';
								if(!is_dir($themeDirPath))
									mkdir($themeDirPath, 0755, true);
								$output = $less->compileFile(__DIR__.'/../../css/theme.less', $themeDirPath.'theme.css');
								if($output)
								{
									self::GenerateMinCss($themeDirPath.'theme.css');
								}

							}
						}
					}
				}
				foreach($arBaseBgColors as $arColor){
					if(($bCustom = ($arColor['VALUE'] == 'CUSTOM')) && $bGenerateCustomBG){
						if(strlen($baseColorBGCustom)){
							$footerBgColor = $baseColorBGCustom === "FFFFFF" ? "F6F6F7" : $baseColorBGCustom;
							$less->setVariables(array('bcolor' => '#'.$baseColorBGCustom, 'fcolor' => '#'.$footerBgColor));
						}
					}
					elseif($bGenerateAll){
						$less->setVariables(array('bcolor' => $arColor['COMPONENT_VALUE'], 'fcolor' => $arColor['COMPONENT_VALUE']));
					}

					if($bGenerateAll || ($bCustom && $bGenerateCustomBG)){
						if(defined('SITE_TEMPLATE_PATH')){
							$themeDirPath = $_SERVER['DOCUMENT_ROOT'].SITE_TEMPLATE_PATH.'/bg_color/'.strToLower($arColor['VALUE'].($arColor['VALUE'] !== 'CUSTOM' ? '' : '_'.$siteID)).'/';
							if(!is_dir($themeDirPath)) mkdir($themeDirPath, 0755, true);
							$output = $less->compileFile(__DIR__.'/../../css/bgtheme.less', $themeDirPath.'bgcolors.css');
							if($output){
								if($bCustom){
									COption::SetOptionString(self::moduleID, 'LastGeneratedBaseColorBGCustom', $baseColorBGCustom, '', $siteID);
								}
								self::GenerateMinCss($themeDirPath.'bgcolors.css');
							}

							if($templateName && $templateName != 'aspro_optimus') {

								$themeDirPath = $_SERVER['DOCUMENT_ROOT'].'/bitrix/templates/aspro_optimus'.'/bg_color/'.strToLower($colorCode.($colorCode !== 'CUSTOM' ? '' : '_'.$siteID)).'/';
								if(!is_dir($themeDirPath))
									mkdir($themeDirPath, 0755, true);
								$output = $less->compileFile(__DIR__.'/../../css/bgtheme.less', $themeDirPath.'bgcolors.css');
								if($output)
								{
									self::GenerateMinCss($themeDirPath.'bgcolors.css');
								}

							}
						}
					}
				}
			}
			catch(exception $e){
				echo 'Fatal error: '.$e->getMessage();
				die();
			}

			if($bNeedGenerateAllThemes){
				COption::SetOptionString(self::moduleID, "NeedGenerateThemes", 'N', '', $siteID);
			}
			if($bNeedGenerateCustomTheme){
				COption::SetOptionString(self::moduleID, "NeedGenerateCustomTheme", 'N', '', $siteID);
			}
			if($bNeedGenerateCustomThemeBG){
				COption::SetOptionString(self::moduleID, "NeedGenerateCustomThemeBG", 'N', '', $siteID);
			}
		}
	}

	public static function getChilds($input, &$start = 0, $level = 0){
		$childs = array();

		if(!$level){
			$lastDepthLevel = 1;
			if(is_array($input)){
				foreach($input as $i => $arItem){
					if($arItem["DEPTH_LEVEL"] > $lastDepthLevel){
						if($i > 0){
							$input[$i - 1]["IS_PARENT"] = 1;
						}
					}
					$lastDepthLevel = $arItem["DEPTH_LEVEL"];
				}
			}
		}

		for($i = $start, $count = count($input); $i < $count; ++$i){
			$item = $input[$i];
			if($level > $item['DEPTH_LEVEL'] - 1){
				break;
			}
			elseif(!empty($item['IS_PARENT'])){
				++$i;
				$item['CHILD'] = self::getChilds($input, $i, $level + 1);
				--$i;
			}
			$childs[] = $item;
		}

		$start = $i;
		return $childs;
	}

	function unique_multidim_array($array, $key) {
	    $temp_array = array();
	    $i = 0;
	    $key_array = array();

	    foreach($array as $val) {
	        if (!in_array($val[$key], $key_array)) {
	            $key_array[$i] = $val[$key];
	            $temp_array[$i] = $val;
	        }
	        $i++;
	    }
	    return $temp_array;
	}

	function convertArray($array, $charset){
		global $APPLICATION;
	    if(is_array($array) && $array){
		    foreach($array as $key=>$arVal) {
		    	foreach($arVal as $key2=>$value){
					$array[$key][$key2]=$APPLICATION->ConvertCharset($value, 'UTF-8', $charset);
		    	}
		    }
		}else{
			$array=array();
		}
	    return $array;
	}

	function getChilds2($input, &$start = 0, $level = 0){
		static $arIblockItemsMD5 = array();

		if(!$level){
			$lastDepthLevel = 1;
			if($input && is_array($input)){
				foreach($input as $i => $arItem){
					if($arItem['DEPTH_LEVEL'] > $lastDepthLevel){
						if($i > 0){
							$input[$i - 1]['IS_PARENT'] = 1;
						}
					}
					$lastDepthLevel = $arItem['DEPTH_LEVEL'];
				}
			}
		}

		$childs = array();
		$count = count($input);
		for($i = $start; $i < $count; ++$i){
			$item = $input[$i];
			if(!isset($item)){
				continue;
			}
			if($level > $item['DEPTH_LEVEL'] - 1){
				break;
			}
			else{
				if(!empty($item['IS_PARENT'])){
					$i++;
					$item['CHILD'] = self::getChilds($input, $i, $level+1);
					$i--;
				}

				$childs[] = $item;
			}
		}
		$start = $i;

		if(is_array($childs)){
			foreach($childs as $j => $item){
				if($item['PARAMS']){
					$md5 = md5($item['TEXT'].$item['LINK'].$item['SELECTED'].$item['PERMISSION'].$item['ITEM_TYPE'].$item['IS_PARENT'].serialize($item['ADDITIONAL_LINKS']).serialize($item['PARAMS']));
					if(isset($arIblockItemsMD5[$md5][$item['PARAMS']['DEPTH_LEVEL']])){
						if(isset($arIblockItemsMD5[$md5][$item['PARAMS']['DEPTH_LEVEL']][$level]) || ($item['DEPTH_LEVEL'] === 1 && !$level)){
							unset($childs[$j]);
							continue;
						}
					}
					if(!isset($arIblockItemsMD5[$md5])){
						$arIblockItemsMD5[$md5] = array($item['PARAMS']['DEPTH_LEVEL'] => array($level => true));
					}
					else{
						$arIblockItemsMD5[$md5][$item['PARAMS']['DEPTH_LEVEL']][$level] = true;
					}
				}
			}
		}

		if(!$level){
			$arIblockItemsMD5 = array();
		}

		return $childs;
	}

	public static function formatPriceMatrix($arItem = array()){
		if(isset($arItem['PRICE_MATRIX']) && $arItem['PRICE_MATRIX'])
		{
			$result = false;
			$minPrice = 0;
			foreach($arItem['PRICE_MATRIX']['MATRIX'] as $key => $arPriceGroup)
			{
				foreach($arPriceGroup as $key2 => $arPrice)
				{
					if($arPrice['PRICE'])
					{
						if($arItem['PRICE_MATRIX']['CAN_BUY'] && in_array($key, $arItem['PRICE_MATRIX']['CAN_BUY']) && $arItem['CATALOG_TYPE'] == 1 || $arItem['CATALOG_TYPE'] == 2)
						{
							if (empty($result))
							{
								$minPrice = ($arPrice['DISCOUNT_PRICE'] != $arPrice['PRICE'] ? $arPrice['DISCOUNT_PRICE'] : $arPrice['PRICE']);
								$result = $minPrice;
							}
							else
							{
								$comparePrice = ($arPrice['DISCOUNT_PRICE'] != $arPrice['PRICE'] ? $arPrice['DISCOUNT_PRICE'] : $arPrice['PRICE']);
								if ($minPrice > $comparePrice)
								{
									$minPrice = $comparePrice;
									$result = $minPrice;
								}
							}
							$arItem['MIN_PRICE']['VALUE'] = $result;
							$arItem['MIN_PRICE']['DISCOUNT_VALUE'] = $result;
							$arItem['MIN_PRICE']['PRINT_DISCOUNT_VALUE'] = CCurrencyLang::CurrencyFormat($result, $arPrice['CURRENCY'], true);
							$arItem['MIN_PRICE']['CURRENCY'] = $arPrice['CURRENCY'];
							$arItem['MIN_PRICE']['CAN_BUY'] = 'Y';
						}
						$arItem['PRICE_MATRIX']['MATRIX'][$key][$key2]['PRINT_PRICE'] =  CCurrencyLang::CurrencyFormat($arPrice['PRICE'], $arPrice['CURRENCY'], true);
					}
					if($arPrice['DISCOUNT_PRICE'])
						$arItem['PRICE_MATRIX']['MATRIX'][$key][$key2]['PRINT_DISCOUNT_PRICE'] =  CCurrencyLang::CurrencyFormat($arPrice['DISCOUNT_PRICE'], $arPrice['CURRENCY'], true);
				}
			}
		}
		return $arItem;
	}

	public static function showPriceMatrix($arItem = array(), $arParams, $strMeasure = '', $arAddToBasketData = array()){
		$html = '';
		if(isset($arItem['PRICE_MATRIX']) && $arItem['PRICE_MATRIX'])
		{
			ob_start();?>
				<div class="price_matrix_block">
					<?
					$sDiscountPrices = \Bitrix\Main\Config\Option::get(OPTIMUS_MODULE_ID, 'DISCOUNT_PRICE');
					$emptyPriceText = \Bitrix\Main\Config\Option::get(OPTIMUS_MODULE_ID, "EXPRESSION_FOR_EMPTY_PRICE", "", SITE_ID);
					$arDiscountPrices = array();
					if($sDiscountPrices)
						$arDiscountPrices = array_flip(explode(',', $sDiscountPrices));

					$iCountPriceGroup = count($arItem['PRICE_MATRIX']['COLS']);
					$bPriceRows = (count($arItem['PRICE_MATRIX']['ROWS']) > 1);?>
					<?foreach($arItem['PRICE_MATRIX']['COLS'] as $arPriceGroup):?>
						<?if($iCountPriceGroup > 1):?>
							<div class="price_group <?=$arPriceGroup['XML_ID']?>"><div class="price_name"><?=$arPriceGroup["NAME_LANG"];?></div>
						<?endif;?>
						<div class="price_matrix_wrapper <?=($arDiscountPrices ? (isset($arDiscountPrices[$arPriceGroup['ID']]) ? 'strike_block' : '') : '');?>">
							<?$iCountPriceInterval = count($arItem['PRICE_MATRIX']['MATRIX'][$arPriceGroup['ID']]);?>
							<?foreach($arItem['PRICE_MATRIX']['MATRIX'][$arPriceGroup['ID']] as $key => $arPrice):?>
								<?if($iCountPriceInterval > 1):?>
									<div class="price_wrapper_block">
										<div class="price_interval">
											<?
											$quantity_from = $arItem['PRICE_MATRIX']['ROWS'][$key]['QUANTITY_FROM'];
											$quantity_to = $arItem['PRICE_MATRIX']['ROWS'][$key]['QUANTITY_TO'];
											$text = ($quantity_to ? ($quantity_from ? $quantity_from.'-'.$quantity_to : '<'.$quantity_to ) : '>'.$quantity_from );
											?>
											<?=$text?><?if(($arParams["SHOW_MEASURE"]=="Y") && $strMeasure):?> <?=$strMeasure?><?endif;?>
										</div>
									<?endif;?>
									<?if($arPrice["PRICE"] > $arPrice["DISCOUNT_PRICE"]){?>
										<div class="price" data-currency="<?=$arPrice["CURRENCY"];?>" data-value="<?=$arPrice["DISCOUNT_PRICE"];?>">
											<?if(strlen($arPrice["DISCOUNT_PRICE"])):?>
												<span class="values_wrapper"><?=\Aspro\Functions\CAsproOptimusItem::getCurrentPrice("DISCOUNT_PRICE", $arPrice);?></span><?if(($arParams["SHOW_MEASURE"]=="Y") && $strMeasure && $arPrice["DISCOUNT_PRICE"]):?><span class="price_measure">/<?=$strMeasure?></span><?endif;?>
											<?endif;?>
										</div>
										<?if($arParams["SHOW_OLD_PRICE"]=="Y"):?>
											<div class="price discount" data-currency="<?=$arPrice["CURRENCY"];?>" data-value="<?=$arPrice["PRICE"];?>">
												<span class="values_wrapper"><?=\Aspro\Functions\CAsproOptimusItem::getCurrentPrice("PRICE", $arPrice);?></span>
											</div>
										<?endif;?>
									<?}else{?>
										<div class="price" data-currency="<?=$arPrice["CURRENCY"];?>" data-value="<?=$arPrice["DISCOUNT_PRICE"];?>">
											<span><span class="values_wrapper"><?=\Aspro\Functions\CAsproOptimusItem::getCurrentPrice("DISCOUNT_PRICE", $arPrice);?></span><?if(($arParams["SHOW_MEASURE"]=="Y") && $strMeasure && $arPrice["PRICE"]):?><span class="price_measure">/<?=$strMeasure?></span><?endif;?></span>
											<?if(!$arPrice["PRICE"] && strlen($emptyPriceText)):?>
												<span class="empty_price_text"><?=$emptyPriceText;?></span>
											<?endif;?>
										</div>
									<?}?>
								<?if($iCountPriceInterval > 1):?>
									</div>
								<?else:
									if($arParams['SHOW_DISCOUNT_PERCENT'] == 'Y' && $arPrice["PRICE"] > $arPrice["DISCOUNT_PRICE"]):?>
										<?$ratio = (!$bPriceRows ? $arAddToBasketData["MIN_QUANTITY_BUY"] : 1);
										$diff = $arPrice["PRICE"] - $arPrice["DISCOUNT_PRICE"];
										$percent=round(($diff/$arPrice["PRICE"])*100, 0);?>
										<div class="sale_block">
											<div class="sale_wrapper">
												<?if($percent && $percent<100):?>
													<div class="value">-<span><?=$percent;?></span>%</div>
												<?endif;?>
												<div class="text"><span class="title"><?=GetMessage("CATALOG_ECONOMY");?></span> <span class="values_wrapper" data-currency="<?=$arPrice["CURRENCY"];?>" data-value="<?=(($arPrice["PRICE"] - $arPrice["DISCOUNT_PRICE"])*$ratio);?>"><?=CCurrencyLang::CurrencyFormat($diff, $arPrice['CURRENCY'])?></span></div>
											</div>
										</div>
									<?endif;?>
								<?endif;?>
							<?endforeach;?>
						</div>
						<?if($iCountPriceGroup > 1):?>
							</div>
						<?endif;?>
					<?endforeach;?>
				</div>
			<?$html = ob_get_contents();
			ob_end_clean();

			foreach(GetModuleEvents(OPTIMUS_MODULE_ID, 'OnAsproShowPriceMatrix', true) as $arEvent) // event for manipulation price matrix
				ExecuteModuleEventEx($arEvent, array($arItem, $arParams, $strMeasure, $arAddToBasketData, &$html));
		}
		return $html;
	}

	static function showPriceRangeTop($arItem, $arParams, $mess = ''){
		$html = '';
		if($arItem)
		{
			if(isset($arItem['PRICE_MATRIX']) && $arItem['PRICE_MATRIX'])
			{
				ob_start();
					$rangSelected = $arItem['ITEM_QUANTITY_RANGE_SELECTED'];
					$priceSelected = $arItem['ITEM_PRICE_SELECTED'];
					if(isset($arItem['FIX_PRICE_MATRIX']) && $arItem['FIX_PRICE_MATRIX'])
					{
						$rangSelected = $arItem['FIX_PRICE_MATRIX']['RANGE_SELECT'];
						$priceSelected = $arItem['FIX_PRICE_MATRIX']['PRICE_SELECT'];
					}
					?>
					<div class="with_matrix">
						<div class="price">
							<div class="price_value_block"><?=\Aspro\Functions\CAsproOptimusItem::getCurrentPrice("PRICE", $arItem['ITEM_PRICES'][$priceSelected]);?></div><?if (($arParams['SHOW_MEASURE'] == 'Y') && $arItem['CATALOG_MEASURE_NAME'] && $arItem['ITEM_PRICES'][$priceSelected]["PRICE"]):?><span class="price_measure">/<?=$arItem['CATALOG_MEASURE_NAME']?></span><?endif;?>
						</div>
						<?if($arParams['SHOW_OLD_PRICE'] == 'Y' && $arItem['ITEM_PRICES'][$priceSelected]['BASE_PRICE'] > $arItem['ITEM_PRICES'][$priceSelected]['PRICE']):?>
							<div class="price discount"><?=\Aspro\Functions\CAsproOptimusItem::getCurrentPrice("BASE_PRICE", $arItem['ITEM_PRICES'][$priceSelected]);?></div>
						<?endif;?>
						<?if($arParams['SHOW_DISCOUNT_PERCENT'] == 'Y' && $arItem['ITEM_PRICES'][$priceSelected]['DISCOUNT']):?>
							<div class="sale_block matrix">
								<div class="sale_wrapper">
									<?if($arItem['ITEM_PRICES'][$priceSelected]['PERCENT'] && $arItem['ITEM_PRICES'][$priceSelected]['PERCENT'] < 100):?>
										<div class="value">-<span><?=$arItem['ITEM_PRICES'][$priceSelected]['PERCENT'];?></span>%</div>
									<?endif;?>
									<div class="text">
									<span class="title"><?=$mess;?></span>
									<span class="values_wrapper"><?=\Aspro\Functions\CAsproOptimusItem::getCurrentPrice("DISCOUNT", $arItem['ITEM_PRICES'][$priceSelected]);?></span></div>
									<div class="clearfix"></div>
								</div>
							</div>
						<?endif;?>
					</div>
				<?$html = ob_get_contents();
				ob_end_clean();
				foreach(GetModuleEvents(OPTIMUS_MODULE_ID, 'OnAsproShowPriceRangeTop', true) as $arEvent) // event for manipulation price matrix top
					ExecuteModuleEventEx($arEvent, array($arItem, $arParams, $mess, &$html));
			}
		}
		return $html;
	}

	static function checkPriceRangeExt($arResult = array()){
		$arData = array();
		if($arResult)
		{
			if(isset($arResult['ITEM_PRICE_MODE']) && $arResult['ITEM_PRICE_MODE'] == 'Q')
			{
				$arRang = array();
				$bFound = false;
				$quantity = (int)$arResult['CATALOG_MEASURE_RATIO'];

				$rangSelected = $arResult['ITEM_QUANTITY_RANGE_SELECTED'];
				$priceSelected = $arResult['ITEM_PRICE_SELECTED'];

				foreach($arResult['ITEM_QUANTITY_RANGES'] as $key => $arItemRang)
				{
					$arRang = $arItemRang;
					if($quantity >= (int)$arRang['SORT_FROM'] && (strpos($arRang['SORT_TO'], 'INF') !== false || $quantity <= (int)$arRang['SORT_TO']))
					{
						$bFound = true;
						$rangSelected = $arRang['HASH'];
						break;
					}
				}
				if(!$bFound && ($arRang = self::getMinPriceRangeExt($arResult['ITEM_QUANTITY_RANGES'])))
				{
					$rangSelected = $arRang['HASH'];
				}

				foreach($arResult['ITEM_PRICES'] as $key => $arPrice)
				{
					if ($arPrice['QUANTITY_HASH'] == $rangSelected)
					{
						$priceSelected = $key;
						break;
					}
				}

				$arData = array(
					'RANGE_SELECT' => $rangSelected,
					'PRICE_SELECT' => $priceSelected,
				);
			}
		}
		return $arData;
	}

	static function getMinPriceRangeExt($arPriceRange = array()){
		$arRang = array();
		if($arPriceRange)
		{
			foreach($arPriceRange as $key => $arItemRang)
			{
				if(!$arRang || ((int)$arItemRang['SORT_FROM'] < (int)$arRang['SORT_FROM']))
				{
					$arRang = $arItemRang;
				}
			}
		}
		return $arRang;
	}

	function getSectionChilds($PSID, &$arSections, &$arSectionsByParentSectionID, &$arItemsBySectionID, &$aMenuLinksExt){
		if($arSections && is_array($arSections)){
			foreach($arSections as $arSection){
				if($arSection['IBLOCK_SECTION_ID'] == $PSID){
					$arItem = array($arSection['NAME'], $arSection['SECTION_PAGE_URL'], array(), array('FROM_IBLOCK' => 1, 'DEPTH_LEVEL' => $arSection['DEPTH_LEVEL']));
					$arItem[3]['IS_PARENT'] = (isset($arItemsBySectionID[$arSection['ID']]) || isset($arSectionsByParentSectionID[$arSection['ID']]) ? 1 : 0);
					if($arSection["PICTURE"])
						$arItem[3]["PICTURE"]=$arSection["PICTURE"];
					$aMenuLinksExt[] = $arItem;
					if($arItem[3]['IS_PARENT']){
						// subsections
						self::getSectionChilds($arSection['ID'], $arSections, $arSectionsByParentSectionID, $arItemsBySectionID, $aMenuLinksExt);
						// section elements
						if($arItemsBySectionID[$arSection['ID']] && is_array($arItemsBySectionID[$arSection['ID']])){
							foreach($arItemsBySectionID[$arSection['ID']] as $arItem){
								if(is_array($arItem['DETAIL_PAGE_URL'])){
									if(isset($arItem['CANONICAL_PAGE_URL'])){
										$arItem['DETAIL_PAGE_URL'] = $arItem['CANONICAL_PAGE_URL'];
									}
									else{
										$arItem['DETAIL_PAGE_URL'] = $arItem['DETAIL_PAGE_URL'][key($arItem['DETAIL_PAGE_URL'])];
									}
								}
								$aMenuLinksExt[] = array($arItem['NAME'], $arItem['DETAIL_PAGE_URL'], array(), array('FROM_IBLOCK' => 1, 'DEPTH_LEVEL' => ($arSection['DEPTH_LEVEL'] + 1), 'IS_ITEM' => 1));
							}
						}
					}
				}
			}
		}
	}

	function GetDirMenuParametrs($dir){
		if(strlen($dir)){
			$file = str_replace('//', '/', $dir.'/.section.php');
			if(file_exists($file)){
				@include($file);
				return $arDirProperties;
			}
		}

		return false;
	}


	static function cmpByID($a, $b){
		return ($b['ID'] - $a['ID']);
	}

	static function cmpBySort($a, $b){
		return ($a['SORT'] - $b['SORT']);
	}

	static function cmpByIDFilter($a, $b){
		global $IDFilter;
		$ak = array_search($a['ID'], $IDFilter);
		$bk = array_search($b['ID'], $IDFilter);
		if($ak === $bk){
			return 0;
		}
		else{
			return ($ak > $bk ? 1 : -1);
		}
	}

	function getChainNeighbors($curSectionID, $chainPath){
		static $arSections, $arSectionsIDs, $arSubSections;
		$arResult = array();

		if($arSections === NULL){
			$arSections = $arSectionsIDs = $arSubSections = array();
			$IBLOCK_ID = false;
			$nav = CIBlockSection::GetNavChain(false, $curSectionID, array("ID", "IBLOCK_ID", "IBLOCK_SECTION_ID", "SECTION_PAGE_URL"));
			while($ar = $nav->GetNext()){
				$arSections[] = $ar;
				$arSectionsIDs[] = ($ar["IBLOCK_SECTION_ID"] ? $ar["IBLOCK_SECTION_ID"] : 0);
				$IBLOCK_ID = $ar["IBLOCK_ID"];
			}

			if($arSectionsIDs){
				$resSubSection = CIBlockSection::GetList(array('SORT' => 'ASC'), array("ACTIVE" => "Y", "GLOBAL_ACTIVE" => "Y", "IBLOCK_ID" => $IBLOCK_ID, "SECTION_ID" => $arSectionsIDs), false, array("ID", "NAME", "IBLOCK_SECTION_ID", "SECTION_PAGE_URL"));
				while($arSubSection = $resSubSection->GetNext()){
					$arSubSection["IBLOCK_SECTION_ID"] = ($arSubSection["IBLOCK_SECTION_ID"] ? $arSubSection["IBLOCK_SECTION_ID"] : 0);
					$arSubSections[$arSubSection["IBLOCK_SECTION_ID"]][] = $arSubSection;
				}

				if(in_array(0, $arSectionsIDs)){
					$resSubSection = CIBlockSection::GetList(array('SORT' => 'ASC'), array("ACTIVE" => "Y", "GLOBAL_ACTIVE" => "Y", "IBLOCK_ID" => $IBLOCK_ID, "SECTION_ID" => false), false, array("ID", "NAME", "IBLOCK_SECTION_ID", "SECTION_PAGE_URL"));
					while($arSubSection = $resSubSection->GetNext()){
						$arSubSections[$arSubSection["IBLOCK_SECTION_ID"]][] = $arSubSection;
					}
				}
			}
		}

		if($arSections && strlen($chainPath)){
			foreach($arSections as $arSection){
				if($arSection["SECTION_PAGE_URL"] == $chainPath){
					if($arSubSections[$arSection["IBLOCK_SECTION_ID"]]){
						foreach($arSubSections[$arSection["IBLOCK_SECTION_ID"]] as $arSubSection){
							if($curSectionID !== $arSubSection["ID"]){
								$arResult[] = array("NAME" => $arSubSection["NAME"], "LINK" => $arSubSection["SECTION_PAGE_URL"]);
							}
						}
					}
					break;
				}
			}
		}

		return $arResult;
	}

	function drawFormField($FIELD_SID, $arQuestion){
		?>
		<?$arQuestion["HTML_CODE"] = str_replace('name=', 'data-sid="'.$FIELD_SID.'" name=', $arQuestion["HTML_CODE"]);?>
		<?$arQuestion["HTML_CODE"] = str_replace('left', '', $arQuestion["HTML_CODE"]);?>
		<?$arQuestion["HTML_CODE"] = str_replace('size="0"', '', $arQuestion["HTML_CODE"]);?>
		<?if($arQuestion['STRUCTURE'][0]['FIELD_TYPE'] == 'hidden'):?>
			<?=$arQuestion["HTML_CODE"];?>
		<?else:?>
			<div class="form-control">
				<label><span><?=$arQuestion["CAPTION"]?><?=($arQuestion["REQUIRED"] == "Y" ? '&nbsp;<span class="star">*</span>' : '')?></span></label>
				<?
				if(is_array($arResult["FORM_ERRORS"]) && array_key_exists($FIELD_SID, $arResult['FORM_ERRORS']))
					$arQuestion["HTML_CODE"] = str_replace('class="', 'class="error ', $arQuestion["HTML_CODE"]);

				if($arQuestion["REQUIRED"] == "Y")
					$arQuestion["HTML_CODE"] = str_replace('name=', 'required name=', $arQuestion["HTML_CODE"]);

				if($arQuestion["STRUCTURE"][0]["FIELD_TYPE"] == "email")
					$arQuestion["HTML_CODE"] = str_replace('type="text"', 'type="email" placeholder="mail@domen.com"', $arQuestion["HTML_CODE"]);

				if((strpos($arQuestion["HTML_CODE"], "phone") !== false) || (strpos(strToLower($FIELD_SID), "phone") !== false))
					$arQuestion["HTML_CODE"] = str_replace('type="text"', 'type="tel"', $arQuestion["HTML_CODE"]);
				?>
				<?=$arQuestion["HTML_CODE"]?>
			</div>
		<?endif;?>
		<?
	}

	function GetValidFormIDForSite(&$form_id){
		if(!is_numeric($form_id) && !in_array($form_id, array('auth', 'one_click_buy'))){
			CModule::IncludeModule('form');
			$rsForm = CForm::GetList($by = "id", $order = "asc", array("ACTIVE" => "Y", "SID" => $form_id, "SITE" => array(SITE_ID)), $is_filtered);
			if($item = $rsForm->Fetch()){
				$form_id = $item["ID"];
			}
		}

		return $form_id;
	}

	function CheckTypeCount($totalCount){
		if(is_float($totalCount)){
			return floatval($totalCount);
		}
		else{
			return intval($totalCount);
		}
	}

	function GetTotalCount(&$arItem){
		$totalCount = 0;
		if($arItem["OFFERS"])
		{
			foreach($arItem["OFFERS"] as $arOffer)
				$totalCount += $arOffer["CATALOG_QUANTITY"];

		}
		elseif($arItem["PRICES"])
		{
			$totalCount = ( $arItem["~CATALOG_QUANTITY"] != $arItem["CATALOG_QUANTITY"] ? $arItem["~CATALOG_QUANTITY"] : $arItem["CATALOG_QUANTITY"] );
		}
		else
		{
			$totalCount = ( $arItem["~CATALOG_QUANTITY"] != $arItem["CATALOG_QUANTITY"] ? $arItem["~CATALOG_QUANTITY"] : $arItem["CATALOG_QUANTITY"] );
		}

		foreach(GetModuleEvents(OPTIMUS_MODULE_ID, 'OnAsproGetTotalQuantity', true) as $arEvent) // event for manipulation total quantity
			ExecuteModuleEventEx($arEvent, array($arItem, &$totalCount));

		return self::CheckTypeCount($totalCount);
	}

	function GetQuantityArray($totalCount, $arItemIDs = array(), $useStoreClick="N"){
		static $arQuantityOptions, $arQuantityRights;
		if($arQuantityOptions === NULL){
			$arQuantityOptions = array(
				"USE_WORD_EXPRESSION" => COption::GetOptionString("aspro.optimus", "USE_WORD_EXPRESSION", "Y", SITE_ID),
				"MAX_AMOUNT" => COption::GetOptionString("aspro.optimus", "MAX_AMOUNT", "10", SITE_ID),
				"MIN_AMOUNT" => COption::GetOptionString("aspro.optimus", "MIN_AMOUNT", "2", SITE_ID),
				"EXPRESSION_FOR_MIN" => COption::GetOptionString("aspro.optimus", "EXPRESSION_FOR_MIN", GetMessage("EXPRESSION_FOR_MIN_DEFAULT"), SITE_ID),
				"EXPRESSION_FOR_MID" => COption::GetOptionString("aspro.optimus", "EXPRESSION_FOR_MID", GetMessage("EXPRESSION_FOR_MID_DEFAULT"), SITE_ID),
				"EXPRESSION_FOR_MAX" => COption::GetOptionString("aspro.optimus", "EXPRESSION_FOR_MAX", GetMessage("EXPRESSION_FOR_MAX_DEFAULT"), SITE_ID),
				"EXPRESSION_FOR_EXISTS" => COption::GetOptionString("aspro.optimus", "EXPRESSION_FOR_EXISTS", GetMessage("EXPRESSION_FOR_EXISTS_DEFAULT"), SITE_ID),
				"EXPRESSION_FOR_NOTEXISTS" => COption::GetOptionString("aspro.optimus", "EXPRESSION_FOR_NOTEXISTS", GetMessage("EXPRESSION_FOR_NOTEXISTS_DEFAULT"), SITE_ID),
				"SHOW_QUANTITY_FOR_GROUPS" => (($tmp = COption::GetOptionString("aspro.optimus", "SHOW_QUANTITY_FOR_GROUPS", "", SITE_ID)) ? explode(",", $tmp) : array()),
				"SHOW_QUANTITY_COUNT_FOR_GROUPS" => (($tmp = COption::GetOptionString("aspro.optimus", "SHOW_QUANTITY_COUNT_FOR_GROUPS", "", SITE_ID)) ? explode(",", $tmp) : array()),
			);
			$arQuantityRights = array(
				"SHOW_QUANTITY" => false,
				"SHOW_QUANTITY_COUNT" => false,
			);

			global $USER;
			$res = CUser::GetUserGroupList($USER->GetID());
			while ($arGroup = $res->Fetch()){
				if(in_array($arGroup["GROUP_ID"], $arQuantityOptions["SHOW_QUANTITY_FOR_GROUPS"])){
					$arQuantityRights["SHOW_QUANTITY"] = true;
				}
				if(in_array($arGroup["GROUP_ID"], $arQuantityOptions["SHOW_QUANTITY_COUNT_FOR_GROUPS"])){
					$arQuantityRights["SHOW_QUANTITY_COUNT"] = true;
				}
			}
		}

		$indicators = 0;
		$totalAmount = $totalText = $totalHTML = $totalHTMLs = '';

		if($arQuantityRights["SHOW_QUANTITY"]){
			if($totalCount > $arQuantityOptions["MAX_AMOUNT"]){
				$indicators = 3;
				$totalAmount = $arQuantityOptions["EXPRESSION_FOR_MAX"];
			}
			elseif($totalCount < $arQuantityOptions["MIN_AMOUNT"] && $totalCount > 0){
				$indicators = 1;
				$totalAmount = $arQuantityOptions["EXPRESSION_FOR_MIN"];
			}
			else{
				$indicators = 2;
				$totalAmount = $arQuantityOptions["EXPRESSION_FOR_MID"];
			}

			if($totalCount > 0){
				if($arQuantityRights["SHOW_QUANTITY_COUNT"]){
					$totalHTML = '<span class="first'.($indicators >= 1 ? ' r' : '').'"></span><span class="'.($indicators >= 2 ? ' r' : '').'"></span><span class="last'.($indicators >= 3 ? ' r' : '').'"></span>';
				}
				else{
					$totalHTML = '<span class="first r"></span>';
				}
			}
			else{
				$totalHTML = '<span class="null"></span>';
			}

			//$totalText = ($totalCount > 0 ? $arQuantityOptions["EXPRESSION_FOR_EXISTS"] : $arQuantityOptions["EXPRESSION_FOR_NOTEXISTS"]);
			if($totalCount > 0){
				$totalText = $arQuantityOptions["EXPRESSION_FOR_EXISTS"];
			}else{
				if($useStoreClick=="Y"){
					$totalText = "<span class='store_view'>".$arQuantityOptions["EXPRESSION_FOR_NOTEXISTS"]."</span>";
				}else{
					$totalText = $arQuantityOptions["EXPRESSION_FOR_NOTEXISTS"];
				}
			}

			if($arQuantityRights["SHOW_QUANTITY_COUNT"] && $totalCount > 0){
				if($arQuantityOptions["USE_WORD_EXPRESSION"] == "Y"){
					if(strlen($totalAmount)){
						if($useStoreClick=="Y"){
							$totalText = "<span class='store_view'>".$totalAmount."</span>";
						}else{
							$totalText = $totalAmount;
						}
					}
				}
				else{
					if($useStoreClick=="Y"){
						$totalText .= (strlen($totalText) ? " <span class='store_view'>(".$totalCount.")</span>" : "<span class='store_view'>".$totalCount."</span>");
					}else{
						$totalText .= (strlen($totalText) ? " (".$totalCount.")" : $totalCount);
					}
				}
			}
			$totalHTMLs ='<div class="item-stock" '.($arItemIDs["STORE_QUANTITY"] ? "id=".$arItemIDs["STORE_QUANTITY"] : "").'>';
			$totalHTMLs .= '<span class="icon '.$arClass[1].($totalCount > 0 ? 'stock' : ' order').'"></span><span class="value">'.$totalText.'</span>';
			$totalHTMLs .='</div>';
		}

		$arOptions = array("OPTIONS" => $arQuantityOptions, "RIGHTS" => $arQuantityRights, "TEXT" => $totalText, "HTML" => $totalHTMLs);

		foreach(GetModuleEvents(OPTIMUS_MODULE_ID, 'OnAsproGetTotalQuantityBlock', true) as $arEvent) // event for manipulation store quantity block
			ExecuteModuleEventEx($arEvent, array($totalCount, &$arOptions));

		return $arOptions;
	}

	function GetAvailiableStore($totalCount = 0, $arItemIDs=array(), $detail=false){
		static $arQuantityOptions;
		if($arQuantityOptions === NULL){
			$arQuantityOptions = array(
				"EXPRESSION_FOR_EXISTS" => COption::GetOptionString("aspro.optimus", "EXPRESSION_FOR_EXISTS", GetMessage("EXPRESSION_FOR_EXISTS_DEFAULT"), SITE_ID),
				"EXPRESSION_FOR_NOTEXISTS" => COption::GetOptionString("aspro.optimus", "EXPRESSION_FOR_NOTEXISTS", GetMessage("EXPRESSION_FOR_NOTEXISTS_DEFAULT"), SITE_ID),
			);
		}
		$totalHTML='<div class="item-stock" '.($arItemIDs["STORE_QUANTITY"] ? "id=".$arItemIDs["STORE_QUANTITY"] : "").'>';
		if($totalCount){
			$totalHTML.='<span class="icon stock"></span><span>'.$arQuantityOptions["EXPRESSION_FOR_EXISTS"];
			if($detail=="Y"){
				$totalHTML.='<span class="store_link"> ('.$totalCount.')</span>';
			}else{
				$totalHTML.=' ('.$totalCount.')';
			}
			$totalHTML.='</span>';
		}else{
			$totalHTML.='<span class="icon order"></span><span>'.$arQuantityOptions["EXPRESSION_FOR_NOTEXISTS"].'</span>';
		}
		$totalHTML.='</div>';

		return array( "OPTIONS" => $arQuantityOptions, "HTML" => $totalHTML );
	}

	function GetPropertyViewType($IBLOCK_ID){
		global $DB;
		$IBLOCK_ID = intval($IBLOCK_ID);
		$SECTION_ID=64;
		// $IBLOCK_ID = 15;
        $result = array();
		/*$rs = $DB->Query($s = "
			SELECT
				B.SECTION_PROPERTY,
				BP.ID PROPERTY_ID,
				BSP.SECTION_ID LINK_ID,
				BSP.SMART_FILTER,
				BSP.DISPLAY_TYPE,
				BSP.DISPLAY_EXPANDED,
				BSP.FILTER_HINT,
				BP.SORT,
				BP.PROPERTY_TYPE,
				BP.USER_TYPE
			FROM
				b_iblock B
				INNER JOIN b_iblock_property BP ON BP.IBLOCK_ID = B.ID
				INNER JOIN b_iblock_section_property BSP ON  BSP.PROPERTY_ID = BP.ID
			WHERE
				B.ID = ".$IBLOCK_ID."
			ORDER BY
				BP.SORT ASC, BP.ID ASC
		");*/
		$rs = $DB->Query($s = "
			SELECT
                    B.SECTION_PROPERTY,
                    BP.ID PROPERTY_ID,
                    BSP.SECTION_ID LINK_ID,
                    BSP.SMART_FILTER,
                    BSP.DISPLAY_TYPE,
                    BSP.DISPLAY_EXPANDED,
                    BSP.FILTER_HINT,
                    BP.SORT,
                    BS.LEFT_MARGIN,
                    BS.NAME LINK_TITLE,
                    BP.PROPERTY_TYPE,
                    BP.USER_TYPE
                FROM
                    b_iblock B
                    INNER JOIN b_iblock_property BP ON BP.IBLOCK_ID = B.ID
                    INNER JOIN b_iblock_section M ON M.ID = ".$SECTION_ID."
                    INNER JOIN b_iblock_section BS ON BS.IBLOCK_ID = M.IBLOCK_ID
                        AND M.LEFT_MARGIN >= BS.LEFT_MARGIN
                        AND M.RIGHT_MARGIN <= BS.RIGHT_MARGIN
                    INNER JOIN b_iblock_section_property BSP ON BSP.IBLOCK_ID = BS.IBLOCK_ID AND BSP.SECTION_ID = BS.ID AND BSP.PROPERTY_ID = BP.ID
                WHERE
                    B.ID = ".$IBLOCK_ID."
                ORDER BY
                    BP.SORT ASC, BP.ID ASC, BS.LEFT_MARGIN DESC
		");
		while ($ar = $rs->Fetch()){
			$result[$ar["PROPERTY_ID"]] = array(
				"PROPERTY_ID" => $ar["PROPERTY_ID"],
				"SMART_FILTER" => $ar["SMART_FILTER"],
				"DISPLAY_TYPE" => $ar["DISPLAY_TYPE"],
				"DISPLAY_EXPANDED" => $ar["DISPLAY_EXPANDED"],
				"FILTER_HINT" => $ar["FILTER_HINT"],
				"INHERITED_FROM" => $ar["LINK_ID"],
				"SORT" => $ar["SORT"],
				"PROPERTY_TYPE" => $ar["PROPERTY_TYPE"],
			);
		}
		return $result;
	}

	function GetSKUPropsArray(&$arSkuProps, $iblock_id=0, $type_view="list", $hide_title_props="N", $group_iblock_id="N", $arItem = array(), $offerShowPreviewPictureProps = array()){
		$arSkuTemplate = array();
		$class_title=($hide_title_props=="Y" ? "hide_class" : "show_class");
		$class_title.=' bx_item_section_name';

		if($iblock_id){
			$arPropsSku=CIBlockSectionPropertyLink::GetArray($iblock_id);
			if($arPropsSku){
				foreach ($arSkuProps as $key=>$arProp){
					if($arPropsSku[$arProp["ID"]]){
						$arSkuProps[$key]["DISPLAY_TYPE"]=$arPropsSku[$arProp["ID"]]["DISPLAY_TYPE"];
					}
				}
			}
		}

		$bTextViewProp = (Option::get(self::moduleID, "VIEW_TYPE_HIGHLOAD_PROP", "N", SITE_ID) == "Y");

		$arCurrentOffer = $arItem['OFFERS'][$arItem['OFFERS_SELECTED']];
		$j = 0;
		$arFilter = $arShowValues = array();

		/*get correct values*/
		foreach ($arSkuProps as $key => $arProp){
			$strName = 'PROP_'.$arProp['ID'];
			$arShowValues = self::GetRowValues($arFilter, $strName, $arItem);

			if(in_array($arCurrentOffer['TREE'][$strName], $arShowValues))
			{
				$arFilter[$strName] = $arCurrentOffer['TREE'][$strName];
			}
			else
			{
				$arFilter[$strName] = $arShowValues[0];
			}

			$arCanBuyValues = $tmpFilter = array();
			$tmpFilter = $arFilter;
			foreach($arShowValues as $value)
			{
				$tmpFilter[$strName] = $value;
				if(self::GetCanBuy($tmpFilter, $arItem))
				{
					$arCanBuyValues[] = $value;
				}
			}

			$arSkuProps[$key] = self::UpdateRow($arFilter[$strName], $arShowValues, $arCanBuyValues, $arProp, $type_view);

		}
		/**/
		?>

		<?
		if($group_iblock_id=="Y"){
			foreach ($arSkuProps as $iblockId => $skuProps){
				$arSkuTemplate[$iblockId] = array();
				foreach ($skuProps as $key=>&$arProp){
					$templateRow = '';
					$class_title.= (($arProp["HINT"] && $arProp["SHOW_HINTS"] == "Y") ? ' whint char_name' : '');
					$hint_block = (($arProp["HINT"] && $arProp["SHOW_HINTS"]=="Y") ? '<div class="hint"><span class="icon"><i>?</i></span><div class="tooltip">'.$arProp["HINT"].'</div></div>' : '');

					if($arProp['VALUES'])
					{
						foreach($arProp['VALUES'] as $propKey => $arOneValue)
						{
							$arProp['NAME'] = htmlspecialcharsex($arProp['NAME']);

							if($arOneValue['CLASS'] && strpos($arOneValue['CLASS'], 'active') !== false)
							{
								$arProp['TITLE'] = $arProp['NAME'].': '.$arOneValue['NAME'];
								$arProp['VALUE'] = $arOneValue['NAME'];
							}
						}
					}

					if(($arProp["DISPLAY_TYPE"]=="P" || $arProp["DISPLAY_TYPE"]=="R" ) && $type_view!= 'block' ){
						$templateRow .= '<div class="bx_item_detail_size" id="#ITEM#_prop_'.$arProp['ID'].'_cont" data-id="'.$arProp['ID'].'">'.
		'<span class="'.$class_title.'">'.$hint_block.($arProp['TITLE'] ? $arProp['TITLE'] : $arProp['NAME']).'</span>'.
		'<div class="bx_size_scroller_container form-control bg"><div class="bx_size"><select id="#ITEM#_prop_'.$arProp['ID'].'_list" class="list_values_wrapper">';
						foreach ($arProp['VALUES'] as $arOneValue){
							//if($arOneValue['ID']>0){
								$arOneValue['NAME'] = htmlspecialcharsbx($arOneValue['NAME']);
								$templateRow .= '<option '.$arOneValue['SELECTED'].' '.$arOneValue['DISABLED'].' data-treevalue="'.$arProp['ID'].'_'.$arOneValue['ID'].'" data-showtype="select" data-onevalue="'.$arOneValue['ID'].'" ';
								if($arProp["DISPLAY_TYPE"]=="R"){
									$templateRow .= 'data-img_src="'.$arOneValue["PICT"]["SRC"].'" ';
								}
								$templateRow .= 'title="'.$arProp['NAME'].': '.$arOneValue['NAME'].'">';
								$templateRow .= '<span class="cnt">'.$arOneValue['NAME'].'</span>';
								$templateRow .= '</option>';
							//}
						}
						$templateRow .= '</select></div>'.
		'</div></div>';
					}elseif ('TEXT' == $arProp['SHOW_MODE']){
						$templateRow .= '<div class="bx_item_detail_size" id="#ITEM#_prop_'.$arProp['ID'].'_cont" data-id="'.$arProp['ID'].'">'.
		'<span class="'.$class_title.'">'.$hint_block.($arProp['TITLE'] ? $arProp['TITLE'] : $arProp['NAME']).'</span>'.
		'<div class="bx_size_scroller_container"><div class="bx_size"><ul id="#ITEM#_prop_'.$arProp['ID'].'_list" class="list_values_wrapper">';
						foreach ($arProp['VALUES'] as $arOneValue){
							//if($arOneValue['ID']>0){
								$arOneValue['NAME'] = htmlspecialcharsbx($arOneValue['NAME']);
								$templateRow .= '<li class="item '.$arOneValue['CLASS'].'" '.$arOneValue['STYLE'].' data-treevalue="'.$arProp['ID'].'_'.$arOneValue['ID'].'" data-showtype="li" data-onevalue="'.$arOneValue['ID'].'" title="'.$arProp['NAME'].': '.$arOneValue['NAME'].'"><i></i><span class="cnt">'.$arOneValue['NAME'].'</span></li>';
							//}
						}
						$templateRow .= '</ul></div>'.
		'</div></div>';
					}elseif ('PICT' == $arProp['SHOW_MODE']){

						$arCurrentTree = array();
						if($offerShowPreviewPictureProps && is_array($offerShowPreviewPictureProps)){
							if(in_array($arProp['CODE'], $offerShowPreviewPictureProps)){
								if($arCurrentOffer && $arCurrentOffer['TREE']){
									$arCurrentTree = $arCurrentOffer['TREE'];
								}
							}
						}

						$isHasPicture = true;
						foreach($arProp['VALUES'] as &$arOneValue){
							$boolOneSearch = false;
							if($arCurrentTree && $arOneValue['ID'] != 0){
								$arRowTree = $arCurrentTree;
								$arRowTree['PROP_'.$arProp['ID']] = $arOneValue['ID'];

								foreach($arItem['OFFERS'] as &$arOffer){
									$boolOneSearch = true;
									foreach($arRowTree as $rkey => $rval){
										if($rval !== $arOffer['TREE'][$rkey]){
											$boolOneSearch = false;
											break;
										}
									}
									if($boolOneSearch){
										if($arOffer['PREVIEW_PICTURE_FIELD'] && is_array($arOffer['PREVIEW_PICTURE_FIELD']) && $arOffer['PREVIEW_PICTURE_FIELD']['SRC']){
											$arOneValue['NEW_PICT'] = $arOffer['PREVIEW_PICTURE_FIELD'];
										}
										else{
											$boolOneSearch = false;
										}
										break;
									}
								}
								unset($arOffer);
							}

							if(!$boolOneSearch){
								//if($arOneValue['ID']>0){
									if(!isset($arOneValue['PICT']['SRC']) || !$arOneValue['PICT']['SRC'])
									{
										if(!$bTextViewProp)
										{
											$arOneValue['PICT']['SRC'] = SITE_TEMPLATE_PATH.'/images/no_photo_small.png';
											$arOneValue['NO_PHOTO'] = 'Y';
										}
										else
										{
											$isHasPicture = false;
										}
									}
								//}
							}
						}
						unset($arOneValue);
						
						if($isHasPicture)
						{
							$templateRow .= '<div class="bx_item_detail_scu" '.$arProp['STYLE'].' id="#ITEM#_prop_'.$arProp['ID'].'_cont" data-display_type="LI" data-id="'.$arProp['ID'].'">'.
		'<span class="'.$class_title.'">'.$hint_block.'<span>'.htmlspecialcharsex($arProp['NAME']).'</span></span>'.
		'<div class="bx_scu_scroller_container"><div class="bx_scu"><ul id="#ITEM#_prop_'.$arProp['ID'].'_list" class="list_values_wrapper">';
						}
						else
						{
							$templateRow .= '<div class="bx_item_detail_size" '.$arProp['STYLE'].' id="#ITEM#_prop_'.$arProp['ID'].'_cont" data-display_type="LI" data-id="'.$arProp['ID'].'">'.
		'<span class="'.$class_title.'">'.htmlspecialcharsex($arProp['NAME']).'</span>'.
		'<div class="bx_size_scroller_container"><div class="bx_size"><ul id="#ITEM#_prop_'.$arProp['ID'].'_list" class="list_values_wrapper">';
						}

						foreach ($arProp['VALUES'] as $arOneValue){
							//if($arOneValue['ID']>0){
								$arOneValue['NAME'] = htmlspecialcharsbx($arOneValue['NAME']);
								if(isset($arOneValue['PICT']['SRC']) && $arOneValue['PICT']['SRC'])
								if($isHasPicture && ($arOneValue['NEW_PICT'] || (isset($arOneValue['PICT']['SRC']) && $arOneValue['PICT']['SRC'])))
								{									
									$str = '<span class="cnt1"><span class="cnt_item'.($arOneValue['NEW_PICT'] ? ' pp' : '').'" style="background-image:url(\''.($arOneValue['NEW_PICT'] ? $arOneValue['NEW_PICT']['SRC'] : $arOneValue['PICT']['SRC']).'\');" data-obgi="url(\''.$arOneValue['PICT']['SRC'].'\')" title="'.$arProp['NAME'].': '.$arOneValue['NAME'].'"></span></span>';
									if(isset($arOneValue['NO_PHOTO']) && $arOneValue['NO_PHOTO'] == 'Y')
										$str = '<span class="cnt1 nf"><span class="cnt_item" title="'.$arProp['NAME'].': '.$arOneValue['NAME'].'"><span class="bg" style="background-image:url(\''.$arOneValue['PICT']['SRC'].'\');"></span></span></span>';
									$templateRow .= '<li class="item '.$arOneValue['CLASS'].'" '.$arOneValue['STYLE'].' data-treevalue="'.$arProp['ID'].'_'.$arOneValue['ID'].'" data-showtype="li" data-onevalue="'.$arOneValue['ID'].'"><i title="'.$arProp['NAME'].': '.$arOneValue['NAME'].'"></i>'.$str.'</li>';

								}
								else
								{									
									//$templateRow .= '<li class="item '.$arOneValue['CLASS'].'" '.$arOneValue['STYLE'].' data-treevalue="'.$arProp['ID'].'_'.$arOneValue['ID'].'" data-showtype="li" data-onevalue="'.$arOneValue['ID'].'" title="'.$arProp['NAME'].': '.$arOneValue['NAME'].'"><i></i><span class="cnt1"><span class="cnt_item" style="background-image:url(\''.SITE_TEMPLATE_PATH.'/images/no_photo_small.png\');" title="'.$arProp['NAME'].': '.$arOneValue['NAME'].'"></span></span></li>';
									$templateRow .= '<li class="item '.$arOneValue['CLASS'].'" '.$arOneValue['STYLE'].' data-treevalue="'.$arProp['ID'].'_'.$arOneValue['ID'].'" data-showtype="li" data-onevalue="'.$arOneValue['ID'].'" title="'.$arProp['NAME'].': '.$arOneValue['NAME'].'"><i></i><span class="cnt">'.$arOneValue['NAME'].'</span></li>';
								}
							//}
						}
						$templateRow .= '</ul></div>'.
		'</div></div>';
					}
					$arSkuTemplate[$iblockId][$arProp['CODE']] = $templateRow;
				}
			}
		}else{
			foreach ($arSkuProps as $key=>&$arProp){
				$templateRow = '';
				$class_title.= (($arProp["HINT"] && $arProp["SHOW_HINTS"] == "Y") ? ' whint char_name' : '');
				$hint_block = (($arProp["HINT"] && $arProp["SHOW_HINTS"]=="Y") ? '<div class="hint"><span class="icon"><i>?</i></span><div class="tooltip">'.$arProp["HINT"].'</div></div>' : '');

			
				if($arProp['VALUES'])
				{
					foreach($arProp['VALUES'] as $propKey => $arOneValue)
					{
						$arProp['NAME'] = htmlspecialcharsex($arProp['NAME']);

						if($arOneValue['CLASS'] && strpos($arOneValue['CLASS'], 'active') !== false)
						{
							$arProp['TITLE'] = $arProp['NAME'].': '.$arOneValue['NAME'];
							$arProp['VALUE'] = $arOneValue['NAME'];
						}
					}
				}

				if(($arProp["DISPLAY_TYPE"]=="P" || $arProp["DISPLAY_TYPE"]=="R" ) && $type_view!= 'block' ){
					$templateRow .= '<div class="bx_item_detail_size" id="#ITEM#_prop_'.$arProp['ID'].'_cont" data-id="'.$arProp['ID'].'">'.
	'<span class="'.$class_title.'">'.$hint_block.($arProp['TITLE'] ? $arProp['TITLE'] : $arProp['NAME']).'</span>'.
	'<div class="bx_size_scroller_container form-control bg"><div class="bx_size"><select id="#ITEM#_prop_'.$arProp['ID'].'_list" class="list_values_wrapper">';
					foreach ($arProp['VALUES'] as $arOneValue){
						//if($arOneValue['ID']>0){
							$arOneValue['NAME'] = htmlspecialcharsbx($arOneValue['NAME']);
							$templateRow .= '<option '.$arOneValue['SELECTED'].' '.$arOneValue['DISABLED'].' data-treevalue="'.$arProp['ID'].'_'.$arOneValue['ID'].'" data-showtype="select" data-onevalue="'.$arOneValue['ID'].'" ';
							if($arProp["DISPLAY_TYPE"]=="R"){
								$templateRow .= 'data-img_src="'.$arOneValue["PICT"]["SRC"].'" ';
							}
							$templateRow .= 'title="'.$arProp['NAME'].': '.$arOneValue['NAME'].'">';
							$templateRow .= '<span class="cnt">'.$arOneValue['NAME'].'</span>';
							$templateRow .= '</option>';
						//}
					}
					$templateRow .= '</select></div>'.
	'</div></div>';
				}elseif ('TEXT' == $arProp['SHOW_MODE']){
					$templateRow .= '<div class="bx_item_detail_size" id="#ITEM#_prop_'.$arProp['ID'].'_cont" data-id="'.$arProp['ID'].'">'.
	'<span class="'.$class_title.'">'.$hint_block.($arProp['TITLE'] ? $arProp['TITLE'] : $arProp['NAME']).'</span>'.
	'<div class="bx_size_scroller_container"><div class="bx_size"><ul id="#ITEM#_prop_'.$arProp['ID'].'_list" class="list_values_wrapper">';
					foreach ($arProp['VALUES'] as $arOneValue){
						//if($arOneValue['ID']>0){
							$arOneValue['NAME'] = htmlspecialcharsbx($arOneValue['NAME']);
							$templateRow .= '<li class="item '.$arOneValue['CLASS'].'" '.$arOneValue['STYLE'].' data-treevalue="'.$arProp['ID'].'_'.$arOneValue['ID'].'" data-showtype="li" data-onevalue="'.$arOneValue['ID'].'" title="'.$arProp['NAME'].': '.$arOneValue['NAME'].'"><i></i><span class="cnt">'.$arOneValue['NAME'].'</span></li>';
						//}
					}
					$templateRow .= '</ul></div>'.
	'</div></div>';
				}elseif ('PICT' == $arProp['SHOW_MODE']){

					$arCurrentTree = array();
					if($offerShowPreviewPictureProps && is_array($offerShowPreviewPictureProps)){
						if(in_array($arProp['CODE'], $offerShowPreviewPictureProps)){
							if($arCurrentOffer && $arCurrentOffer['TREE']){
								$arCurrentTree = $arCurrentOffer['TREE'];
							}
						}
					}

					$isHasPicture = true;
					foreach($arProp['VALUES'] as &$arOneValue){
						$boolOneSearch = false;
						if($arCurrentTree && $arOneValue['ID'] != 0){
							$arRowTree = $arCurrentTree;
							$arRowTree['PROP_'.$arProp['ID']] = $arOneValue['ID'];

							foreach($arItem['OFFERS'] as &$arOffer){
								$boolOneSearch = true;
								foreach($arRowTree as $rkey => $rval){
									if($rval !== $arOffer['TREE'][$rkey]){
										$boolOneSearch = false;
										break;
									}
								}
								if($boolOneSearch){
									if($arOffer['PREVIEW_PICTURE_FIELD'] && is_array($arOffer['PREVIEW_PICTURE_FIELD']) && $arOffer['PREVIEW_PICTURE_FIELD']['SRC']){
										$arOneValue['NEW_PICT'] = $arOffer['PREVIEW_PICTURE_FIELD'];
									}
									else{
										$boolOneSearch = false;
									}
									break;
								}
							}
							unset($arOffer);
						}

						if(!$boolOneSearch){
							//if($arOneValue['ID']>0){
								if(!isset($arOneValue['PICT']['SRC']) || !$arOneValue['PICT']['SRC'])
								{
									if(!$bTextViewProp)
									{
										$arOneValue['PICT']['SRC'] = SITE_TEMPLATE_PATH.'/images/no_photo_small.png';
										$arOneValue['NO_PHOTO'] = 'Y';
									}
									else
									{
										$isHasPicture = false;
									}
								}
							//}
						}

						foreach($arItem['OFFERS'] as &$arOffer)
						{
							if($arRowTree['PROP_'.$arProp['ID']] == $arOffer['TREE']['PROP_'.$arProp['ID']] && !$boolOneSearch)
							{
								if($arOffer['PREVIEW_PICTURE_FIELD'] && is_array($arOffer['PREVIEW_PICTURE_FIELD']) && $arOffer['PREVIEW_PICTURE_FIELD']['SRC'])
									$arOneValue['NEW_PICT'] = $arOffer['PREVIEW_PICTURE_FIELD'];
								break;
							}
						}
					}
					unset($arOneValue);
					
					if($isHasPicture)
					{
						$templateRow .= '<div class="bx_item_detail_scu" '.$arProp['STYLE'].' id="#ITEM#_prop_'.$arProp['ID'].'_cont" data-display_type="LI" data-id="'.$arProp['ID'].'">'.
	'<span class="'.$class_title.'">'.$hint_block.'<span>'.htmlspecialcharsex($arProp['NAME']).'</span></span>'.
	'<div class="bx_scu_scroller_container"><div class="bx_scu"><ul id="#ITEM#_prop_'.$arProp['ID'].'_list" class="list_values_wrapper">';
					}
					else
					{
						$templateRow .= '<div class="bx_item_detail_size" '.$arProp['STYLE'].' id="#ITEM#_prop_'.$arProp['ID'].'_cont" data-display_type="LI" data-id="'.$arProp['ID'].'">'.
	'<span class="'.$class_title.'">'.htmlspecialcharsex($arProp['NAME']).'</span>'.
	'<div class="bx_size_scroller_container"><div class="bx_size"><ul id="#ITEM#_prop_'.$arProp['ID'].'_list" class="list_values_wrapper">';

					}


					foreach ($arProp['VALUES'] as $arOneValue){
						//if($arOneValue['ID']>0){
							$arOneValue['NAME'] = htmlspecialcharsbx($arOneValue['NAME']);
							//if(isset($arOneValue['PICT']['SRC']) && $arOneValue['PICT']['SRC'])
							if($isHasPicture && ($arOneValue['NEW_PICT'] || (isset($arOneValue['PICT']['SRC']) && $arOneValue['PICT']['SRC'])))
							{								
								$str = '<span class="cnt1"><span class="cnt_item'.($arOneValue['NEW_PICT'] ? ' pp' : '').'" style="background-image:url(\''.($arOneValue['NEW_PICT'] ? $arOneValue['NEW_PICT']['SRC'] : $arOneValue['PICT']['SRC']).'\');" data-obgi="url(\''.$arOneValue['PICT']['SRC'].'\')" title="'.$arProp['NAME'].': '.$arOneValue['NAME'].'"></span></span>';
								if(isset($arOneValue['NO_PHOTO']) && $arOneValue['NO_PHOTO'] == 'Y')
									$str = '<span class="cnt1 nf"><span class="cnt_item" title="'.$arProp['NAME'].': '.$arOneValue['NAME'].'"><span class="bg" style="background-image:url(\''.$arOneValue['PICT']['SRC'].'\');"></span></span></span>';
								$templateRow .= '<li class="item '.$arOneValue['CLASS'].'" '.$arOneValue['STYLE'].' data-treevalue="'.$arProp['ID'].'_'.$arOneValue['ID'].'" data-showtype="li" data-onevalue="'.$arOneValue['ID'].'"><i title="'.$arProp['NAME'].': '.$arOneValue['NAME'].'"></i>'.$str.'</li>';
							}
							else
							{
								//$templateRow .= '<li class="item '.$arOneValue['CLASS'].'" '.$arOneValue['STYLE'].' data-treevalue="'.$arProp['ID'].'_'.$arOneValue['ID'].'" data-showtype="li" data-onevalue="'.$arOneValue['ID'].'" title="'.$arProp['NAME'].': '.$arOneValue['NAME'].'"><i></i><span class="cnt1"><span class="cnt_item" style="background-image:url(\''.SITE_TEMPLATE_PATH.'/images/no_photo_small.png\');" title="'.$arProp['NAME'].': '.$arOneValue['NAME'].'"></span></span></li>';
								$templateRow .= '<li class="item '.$arOneValue['CLASS'].'" '.$arOneValue['STYLE'].' data-treevalue="'.$arProp['ID'].'_'.$arOneValue['ID'].'" data-showtype="li" data-onevalue="'.$arOneValue['ID'].'" title="'.$arProp['NAME'].': '.$arOneValue['NAME'].'"><i></i><span class="cnt">'.$arOneValue['NAME'].'</span></li>';
							}
						//}
					}
					$templateRow .= '</ul></div>'.
	'</div></div>';
				}
				$arSkuTemplate[$arProp['CODE']] = $templateRow;
			}
		}
		unset($templateRow, $arProp);
		return $arSkuTemplate;
	}

	public static function UpdateRow($arFilter, $arShowValues, $arCanBuyValues, $arProp, $type_view){
		$isCurrent = false;
		$showI = 0;

		if($arProp['VALUES']){
			foreach($arProp['VALUES'] as $key => $arValue)
			{
				$value = $arValue['ID'];
				// $isCurrent = ($value === $arFilter && $value != 0);
				$isCurrent = ($value === $arFilter);
				$selectMode = (($arProp["DISPLAY_TYPE"] == "P" || $arProp["DISPLAY_TYPE"] == "R" ) && $type_view != 'block' );

				if(in_array($value, $arCanBuyValues))
				{
					$arProp['VALUES'][$key]['CLASS'] = ($isCurrent ? 'active' : '');
				}
				else
				{
					$arProp['VALUES'][$key]['CLASS'] = ($isCurrent ? 'active missing' : 'missing');
				}
				if($selectMode)
				{
					$arProp['VALUES'][$key]['DISABLED'] = 'disabled';
					$arProp['VALUES'][$key]['SELECTED'] = ($isCurrent ? 'selected' : '');
				}
				else
				{
					$arProp['VALUES'][$key]['STYLE'] = 'style="display: none"';
				}

				if(in_array($value, $arShowValues))
				{
					if($selectMode)
					{
						$arProp['VALUES'][$key]['DISABLED'] = '';
					}
					else
					{
						$arProp['VALUES'][$key]['STYLE'] = '';
					}

					if($value != 0)
						++$showI;
				}
			}
			if(!$showI)
				$arProp['STYLE'] = 'style="display: none"';
			else
				$arProp['STYLE'] = 'style=""';
		}

		return $arProp;
	}

	public static function GetRowValues($arFilter, $index, $arItem){
		$i = 0;
		$arValues = array();
		$boolSearch = false;
		$boolOneSearch = true;


		if(!$arFilter)
		{
			if($arItem['OFFERS']){
				foreach($arItem['OFFERS'] as $arOffer)
				{
					if(!in_array($arOffer['TREE'][$index], $arValues))
					{
						$arValues[] = $arOffer['TREE'][$index];
					}
				}
			}
			$boolSearch = true;
		}
		else
		{	
			if($arItem['OFFERS']){
				foreach($arItem['OFFERS'] as $arOffer)
				{
					$boolOneSearch = true;
					foreach($arFilter as $propName => $filter)
					{
						if ($filter !== $arOffer['TREE'][$propName])
						{
							$boolOneSearch = false;
							break;
						}
					}
					if ($boolOneSearch)
					{
						if(!in_array($arOffer['TREE'][$index], $arValues))
						{
							$arValues[] = $arOffer['TREE'][$index];
						}
						$boolSearch = true;
					}
				}
			}
		}
		return ($boolSearch ? $arValues : false);
	}

	public static function GetCanBuy($arFilter, $arItem){
		$i = 0;
		$boolSearch = false;
		$boolOneSearch = true;

		foreach($arItem['OFFERS'] as $arOffer)
		{
			$boolOneSearch = true;
			foreach($arFilter as $propName => $filter)
			{
				if ($filter !== $arOffer['TREE'][$propName])
				{
					$boolOneSearch = false;
					break;
				}
			}

			if($boolOneSearch)
			{
				if($arOffer['CAN_BUY'])
				{
					$boolSearch = true;
					break;
				}
			}
		}
		return $boolSearch;
	}

	public static function GetItemsIDs($arItem, $detail="N"){
		$arAllIDs=array();
		$arAllIDs["strMainID"] = $arItem['strMainID'];
		$arAllIDs["strObName"] = 'ob'.preg_replace("/[^a-zA-Z0-9_]/", "x", $arAllIDs["strMainID"]);

		if($detail=="Y"){
			$arAllIDs["ALL_ITEM_IDS"] = array(
				'ID' => $arAllIDs["strMainID"],
				'PICT' => $arAllIDs["strMainID"].'_pict',
				'DISCOUNT_PICT_ID' => $arAllIDs["strMainID"].'_dsc_pict',
				'STICKER_ID' => $arAllIDs["strMainID"].'_sticker',
				'BIG_SLIDER_ID' => $arAllIDs["strMainID"].'_big_slider',
				'BIG_IMG_CONT_ID' => $arAllIDs["strMainID"].'_bigimg_cont',
				'SLIDER_CONT_ID' => $arAllIDs["strMainID"].'_slider_cont',
				'SLIDER_LIST' => $arAllIDs["strMainID"].'_slider_list',
				'SLIDER_LEFT' => $arAllIDs["strMainID"].'_slider_left',
				'SLIDER_RIGHT' => $arAllIDs["strMainID"].'_slider_right',
				'OLD_PRICE' => $arAllIDs["strMainID"].'_old_price',
				'PRICE' => $arAllIDs["strMainID"].'_price',
				'DISCOUNT_PRICE' => $arAllIDs["strMainID"].'_price_discount',
				'SLIDER_CONT_OF_ID' => $arAllIDs["strMainID"].'_slider_cont_',
				'SLIDER_LIST_OF_ID' => $arAllIDs["strMainID"].'_slider_list_',
				'SLIDER_LEFT_OF_ID' => $arAllIDs["strMainID"].'_slider_left_',
				'SLIDER_RIGHT_OF_ID' => $arAllIDs["strMainID"].'_slider_right_',
				'SLIDER_CONT_OFM_ID' => $arAllIDs["strMainID"].'_sliderm_cont_',
				'SLIDER_LIST_OFM_ID' => $arAllIDs["strMainID"].'_sliderm_list_',
				'SLIDER_LEFT_OFM_ID' => $arAllIDs["strMainID"].'_sliderm_left_',
				'SLIDER_RIGHT_OFM_ID' => $arAllIDs["strMainID"].'_sliderm_right_',
				'QUANTITY' => $arAllIDs["strMainID"].'_quantity',
				'QUANTITY_DOWN' => $arAllIDs["strMainID"].'_quant_down',
				'QUANTITY_UP' => $arAllIDs["strMainID"].'_quant_up',
				'QUANTITY_MEASURE' => $arAllIDs["strMainID"].'_quant_measure',
				'QUANTITY_LIMIT' => $arAllIDs["strMainID"].'_quant_limit',
				'BASIS_PRICE' => $arAllIDs["strMainID"].'_basis_price',
				'BUY_LINK' => $arAllIDs["strMainID"].'_buy_link',
				'BASKET_LINK' => $arAllIDs["strMainID"].'_basket_link',
				'ADD_BASKET_LINK' => $arAllIDs["strMainID"].'_add_basket_link',
				'BASKET_ACTIONS' => $arAllIDs["strMainID"].'_basket_actions',
				'NOT_AVAILABLE_MESS' => $arAllIDs["strMainID"].'_not_avail',
				'COMPARE_LINK' => $arAllIDs["strMainID"].'_compare_link',
				'PROP' => $arAllIDs["strMainID"].'_prop_',
				'PROP_DIV' => $arAllIDs["strMainID"].'_skudiv',
				'DISPLAY_PROP_DIV' => $arAllIDs["strMainID"].'_sku_prop',
				'DISPLAY_PROP_ARTICLE_DIV' => $arAllIDs["strMainID"].'_sku_article_prop',
				'OFFER_GROUP' => $arAllIDs["strMainID"].'_set_group_',
				'BASKET_PROP_DIV' => $arAllIDs["strMainID"].'_basket_prop',
				'SUBSCRIBE_DIV' => $arAllIDs["strMainID"].'_subscribe_div',
				'SUBSCRIBED_DIV' => $arAllIDs["strMainID"].'_subscribed_div',
				'STORE_QUANTITY' => $arAllIDs["strMainID"].'_store_quantity',
			);
		}else{
			$arAllIDs["ALL_ITEM_IDS"] = array(
				'ID' => $arAllIDs["strMainID"],
				'PICT' => $arAllIDs["strMainID"].'_pict',
				'SECOND_PICT' => $arAllIDs["strMainID"].'_secondpict',
				'STICKER_ID' => $arAllIDs["strMainID"].'_sticker',
				'SECOND_STICKER_ID' => $arAllIDs["strMainID"].'_secondsticker',
				'QUANTITY' => $arAllIDs["strMainID"].'_quantity',
				'QUANTITY_DOWN' => $arAllIDs["strMainID"].'_quant_down',
				'QUANTITY_UP' => $arAllIDs["strMainID"].'_quant_up',
				'QUANTITY_MEASURE' => $arAllIDs["strMainID"].'_quant_measure',
				'BUY_LINK' => $arAllIDs["strMainID"].'_buy_link',
				'BASKET_LINK' => $arAllIDs["strMainID"].'_basket_link',
				'BASKET_ACTIONS' => $arAllIDs["strMainID"].'_basket_actions',
				'NOT_AVAILABLE_MESS' => $arAllIDs["strMainID"].'_not_avail',
				'SUBSCRIBE_LINK' => $arAllIDs["strMainID"].'_subscribe',
				'COMPARE_LINK' => $arAllIDs["strMainID"].'_compare_link',
				'STORE_QUANTITY' => $arAllIDs["strMainID"].'_store_quantity',
				'PRICE' => $arAllIDs["strMainID"].'_price',
				'PRICE_OLD' => $arAllIDs["strMainID"].'_price_old',
				'DSC_PERC' => $arAllIDs["strMainID"].'_dsc_perc',
				'SECOND_DSC_PERC' => $arAllIDs["strMainID"].'_second_dsc_perc',
				'PROP_DIV' => $arAllIDs["strMainID"].'_sku_tree',
				'PROP' => $arAllIDs["strMainID"].'_prop_',
				'DISPLAY_PROP_DIV' => $arAllIDs["strMainID"].'_sku_prop',
				'BASKET_PROP_DIV' => $arAllIDs["strMainID"].'_basket_prop',
				'SUBSCRIBE_DIV' => $arAllIDs["strMainID"].'subscribe_div',
				'SUBSCRIBED_DIV' => $arAllIDs["strMainID"].'subscribed_div',
			);
		}

		$arAllIDs["TITLE_ITEM"] = (
			isset($arItem['IPROPERTY_VALUES']['ELEMENT_PAGE_TITLE'])&& $arItem['IPROPERTY_VALUES']['ELEMENT_PAGE_TITLE'] != ''
			? $arItem['IPROPERTY_VALUES']['ELEMENT_PAGE_TITLE']
			: $arItem['NAME']
		);
		return $arAllIDs;
	}

	public static function GetSKUJSParams($arResult, $arParams, $arItem, $detail="N", $group_iblock_id="N"){
		$arSkuProps = array();

		if($group_iblock_id=="Y"){
			$arResult['SKU_PROPS']=reset($arResult['SKU_PROPS']);
		}

		foreach ($arResult['SKU_PROPS'] as $arOneProp){
			if (!isset($arItem['OFFERS_PROP'][$arOneProp['CODE']]))
				continue;
			$arSkuProps[] = array(
				'ID' => $arOneProp['ID'],
				'CODE' => $arOneProp['CODE'],
				'SHOW_MODE' => $arOneProp['SHOW_MODE'],
				'VALUES_COUNT' => $arOneProp['VALUES_COUNT'],
				'DISPLAY_TYPE' => ((($arOneProp['DISPLAY_TYPE'] == "P" || $arOneProp['DISPLAY_TYPE'] == "R") && $arParams["DISPLAY_TYPE"] != 'block' ) ? "SELECT" : "LI" ),
			);
		}

		foreach ($arItem['JS_OFFERS'] as &$arOneJs){
			if (0 < $arOneJs['PRICE']['DISCOUNT_DIFF_PERCENT'])
			{
				$arOneJs['PRICE']['DISCOUNT_DIFF_PERCENT'] = '-'.$arOneJs['PRICE']['DISCOUNT_DIFF_PERCENT'].'%';
				$arOneJs['BASIS_PRICE']['DISCOUNT_DIFF_PERCENT'] = '-'.$arOneJs['BASIS_PRICE']['DISCOUNT_DIFF_PERCENT'].'%';
			}
		}
		unset($arOneJs);
		if ($arItem['OFFERS_PROPS_DISPLAY']){
			foreach ($arItem['JS_OFFERS'] as $keyOffer => $arJSOffer){
				$strProps = '';
				$arArticle=array();
				if (!empty($arJSOffer['DISPLAY_PROPERTIES'])){
					foreach ($arJSOffer['DISPLAY_PROPERTIES'] as $arOneProp){
						if($arOneProp['CODE']=='ARTICLE'){
							$arArticle=$arOneProp;
							continue;
						}
						$strProps .= '<tr itemprop="additionalProperty" itemscope itemtype="http://schema.org/PropertyValue"><td><span itemprop="name">'.$arOneProp['NAME'].'</span></td><td><span itemprop="value">'.(
							is_array($arOneProp['VALUE'])
							? implode(' / ', $arOneProp['VALUE'])
							: $arOneProp['VALUE']
						).'</span></td></tr>';

					}
				}
				if($arArticle){
					$strArticle = '';
					$strArticle .= $arArticle['NAME'].': '.(
							is_array($arArticle['VALUE'])
							? implode(' / ', $arArticle['VALUE'])
							: $arArticle['VALUE']
						);

					$arItem['JS_OFFERS'][$keyOffer]['ARTICLE'] = $strArticle;
				}

				$arItem['JS_OFFERS'][$keyOffer]['DISPLAY_PROPERTIES'] = $strProps;

			}
		}
		if ($arItem['SHOW_OFFERS_PROPS']){
			foreach ($arItem['JS_OFFERS'] as $keyOffer => $arJSOffer){
				$strProps = '';
				if (!empty($arJSOffer['DISPLAY_PROPERTIES'])){
					foreach ($arJSOffer['DISPLAY_PROPERTIES'] as $arOneProp){
						if($arOneProp['VALUE']){
							$arOneProp['VALUE_FORMAT']='<span class="block_title" itemprop="name">'.$arOneProp['NAME'].': </span><span class="value" itemprop="value">'.$arOneProp['VALUE'].'</span>';
							if($arOneProp['CODE']!='ARTICLE'){
								$strProps .='<tr itemprop="additionalProperty" itemscope itemtype="http://schema.org/PropertyValue"><td class="char_name"><span itemprop="name">'.$arOneProp['NAME'].'</span></td><td class="char_value"><span itemprop="value">'.$arOneProp['VALUE'].'</span></td></tr>';
							}
						}
						$arItem['JS_OFFERS'][$keyOffer]['DISPLAY_PROPERTIES_CODE'][$arOneProp["CODE"]] = $arOneProp;
					}
				}
				$arItem['JS_OFFERS'][$keyOffer]['TABLE_PROP']=$strProps;
			}
			foreach ($arItem['JS_OFFERS'] as $keyOffer => $arJSOffer){
				if (!empty($arJSOffer['DISPLAY_PROPERTIES'])){
					foreach ($arJSOffer['DISPLAY_PROPERTIES'] as $keyProp => $arOneProp){
						if($arOneProp['VALUE']){
							if($arOneProp['CODE']=='ARTICLE')
								unset($arItem['JS_OFFERS'][$keyOffer]['DISPLAY_PROPERTIES'][$keyProp]);
						}
					}
				}
			}
		}

		$arItemIDs=self::GetItemsIDs($arItem);
		if($detail=="Y"){
			$arJSParams = array(
				'CONFIG' => array(
					'USE_CATALOG' => $arResult['CATALOG'],
					'SHOW_QUANTITY' => $arParams['USE_PRODUCT_QUANTITY'],
					'SHOW_PRICE' => true,
					'SHOW_DISCOUNT_PERCENT' => ($arParams['SHOW_DISCOUNT_PERCENT'] == 'Y'),
					'SHOW_OLD_PRICE' => ($arParams['SHOW_OLD_PRICE'] == 'Y'),
					'DISPLAY_COMPARE' => $arParams['DISPLAY_COMPARE'],
					'SHOW_SKU_PROPS' => $arItem['SHOW_OFFERS_PROPS'],
					'OFFER_GROUP' => $arItem['OFFER_GROUP'],
					'MAIN_PICTURE_MODE' => $arParams['DETAIL_PICTURE_MODE'],
					'SHOW_BASIS_PRICE' => ($arParams['SHOW_BASIS_PRICE'] == 'Y'),
					'ADD_TO_BASKET_ACTION' => $arParams['ADD_TO_BASKET_ACTION'],
					'SHOW_CLOSE_POPUP' => ($arParams['SHOW_CLOSE_POPUP'] == 'Y')
				),
				'SHOW_UNABLE_SKU_PROPS' => $arParams['SHOW_UNABLE_SKU_PROPS'],
				'PRODUCT_TYPE' => $arResult['CATALOG_TYPE'],
				'VISUAL' => array(
					'ID' => $arItemIDs["ALL_ITEM_IDS"]['ID'],
				),
				'DEFAULT_COUNT' => $arParams['DEFAULT_COUNT'],
				'DEFAULT_PICTURE' => array(
					'PREVIEW_PICTURE' => $arResult['DEFAULT_PICTURE'],
					'DETAIL_PICTURE' => $arResult['DEFAULT_PICTURE']
				),
				'STORE_QUANTITY' => $arItemIDs["ALL_ITEM_IDS"]['STORE_QUANTITY'],
				'PRODUCT' => array(
					'ID' => $arResult['ID'],
					'NAME' => $arResult['~NAME']
				),
				'BASKET' => array(
					'QUANTITY' => $arParams['PRODUCT_QUANTITY_VARIABLE'],
					'BASKET_URL' => $arParams['BASKET_URL'],
					'SKU_PROPS' => $arItem['OFFERS_PROP_CODES'],
					'ADD_URL_TEMPLATE' => $arResult['~ADD_URL_TEMPLATE'],
					'BUY_URL_TEMPLATE' => $arResult['~BUY_URL_TEMPLATE']
				),
				'OFFERS' => $arItem['JS_OFFERS'],
				'OFFER_SELECTED' => $arItem['OFFERS_SELECTED'],
				'SKU_DETAIL_ID' => $arParams['SKU_DETAIL_ID'],
				'TREE_PROPS' => $arSkuProps
			);
		}else{
			$arJSParams = array(
				'SHOW_UNABLE_SKU_PROPS' => $arParams['SHOW_UNABLE_SKU_PROPS'],
				'PRODUCT_TYPE' => $arItem['CATALOG_TYPE'],
				'SHOW_QUANTITY' => ($arParams['USE_PRODUCT_QUANTITY'] == 'Y'),
				'DEFAULT_COUNT' => $arParams['DEFAULT_COUNT'],
				'SHOW_ADD_BASKET_BTN' => false,
				'SHOW_BUY_BTN' => true,
				'SHOW_ABSENT' => true,
				'SHOW_SKU_PROPS' => $arItem['OFFERS_PROPS_DISPLAY'],
				'SECOND_PICT' => $arItem['SECOND_PICT'],
				'SHOW_OLD_PRICE' => ('Y' == $arParams['SHOW_OLD_PRICE']),
				'SHOW_DISCOUNT_PERCENT' => ('Y' == $arParams['SHOW_DISCOUNT_PERCENT']),
				'ADD_TO_BASKET_ACTION' => $arParams['ADD_TO_BASKET_ACTION'],
				'SHOW_CLOSE_POPUP' => ($arParams['SHOW_CLOSE_POPUP'] == 'Y'),
				'DISPLAY_COMPARE' => $arParams['DISPLAY_COMPARE'],
				'BASKET_URL' => $arParams['BASKET_URL'],
				'DEFAULT_PICTURE' => array(
					'PICTURE' => $arItem['PRODUCT_PREVIEW'],
					'PICTURE_SECOND' => $arItem['PRODUCT_PREVIEW_SECOND']
				),
				'VISUAL' => array(
					'ID' => $arItemIDs["ALL_ITEM_IDS"]['ID'],
					'PICT_ID' => $arItemIDs["ALL_ITEM_IDS"]['PICT'],
					'SECOND_PICT_ID' => $arItemIDs["ALL_ITEM_IDS"]['SECOND_PICT'],
					'QUANTITY_ID' => $arItemIDs["ALL_ITEM_IDS"]['QUANTITY'],
					'QUANTITY_UP_ID' => $arItemIDs["ALL_ITEM_IDS"]['QUANTITY_UP'],
					'QUANTITY_DOWN_ID' => $arItemIDs["ALL_ITEM_IDS"]['QUANTITY_DOWN'],
					'QUANTITY_MEASURE' => $arItemIDs["ALL_ITEM_IDS"]['QUANTITY_MEASURE'],
					'STORE_QUANTITY' => $arItemIDs["ALL_ITEM_IDS"]['STORE_QUANTITY'],
					'PRICE_ID' => $arItemIDs["ALL_ITEM_IDS"]['PRICE'],
					'PRICE_OLD_ID' => $arItemIDs["ALL_ITEM_IDS"]['PRICE_OLD'],
					'TREE_ID' => $arItemIDs["ALL_ITEM_IDS"]['PROP_DIV'],
					'TREE_ITEM_ID' => $arItemIDs["ALL_ITEM_IDS"]['PROP'],
					'BUY_ID' => $arItemIDs["ALL_ITEM_IDS"]['BUY_LINK'],
					'BASKET_LINK' => $arItemIDs["ALL_ITEM_IDS"]['BASKET_LINK'],
					'ADD_BASKET_ID' => $arItemIDs["ALL_ITEM_IDS"]['ADD_BASKET_ID'],
					'DSC_PERC' => $arItemIDs["ALL_ITEM_IDS"]['DSC_PERC'],
					'SECOND_DSC_PERC' => $arItemIDs["ALL_ITEM_IDS"]['SECOND_DSC_PERC'],
					'DISPLAY_PROP_DIV' => $arItemIDs["ALL_ITEM_IDS"]['DISPLAY_PROP_DIV'],
					'BASKET_ACTIONS_ID' => $arItemIDs["ALL_ITEM_IDS"]['BASKET_ACTIONS'],
					'NOT_AVAILABLE_MESS' => $arItemIDs["ALL_ITEM_IDS"]['NOT_AVAILABLE_MESS'],
					'COMPARE_LINK_ID' => $arItemIDs["ALL_ITEM_IDS"]['COMPARE_LINK'],
					'SUBSCRIBE_ID' => $arItemIDs["ALL_ITEM_IDS"]['SUBSCRIBE_DIV'],
					'SUBSCRIBED_ID' => $arItemIDs["ALL_ITEM_IDS"]['SUBSCRIBED_DIV'],
				),
				'BASKET' => array(
					'QUANTITY' => $arParams['PRODUCT_QUANTITY_VARIABLE'],
					'PROPS' => $arParams['PRODUCT_PROPS_VARIABLE'],
					'SKU_PROPS' => $arItem['OFFERS_PROP_CODES'],
					'ADD_URL_TEMPLATE' => $arResult['~ADD_URL_TEMPLATE'],
					'BUY_URL_TEMPLATE' => $arResult['~BUY_URL_TEMPLATE']
				),
				'PRODUCT' => array(
					'ID' => $arItem['ID'],
					'NAME' => $arItemIDs["TITLE_ITEM"]
				),
				'OFFERS' => $arItem['JS_OFFERS'],
				'OFFER_SELECTED' => $arItem['OFFERS_SELECTED'],
				'TREE_PROPS' => $arSkuProps,
				'LAST_ELEMENT' => $arItem['LAST_ELEMENT']
			);
		}
		$arJSParams['OFFER_SHOW_PREVIEW_PICTURE_PROPS'] = $arParams['OFFER_SHOW_PREVIEW_PICTURE_PROPS'];
		if ($arParams['DISPLAY_COMPARE']){
			$arJSParams['COMPARE'] = array(
				'COMPARE_URL_TEMPLATE' => $arResult['~COMPARE_URL_TEMPLATE'],
				'COMPARE_URL_TEMPLATE_DEL' => str_replace("ADD_TO_COMPARE_LIST", "DELETE_FROM_COMPARE_LIST", $arResult['~COMPARE_URL_TEMPLATE']),
				'COMPARE_PATH' => $arParams['COMPARE_PATH']
			);
		}
		return $arJSParams;
	}

	public static function GetAddToBasketArray(&$arItem, $totalCount = 0, $defaultCount = 1, $basketUrl = '', $bDetail = false, $arItemIDs = array(), $class_btn = "small", $arParams=array()){
		static $arAddToBasketOptions, $bUserAuthorized;
		if($arAddToBasketOptions === NULL){
			$arAddToBasketOptions = array(
				"SHOW_BASKET_ONADDTOCART" => COption::GetOptionString("aspro.optimus", "SHOW_BASKET_ONADDTOCART", "Y", SITE_ID) == "Y",
				"USE_PRODUCT_QUANTITY_LIST" => COption::GetOptionString("aspro.optimus", "USE_PRODUCT_QUANTITY_LIST", "Y", SITE_ID) == "Y",
				"USE_PRODUCT_QUANTITY_DETAIL" => COption::GetOptionString("aspro.optimus", "USE_PRODUCT_QUANTITY_DETAIL", "Y", SITE_ID) == "Y",
				"BUYNOPRICEGGOODS" => COption::GetOptionString("aspro.optimus", "BUYNOPRICEGGOODS", "NOTHING", SITE_ID),
				"BUYMISSINGGOODS" => COption::GetOptionString("aspro.optimus", "BUYMISSINGGOODS", "ADD", SITE_ID),
				"EXPRESSION_ORDER_BUTTON" => COption::GetOptionString("aspro.optimus", "EXPRESSION_ORDER_BUTTON", GetMessage("EXPRESSION_ORDER_BUTTON_DEFAULT"), SITE_ID),
				"EXPRESSION_ORDER_TEXT" => COption::GetOptionString("aspro.optimus", "EXPRESSION_ORDER_TEXT", GetMessage("EXPRESSION_ORDER_TEXT_DEFAULT"), SITE_ID),
				"EXPRESSION_SUBSCRIBE_BUTTON" => COption::GetOptionString("aspro.optimus", "EXPRESSION_SUBSCRIBE_BUTTON", GetMessage("EXPRESSION_SUBSCRIBE_BUTTON_DEFAULT"), SITE_ID),
				"EXPRESSION_SUBSCRIBED_BUTTON" => COption::GetOptionString("aspro.optimus", "EXPRESSION_SUBSCRIBED_BUTTON", GetMessage("EXPRESSION_SUBSCRIBED_BUTTON_DEFAULT"), SITE_ID),
			);

			global $USER;
			$bUserAuthorized = $USER->IsAuthorized();
		}

		$buttonText = $buttonHTML = $buttonACTION = '';
		$quantity=$ratio=1;
		$max_quantity=0;
		$float_ratio=is_double($arItem["CATALOG_MEASURE_RATIO"]);

		if($arItem["CATALOG_MEASURE_RATIO"]){
			$quantity=$arItem["CATALOG_MEASURE_RATIO"];
			$ratio=$arItem["CATALOG_MEASURE_RATIO"];
		}else{
			$quantity=$defaultCount;
		}
		if($arItem["CATALOG_QUANTITY_TRACE"]=="Y"){
			if($totalCount < $quantity){
				$quantity=($totalCount>$arItem["CATALOG_MEASURE_RATIO"] ? $totalCount : $arItem["CATALOG_MEASURE_RATIO"] );
			}
			$max_quantity=$totalCount;
		}

		$arItemProps = (($arParams['PRODUCT_PROPERTIES']) ? implode(';', $arParams['PRODUCT_PROPERTIES']) : "");
		$partProp=($arParams["PARTIAL_PRODUCT_PROPERTIES"] ? $arParams["PARTIAL_PRODUCT_PROPERTIES"] : "" );
		$addProp=($arParams["ADD_PROPERTIES_TO_BASKET"] ? $arParams["ADD_PROPERTIES_TO_BASKET"] : "" );
		$emptyProp=$arItem["EMPTY_PROPS_JS"];

		global $TEMPLATE_OPTIONS;
		if($arItem["OFFERS"]){
			if(!$bDetail && $arItem["OFFERS_MORE"] != "Y" && $TEMPLATE_OPTIONS["TYPE_SKU"]["CURRENT_VALUE"] != "TYPE_2"){
				$buttonACTION = 'ADD';
				$buttonText = array(GetMessage('EXPRESSION_ADDTOBASKET_BUTTON_DEFAULT'), GetMessage('EXPRESSION_ADDEDTOBASKET_BUTTON_DEFAULT'));
				$buttonHTML = '<span class="button transition_bg '.$class_btn.' read_more1 to-cart" id="'.$arItemIDs['BUY_LINK'].'" data-offers="N" data-iblockID="'.$arItem["IBLOCK_ID"].'" data-item="'.$arItem["ID"].'"><i></i><span>'.$buttonText[0].'</span></span><a rel="nofollow" href="'.$basketUrl.'" id="'.$arItemIDs['BASKET_LINK'].'" class="'.$class_btn.' in-cart button transition_bg" data-item="'.$arItem["ID"].'"  style="display:none;"><i></i><span>'.$buttonText[1].'</span></a>';
			}
			elseif(($bDetail && $arItem["FRONT_CATALOG"] == "Y") || $arItem["OFFERS_MORE"]=="Y" || $TEMPLATE_OPTIONS["TYPE_SKU"]["CURRENT_VALUE"] == "TYPE_2"){
				$buttonACTION = 'MORE';
				$buttonText = array(GetMessage('EXPRESSION_READ_MORE_OFFERS_DEFAULT'));
				$buttonHTML = '<a class="button transition_bg basket read_more" rel="nofollow" href="'.$arItem["DETAIL_PAGE_URL"].'" data-item="'.$arItem["ID"].'">'.$buttonText[0].'</a>';
			}
		}
		else{
			if($bPriceExists = ((isset($arItem["MIN_PRICE"]) && $arItem["MIN_PRICE"]["VALUE"] > 0) || (isset($arItem['1'])))){
				// price exists
				if($totalCount > 0){
					// rest exists
					if((isset($arItem["CAN_BUY"]) && $arItem["CAN_BUY"]) || (isset($arItem["MIN_PRICE"]) && $arItem["MIN_PRICE"]["CAN_BUY"] == "Y")){
						if($bDetail && $arItem["FRONT_CATALOG"] == "Y"){
							$buttonACTION = 'MORE';
							$buttonText = array(GetMessage('EXPRESSION_READ_MORE_OFFERS_DEFAULT'));
							$rid=($arItem["RID"] ? "?RID=".$arItem["RID"] : "");
							$buttonHTML = '<a class="button transition_bg basket read_more" rel="nofollow" href="'.$arItem["DETAIL_PAGE_URL"].$rid.'" data-item="'.$arItem["ID"].'">'.$buttonText[0].'</a>';
						}
						else{
							$arItem["CAN_BUY"] = 1;
							$buttonACTION = 'ADD';
							$buttonText = array(GetMessage('EXPRESSION_ADDTOBASKET_BUTTON_DEFAULT'), GetMessage('EXPRESSION_ADDEDTOBASKET_BUTTON_DEFAULT'));
							$buttonHTML = '<span data-value="'.$arItem["MIN_PRICE"]["DISCOUNT_VALUE"].'" data-currency="'.$arItem["MIN_PRICE"]["CURRENCY"].'" class="'.$class_btn.' to-cart button transition_bg" data-item="'.$arItem["ID"].'" data-float_ratio="'.$float_ratio.'" data-ratio="'.$ratio.'" data-bakset_div="bx_basket_div_'.$arItem["ID"].'" data-props="'.$arItemProps.'" data-part_props="'.$partProp.'" data-add_props="'.$addProp.'"  data-empty_props="'.$emptyProp.'" data-offers="'.$arItem["IS_OFFER"].'" data-iblockID="'.$arItem["IBLOCK_ID"].'"  data-quantity="'.$quantity.'"><i></i><span>'.$buttonText[0].'</span></span><a rel="nofollow" href="'.$basketUrl.'" class="'.$class_btn.' in-cart button transition_bg" data-item="'.$arItem["ID"].'"  style="display:none;"><i></i><span>'.$buttonText[1].'</span></a>';
						}
					}
					elseif($arItem["CATALOG_SUBSCRIBE"] == "Y"){
						$buttonACTION = 'SUBSCRIBE';
						$buttonText = array($arAddToBasketOptions['EXPRESSION_SUBSCRIBE_BUTTON'], $arAddToBasketOptions['EXPRESSION_SUBSCRIBED_BUTTON']);
						$buttonHTML = '<span class="'.$class_btn.' ss to-subscribe'.(!$bUserAuthorized ? ' auth' : '').(self::checkVersionModule('16.5.3', 'catalog') ? ' nsubsc' : '').' button transition_bg" rel="nofollow" data-param-form_id="subscribe" data-name="subscribe" data-param-id="'.$arItem["ID"].'" data-item="'.$arItem["ID"].'"><i></i><span>'.$buttonText[0].'</span></span><span class="'.$class_btn.' ss in-subscribe button transition_bg" rel="nofollow" style="display:none;" data-item="'.$arItem["ID"].'"><i></i><span>'.$buttonText[1].'</span></span>';
					}
				}
				else{
					if(!strlen($arAddToBasketOptions['EXPRESSION_ORDER_BUTTON'])){
						$arAddToBasketOptions['EXPRESSION_ORDER_BUTTON']=GetMessage("EXPRESSION_ORDER_BUTTON_DEFAULT");
					}
					// no rest
					if($bDetail && $arItem["FRONT_CATALOG"] == "Y"){
						$buttonACTION = 'MORE';
						$buttonText = array(GetMessage('EXPRESSION_READ_MORE_OFFERS_DEFAULT'));
						$rid=($arItem["RID"] ? "?RID=".$arItem["RID"] : "");
						$buttonHTML = '<a class="button transition_bg basket read_more" rel="nofollow" href="'.$arItem["DETAIL_PAGE_URL"].$rid.'" data-item="'.$arItem["ID"].'">'.$buttonText[0].'</a>';
					}
					else{
						$buttonACTION = $arAddToBasketOptions["BUYMISSINGGOODS"];
						if($arAddToBasketOptions["BUYMISSINGGOODS"] == "ADD" /*|| $arItem["CAN_BUY"]*/){
							if($arItem["CAN_BUY"]){
								$buttonText = array(GetMessage('EXPRESSION_ADDTOBASKET_BUTTON_DEFAULT'), GetMessage('EXPRESSION_ADDEDTOBASKET_BUTTON_DEFAULT'));
								$buttonHTML = '<span data-value="'.$arItem["MIN_PRICE"]["DISCOUNT_VALUE"].'" data-currency="'.$arItem["MIN_PRICE"]["CURRENCY"].'" class="'.$class_btn.' to-cart button transition_bg" data-item="'.$arItem["ID"].'" data-float_ratio="'.$float_ratio.'" data-ratio="'.$ratio.'" data-bakset_div="bx_basket_div_'.$arItem["ID"].'" data-props="'.$arItemProps.'" data-part_props="'.$partProp.'" data-add_props="'.$addProp.'"  data-empty_props="'.$emptyProp.'" data-offers="'.$arItem["IS_OFFER"].'" data-iblockID="'.$arItem["IBLOCK_ID"].'" data-quantity="'.$quantity.'"><i></i><span>'.$buttonText[0].'</span></span><a rel="nofollow" href="'.$basketUrl.'" class="'.$class_btn.' in-cart button transition_bg" data-item="'.$arItem["ID"].'"  style="display:none;"><i></i><span>'.$buttonText[1].'</span></a>';
							}else{
								if($arAddToBasketOptions["BUYMISSINGGOODS"] == "SUBSCRIBE" && $arItem["CATALOG_SUBSCRIBE"] == "Y"){
									$buttonText = array($arAddToBasketOptions['EXPRESSION_SUBSCRIBE_BUTTON'], $arAddToBasketOptions['EXPRESSION_SUBSCRIBED_BUTTON']);
									$buttonHTML = '<span class="'.$class_btn.' ss to-subscribe'.(!$bUserAuthorized ? ' auth' : '').(self::checkVersionModule('16.5.3', 'catalog') ? ' nsubsc' : '').' button transition_bg" rel="nofollow" data-param-form_id="subscribe" data-name="subscribe" data-param-id="'.$arItem["ID"].'" data-item="'.$arItem["ID"].'"><i></i><span>'.$buttonText[0].'</span></span><span class="'.$class_btn.' ss in-subscribe button transition_bg" rel="nofollow" style="display:none;" data-item="'.$arItem["ID"].'"><i></i><span>'.$buttonText[1].'</span></span>';
								}else{
									$buttonText = array($arAddToBasketOptions['EXPRESSION_ORDER_BUTTON']);
									$buttonHTML = '<span class="'.$class_btn.' to-order button transition_bg transparent" data-name="'.$arItem["NAME"].'" data-item="'.$arItem["ID"].'"><i></i><span>'.$buttonText[0].'</span></span>';
									if($arAddToBasketOptions['EXPRESSION_ORDER_TEXT']){
										$buttonHTML .='<div class="more_text">'.$arAddToBasketOptions['EXPRESSION_ORDER_TEXT'].'</div>';
									}
								}
							}

						}
						elseif($arAddToBasketOptions["BUYMISSINGGOODS"] == "SUBSCRIBE" && $arItem["CATALOG_SUBSCRIBE"] == "Y"){
							$buttonText = array($arAddToBasketOptions['EXPRESSION_SUBSCRIBE_BUTTON'], $arAddToBasketOptions['EXPRESSION_SUBSCRIBED_BUTTON']);
							$buttonHTML = '<span class="'.$class_btn.' ss to-subscribe'.(!$bUserAuthorized ? ' auth' : '').(self::checkVersionModule('16.5.3', 'catalog') ? ' nsubsc' : '').' button transition_bg" rel="nofollow" data-param-form_id="subscribe" data-name="subscribe" data-param-id="'.$arItem["ID"].'" data-item="'.$arItem["ID"].'"><i></i><span>'.$buttonText[0].'</span></span><span class="'.$class_btn.' ss in-subscribe button transition_bg" rel="nofollow" style="display:none;" data-item="'.$arItem["ID"].'"><i></i><span>'.$buttonText[1].'</span></span>';
						}
						elseif($arAddToBasketOptions["BUYMISSINGGOODS"] == "ORDER"){
							$buttonText = array($arAddToBasketOptions['EXPRESSION_ORDER_BUTTON']);
							$buttonHTML = '<span class="'.$class_btn.' to-order button transition_bg transparent" data-name="'.$arItem["NAME"].'" data-item="'.$arItem["ID"].'"><i></i><span>'.$buttonText[0].'</span></span>';
							if($arAddToBasketOptions['EXPRESSION_ORDER_TEXT']){
								$buttonHTML .='<div class="more_text">'.$arAddToBasketOptions['EXPRESSION_ORDER_TEXT'].'</div>';
							}
						}
					}
				}
			}
			else{
				// no price or price <= 0
				if($bDetail && $arItem["FRONT_CATALOG"] == "Y"){
					$buttonACTION = 'MORE';
					$buttonText = array(GetMessage('EXPRESSION_READ_MORE_OFFERS_DEFAULT'));
					$buttonHTML = '<a class="button transition_bg basket read_more" rel="nofollow" href="'.$arItem["DETAIL_PAGE_URL"].'" data-item="'.$arItem["ID"].'">'.$buttonText[0].'</a>';
				}
				else{
					$buttonACTION = $arAddToBasketOptions["BUYNOPRICEGGOODS"];
					if($arAddToBasketOptions["BUYNOPRICEGGOODS"] == "ORDER"){
						$buttonText = array($arAddToBasketOptions['EXPRESSION_ORDER_BUTTON']);
						$buttonHTML = '<span class="'.$class_btn.' to-order button transition_bg transparent" data-name="'.$arItem["NAME"].'" data-item="'.$arItem["ID"].'"><i></i><span>'.$buttonText[0].'</span></span>';
						if($arAddToBasketOptions['EXPRESSION_ORDER_TEXT']){
							$buttonHTML .='<div class="more_text">'.$arAddToBasketOptions['EXPRESSION_ORDER_TEXT'].'</div>';
						}
					}
				}
			}
		}

		$arOptions = array("OPTIONS" => $arAddToBasketOptions, "TEXT" => $buttonText, "HTML" => $buttonHTML, "ACTION" => $buttonACTION, "RATIO_ITEM" => $ratio, "MIN_QUANTITY_BUY" => $quantity, "MAX_QUANTITY_BUY" => $max_quantity, "CAN_BUY" => $arItem['CAN_BUY']);

		foreach(GetModuleEvents(OPTIMUS_MODULE_ID, 'OnAsproGetBuyBlockElement', true) as $arEvent) // event for manipulation with buy block element
			ExecuteModuleEventEx($arEvent, array($arItem, $totalCount, $arParams, &$arOptions));

		return $arOptions;
	}

	public static function checkVersionExt($template="main", $module="catalog"){
		if($info = CModule::CreateModuleObject($module)){
			$testVersion = '16.0.14';
			if(CheckVersion($testVersion, $info->MODULE_VERSION)){
				$templateInclude=$template;
			}
			else{
				$templateInclude=$template."_new";
			}
		}
		return $templateInclude;
	}

	public static function checkVersionModule($version = '1.0.0', $module="catalog"){
		if($info = CModule::CreateModuleObject($module))
		{
			if(!CheckVersion($version, $info->MODULE_VERSION))
				return true;
		}
		return false;
	}

	public static function GetFileInfo($arItem){
		$arTmpItem = CFile::GetFileArray($arItem);

		switch($arTmpItem["CONTENT_TYPE"]){
            case 'application/pdf': $type="pdf"; break;
            case 'application/vnd.ms-excel': $type="excel"; break;
            case 'application/xls': $type="excel"; break;
            case 'application/octet-stream': $type="word"; break;
            case 'application/msword': $type="word"; break;
            case 'application/x-zip-compressed': $type="zip"; break;    
            case 'image/jpeg': $type="jpg"; break;
            case 'image/tiff': $type="tiff"; break;
            case 'image/png': $type="png"; break;
            case 'image/bmp': $type="bmp"; break;
            case 'image/gif': $type="gif"; break;
            case 'text/plain': $type="txt"; break;
            
            default: $type="default"; break;
        }

        if($arTmpItem["CONTENT_TYPE"] === 'application/octet-stream' || $type === 'default'){
            $frm = explode('.', $arTmpItem['FILE_NAME']);
            $frm = $frm[1];
            if($frm == 'doc' || $frm == 'docx')
                $type = 'word';
            elseif($frm == 'ppt')
                $type = 'ppt';
            elseif($frm == 'pptx')
                $type = 'pptx';
            elseif($frm == 'tif')
                $type = 'tif';
            elseif($frm == 'xls' || $frm == 'xlsx')
            $type = 'excel';
            elseif($frm == 'rar')
                $type = 'rar';
            elseif($frm == 'rtf')
                $type = 'rtf';
            else
                $type = 'file';
        }

        $filesize = $arTmpItem["FILE_SIZE"];
        if($filesize > 1024){
            $filesize = ($filesize / 1024);
            if($filesize > 1024){
                $filesize = ($filesize / 1024);
                if($filesize > 1024){
                    $filesize = ($filesize / 1024);
                    $filesize = round($filesize, 1);
                    $filesize_format=str_replace(".", ",", $filesize).GetMessage('CT_NAME_GB');
                }
                else{
                    $filesize = round($filesize, 1);
                    $filesize_format=str_replace(".", ",", $filesize).GetMessage('CT_NAME_MB');
                }
            }
            else{
                $filesize = round($filesize, 1);
                $filesize_format=str_replace(".", ",", $filesize).GetMessage('CT_NAME_KB');
            }
        }
        else{
            $filesize = round($filesize, 1);
            $filesize_format=str_replace(".", ",", $filesize).GetMessage('CT_NAME_b');
        }
        $fileName = substr($arTmpItem["ORIGINAL_NAME"], 0, strrpos($arTmpItem["ORIGINAL_NAME"], '.'));
        return array("TYPE" => $type, "FILE_SIZE" => $filesize, "FILE_SIZE_FORMAT" => $filesize_format, "DESCRIPTION" => ( $arTmpItem["DESCRIPTION"] ? $arTmpItem["DESCRIPTION"] : $fileName), "SRC" => $arTmpItem["SRC"]);
	}

	public static function getMinPriceFromOffersExt(&$offers, $currency, $replaceMinPrice = true){
		$replaceMinPrice = ($replaceMinPrice === true);
		$result = false;
		$minPrice = 0;
		if (!empty($offers) && is_array($offers))
		{
			$doubles = array();
			foreach ($offers as $oneOffer)
			{
				if(!$oneOffer["MIN_PRICE"])
					continue;
				$oneOffer['ID'] = (int)$oneOffer['ID'];
				if (isset($doubles[$oneOffer['ID']]))
					continue;
				/*if (!$oneOffer['CAN_BUY'])
					continue;*/

				CIBlockPriceTools::setRatioMinPrice($oneOffer, $replaceMinPrice);

				$oneOffer['MIN_PRICE']['CATALOG_MEASURE_RATIO'] = $oneOffer['CATALOG_MEASURE_RATIO'];
				$oneOffer['MIN_PRICE']['CATALOG_MEASURE'] = $oneOffer['CATALOG_MEASURE'];
				$oneOffer['MIN_PRICE']['CATALOG_MEASURE_NAME'] = $oneOffer['CATALOG_MEASURE_NAME'];
				$oneOffer['MIN_PRICE']['~CATALOG_MEASURE_NAME'] = $oneOffer['~CATALOG_MEASURE_NAME'];

				if (empty($result))
				{
					$minPrice = ($oneOffer['MIN_PRICE']['CURRENCY'] == $currency
						? $oneOffer['MIN_PRICE']['DISCOUNT_VALUE']
						: CCurrencyRates::ConvertCurrency($oneOffer['MIN_PRICE']['DISCOUNT_VALUE'], $oneOffer['MIN_PRICE']['CURRENCY'], $currency)
					);
					$result = $oneOffer['MIN_PRICE'];
				}
				else
				{
					$comparePrice = ($oneOffer['MIN_PRICE']['CURRENCY'] == $currency
						? $oneOffer['MIN_PRICE']['DISCOUNT_VALUE']
						: CCurrencyRates::ConvertCurrency($oneOffer['MIN_PRICE']['DISCOUNT_VALUE'], $oneOffer['MIN_PRICE']['CURRENCY'], $currency)
					);
					if ($minPrice > $comparePrice)
					{
						$minPrice = $comparePrice;
						$result = $oneOffer['MIN_PRICE'];
					}
				}
				$doubles[$oneOffer['ID']] = true;
			}
		}
		return $result;
	}

	public static function getSliderForItemExt(&$item, $propertyCode, $addDetailToSlider, $encode = true)
    {
        $encode = ($encode === true);
        $result = array();

        if (!empty($item) && is_array($item))
        {
            if (
                '' != $propertyCode &&
                isset($item['PROPERTIES'][$propertyCode]) &&
                'F' == $item['PROPERTIES'][$propertyCode]['PROPERTY_TYPE']
            )
            {
                if ('MORE_PHOTO' == $propertyCode && isset($item['MORE_PHOTO']) && !empty($item['MORE_PHOTO']))
                {

                    foreach ($item['MORE_PHOTO'] as &$onePhoto)
                    {
                        $result[] = array(
                            'ID' => (int)$onePhoto['ID'],
                            'SRC' => ($encode ? CHTTP::urnEncode($onePhoto['SRC'], 'utf-8') : $onePhoto['SRC']),
                            'WIDTH' => (int)$onePhoto['WIDTH'],
                            'HEIGHT' => (int)$onePhoto['HEIGHT'],
                            'ALT' => ($onePhoto["DESCRIPTION"] ? $onePhoto["DESCRIPTION"] : ($item['IPROPERTY_VALUES']['ELEMENT_DETAIL_PICTURE_FILE_ALT'] ? $item['IPROPERTY_VALUES']['ELEMENT_DETAIL_PICTURE_FILE_ALT'] : $item["NAME"])),
                            'TITLE' => ($onePhoto["DESCRIPTION"] ? $onePhoto["DESCRIPTION"] : ($item['IPROPERTY_VALUES']['ELEMENT_DETAIL_PICTURE_FILE_TITLE'] ? $item['IPROPERTY_VALUES']['ELEMENT_DETAIL_PICTURE_FILE_TITLE'] : $item["NAME"]))
                        );
                    }
                    unset($onePhoto);
                }
                else
                {
                    if (
                        isset($item['DISPLAY_PROPERTIES'][$propertyCode]['FILE_VALUE']) &&
                        !empty($item['DISPLAY_PROPERTIES'][$propertyCode]['FILE_VALUE'])
                    )
                    {
                        $fileValues = (
                        isset($item['DISPLAY_PROPERTIES'][$propertyCode]['FILE_VALUE']['ID']) ?
                            array(0 => $item['DISPLAY_PROPERTIES'][$propertyCode]['FILE_VALUE']) :
                            $item['DISPLAY_PROPERTIES'][$propertyCode]['FILE_VALUE']
                        );
                        foreach ($fileValues as &$oneFileValue)
                        {
                            $result[] = array(
                                'ID' => (int)$oneFileValue['ID'],
                                'SRC' => ($encode ? CHTTP::urnEncode($oneFileValue['SRC'], 'utf-8') : $oneFileValue['SRC']),
                                'WIDTH' => (int)$oneFileValue['WIDTH'],
                                'HEIGHT' => (int)$oneFileValue['HEIGHT'],
                                'ALT' => ($oneFileValue["DESCRIPTION"] ? $oneFileValue["DESCRIPTION"] : ($item['IPROPERTY_VALUES']['ELEMENT_DETAIL_PICTURE_FILE_ALT'] ? $item['IPROPERTY_VALUES']['ELEMENT_DETAIL_PICTURE_FILE_ALT'] : $item["NAME"])),
                          		'TITLE' => ($oneFileValue["DESCRIPTION"] ? $oneFileValue["DESCRIPTION"] : ($item['IPROPERTY_VALUES']['ELEMENT_DETAIL_PICTURE_FILE_TITLE'] ? $item['IPROPERTY_VALUES']['ELEMENT_DETAIL_PICTURE_FILE_TITLE'] : $item["NAME"]))
                            );
                        }
                        if (isset($oneFileValue))
                            unset($oneFileValue);
                    }
                    else
                    {
                        $propValues = $item['PROPERTIES'][$propertyCode]['VALUE'];
                        if (!is_array($propValues))
                            $propValues = array($propValues);
                        foreach ($propValues as &$oneValue)
                        {
                            $oneFileValue = CFile::GetFileArray($oneValue);
                            if (isset($oneFileValue['ID']))
                            {
                                $result[] = array(
                                    'ID' => (int)$oneFileValue['ID'],
                                    'SRC' => ($encode ? CHTTP::urnEncode($oneFileValue['SRC'], 'utf-8') : $oneFileValue['SRC']),
                                    'WIDTH' => (int)$oneFileValue['WIDTH'],
                                    'HEIGHT' => (int)$oneFileValue['HEIGHT'],
                                    'ALT' => ($oneFileValue["DESCRIPTION"] ? $oneFileValue["DESCRIPTION"] : ($item['IPROPERTY_VALUES']['ELEMENT_DETAIL_PICTURE_FILE_ALT'] ? $item['IPROPERTY_VALUES']['ELEMENT_DETAIL_PICTURE_FILE_ALT'] : $item["NAME"])),
                          			'TITLE' => ($oneFileValue["DESCRIPTION"] ? $oneFileValue["DESCRIPTION"] : ($item['IPROPERTY_VALUES']['ELEMENT_DETAIL_PICTURE_FILE_TITLE'] ? $item['IPROPERTY_VALUES']['ELEMENT_DETAIL_PICTURE_FILE_TITLE'] : $item["NAME"]))
                                );
                            }
                        }
                        if (isset($oneValue))
                            unset($oneValue);
                    }
                }
            }
            if(isset($item['OFFERS']) && $item['OFFERS'] && !$addDetailToSlider){
            	if(empty($result))
            		unset($item['DETAIL_PICTURE']);
            }

            if ($addDetailToSlider || empty($result))
            {
                if (!empty($item['DETAIL_PICTURE']))
                {
                    if (!is_array($item['DETAIL_PICTURE']))
                        $item['DETAIL_PICTURE'] = CFile::GetFileArray($item['DETAIL_PICTURE']);
                    if (isset($item['DETAIL_PICTURE']['ID']))
                    {
                        array_unshift(
                            $result,
                            array(
                                'ID' => (int)$item['DETAIL_PICTURE']['ID'],
                                'SRC' => ($encode ? CHTTP::urnEncode($item['DETAIL_PICTURE']['SRC'], 'utf-8') : $item['DETAIL_PICTURE']['SRC']),
                                'WIDTH' => (int)$item['DETAIL_PICTURE']['WIDTH'],
                                'HEIGHT' => (int)$item['DETAIL_PICTURE']['HEIGHT'],
                                'ALT' => ($item['DETAIL_PICTURE']['DESCRIPTION'] ? $item['DETAIL_PICTURE']['DESCRIPTION'] : ($item['DETAIL_PICTURE']['ALT'] ? $item['DETAIL_PICTURE']['ALT'] : $item['NAME'] )),
                                'TITLE' => ($item['DETAIL_PICTURE']['DESCRIPTION'] ? $item['DETAIL_PICTURE']['DESCRIPTION'] : ($item['DETAIL_PICTURE']['TITLE'] ? $item['DETAIL_PICTURE']['TITLE'] : $item['NAME'] ))
                            )
                        );
                    }
                }
            }
        }
        return $result;
    }

	function GetTemplateOptions($siteID){
		// check stores
		static $bStores;
		if ($bStores === null){
			$bStores = false;
			if(CModule::IncludeModule('catalog')){
				if(class_exists('CCatalogStore')){
					$dbRes = CCatalogStore::GetList(array(), array(), false, false, array());
					if($c = $dbRes->SelectedRowsCount()){
						$bStores = true;
					}
				}
			}
		}

		$res = self::getModuleOptionsList();
		$arComponentOptions = $res["TEMPLATE_OPTIONS"];
		$arTemplateOptions = array();
		foreach($arComponentOptions as $value){
			$arTemplateOptions[$value["ID"]] = $value;
			if ($value['ID'] === 'STORES_SOURCE' && !$bStores) {
				$arTemplateOptions[$value["ID"]]["CURRENT_VALUE"] = 'IBLOCK';
			}
			elseif($value['ID'] === 'LOGO_IMAGE' || $value['ID'] === 'FAVICON_IMAGE' || $value['ID'] === 'APPLE_TOUCH_ICON_IMAGE'){
				$arTemplateOptions[$value["ID"]]["CURRENT_VALUE"] = COption::GetOptionString(self::moduleID, $value["ID"], $value["DEFAULT"], $siteID);
				$arValue = unserialize($arTemplateOptions[$value["ID"]]["CURRENT_VALUE"]);
				$arValue = (array)$arValue;
				$fileID = $arValue ? current($arValue) : false;
				if($fileID){
					if($value['ID'] === 'FAVICON_IMAGE'){
						$faviconFile = CFIle::GetPath($fileID);
						$file_ext = pathinfo($faviconFile, PATHINFO_EXTENSION);
						$fav_ext = $file_ext ? $file_ext : 'ico';						
						$arTemplateOptions[$value["ID"]]["CURRENT_IMG"] = str_replace('//', '/', SITE_DIR.'/favicon.'.$file_ext);
					}else{
						$arTemplateOptions[$value["ID"]]["CURRENT_IMG"] = CFIle::GetPath($fileID);
					}
				}
				else{
					if($value['ID'] === 'LOGO_IMAGE'){

					}
					elseif($value['ID'] === 'FAVICON_IMAGE'){
						$arTemplateOptions[$value["ID"]]["CURRENT_IMG"] = str_replace('//', '/', SITE_DIR.'/include/favicon.ico');
					}
					elseif($value['ID'] === 'APPLE_TOUCH_ICON_IMAGE'){
						$arTemplateOptions[$value["ID"]]["CURRENT_IMG"] = str_replace('//', '/', SITE_DIR.'/include/apple-touch-icon.png');
					}
				}

				if(!file_exists(str_replace('//', '/', $_SERVER['DOCUMENT_ROOT'].$arTemplateOptions[$value["ID"]]["CURRENT_IMG"]))){
					$arTemplateOptions[$value["ID"]]["CURRENT_IMG"] = '';
				}
			}
			else{
				$arTemplateOptions[$value["ID"]]["CURRENT_VALUE"] = COption::GetOptionString(self::moduleID, $value["ID"], $value["DEFAULT"], $siteID);
				if($value['ID'] === 'HEAD'){
					if($value["VALUES"] && is_array($value["VALUES"])){
						foreach($value["VALUES"] as $arValue){
							if($arValue["VALUE"] === $arTemplateOptions['HEAD']["CURRENT_VALUE"]){
								$arTemplateOptions["LOGO_IMAGE"]["CURRENT_IMG"] = ($arTemplateOptions["LOGO_IMAGE"]["CURRENT_VALUE"] !== serialize(array())) ? $arTemplateOptions["LOGO_IMAGE"]["CURRENT_IMG"] : str_replace('//', '/', SITE_DIR.$arValue["IMG"]);
								$arTemplateOptions["HEAD"]["CURRENT_MENU"] = $arValue["MENU_TYPE"];
								$arTemplateOptions["HEAD"]["CURRENT_HEAD_COLOR"] = $arValue["HEAD_COLOR"];
								$arTemplateOptions["HEAD"]["CURRENT_MENU_COLOR"] = ($arValue["MENU_COLOR"] ? $arValue["MENU_COLOR"] : "none");
								break;
							}
						}
					}
				}
			}
		}

		return $arTemplateOptions;
	}

	static function checkBreadcrumbsChain(&$arParams, $arSection = array(), $arElement = array()){
		global $APPLICATION;

		if(COption::GetOptionString("aspro.optimus", "SHOW_BREADCRUMBS_CATALOG_CHAIN", "H1", SITE_ID) == "NAME"){
			$APPLICATION->arAdditionalChain = false;
			if($arParams['INCLUDE_IBLOCK_INTO_CHAIN'] == 'Y' && isset(COptimusCache::$arIBlocksInfo[$arParams['IBLOCK_ID']]['NAME'])){
				$APPLICATION->AddChainItem(COptimusCache::$arIBlocksInfo[$arParams['IBLOCK_ID']]['NAME'], $arElement['~LIST_PAGE_URL']);
			}
			if($arParams['ADD_SECTIONS_CHAIN'] == 'Y' && $arSection){
				$rsPath = CIBlockSection::GetNavChain($arParams['IBLOCK_ID'], $arSection['ID']);
				$rsPath->SetUrlTemplates('', $arParams['SECTION_URL']);
				while($arPath = $rsPath->GetNext()){
					$APPLICATION->AddChainItem($arPath['NAME'], $arPath['~SECTION_PAGE_URL']);
				}
			}
			if($arParams['ADD_ELEMENT_CHAIN'] == 'Y' && $arElement){
				$APPLICATION->AddChainItem($arElement['NAME']);
			}
		}
	}

	static function getModuleOptionsList($onlyTemplate = false){
		// check stores
		static $arIsSiteWithStores;
		$by = "id"; $sort = "asc"; $arSites = array();
		$db_res = CSite::GetList($by , $sort ,array("ACTIVE"=>"Y"));
		while($res = $db_res->GetNext()){
			$arSites[] = $res;
		}

		foreach($arSites as $key => $arSite){
			if(COption::GetOptionString(self::moduleID, "SITE_INSTALLED", false, $arSite["ID"]) != "Y"){
				unset($arSites[$key]);
			}
			else{
				if ($arIsSiteWithStores[$arSite["ID"]] === null){
					$arIsSiteWithStores[$arSite["ID"]] = false;
					if(CModule::IncludeModule('catalog')){
						if(class_exists('CCatalogStore')){
							$dbRes = CCatalogStore::GetList(array(), array('ACTIVE' => 'Y', 'SITE_ID' => $arSite["ID"]), false, false, array());
							if($c = $dbRes->SelectedRowsCount()){
								$arIsSiteWithStores[$arSite["ID"]] = true;
							}
						}
					}
				}
			}
		}

		// template options
		$arTemplateOptions = array(
			array(
				"ID" => "COLOR_THEME",
				"NAME" => GetMessage("COLOR_THEME"),
				"TYPES" => array("COMPONENT"=>"COLOR", "MODULE" => "SELECTBOX"),
				"VALUES" => array(
					array("VALUE" => "YELLOW", "COMPONENT_VALUE" => "#ffad00", "NAME" => GetMessage("COLOR_THEME_YELLOW")),
					array("VALUE" => "ORANGE", "COMPONENT_VALUE" => "#ff6d00", "NAME" => GetMessage("COLOR_THEME_ORANGE")),
					array("VALUE" => "RED", "COMPONENT_VALUE" => "#de002b", "NAME" => GetMessage("COLOR_THEME_RED")),
					array("VALUE" => "MAGENTA", "COMPONENT_VALUE" => "#b82945", "NAME" => GetMessage("COLOR_THEME_MAGENTA")),
					array("VALUE" => "ORCHID", "COMPONENT_VALUE" => "#d75cb6", "NAME" => GetMessage("COLOR_THEME_ORCHID")),
					array("VALUE" => "NAVY", "COMPONENT_VALUE" => "#006dca", "NAME" => GetMessage("COLOR_THEME_NAVY")),
					array("VALUE" => "BLUE", "COMPONENT_VALUE" => "#01aae3", "NAME" => GetMessage("COLOR_THEME_BLUE")), //#00aed7
					array("VALUE" => "GREEN_SEA", "COMPONENT_VALUE" => "#01b1af", "NAME" => GetMessage("COLOR_THEME_GREEN_SEA")),
					array("VALUE" => "GREEN", "COMPONENT_VALUE" => "#009f4f", "NAME" => GetMessage("COLOR_THEME_GREEN")),
					array("VALUE" => "IRISH_GREEN", "COMPONENT_VALUE" => "#6db900", "NAME" => GetMessage("COLOR_THEME_IRISH_GREEN")),
					array("VALUE" => "CUSTOM", "COMPONENT_VALUE" => "", "NAME" => GetMessage("COLOR_THEME_CUSTOM")),
				),
				"DEFAULT" => "NAVY",
			),
			array(
				"ID" => "CUSTOM_COLOR_THEME",
				"NAME" => GetMessage("CUSTOM_COLOR_THEME"),
				"TYPES" => array("COMPONENT"=>"COLOR", "MODULE" => "text"),
				"DEFAULT" => "01aae3",
			),
			array(
				"ID" => "BGCOLOR_THEME",
				"NAME" => GetMessage("BGCOLOR_THEME"),
				"TYPES" => array("COMPONENT"=>"COLOR", "MODULE" => "SELECTBOX"),
				"VALUES" => array(
					array("VALUE" => "LIGHT", "COMPONENT_VALUE" => "#f6f6f7", "NAME" => GetMessage("BGCOLOR_THEME_LIGHT")),
					array("VALUE" => "DARK", "COMPONENT_VALUE" => "#272a39", "NAME" => GetMessage("BGCOLOR_THEME_DARK")),
					array("VALUE" => "CUSTOM", "COMPONENT_VALUE" => "", "NAME" => GetMessage("COLOR_THEME_CUSTOM")),
				),
				"DEFAULT" => "LIGHT",
			),
			array(
				"ID" => "BGCOLOR_THEME_FOOTER_SIDE",
				"NAME" => GetMessage("BGCOLOR_THEME_FOOTER_SIDE"),
				"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
				"VALUES" => array(
					array("VALUE" => "FILL", "COMPONENT_VALUE" => "", "NAME" => GetMessage("YES_OPTION")),
					array("VALUE" => "NO_FILL", "COMPONENT_VALUE" => "", "NAME" => GetMessage("NO_OPTION")),
				),
				"DEFAULT" => "NO_FILL",
			),
			array(
				"ID" => "CUSTOM_BGCOLOR_THEME",
				"NAME" => GetMessage("CUSTOM_BGCOLOR_THEME"),
				"TYPES" => array("COMPONENT"=>"COLOR", "MODULE" => "text"),
				"DEFAULT" => "f6f6f7",
			),
			array(
				"ID" => "MENU_COLOR",
				"NAME" => GetMessage("MENU_COLOR"),
				"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
				"VALUES" => array(
					array("VALUE" => "COLORED", "COMPONENT_VALUE" => "", "NAME" => GetMessage("MENU_COLOR_COLORED")),
					array("VALUE" => "LIGHT", "COMPONENT_VALUE" => "", "NAME" => GetMessage("MENU_COLOR_LIGHT")),
					array("VALUE" => "DARK", "COMPONENT_VALUE" => "", "NAME" => GetMessage("MENU_COLOR_DARK")),
				),
				"DEFAULT" => "COLORED",
			),
		);

		if(!$onlyTemplate){
			$arTemplateOptions[] = array(
				"ID" => "LOGO_IMAGE",
				"NAME" => GetMessage("LOGO_IMAGE"),
				"TYPES" => array("COMPONENT" => "TEXT", "MODULE" => "file"),
				"DEFAULT" => serialize(array()),
				"THEME" => "N",
			);
			$arTemplateOptions[] = array(
				"ID" => "LOGO_IMAGE_SVG",
				"NAME" => GetMessage("LOGO_IMAGE_SVG"),
				"TYPES" => array(
					"MODULE" => "includefile",
				),
				"INCLUDEFILE" => "#SITE_DIR#include/logo_svg.php",
				"DEFAULT" => array(),
			);
			$arTemplateOptions[] = array(
				"ID" => "FAVICON_IMAGE",
				"NAME" => GetMessage("FAVICON_IMAGE"),
				"TYPES" => array("COMPONENT" => "TEXT", "MODULE" => "file"),
				"DEFAULT" => serialize(array()),
				"THEME" => "N",
			);
			$arTemplateOptions[] = array(
				"ID" => "APPLE_TOUCH_ICON_IMAGE",
				"NAME" => GetMessage("APPLE_TOUCH_ICON_IMAGE"),
				"TYPES" => array("COMPONENT" => "TEXT", "MODULE" => "file"),
				"DEFAULT" => serialize(array()),
				"THEME" => "N",
			);
			/*$arTemplateOptions[] = array(
				"ID" => "LOGO_IMAGE_FIXED",
				"NAME" => GetMessage("T_LOGO_IMAGE_FIXED"),
				"TYPES" => array("COMPONENT" => "TEXT", "MODULE" => "file"),
				"DEFAULT" => serialize(array()),
			);*/
			$arTemplateOptions[] = array(
				"ID" => "LOGO_IMAGE_EMAIL",
				"NAME" => GetMessage("T_LOGO_IMAGE_EMAIL"),
				"TYPES" => array("COMPONENT" => "TEXT", "MODULE" => "file"),
				"DEFAULT" => serialize(array()),
				"THEME" => "N",
			);
		}

		$arTemplateOptions[] = [
			"ID" => "HEAD_FIXED_CHECK",
			"NAME" => GetMessage("T_HEAD_FIXED_CHECK"),
			"TYPES" => [
				"COMPONENT" => "TEXT",
				"MODULE" => "SELECTBOX"
			],
			"VALUES" => [
				["VALUE" => "Y", "COMPONENT_VALUE" => "", "NAME" => GetMessage("YES")],
				["VALUE" => "N", "COMPONENT_VALUE" => "", "NAME" => GetMessage("NO")],
			],
			"DEFAULT" => "N"
		];

		$arTemplateOptions[] = [
			"ID" => "HEAD_MOBILE_CHECK",
			"NAME" => GetMessage("T_HEAD_MOBILE_CHECK"),
			"TYPES" => [
				"COMPONENT" => "TEXT",
				"MODULE" => "SELECTBOX"
			],
			"VALUES" => [
				["VALUE" => "Y", "COMPONENT_VALUE" => "", "NAME" => GetMessage("YES")],
				["VALUE" => "N", "COMPONENT_VALUE" => "", "NAME" => GetMessage("NO")],
			],
			"DEFAULT" => "N"
		];

		$arTemplateOptions = array_merge($arTemplateOptions, array(
				array(
					"ID" => "BASKET",
					"NAME" => GetMessage("BASKET"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "NORMAL", "COMPONENT_VALUE" => "", "NAME" => GetMessage("BASKET_NORMAL")),
						array("VALUE" => "FLY", "COMPONENT_VALUE" => "", "NAME" => GetMessage("BASKET_FLY")),
					),
					"DEFAULT" => "FLY",
				),
				array(
					"ID" => "BASKET_ECONOMY",
					"NAME" => GetMessage("BASKET_ECONOMY"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "Y", "COMPONENT_VALUE" => "", "NAME" => GetMessage("YES")),
						array("VALUE" => "N", "COMPONENT_VALUE" => "", "NAME" => GetMessage("NO")),
					),
					"DEFAULT" => "N",
				)
			)
		);

		$arTemplateOptions = array_merge($arTemplateOptions, array(
				array(
					"ID" => "TYPE_SKU",
					"NAME" => GetMessage("TYPE_SKU"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "TYPE_1", "COMPONENT_VALUE" => "", "NAME" => GetMessage("TYPE_1")),
						array("VALUE" => "TYPE_2", "COMPONENT_VALUE" => "", "NAME" => GetMessage("TYPE_2")),
					),
					"DEFAULT" => "TYPE_1",
				),
				array(
					"ID" => "DETAIL_PICTURE_MODE",
					"NAME" => GetMessage("DETAIL_PICTURE_MODE"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "IMG", "COMPONENT_VALUE" => "", "NAME" => GetMessage("DETAIL_PICTURE_MODE_IMG")),
						array("VALUE" => "POPUP", "COMPONENT_VALUE" => "", "NAME" => GetMessage("DETAIL_PICTURE_MODE_POPUP")),
						array("VALUE" => "MAGNIFIER", "COMPONENT_VALUE" => "", "NAME" => GetMessage("DETAIL_PICTURE_MODE_MAGNIFIER")),
					),
					"DEFAULT" => "POPUP",
				),
				array(
					"ID" => "TYPE_VIEW_FILTER",
					"NAME" => GetMessage("TYPE_VIEW_FILTER"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "VERTICAL", "COMPONENT_VALUE" => "", "NAME" => GetMessage("VERTICAL")),
						array("VALUE" => "HORIZONTAL", "COMPONENT_VALUE" => "", "NAME" => GetMessage("HORIZONTAL")),
						array("VALUE" => "COMPACT", "COMPONENT_VALUE" => "", "NAME" => GetMessage("COMPACT")),
					),
					"DEFAULT" => "VERTICAL",
				),
				array(
					"ID" => "MOBILE_FILTER_COMPACT",
					"NAME" => GetMessage("MOBILE_FILTER_COMPACT"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "Y", "COMPONENT_VALUE" => "", "NAME" => GetMessage("YES")),
						array("VALUE" => "N", "COMPONENT_VALUE" => "", "NAME" => GetMessage("NO")),
					),
					"DEFAULT" => "N",
				),
				array(
					"ID" => "SHOW_TOTAL_SUMM",
					"NAME" => GetMessage("SHOW_TOTAL_SUMM"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "ALWAYS", "COMPONENT_VALUE" => "", "NAME" => GetMessage("SHOW_TOTAL_SUMM_ALWAYS")),
						array("VALUE" => "Y", "COMPONENT_VALUE" => "", "NAME" => GetMessage("SHOW_TOTAL_SUMM_CHANGE")),
						array("VALUE" => "N", "COMPONENT_VALUE" => "", "NAME" => GetMessage("NO")),
					),
					"DEFAULT" => "N",
				),
				array(
					"ID" => "USE_FAST_VIEW_PAGE_DETAIL",
					"NAME" => GetMessage("USE_FAST_VIEW_TITLE"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "FAST_VIEW_1", "COMPONENT_VALUE" => "", "NAME" => GetMessage("YES")),
						array("VALUE" => "N", "COMPONENT_VALUE" => "", "NAME" => GetMessage("NO")),
					),
					"DEFAULT" => "N",
				),
				array(
					"ID" => "CATALOG_PAGE_SECTIONS",
					"NAME" => GetMessage("T_CATALOG_PAGE_SECTIONS_TITLE"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "SECTIONS_1", "COMPONENT_VALUE" => "", "NAME" => GetMessage("T_CATALOG_PAGE_SECTIONS_1")),
						array("VALUE" => "SECTIONS_2", "COMPONENT_VALUE" => "", "NAME" => GetMessage("T_CATALOG_PAGE_SECTIONS_2")),
					),
					"DEFAULT" => "SECTIONS_1",
					"THEME" => "N",
				),
				array(
					"ID" => "CATALOG_PAGE_SUBSECTIONS",
					"NAME" => GetMessage("T_CATALOG_PAGE_SUBSECTIONS_TITLE"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "SECTION_1", "COMPONENT_VALUE" => "", "NAME" => GetMessage("T_CATALOG_PAGE_SUBSECTIONS_1")),
						array("VALUE" => "SECTION_2", "COMPONENT_VALUE" => "", "NAME" => GetMessage("T_CATALOG_PAGE_SUBSECTIONS_2")),
						array("VALUE" => "SECTION_3", "COMPONENT_VALUE" => "", "NAME" => GetMessage("T_CATALOG_PAGE_SUBSECTIONS_3")),
					),
					"DEFAULT" => "SECTION_1",
					"THEME" => "N",
				),
				array(
					"ID" => "CATALOG_PAGE_DETAIL",
					"NAME" => GetMessage("CATALOG_PAGE_DETAIL_TITLE"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "ELEMENT_1", "COMPONENT_VALUE" => "", "NAME" => GetMessage("CATALOG_PAGE_DETAIL_TAB")),
						array("VALUE" => "ELEMENT_2", "COMPONENT_VALUE" => "", "NAME" => GetMessage("CATALOG_PAGE_DETAIL_NOTAB")),
					),
					"DEFAULT" => "ELEMENT_1",
				),
				array(
					"ID" => "CHANGE_TITLE_ITEM",
					"NAME" => GetMessage("CHANGE_TITLE_ITEM"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "Y", "COMPONENT_VALUE" => "", "NAME" => GetMessage("YES")),
						array("VALUE" => "N", "COMPONENT_VALUE" => "", "NAME" => GetMessage("NO")),
					),
					"DEFAULT" => "N",
				),
				array(
					'ID' => 'CALCULATE_DELIVERY',
					'NAME' => GetMessage('CALCULATE_DELIVERY_TITLE'),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "NOT", "COMPONENT_VALUE" => "", "NAME" => GetMessage("CALCULATE_DELIVERY_NOT")),
						array("VALUE" => "ONLY_POPUP", "COMPONENT_VALUE" => "", "NAME" => GetMessage("CALCULATE_DELIVERY_ONLY_POPUP")),
						array("VALUE" => "WITH_PREVIEW", "COMPONENT_VALUE" => "", "NAME" => GetMessage("CALCULATE_DELIVERY_WITH_PREVIEW")),
					),
					'DEFAULT' => 'NOT',
					'THEME' => 'Y',
				),
				array(
					'ID' => 'EXPRESSION_FOR_CALCULATE_DELIVERY',
					'NAME' => GetMessage('EXPRESSION_FOR_CALCULATE_DELIVERY_TITLE'),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "text"),
					'DEFAULT' => GetMessage('EXPRESSION_FOR_CALCULATE_DELIVERY_DEFAULT'),
					'THEME' => 'N',
				),
				array(
					"ID" => "MENU_POSITION_MAIN",
					"NAME" => GetMessage("MENU_POSITION_MAIN"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "SHOW", "COMPONENT_VALUE" => "", "NAME" => GetMessage("YES")),
						array("VALUE" => "HIDE", "COMPONENT_VALUE" => "", "NAME" => GetMessage("NO")),
					),
					"DEFAULT" => "SHOW",
				),
				array(
					"ID" => "MENU_POSITION",
					"NAME" => GetMessage("MENU_POSITION"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "TOP", "COMPONENT_VALUE" => "", "NAME" => GetMessage("TOP_MENU_HOVER")),
						array("VALUE" => "LINE", "COMPONENT_VALUE" => "", "NAME" => GetMessage("LINE_MENU_HOVER")),
					),
					"DEFAULT" => "LINE",
				),
				array(
					"ID" => "MENU_TYPE_VIEW",
					"NAME" => GetMessage("MENU_TYPE_VIEW"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "HOVER", "COMPONENT_VALUE" => "", "NAME" => GetMessage("MENU_TYPE_VIEW_HOVER")),
						array("VALUE" => "BOTTOM", "COMPONENT_VALUE" => "", "NAME" => GetMessage("MENU_TYPE_VIEW_BOTTOM")),
					),
					"DEFAULT" => "HOVER",
				),
				array(
					"ID" => "VIEWED_TYPE",
					"NAME" => GetMessage("VIEWED_TYPE"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "LOCAL", "COMPONENT_VALUE" => "", "NAME" => GetMessage("VIEWED_TYPE_LOGIC_COOKIE")),
						array("VALUE" => "COMPONENT", "COMPONENT_VALUE" => "", "NAME" => GetMessage("VIEWED_TYPE_LOGIC_COMPONENT")),
					),
					"DEFAULT" => "COMPONENT",
				),
				array(
					"ID" => "STORES_SOURCE",
					"NAME" => GetMessage("STORES_SOURCE"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => (
						$arIsSiteWithStores[$arSite["ID"]] ?
							array(
								array("VALUE" => "STORES", "COMPONENT_VALUE" => "", "NAME" => GetMessage("STORES_SOURCE_STORES")),
								array("VALUE" => "IBLOCK", "COMPONENT_VALUE" => "", "NAME" => GetMessage("STORES_SOURCE_STORES_IBLOCK")),
							) :
							array(
								array("VALUE" => "IBLOCK", "COMPONENT_VALUE" => "", "NAME" => GetMessage("STORES_SOURCE_STORES_IBLOCK")),
							)
						),
					"DEFAULT" => "IBLOCK",
				),
				array(
					"ID" => "NLO_MENU",
					"NAME" => GetMessage("NLO_MENU"),
					"TYPES" => array("MODULE" => "CHECKBOX"),
					"VALUES" => (
						array(
							array("VALUE" => "Y", "NAME" => GetMessage("NLO_MENU_Y")),
							array("VALUE" => "N", "NAME" => GetMessage("NLO_MENU_N")),
						)
					),
					"DEFAULT" => "Y",
				),
				array(
					"ID" => "USE_LAZY_LOAD",
					"NAME" => GetMessage("USE_LAZY_LOAD_TITLE"),
					"TYPES" => array("MODULE" => "CHECKBOX"),
					"VALUES" => (
						array(
							array("VALUE" => "Y", "NAME" => GetMessage("USE_LAZY_LOAD_Y")),
							array("VALUE" => "N", "NAME" => GetMessage("USE_LAZY_LOAD_N")),
						)
					),
					"DEFAULT" => "N",
				),
				array(
					"ID" => "MOBILE_CATALOG_BREADCRUMBS",
					"NAME" => GetMessage("MOBILE_CATALOG_BREADCRUMBS"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "Y", "COMPONENT_VALUE" => "", "NAME" => GetMessage("YES")),
						array("VALUE" => "N", "COMPONENT_VALUE" => "", "NAME" => GetMessage("NO")),
					),
					"DEFAULT" => "N",
				),
				array(
					"ID" => "MOBILE_CATALOG_BLOCK_COMPACT",
					"NAME" => GetMessage("MOBILE_CATALOG_BLOCK_COMPACT"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "Y", "COMPONENT_VALUE" => "", "NAME" => GetMessage("YES")),
						array("VALUE" => "N", "COMPONENT_VALUE" => "", "NAME" => GetMessage("NO")),
					),
					"DEFAULT" => "N",
				),
				array(
					"ID" => "LEFT_BLOCK_CATALOG_ICONS",
					"NAME" => GetMessage("LEFT_BLOCK_CATALOG_ICONS"),
					"TYPES" => array("COMPONENT"=>"TEXT", "MODULE" => "SELECTBOX"),
					"VALUES" => array(
						array("VALUE" => "Y", "COMPONENT_VALUE" => "", "NAME" => GetMessage("YES")),
						array("VALUE" => "N", "COMPONENT_VALUE" => "", "NAME" => GetMessage("NO")),
					),
					"DEFAULT" => "N",
				),
			)
		);

		$arComponentOptions = array();
		$arModuleOptions = array(GetMessage("TEMPLATE_OPTIONS"));
		$arModuleOptions[] = array("THEME_SWITCHER", GetMessage("THEME_SWITCHER"), 'N', array('checkbox'));

		foreach($arTemplateOptions as $key => $arTemplateOption){
			$arModuleValues = array(strToLower($arTemplateOption["TYPES"]["MODULE"]), isset($arTemplateOption["INCLUDEFILE"]) ? array("INCLUDEFILE" => $arTemplateOption["INCLUDEFILE"]) : array());
			$useTheme = isset($arTemplateOption["THEME"]) && $arTemplateOption["THEME"] === "N" ? "N" : "Y";

			if($arTemplateOption["VALUES"] && is_array($arTemplateOption["VALUES"])){
				foreach($arTemplateOption["VALUES"] as $key => $value){
					$arModuleValues[1][$value["VALUE"]] = $value["NAME"];
				}
			}
			$arComponentValues = array();
			if($arTemplateOption["VALUES"] && is_array($arTemplateOption["VALUES"])){
				$arComponentValues = $arTemplateOption["VALUES"];
			}
			if($arTemplateOption["ID"] !== 'BANNER_WIDTH' && $arTemplateOption["ID"] !== 'STORES'){
				$arModuleOptions[] = array($arTemplateOption["ID"], $arTemplateOption["NAME"], $arTemplateOption["DEFAULT"], $arModuleValues);
			}
			$arComponentOptions[] = array("ID" => $arTemplateOption["ID"], "NAME" => $arTemplateOption["NAME"], "TYPE" => $arTemplateOption["TYPES"]["COMPONENT"], "VALUES" => $arComponentValues, "DEFAULT" => $arTemplateOption["DEFAULT"], "THEME" => $useTheme);
		}
		$arModuleOptions[] = array("NO_LOGO_BG", GetMessage("NO_LOGO_BG"), "N", array("checkbox"));
		$arModuleOptions[] = array("CUSTOM_FONT", GetMessage("T_GOOGLE_FONTS"), "", array("text", 50));
		$arModuleOptions[] = array("PHONE_MASK", GetMessage("PHONE_MASK"), "+7 (999) 999-99-99", array("text", 15));
		$arModuleOptions[] = array("VALIDATE_PHONE_MASK", GetMessage("VALIDATE_PHONE_MASK"), "^[+][7] [(][0-9]{3}[)] [0-9]{3}[-][0-9]{2}[-][0-9]{2}$", array("text", 50));
		$arModuleOptions[] = array("SHOW_LICENCE", GetMessage("SHOW_LICENCE_TITLE"), "N", array("checkbox"));
		$arModuleOptions[] = array("LICENCE_CHECKED", GetMessage("LICENCE_CHECKED_TITLE"), "N", array("checkbox"));
		$arModuleOptions[] = array("LICENCE_TEXT", GetMessage("LICENCE_TEXT_TITLE"), "", array("includefile", array("INCLUDEFILE" => "#SITE_DIR#include/licenses_text.php")));
		$arModuleOptions[] = array("SHOW_BREADCRUMBS_CATALOG_SUBSECTIONS", GetMessage("SHOW_BREADCRUMBS_CATALOG_SUBSECTIONS"), "Y", array("checkbox"));
		$arModuleOptions[] = array("SHOW_BREADCRUMBS_CATALOG_CHAIN", GetMessage("SHOW_BREADCRUMBS_CATALOG_CHAIN"), "H1", array("selectbox", array('H1' => GetMessage('SHOW_BREADCRUMBS_CATALOG_CHAIN_H1'), 'NAME' => GetMessage('SHOW_BREADCRUMBS_CATALOG_CHAIN_NAME'))));
		$arModuleOptions[] = array("SHOW_BASKET_PRINT", GetMessage("SHOW_BASKET_PRINT"), "Y", array("checkbox"));
		$arModuleOptions[] = array("SHOW_SECTION_DESCRIPTION", GetMessage("SHOW_SECTION_DESCRIPTION"), "BOTTOM", array("selectbox", array('TOP' => GetMessage('TOP_SECTION'), 'BOTTOM' => GetMessage('BOTTOM_SECTION'), 'BOTH' => GetMessage('BOTH_SECTION'))));

		$arFielDescription = array(
			"DESCRIPTION" => GetMessage("DESCRIPTION_SECTION")."(DESCRIPTION)",
			"UF_SECTION_DESCR" => GetMessage("SEO_DESCRIPTION_SECTION")."(UF_SECTION_DESCR)",

		);

		$arModuleOptions[] = array("TOP_SECTION_DESCRIPTION_POSITION", GetMessage("TOP_SECTION_DESCRIPTION"), "UF_SECTION_DESCR", array("selectbox", $arFielDescription));
		$arModuleOptions[] = array("BOTTOM_SECTION_DESCRIPTION_POSITION", GetMessage("BOTTOM_SECTION_DESCRIPTION"), "DESCRIPTION", array("selectbox", $arFielDescription));

		$arModuleOptions[] = array("MAX_DEPTH_MENU", GetMessage("MAX_DEPTH_MENU"), "4", array("selectbox", array(2=>2,3=>3,4=>4)));
		$arModuleOptions[] = array("CATALOG_IBLOCK_ID", GetMessage("CATALOG_IBLOCK_ID"), "", array("selectbox_iblock"));
		$arModuleOptions[] = array("DISCOUNT_PRICE", GetMessage("DISCOUNT_PRICE"), "", array("selectbox_price"));

		$arModuleOptions[] = array("HIDE_SITE_NAME_TITLE", GetMessage("HIDE_SITE_NAME_TITLE"), "N", array("checkbox"));
		$arModuleOptions[] = array("LOGIN_EQUAL_EMAIL", GetMessage("LOGIN_EQUAL_EMAIL"), "Y", array("checkbox"));

		$arModuleOptions[] = array("HIDE_IMAGES_IN_MENU", GetMessage("HIDE_IMAGES_IN_MENU"), "N", array("checkbox"));
		$arModuleOptions[] = array("SHOW_FIRST_SKU_PICTURE", GetMessage("T_SHOW_FIRST_SKU_PICTURE"), "N", array("checkbox"));
		$arModuleOptions[] = array("SHOW_DELAY", GetMessage("T_SHOW_DELAY"), "Y", array("checkbox"));
		$arModuleOptions[] = array("SHOW_COMPARE", GetMessage("T_SHOW_COMPARE"), "Y", array("checkbox"));

		$arModuleOptions[] = array("SHOW_OFFER", GetMessage("SHOW_OFFER_TITLE"), "N", array("checkbox"));
		$arModuleOptions[] = array("OFFER_CHECKED", GetMessage("OFFER_CHECKED_TITLE"), "N", array("checkbox"));
		$arModuleOptions[] = array("OFFER_TEXT", GetMessage("OFFER_TEXT_TITLE"), "", array("includefile", array("INCLUDEFILE" => "#SITE_DIR#include/offer_text.php")));
		$arModuleOptions[] = array('OFFER_NOTE', "note" => GetMessage("OFFER_NOTE"));
		$arModuleOptions[] = array("MAP_TYPE", GetMessage("T_MAP_TYPE"), 0, array("selectbox", array("Yandex", "Google")));
		$arModuleOptions[] = array("VIEW_TYPE_HIGHLOAD_PROP", GetMessage("T_VIEW_TYPE_HIGHLOAD_PROP"), "N", array("checkbox"));


		if(!$onlyTemplate){
			
			// scroll to top button options
			$arModuleOptions[] = GetMessage("GOOGLE_RECAPTCHA");
			$arModuleOptions[] = array("USE_GOOGLE_RECAPTCHA", GetMessage("USE_GOOGLE_RECAPTCHA_TITLE"), "N", array("checkbox"));
			$arModuleOptions[] = array("GOOGLE_RECAPTCHA_VERSION", GetMessage('GOOGLE_RECAPTCHA_VERSION_TITLE'), "2", array("selectbox", array('2' => GetMessage('GOOGLE_RECAPTCHA_VERSION2_TITLE'), '3' => GetMessage('GOOGLE_RECAPTCHA_VERSION3_TITLE'))));
			$arModuleOptions[] = array("GOOGLE_RECAPTCHA_PUBLIC_KEY", GetMessage("GOOGLE_RECAPTCHA_PUBLIC_KEY_TITLE"), "", array("text", 50));
			$arModuleOptions[] = array("GOOGLE_RECAPTCHA_PRIVATE_KEY", GetMessage("GOOGLE_RECAPTCHA_PRIVATE_KEY_TITLE"), "", array("text", 50));
			$arModuleOptions[] = array("GOOGLE_RECAPTCHA_MASK_PAGE", GetMessage("GOOGLE_RECAPTCHA_MASK_PAGE_TITLE"), "", array("textarea", 5, 80));
			$arModuleOptions[] = array("GOOGLE_RECAPTCHA_MIN_SCORE", GetMessage('GOOGLE_RECAPTCHA_MIN_SCORE_TITLE'), '0.5', 
				array("selectbox", 
					array(
						'0.1' => '0.1',
						'0.3' => '0.3',
						'0.5' => '0.5',
						'0.7' => '0.7',
						'0.9' => '0.9',
					)
				)
			);
			$arModuleOptions[] = array(
				"GOOGLE_RECAPTCHA_COLOR",
				GetMessage("GOOGLE_RECAPTCHA_COLOR_TITLE"),
				"LIGHT",
				array(
					"selectbox",
					array(
						'DARK' => GetMessage('GOOGLE_RECAPTCHA_COLOR_DARK_TITLE'),
						'LIGHT' => GetMessage('GOOGLE_RECAPTCHA_COLOR_LIGHT_TITLE'),
					),
				),
			);
			$arModuleOptions[] = array(
				"GOOGLE_RECAPTCHA_SIZE",
				GetMessage("GOOGLE_RECAPTCHA_SIZE_TITLE"),
				"NORMAL",
				array(
					"selectbox",
					array(
						'NORMAL' => GetMessage('GOOGLE_RECAPTCHA_SIZE_NORMAL_TITLE'),
						'COMPACT' => GetMessage('GOOGLE_RECAPTCHA_SIZE_COMPACT_TITLE'),
						'INVISIBLE' => GetMessage('GOOGLE_RECAPTCHA_SIZE_INVISIBLE_TITLE'),
					),
				),
			);
			$arModuleOptions[] = array("GOOGLE_RECAPTCHA_SHOW_LOGO", GetMessage("GOOGLE_RECAPTCHA_SHOW_LOGO_TITLE"), "Y", array("checkbox"));
			$arModuleOptions[] = array(
				"GOOGLE_RECAPTCHA_BADGE",
				GetMessage("GOOGLE_RECAPTCHA_BADGE_TITLE"),
				"LIGHT",
				array(
					"selectbox",
					array(
						'BOTTOMRIGHT' => GetMessage('GOOGLE_RECAPTCHA_BADGE_BOTTOMRIGHT_TITLE'),
						'BOTTOMLEFT' => GetMessage('GOOGLE_RECAPTCHA_BADGE_BOTTOMLEFT_TITLE'),
						'INLINE' => GetMessage('GOOGLE_RECAPTCHA_BADGE_INLINE_TITLE'),
					),
				),
			);
			$arModuleOptions[] = array('GOOGLE_RECAPTCHA_NOTE', "note" => GetMessage("GOOGLE_RECAPTCHA_NOTE_TEXT"));

			$arModuleOptions[] = GetMessage("SCROLLTOTOP_OPTIONS");
			$arModuleOptions[] = array(
				"SCROLLTOTOP_TYPE",
				GetMessage("SCROLLTOTOP_TYPE"),
				"ROUND_COLOR",
				array(
					"selectbox",
					array(
						'NONE' => GetMessage('SCROLLTOTOP_TYPE_NONE'),
						'ROUND_COLOR' => GetMessage('SCROLLTOTOP_TYPE_ROUND_COLOR'),
						'ROUND_GREY' => GetMessage('SCROLLTOTOP_TYPE_ROUND_GREY'),
						'ROUND_WHITE' => GetMessage('SCROLLTOTOP_TYPE_ROUND_WHITE'),
						'RECT_COLOR' => GetMessage('SCROLLTOTOP_TYPE_RECT_COLOR'),
						'RECT_GREY' => GetMessage('SCROLLTOTOP_TYPE_RECT_GREY'),
						'RECT_WHITE' => GetMessage('SCROLLTOTOP_TYPE_RECT_WHITE'),
					),
				),
			);
			$arModuleOptions[] = array(
				"SCROLLTOTOP_POSITION",
				GetMessage("SCROLLTOTOP_POSITION"),
				"PADDING",
				array(
					"selectbox",
					array(
						'TOUCH' => GetMessage('SCROLLTOTOP_POSITION_TOUCH'),
						'PADDING' => GetMessage('SCROLLTOTOP_POSITION_PADDING'),
					),
				),
			);

			// oneClick Buy
			$arModuleOptions[] = GetMessage("ONECLICKBUY_OPTIONS");
			$arModuleOptions[] = array("ONE_CLICK_BUY_CAPTCHA", GetMessage("ONE_CLICK_BUY_CAPTCHA_TITLE"), "N", array("checkbox"));
			$arModuleOptions[] = array("SHOW_ONECLICKBUY_ON_BASKET_PAGE", GetMessage("SHOW_ONECLICKBUY_ON_BASKET_PAGE_TITLE"), "Y", array("checkbox"));
			$arModuleOptions[] = array("ONECLICKBUY_SHOW_DELIVERY_NOTE", GetMessage("ONECLICKBUY_SHOW_DELIVERY_NOTE"), "N", array("checkbox"));
			$arModuleOptions[] = array("ONECLICKBUY_PERSON_TYPE", GetMessage("ONECLICKBUY_PERSON_TYPE"), "1", array("selectbox", array()));
			$arModuleOptions[] = array("ONECLICKBUY_DELIVERY", GetMessage("ONECLICKBUY_DELIVERY"), "2", array("selectbox", array()));
			$arModuleOptions[] = array("ONECLICKBUY_PAYMENT", GetMessage("ONECLICKBUY_PAYMENT"), "1", array("selectbox", array()));
			// $arModuleOptions[] = array("ONECLICKBUY_CURRENCY", GetMessage("ONECLICKBUY_CURRENCY"), "RUB", array("selectbox", array()));
			$arModuleOptions[] = array("ONECLICKBUY_PROPERTIES", GetMessage("ONECLICKBUY_PROPERTIES"),
				$arOneClickPropertiesList = "FIO,PHONE,EMAIL,COMMENT",
				array("multiselectbox",
					$arOneClickPropertiesList = array(
						"FIO" => GetMessage('ONECLICKBUY_PROPERTIES_FIO'),
						"PHONE" => GetMessage('ONECLICKBUY_PROPERTIES_PHONE'),
						"EMAIL" => GetMessage('ONECLICKBUY_PROPERTIES_EMAIL'),
						"COMMENT" => GetMessage('ONECLICKBUY_PROPERTIES_COMMENT'),
					),
				)
			);
			$arModuleOptions[] = array("ONECLICKBUY_REQUIRED_PROPERTIES", GetMessage("ONECLICKBUY_REQUIRED_PROPERTIES"), "FIO,PHONE", array("multiselectbox", $arOneClickPropertiesList));

			// main index page options
			$arModuleOptions[] = GetMessage("INDEXPAGE_OPTIONS");

			$arModuleOptions[] = array(
				"BANNER_ANIMATIONTYPE",
				GetMessage("BANNER_ANIMATIONTYPE"),
				"SLIDE_HORIZONTAL",
				array(
					"selectbox",
					array(
						"SLIDE_HORIZONTAL" => GetMessage("ANIMATION_SLIDE_HORIZONTAL"),
						"SLIDE_VERTICAL" => GetMessage("ANIMATION_SLIDE_VERTICAL"),
						"FADE" => GetMessage("ANIMATION_FADE"),
					),
				),
			);
			$arModuleOptions[] = array("BANNER_SLIDESSHOWSPEED", GetMessage("BANNER_SLIDESSHOWSPEED"), "5000", array("text", "5"));
			$arModuleOptions[] = array("BANNER_ANIMATIONSPEED", GetMessage("BANNER_ANIMATIONSPEED"), "600", array("text", "5"));
			// instagram main page options
			$arModuleOptions[] = GetMessage("INDEXPAGE_INSTAGRAM_OPTIONS");
			$arModuleOptions[] = array("API_TOKEN_INSTAGRAMM", GetMessage("API_TOKEN_INSTAGRAMM"), "", array("text", "50"));
			$arModuleOptions[] = array("INSTAGRAMM_TITLE_BLOCK", GetMessage("INSTAGRAMM_TITLE_BLOCK"), "", array("text", "50", 'DEFAULT' => GetMessage('INSTAGRAMM_VALUE'),));
			$arModuleOptions[] = array("INSTAGRAMM_ITEMS_VISIBLE", GetMessage("INSTAGRAMM_ITEMS_VISIBLE"), "4", array("selectbox", array(
				'3' => 3,
				'4' => 4,
			)));

			// add to basket options
			$arModuleOptions[] = GetMessage("ADDTOBASKET_OPTIONS");
			$arModuleOptions[] = array("SHOW_BASKET_ONADDTOCART", GetMessage("SHOW_BASKET_ONADDTOCART"), "Y", array("checkbox"));
			$arModuleOptions[] = array("USE_PRODUCT_QUANTITY_LIST", GetMessage("USE_PRODUCT_QUANTITY_LIST"), "Y", array("checkbox"));
			$arModuleOptions[] = array("USE_PRODUCT_QUANTITY_DETAIL", GetMessage("USE_PRODUCT_QUANTITY_DETAIL"), "Y", array("checkbox"));
			$arModuleOptions[] = array(
				"BUYNOPRICEGGOODS",
				GetMessage("BUYNOPRICEGGOODS"),
				"NOTHING",
				array(
					"selectbox",
					array(
						"ORDER" => GetMessage("BUYNOPRICEGGOODS_ORDER"),
						"NOTHING" => GetMessage("BUYNOPRICEGGOODS_NOTHING"),
					),
				),
			);
			$arModuleOptions[] = array(
				"BUYMISSINGGOODS",
				GetMessage("BUYMISSINGGOODS"),
				"ADD",
				array(
					"selectbox",
					array(
						"ADD" => GetMessage("BUYMISSINGGOODS_ADD"),
						"ORDER" => GetMessage("BUYMISSINGGOODS_ORDER"),
						"SUBSCRIBE" => GetMessage("BUYMISSINGGOODS_SUBSCRIBE"),
						"NOTHING" => GetMessage("BUYMISSINGGOODS_NOTHING"),
					),
				),
			);


			// show quantity options
			$arModuleOptions[] = GetMessage("QUANTITY_OPTIONS");
			$arGroups = array();
			$DefaultGroupID = 0;
			$rsGroups = CGroup::GetList($by = "id", $order = "asc", array("ACTIVE" => "Y"));
			while($arItem = $rsGroups->Fetch()){
				$arGroups[$arItem["ID"]] = $arItem["NAME"];
				if($arItem["ANONYMOUS"] == "Y"){
					$DefaultGroupID = $arItem["ID"];
				}
			}
			$arGroupMultiselect = array("multiselectbox", $arGroups);
			$arModuleOptions[] = array("SHOW_QUANTITY_FOR_GROUPS", GetMessage("SHOW_QUANTITY_FOR_GROUPS"), $DefaultGroupID, $arGroupMultiselect);
			$arModuleOptions[] = array("SHOW_QUANTITY_COUNT_FOR_GROUPS", GetMessage("SHOW_QUANTITY_COUNT_FOR_GROUPS"), $DefaultGroupID, $arGroupMultiselect);
			$arModuleOptions[] = array('SHOW_QUANTITY_NOTE', "note" => GetMessage("SHOW_QUANTITY_NOTE"));
			$arModuleOptions[] = array("USE_WORD_EXPRESSION", GetMessage("USE_WORD_EXPRESSION"), "Y", array("checkbox"));
			$arModuleOptions[] = array("MAX_AMOUNT", GetMessage("MAX_AMOUNT"), "10", array("text", "4"));
			$arModuleOptions[] = array("MIN_AMOUNT", GetMessage("MIN_AMOUNT"), "2", array("text", "4"));

			// expression options
			$arModuleOptions[] = GetMessage("EXPRESSIONS_OPTIONS");
			$arModuleOptions[] = array("EXPRESSION_SUBSCRIBE_BUTTON", GetMessage("EXPRESSION_SUBSCRIBE_BUTTON"), GetMessage("EXPRESSION_SUBSCRIBE_BUTTON_DEFAULT"), array("text", "20"));
			$arModuleOptions[] = array("EXPRESSION_SUBSCRIBED_BUTTON", GetMessage("EXPRESSION_SUBSCRIBED_BUTTON"), GetMessage("EXPRESSION_SUBSCRIBED_BUTTON_DEFAULT"), array("text", "20"));
			$arModuleOptions[] = array("EXPRESSION_ORDER_BUTTON", GetMessage("EXPRESSION_ORDER_BUTTON"), GetMessage("EXPRESSION_ORDER_BUTTON_DEFAULT"), array("text", "20"));
			$arModuleOptions[] = array("EXPRESSION_ORDER_TEXT", GetMessage("EXPRESSION_ORDER_TEXT"), GetMessage("EXPRESSION_ORDER_TEXT_DEFAULT"), array("textarea", "2", "50"));
			$arModuleOptions[] = array("EXPRESSION_FOR_EXISTS", GetMessage("EXPRESSION_FOR_EXISTS"), GetMessage("EXPRESSION_FOR_EXISTS_DEFAULT"), array("text", "20"));
			$arModuleOptions[] = array("EXPRESSION_FOR_NOTEXISTS", GetMessage("EXPRESSION_FOR_NOTEXISTS"), GetMessage("EXPRESSION_FOR_NOTEXISTS_DEFAULT"), array("text", "20"));
			$arModuleOptions[] = array("EXPRESSION_FOR_MIN", GetMessage("EXPRESSION_FOR_MIN"), GetMessage("EXPRESSION_FOR_MIN_DEFAULT"), array("text", "20"));
			$arModuleOptions[] = array("EXPRESSION_FOR_MID", GetMessage("EXPRESSION_FOR_MID"), GetMessage("EXPRESSION_FOR_MID_DEFAULT"), array("text", "20"));
			$arModuleOptions[] = array("EXPRESSION_FOR_MAX", GetMessage("EXPRESSION_FOR_MAX"), GetMessage("EXPRESSION_FOR_MAX_DEFAULT"), array("text", "20"));
			// $arModuleOptions[] = array("EXPRESSION_FOR_FREE_DELIVERY", GetMessage("EXPRESSION_FOR_FREE_DELIVERY"), GetMessage("EXPRESSION_FOR_FREE_DELIVERY_DEFAULT"), array("text", "20"));
			$arModuleOptions[] = array("EXPRESSION_FOR_FAST_VIEW", GetMessage("EXPRESSION_FOR_FAST_VIEW"), GetMessage("EXPRESSION_FOR_FAST_VIEW_DEFAULT"), array("text", "20"));
			$arModuleOptions[] = array("EXPRESSION_FOR_EMPTY_PRICE", GetMessage("EXPRESSION_FOR_EMPTY_PRICE"), '', array("text", "20"));

			// show min prices order
			$arModuleOptions[] = GetMessage("MIN_ORDER_PRICES");
			$arModuleOptions[] = array("MIN_ORDER_PRICE", GetMessage("MIN_ORDER_PRICE"), 1000, array("text", "20"));
			$arModuleOptions[] = array("MIN_ORDER_PRICE_TEXT", GetMessage("MIN_ORDER_PRICE_TEXT"), GetMessage("MIN_ORDER_PRICE_TEXT_EXAMPLE"), array("textarea", "3", "70"));

			// show min prices order
			$arModuleOptions[] = GetMessage("SITE_PAGES");
			$arModuleOptions[] = array("CATALOG_PAGE_URL", GetMessage("CATALOG_PAGE_URL"), '#SITE_DIR#catalog/', array("text", "20"));
			$arModuleOptions[] = array("BASKET_PAGE_URL", GetMessage("BASKET_PAGE_URL"), '#SITE_DIR#basket/', array("text", "20"));
			$arModuleOptions[] = array("ORDER_PAGE_URL", GetMessage("ORDER_PAGE_URL"), '#SITE_DIR#order/', array("text", "20"));
			$arModuleOptions[] = array("PERSONAL_PAGE_URL", GetMessage("PERSONAL_PAGE_URL"), '#SITE_DIR#personal/', array("text", "20"));

			// yandex
			$arModuleOptions[] = GetMessage('COUNTERS_GOALS_BLOCK');
			$arModuleOptions[] = array('USE_YA_COUNTER', GetMessage('USE_YA_COUNTER_TITLE'), 'N', array('checkbox'));
			$arModuleOptions[] = array('YANDEX_COUNTER', GetMessage('YANDEX_COUNTER_CODE_TITLE'), '', array('textarea', '3', '50'));
			$arModuleOptions[] = array('YA_COUNTER_ID', GetMessage('YA_COUNTER_ID_TITLE'), '', array('text', '20'));
			$arModuleOptions[] = array('YANDEX_ECOMERCE', GetMessage('YANDEX_ECOMERCE_TITLE'), 'N', array('checkbox'));
			$arModuleOptions[] = array(
				'USE_FORMS_GOALS',
				GetMessage('USE_FORMS_GOALS_TITLE'),
				'COMMON',
				array(
					'selectbox',
					array(
						'NONE' => GetMessage('USE_FORMS_GOALS_NONE'),
						'COMMON' => GetMessage('USE_FORMS_GOALS_COMMON'),
						'SINGLE' => GetMessage('USE_FORMS_GOALS_SINGLE'),
					),
				),
			);
			$arModuleOptions[] = array('USE_BASKET_GOALS', GetMessage('USE_BASKET_GOALS_TITLE'), 'Y', array('checkbox'));
			$arModuleOptions[] = array('USE_1CLICK_GOALS', GetMessage('USE_1CLICK_GOALS_TITLE'), 'Y', array('checkbox'));
			$arModuleOptions[] = array('USE_FASTORDER_GOALS', GetMessage('USE_FASTORDER_GOALS_TITLE'), 'Y', array('checkbox'));
			$arModuleOptions[] = array('USE_FULLORDER_GOALS', GetMessage('USE_FULLORDER_GOALS_TITLE'), 'Y', array('checkbox'));
			$arModuleOptions[] = array('USE_DEBUG_GOALS', GetMessage('USE_DEBUG_GOALS_TITLE'), 'N', array('checkbox'));
			$arModuleOptions[] = array('GOALS_NOTE', 'note' => GetMessage('GOALS_NOTE_TITLE'));

			// google
			$arModuleOptions[] = array("GOOGLE_COUNTER", GetMessage("GOOGLE_COUNTER_TITLE"), '', array("textarea", "3", "50"));
			$arModuleOptions[] = array("GOOGLE_ECOMERCE", GetMessage("GOOGLE_ECOMERCE_TITLE"), 'N', array("checkbox"));
			$arModuleOptions[] = array("BASKET_ADD_EVENT", GetMessage("BASKET_ADD_EVENT_TITLE"), "addToCart", array("text", "20"));
			$arModuleOptions[] = array("BASKET_REMOVE_EVENT", GetMessage("BASKET_REMOVE_EVENT_TITLE"), "removeFromCart", array("text", "20"));
			$arModuleOptions[] = array("CHECKOUT_ORDER_EVENT", GetMessage("CHECKOUT_ORDER_EVENT_TITLE"), "checkout", array("text", "20"));
			$arModuleOptions[] = array("PURCHASE_ORDER_EVENT", GetMessage("PURCHASE_ORDER_EVENT_TITLE"), "gtm.dom", array("text", "20"));

			$arTabsForView = COption::GetOptionString(self::moduleID, 'TABS_FOR_VIEW_ASPRO_OPTIMUS', '');
			if($arTabsForView) {
				$arTabsForView = explode(',' , $arTabsForView);
			}

			$arTabs = array();
			foreach($arSites as $key => $arSite){
				if($arTabsForView) {
					if(in_array($arSite['ID'], $arTabsForView)) {
						$arTabs[] = array(
							"DIV" => "edit".($key+1),
							"TAB" => GetMessage("MAIN_OPTIONS", array("#SITE_NAME#" => $arSite["NAME"], "#SITE_ID#" => $arSite["ID"])),
							"ICON" => "settings",
							"TITLE" => GetMessage("MAIN_OPTIONS_TITLE"),
							"PAGE_TYPE" => "site_settings",
							"SITE_ID" => $arSite["ID"],
							"SITE_DIR" => str_replace('//', '/', '/'.$arSite['DIR']),
							"OPTIONS" => $arModuleOptions,
						);
					}
				} else {
					$arTabs[] = array(
						"DIV" => "edit".($key+1),
						"TAB" => GetMessage("MAIN_OPTIONS", array("#SITE_NAME#" => $arSite["NAME"], "#SITE_ID#" => $arSite["ID"])),
						"ICON" => "settings",
						"TITLE" => GetMessage("MAIN_OPTIONS_TITLE"),
						"PAGE_TYPE" => "site_settings",
						"SITE_ID" => $arSite["ID"],
						"SITE_DIR" => str_replace('//', '/', '/'.$arSite['DIR']),
						"OPTIONS" => $arModuleOptions,
					);
				}
			}
		}

		return array("TABS" => $arTabs, "TEMPLATE_OPTIONS" => $arComponentOptions);
	}

	function SetJSOptions(){
		global $APPLICATION, $TEMPLATE_OPTIONS, $THEME_SWITCHER, $STARTTIME;
		$MESS["MIN_ORDER_PRICE_TEXT"]=COption::GetOptionString(self::moduleID, "MIN_ORDER_PRICE_TEXT", GetMessage("MIN_ORDER_PRICE_TEXT_EXAMPLE"), SITE_ID);
		\Bitrix\Main\Page\Frame::getInstance()->startDynamicWithID('basketitems-component-block');
			if(self::getShowBasket()):
				$APPLICATION->IncludeComponent( "bitrix:sale.basket.basket.line", "actual", Array(
					"PATH_TO_BASKET" => SITE_DIR."basket/",
					"PATH_TO_ORDER" => SITE_DIR."order/",
					"SHOW_DELAY" => "Y",
					"SHOW_PRODUCTS"=>"Y",
					"SHOW_EMPTY_VALUES" => "Y",
					"SHOW_NOTAVAIL" => "N",
					"SHOW_SUBSCRIBE" => "N",
					"SHOW_IMAGE" => "Y",
					"SHOW_PRICE" => "Y",
					"SHOW_SUMMARY" => "Y",
					"SHOW_NUM_PRODUCTS" => "Y",
					"SHOW_TOTAL_PRICE" => "Y",
					"HIDE_ON_BASKET_PAGES" => "N"
				) );
			endif;
		\Bitrix\Main\Page\Frame::getInstance()->finishDynamicWithID('basketitems-component-block', '');
		if(COption::GetOptionString(self::moduleID, "SHOW_LICENCE", 'N', SITE_ID) == "Y"){
			$MESS["LICENSES_TEXT"] = file_get_contents($_SERVER["DOCUMENT_ROOT"].SITE_DIR."include/licenses_text.php");
		}

		if(COption::GetOptionString(self::moduleID, "SHOW_OFFER", 'N', SITE_ID) == "Y"){
			$MESS["OFFER_TEXT"] = file_get_contents($_SERVER["DOCUMENT_ROOT"].SITE_DIR."include/offer_text.php");
		}
		$bIndexBot = (isset($_SERVER['HTTP_ACCEPT_LANGUAGE']) && strpos($_SERVER['HTTP_USER_AGENT'], 'Lighthouse') !== false); // is indexed yandex/google bot
		?>
		<?if(!$bIndexBot):?>
			<script type="text/javascript">
			BX.message(<?=CUtil::PhpToJSObject( $MESS, false )?>);

			var arOptimusOptions = ({
				"SITE_DIR" : "<?=SITE_DIR?>",
				"SITE_ID" : "<?=SITE_ID?>",
				"FORM" : ({
					"ASK_FORM_ID" : "ASK",
					"SERVICES_FORM_ID" : "SERVICES",
					"FEEDBACK_FORM_ID" : "FEEDBACK",
					"CALLBACK_FORM_ID" : "CALLBACK",
					"RESUME_FORM_ID" : "RESUME",
					"TOORDER_FORM_ID" : "TOORDER",
					"CHEAPER_FORM_ID" : "CHEAPER",
					"DELIVERY_FORM_ID" : "DELIVERY",
				}),
				"PAGES" : ({
					"FRONT_PAGE" : "<?=self::IsMainPage()?>",
					"BASKET_PAGE" : "<?=self::IsBasketPage()?>",
					"ORDER_PAGE" : "<?=self::IsOrderPage()?>",
					"PERSONAL_PAGE" : "<?=self::IsPersonalPage()?>",
					"CATALOG_PAGE" : "<?=self::IsCatalogPage()?>",
					"CATALOG_PAGE_URL" : "<?=(str_replace('#SITE_DIR#', SITE_DIR, \Bitrix\Main\Config\Option::get(self::moduleID, 'CATALOG_PAGE_URL', SITE_DIR.'catalog/', SITE_ID)));?>",
				}),
				"PRICES" : ({
					"MIN_PRICE" : "<?=trim(COption::GetOptionString(self::moduleID, "MIN_ORDER_PRICE", "1000", SITE_ID));?>",
				}),
				"THEME" : ({
					"THEME_SWITCHER" : "<?=strToLower(trim($THEME_SWITCHER))?>",
					"COLOR_THEME" : "<?=strToLower(trim($TEMPLATE_OPTIONS["COLOR_THEME"]["CURRENT_VALUE"]))?>",
					"CUSTOM_COLOR_THEME" : "<?=strToLower(trim($TEMPLATE_OPTIONS["CUSTOM_COLOR_THEME"]["CURRENT_VALUE"]))?>",
					"LOGO_IMAGE" : "<?=trim($TEMPLATE_OPTIONS["LOGO_IMAGE"]["CURRENT_IMG"])?>",
					"FAVICON_IMAGE" : "<?=trim($TEMPLATE_OPTIONS["FAVICON_IMAGE"]["CURRENT_IMG"])?>",
					"APPLE_TOUCH_ICON_IMAGE" : "<?=trim($TEMPLATE_OPTIONS["APPLE_TOUCH_ICON_IMAGE"]["CURRENT_IMG"])?>",
					"BANNER_WIDTH" : "<?=strToLower(trim($TEMPLATE_OPTIONS["BANNER_WIDTH"]["CURRENT_VALUE"]))?>",
					"BANNER_ANIMATIONTYPE" : "<?=trim(COption::GetOptionString(self::moduleID, "BANNER_ANIMATIONTYPE", "SLIDE_HORIZONTAL", SITE_ID));?>",
					"BANNER_SLIDESSHOWSPEED" : "<?=trim(COption::GetOptionString(self::moduleID, "BANNER_SLIDESSHOWSPEED", "5000", SITE_ID));?>",
					"BANNER_ANIMATIONSPEED" : "<?=trim(COption::GetOptionString(self::moduleID, "BANNER_ANIMATIONSPEED", "600", SITE_ID));?>",
					"HEAD" : ({
						"VALUE" : "<?=strToLower(trim($TEMPLATE_OPTIONS["HEAD"]["CURRENT_VALUE"]))?>",
						"MENU" : "<?=strToLower(trim($TEMPLATE_OPTIONS["HEAD"]["CURRENT_MENU"]))?>",
						"MENU_COLOR" : "<?=strToLower(trim($TEMPLATE_OPTIONS["HEAD"]["CURRENT_MENU_COLOR"]))?>",
						"HEAD_COLOR" : "<?=strToLower(trim($TEMPLATE_OPTIONS["HEAD"]["CURRENT_HEAD_COLOR"]))?>",
					}),
					"BASKET" : "<?=strToLower(trim($TEMPLATE_OPTIONS["BASKET"]["CURRENT_VALUE"]))?>",
					"STORES" : "<?=strToLower(trim($TEMPLATE_OPTIONS["STORES"]["CURRENT_VALUE"]))?>",
					"STORES_SOURCE" : "<?=strToLower(trim($TEMPLATE_OPTIONS["STORES_SOURCE"]["CURRENT_VALUE"]))?>",
					"TYPE_SKU" : "<?=strToLower(trim($TEMPLATE_OPTIONS["TYPE_SKU"]["CURRENT_VALUE"]))?>",
					"TYPE_VIEW_FILTER" : "<?=strToLower(trim($TEMPLATE_OPTIONS["TYPE_VIEW_FILTER"]["CURRENT_VALUE"]))?>",
					"MOBILE_CATALOG_BLOCK_COMPACT" : "<?=strToLower(trim($TEMPLATE_OPTIONS["MOBILE_CATALOG_BLOCK_COMPACT"]["CURRENT_VALUE"]))?>",
					"SHOW_BASKET_ONADDTOCART" : "<?=trim(COption::GetOptionString(self::moduleID, "SHOW_BASKET_ONADDTOCART", "Y", SITE_ID))?>",
					"SHOW_BASKET_PRINT" : "<?=trim(COption::GetOptionString(self::moduleID, "SHOW_BASKET_PRINT", "Y", SITE_ID))?>",
					"SHOW_ONECLICKBUY_ON_BASKET_PAGE" : "<?=trim(COption::GetOptionString(self::moduleID, "SHOW_ONECLICKBUY_ON_BASKET_PAGE", "Y", SITE_ID))?>",
					"PHONE_MASK" : "<?=trim(COption::GetOptionString(self::moduleID, "PHONE_MASK", "+9 (999) 999-99-99", SITE_ID));?>",
					"VALIDATE_PHONE_MASK" : "<?=trim(COption::GetOptionString(self::moduleID, "VALIDATE_PHONE_MASK", "^[+][0-9] [(][0-9]{3}[)] [0-9]{3}[-][0-9]{2}[-][0-9]{2}$", SITE_ID));?>",
					"SCROLLTOTOP_TYPE" : "<?=trim(COption::GetOptionString(self::moduleID, "SCROLLTOTOP_TYPE", "ROUND_COLOR", SITE_ID))?>",
					"SCROLLTOTOP_POSITION" : "<?=trim(COption::GetOptionString(self::moduleID, "SCROLLTOTOP_POSITION", "PADDING", SITE_ID))?>",
					"MENU_POSITION" : "<?=strToLower(trim($TEMPLATE_OPTIONS["MENU_POSITION"]["CURRENT_VALUE"]))?>",
					"MENU_TYPE_VIEW" : "<?=strToLower(trim($TEMPLATE_OPTIONS["MENU_TYPE_VIEW"]["CURRENT_VALUE"]))?>",
					"SHOW_LICENCE" : "<?=COption::GetOptionString(self::moduleID, "SHOW_LICENCE", "N", SITE_ID)?>",
					"LICENCE_CHECKED" : "<?=COption::GetOptionString(self::moduleID, "LICENCE_CHECKED", "N", SITE_ID)?>",
					"SHOW_OFFER" : "<?=COption::GetOptionString(self::moduleID, "SHOW_OFFER", "N", SITE_ID)?>",
					"OFFER_CHECKED" : "<?=COption::GetOptionString(self::moduleID, "OFFER_CHECKED", "N", SITE_ID)?>",
					"DISCOUNT_PRICE" : "<?=COption::GetOptionString(self::moduleID, "DISCOUNT_PRICE", "", SITE_ID)?>",
					"DETAIL_PICTURE_MODE" : "<?=trim($TEMPLATE_OPTIONS["DETAIL_PICTURE_MODE"]["CURRENT_VALUE"])?>",
					"SHOW_TOTAL_SUMM" : "<?=trim($TEMPLATE_OPTIONS["SHOW_TOTAL_SUMM"]["CURRENT_VALUE"])?>",
					"CHANGE_TITLE_ITEM" : "<?=trim($TEMPLATE_OPTIONS["CHANGE_TITLE_ITEM"]["CURRENT_VALUE"])?>",
					"ONE_CLICK_BUY_CAPTCHA" :"<?=trim(COption::GetOptionString(self::moduleID, "ONE_CLICK_BUY_CAPTCHA", "N", SITE_ID))?>",
					"EMPTY_PRICE_TEXT" : "<?=trim(COption::GetOptionString(self::moduleID, "EXPRESSION_FOR_EMPTY_PRICE", "", SITE_ID))?>",
					'LOGIN_EQUAL_EMAIL': '<?=trim(COption::GetOptionString(self::moduleID, "LOGIN_EQUAL_EMAIL", "", SITE_ID))?>',
				}),
				"COUNTERS":({
					"YANDEX_COUNTER" : "<?=strlen(trim(COption::GetOptionString(self::moduleID, "YANDEX_COUNTER", false, SITE_ID)))?>",
					"YANDEX_ECOMERCE" : "<?=trim(COption::GetOptionString(self::moduleID, "YANDEX_ECOMERCE", false, SITE_ID))?>",
					"USE_YA_COUNTER" : "<?=trim(COption::GetOptionString(self::moduleID, "USE_YA_COUNTER", 'N', SITE_ID))?>",
					"YA_COUNTER_ID" : "<?=trim(COption::GetOptionString(self::moduleID, "YA_COUNTER_ID", '', SITE_ID))?>",
					"USE_FORMS_GOALS" : "<?=trim(COption::GetOptionString(self::moduleID, "USE_FORMS_GOALS", 'COMMON', SITE_ID))?>",
					"USE_BASKET_GOALS" : "<?=trim(COption::GetOptionString(self::moduleID, "USE_BASKET_GOALS", 'Y', SITE_ID))?>",
					"USE_1CLICK_GOALS" : "<?=trim(COption::GetOptionString(self::moduleID, "USE_1CLICK_GOALS", 'Y', SITE_ID))?>",
					"USE_FASTORDER_GOALS" : "<?=trim(COption::GetOptionString(self::moduleID, "USE_FASTORDER_GOALS", 'Y', SITE_ID))?>",
					"USE_FULLORDER_GOALS" : "<?=trim(COption::GetOptionString(self::moduleID, "USE_FULLORDER_GOALS", 'Y', SITE_ID))?>",
					"USE_DEBUG_GOALS" : "<?=trim(COption::GetOptionString(self::moduleID, "USE_DEBUG_GOALS", 'N', SITE_ID))?>",
					"GOOGLE_COUNTER" : "<?=strlen(trim(COption::GetOptionString(self::moduleID, "GOOGLE_COUNTER", false, SITE_ID)))?>",
					"GOOGLE_ECOMERCE" : "<?=trim(COption::GetOptionString(self::moduleID, "GOOGLE_ECOMERCE", false, SITE_ID))?>",
					"TYPE":{
						"ONE_CLICK":"<?=GetMessage("ONE_CLICK_BUY");?>",
						"QUICK_ORDER":"<?=GetMessage("QUICK_ORDER");?>",
					},
					"GOOGLE_EVENTS":{
						"ADD2BASKET": "<?=trim(COption::GetOptionString(self::moduleID, "BASKET_ADD_EVENT", "addToCart", SITE_ID))?>",
						"REMOVE_BASKET": "<?=trim(COption::GetOptionString(self::moduleID, "BASKET_REMOVE_EVENT", "removeFromCart", SITE_ID))?>",
						"CHECKOUT_ORDER": "<?=trim(COption::GetOptionString(self::moduleID, "CHECKOUT_ORDER_EVENT", "checkout", SITE_ID))?>",
						"PURCHASE": "<?=trim(COption::GetOptionString(self::moduleID, "PURCHASE_ORDER_EVENT", "gtm.dom", SITE_ID))?>",
					}
				}),
				"JS_ITEM_CLICK":({
					"precision" : 6,
					"precisionFactor" : Math.pow(10,6)
				})
			});

			$(document).ready(function(){
				$.extend( $.validator.messages, {
					required: BX.message('JS_REQUIRED'),
					email: BX.message('JS_FORMAT'),
					equalTo: BX.message('JS_PASSWORD_COPY'),
					minlength: BX.message('JS_PASSWORD_LENGTH'),
					remote: BX.message('JS_ERROR')
				});

				$.validator.addMethod(
					'regexp', function( value, element, regexp ){
						var re = new RegExp( regexp );
						return this.optional( element ) || re.test( value );
					},
					BX.message('JS_FORMAT')
				);

				$.validator.addMethod(
					'filesize', function( value, element, param ){
						return this.optional( element ) || ( element.files[0].size <= param )
					},
					BX.message('JS_FILE_SIZE')
				);

				$.validator.addMethod(
					'date', function( value, element, param ) {
						var status = false;
						if(!value || value.length <= 0){
							status = false;
						}
						else{
							// html5 date allways yyyy-mm-dd
							var re = new RegExp('^([0-9]{4})(.)([0-9]{2})(.)([0-9]{2})$');
							var matches = re.exec(value);
							if(matches){
								var composedDate = new Date(matches[1], (matches[3] - 1), matches[5]);
								status = ((composedDate.getMonth() == (matches[3] - 1)) && (composedDate.getDate() == matches[5]) && (composedDate.getFullYear() == matches[1]));
							}
							else{
								// firefox
								var re = new RegExp('^([0-9]{2})(.)([0-9]{2})(.)([0-9]{4})$');
								var matches = re.exec(value);
								if(matches){
									var composedDate = new Date(matches[5], (matches[3] - 1), matches[1]);
									status = ((composedDate.getMonth() == (matches[3] - 1)) && (composedDate.getDate() == matches[1]) && (composedDate.getFullYear() == matches[5]));
								}
							}
						}
						return status;
					}, BX.message('JS_DATE')
				);

				$.validator.addMethod(
					'extension', function(value, element, param){
						param = typeof param === 'string' ? param.replace(/,/g, '|') : 'png|jpe?g|gif';
						return this.optional(element) || value.match(new RegExp('.(' + param + ')$', 'i'));
					}, BX.message('JS_FILE_EXT')
				);

				$.validator.addMethod(
					'captcha', function( value, element, params ){
						return $.validator.methods.remote.call(this, value, element,{
							url: arOptimusOptions['SITE_DIR'] + 'ajax/check-captcha.php',
							type: 'post',
							data:{
								captcha_word: value,
								captcha_sid: function(){
									return $(element).closest('form').find('input[name="captcha_sid"]').val();
								}
							}
						});
					},
					BX.message('JS_ERROR')
				);

				$.validator.addMethod(
					'recaptcha', function(value, element, param){
						var id = $(element).closest('form').find('.g-recaptcha').attr('data-widgetid');
						if(typeof id !== 'undefined'){
							return grecaptcha.getResponse(id) != '';
						}
						else{
							return true;
						}
					}, BX.message('JS_RECAPTCHA_ERROR')
				);

				$.validator.addClassRules({
					'phone':{
						regexp: arOptimusOptions['THEME']['VALIDATE_PHONE_MASK']
					},
					'confirm_password':{
						equalTo: 'input[name="REGISTER\[PASSWORD\]"]',
						minlength: 6
					},
					'password':{
						minlength: 6
					},
					'inputfile':{
						extension: arOptimusOptions['THEME']['VALIDATE_FILE_EXT'],
						filesize: 5000000
					},
					'captcha':{
						captcha: ''
					},
					'recaptcha':{
						recaptcha: ''
					}
				});

				if(arOptimusOptions['THEME']['PHONE_MASK']){
					$('input.phone').inputmask('mask', {'mask': arOptimusOptions['THEME']['PHONE_MASK']});
				}

				jqmEd('feedback', arOptimusOptions['FORM']['FEEDBACK_FORM_ID']);
				jqmEd('ask', arOptimusOptions['FORM']['ASK_FORM_ID'], '.ask_btn');
				jqmEd('services', arOptimusOptions['FORM']['SERVICES_FORM_ID'], '.services_btn','','.services_btn');
				if($('.resume_send').length){
					$(document).on('click', '.resume_send', function(e) {	
						$("body").append("<span class='resume_send_wr' style='display:none;'></span>");
						jqmEd('resume', arOptimusOptions['FORM']['RESUME_FORM_ID'], '.resume_send_wr','', this);
						$("body .resume_send_wr").click();
						$("body .resume_send_wr").remove();
					})
				}
				jqmEd('callback', arOptimusOptions['FORM']['CALLBACK_FORM_ID'], '.callback_btn');
				//jqmEd('cheaper', arOptimusOptions['FORM']['CHEAPER_FORM_ID'], '.cheaper');

			});
			</script>
		<?endif;?>
		<?/*fix reset POST*/
		if($_SERVER["REQUEST_METHOD"]=="POST" && $_POST["color_theme"]){
			LocalRedirect($_SERVER["HTTP_REFERER"]);
		}?>
	<?}

	function checkAllowDelivery($summ, $currency){
		$ERROR = false;
		$min_price = \Bitrix\Main\Config\Option::get(self::moduleID, "MIN_ORDER_PRICE", 1000, SITE_ID);
		$error_text = "";
		if( $summ < $min_price ){
			$ERROR = true;
			$error_text = \Bitrix\Main\Config\Option::get(self::moduleID, "MIN_ORDER_PRICE_TEXT", GetMessage("MIN_ORDER_PRICE_TEXT_EXAMPLE") );
			$error_text = str_replace( '#PRICE#', SaleFormatCurrency($min_price,$currency), $error_text );
			if($currency)
				$error_text = str_replace( '#PRICE#', SaleFormatCurrency($min_price,$currency), $error_text );
			else
				$error_text = str_replace( '#PRICE#', $min_price, $error_text );
		}
		return $arError=array( "ERROR" => $ERROR, "TEXT" => $error_text );
	}

	function showMoreText( $text ){
		$arText = explode( "#MORE_TEXT#", $text);
		if( $arText[1] ){
			$str = $arText[0];
			$str .= '<div class="wrap_more_item">';
				$str .= '<div class="more_text_item">';
				$str .= $arText[1];
				$str .= '</div>';
				$str .= '<div class="open_more"><span class="text"><i class="arrow"></i><span class="pseudo">'.GetMessage("EXPAND_BLOCK").'</span></span></div>';
			$str .= '</div>';
		}else{
			$str = $text;
		}
		return $str;
	}

	public static function getShowBasket(){
		static $bShowBasket;
		if($bShowBasket === NULL)
		{
			$bShowBasket = !self::IsBasketPage() && !self::IsOrderPage();
		}
		return $bShowBasket;
	}

	public static function GetIndexPageBlocks($pageAbsPath, $pageBlocksPrefix, $pageBlocksDirName = 'page_blocks'){
    	$arResult = array();

    	if($pageAbsPath && $pageBlocksPrefix){
    		$pageAbsPath = str_replace('//', '//', $pageAbsPath).'/';
    		if(is_dir($pageBlocksAbsPath = str_replace('', '', $pageAbsPath.(strlen($pageBlocksDirName) ? $pageBlocksDirName : '')))){
    			if($arPageBlocks = glob($pageBlocksAbsPath.'/*.php')){
		    		foreach($arPageBlocks as $file){
						$file = str_replace('.php', '', basename($file));
						if(strpos($file, $pageBlocksPrefix) !== false){
							$arResult[$file] = $file;
						}
					}
    			}
    		}
    	}

    	return $arResult;
    }

    public static function GetComponentTemplatePageBlocks($templateAbsPath, $pageBlocksDirName = 'page_blocks'){
    	$arResult = array('SECTIONS' => array(), 'SUBSECTIONS' => array(), 'ELEMENTS' => array(), 'ELEMENT' => array());

    	if($templateAbsPath){
    		$templateAbsPath = str_replace('//', '//', $templateAbsPath).'/';
    		if(is_dir($pageBlocksAbsPath = str_replace('//', '/', $templateAbsPath.(strlen($pageBlocksDirName) ? $pageBlocksDirName : '')))){
    			if($arPageBlocks = glob($pageBlocksAbsPath.'/*.php')){
		    		foreach($arPageBlocks as $file){
						$file = str_replace('.php', '', basename($file));
						if(strpos($file, 'sections_') !== false){
							$arResult['SECTIONS'][$file] = $file;
						}
						elseif(strpos($file, 'section_') !== false){
							$arResult['SUBSECTIONS'][$file] = $file;
						}
						elseif(strpos($file, 'list_elements_') !== false){
							$arResult['ELEMENTS'][$file] = $file;
						}
						elseif(strpos($file, 'element_') !== false){
							$arResult['ELEMENT'][$file] = $file;
						}
						elseif(strpos($file, 'fast_view_') !== false){
							$arResult['FAST_VIEW_ELEMENT'][$file] = $file;
						}
						elseif(strpos($file, 'bigdata_') !== false){
							$arResult['BIGDATA'][$file] = $file;
						}
					}
    			}
    		}
    	}

    	return $arResult;
    }

    public static function GetComponentTemplatePageBlocksParams($arPageBlocks){
    	$arResult = array();

    	if($arPageBlocks && is_array($arPageBlocks)){
    		if(isset($arPageBlocks['SECTIONS']) && $arPageBlocks['SECTIONS'] && is_array($arPageBlocks['SECTIONS'])){
    			$arResult['SECTIONS_TYPE_VIEW'] = array(
					'PARENT' => 'BASE',
					'SORT' => 1,
					'NAME' => GetMessage('M_SECTIONS_TYPE_VIEW'),
					'TYPE' => 'LIST',
					'VALUES' => $arPageBlocks['SECTIONS'],
					'DEFAULT' => key($arPageBlocks['SECTIONS']),
				);
    		}
    		if(isset($arPageBlocks['SUBSECTIONS']) && $arPageBlocks['SUBSECTIONS'] && is_array($arPageBlocks['SUBSECTIONS'])){
    			$arResult['SECTION_TYPE_VIEW'] = array(
					'PARENT' => 'BASE',
					'SORT' => 1,
					'NAME' => GetMessage('M_SECTION_TYPE_VIEW'),
					'TYPE' => 'LIST',
					'VALUES' => $arPageBlocks['SUBSECTIONS'],
					'DEFAULT' => key($arPageBlocks['SUBSECTIONS']),
				);
    		}
    		if(isset($arPageBlocks['ELEMENTS']) && $arPageBlocks['ELEMENTS'] && is_array($arPageBlocks['ELEMENTS'])){
    			$arResult['SECTION_ELEMENTS_TYPE_VIEW'] = array(
					'PARENT' => 'BASE',
					'SORT' => 1,
					'NAME' => GetMessage('M_SECTION_ELEMENTS_TYPE_VIEW'),
					'TYPE' => 'LIST',
					'VALUES' => $arPageBlocks['ELEMENTS'],
					'DEFAULT' => key($arPageBlocks['ELEMENTS']),
				);
    		}
    		if(isset($arPageBlocks['ELEMENT']) && $arPageBlocks['ELEMENT'] && is_array($arPageBlocks['ELEMENT'])){
    			$arResult['ELEMENT_TYPE_VIEW'] = array(
					'PARENT' => 'BASE',
					'SORT' => 1,
					'NAME' => GetMessage('M_ELEMENT_TYPE_VIEW'),
					'TYPE' => 'LIST',
					'VALUES' => $arPageBlocks['ELEMENT'],
					'DEFAULT' => key($arPageBlocks['ELEMENT']),
				);
    		}
    	}

    	return $arResult;
    }

    protected function IsComponentTemplateHasModuleSectionsPageBlocksParam($templateName, $arExtParams = array()){
    	global $TEMPLATE_OPTIONS;
    	$siteID = 's1';
    	if(isset($_REQUEST) && (isset($_REQUEST['src_site']) && $_REQUEST['src_site']))
    		$siteID = $_REQUEST['src_site'];
    	if(!$TEMPLATE_OPTIONS)
    		$TEMPLATE_OPTIONS = self::GetTemplateOptions($siteID);

    	$section_param = ((isset($arExtParams['SECTION']) && $arExtParams['SECTION']) ? $arExtParams['SECTION'] : 'SECTION');
    	$template_param = ((isset($arExtParams['OPTION']) && $arExtParams['OPTION']) ? $arExtParams['OPTION'] : strtoupper($templateName));
	    return $templateName && isset($TEMPLATE_OPTIONS[$template_param.'_PAGE_SECTIONS']);
    }

    protected function IsComponentTemplateHasModuleSectionPageBlocksParam($templateName, $arExtParams = array()){
    	global $TEMPLATE_OPTIONS;
    	$siteID = 's1';
    	if(isset($_REQUEST) && (isset($_REQUEST['src_site']) && $_REQUEST['src_site']))
    		$siteID = $_REQUEST['src_site'];
    	if(!$TEMPLATE_OPTIONS)
    		$TEMPLATE_OPTIONS = self::GetTemplateOptions($siteID);

    	$section_param = ((isset($arExtParams['SECTION']) && $arExtParams['SECTION']) ? $arExtParams['SECTION'] : 'SECTION');
    	$template_param = ((isset($arExtParams['OPTION']) && $arExtParams['OPTION']) ? $arExtParams['OPTION'] : strtoupper($templateName));
	    return $templateName && isset($TEMPLATE_OPTIONS[$template_param.'_PAGE_SUBSECTIONS']);
    }

    protected function IsComponentTemplateHasModuleElementsPageBlocksParam($templateName, $arExtParams = array()){
    	global $TEMPLATE_OPTIONS;
    	$siteID = 's1';
    	if(isset($_REQUEST) && (isset($_REQUEST['src_site']) && $_REQUEST['src_site']))
    		$siteID = $_REQUEST['src_site'];
    	if(!$TEMPLATE_OPTIONS)
    		$TEMPLATE_OPTIONS = self::GetTemplateOptions($siteID);

    	$section_param = ((isset($arExtParams['SECTION']) && $arExtParams['SECTION']) ? $arExtParams['SECTION'] : 'SECTION');
    	$template_param = ((isset($arExtParams['OPTION']) && $arExtParams['OPTION']) ? $arExtParams['OPTION'] : strtoupper($templateName));
	    return $templateName && isset($TEMPLATE_OPTIONS[$template_param.'_PAGE']);
    }

    protected function IsComponentTemplateHasModuleElementPageBlocksParam($templateName, $arExtParams = array()){
    	global $TEMPLATE_OPTIONS;
    	$siteID = 's1';
    	if(isset($_REQUEST) && (isset($_REQUEST['src_site']) && $_REQUEST['src_site']))
    		$siteID = $_REQUEST['src_site'];
    	if(!$TEMPLATE_OPTIONS)
    		$TEMPLATE_OPTIONS = self::GetTemplateOptions($siteID);

    	$section_param = ((isset($arExtParams['SECTION']) && $arExtParams['SECTION']) ? $arExtParams['SECTION'] : 'SECTION');
    	$template_param = ((isset($arExtParams['OPTION']) && $arExtParams['OPTION']) ? $arExtParams['OPTION'] : strtoupper($templateName));
	    return $templateName && isset($TEMPLATE_OPTIONS[$template_param.'_PAGE_DETAIL']);
    }

    public static function AddComponentTemplateModulePageBlocksParams($templateAbsPath, &$arParams, $arExtParams = array()){
    	if($templateAbsPath && $arParams && is_array($arParams)){
    		$templateAbsPath = str_replace('//', '//', $templateAbsPath).'/';
    		$templateName = basename($templateAbsPath);
    		if(self::IsComponentTemplateHasModuleSectionsPageBlocksParam($templateName, $arExtParams)){
				$arParams['SECTIONS_TYPE_VIEW']['VALUES'] = array_merge(array('FROM_MODULE' => GetMessage('M_FROM_MODULE_PARAMS')), $arParams['SECTIONS_TYPE_VIEW']['VALUES']);
				$arParams['SECTIONS_TYPE_VIEW']['DEFAULT'] = 'FROM_MODULE';
			}
    		if(self::IsComponentTemplateHasModuleSectionPageBlocksParam($templateName, $arExtParams)){
				$arParams['SECTION_TYPE_VIEW']['VALUES'] = array_merge(array('FROM_MODULE' => GetMessage('M_FROM_MODULE_PARAMS')), $arParams['SECTION_TYPE_VIEW']['VALUES']);
				$arParams['SECTION_TYPE_VIEW']['DEFAULT'] = 'FROM_MODULE';
			}
			if(self::IsComponentTemplateHasModuleElementsPageBlocksParam($templateName, $arExtParams)){
    			$arParams['SECTION_ELEMENTS_TYPE_VIEW']['VALUES'] = array_merge(array('FROM_MODULE' => GetMessage('M_FROM_MODULE_PARAMS')), $arParams['SECTION_ELEMENTS_TYPE_VIEW']['VALUES']);
    			$arParams['SECTION_ELEMENTS_TYPE_VIEW']['DEFAULT'] = 'FROM_MODULE';
    		}
    		if(self::IsComponentTemplateHasModuleElementPageBlocksParam($templateName, $arExtParams)){
    			$arParams['ELEMENT_TYPE_VIEW']['VALUES'] = array_merge(array('FROM_MODULE' => GetMessage('M_FROM_MODULE_PARAMS')), $arParams['ELEMENT_TYPE_VIEW']['VALUES']);
    			$arParams['ELEMENT_TYPE_VIEW']['DEFAULT'] = 'FROM_MODULE';
    		}
    	}
    }

    public static function CheckComponentTemplatePageBlocksParams(&$arParams, $templateAbsPath, $pageBlocksDirName = 'page_blocks'){
    	$arPageBlocks = self::GetComponentTemplatePageBlocks($templateAbsPath, $pageBlocksDirName);

    	if(!isset($arParams['SECTIONS_TYPE_VIEW']) || !$arParams['SECTIONS_TYPE_VIEW'] || (!isset($arPageBlocks['SECTIONS'][$arParams['SECTIONS_TYPE_VIEW']]) && $arParams['SECTIONS_TYPE_VIEW'] !== 'FROM_MODULE')){
    		$arParams['SECTIONS_TYPE_VIEW'] = key($arPageBlocks['SECTIONS']);
    	}
    	if(!isset($arParams['SECTION_TYPE_VIEW']) || !$arParams['SECTION_TYPE_VIEW'] || (!isset($arPageBlocks['SUBSECTIONS'][$arParams['SECTION_TYPE_VIEW']]) && $arParams['SECTION_TYPE_VIEW'] !== 'FROM_MODULE')){
    		$arParams['SECTION_TYPE_VIEW'] = key($arPageBlocks['SUBSECTIONS']);
    	}
    	if(!isset($arParams['SECTION_ELEMENTS_TYPE_VIEW']) || !$arParams['SECTION_ELEMENTS_TYPE_VIEW'] || (!isset($arPageBlocks['ELEMENTS'][$arParams['SECTION_ELEMENTS_TYPE_VIEW']]) && $arParams['SECTION_ELEMENTS_TYPE_VIEW'] !== 'FROM_MODULE')){
    		$arParams['SECTION_ELEMENTS_TYPE_VIEW'] = key($arPageBlocks['ELEMENTS']);
    	}
    	if(!isset($arParams['ELEMENT_TYPE_VIEW']) || !$arParams['ELEMENT_TYPE_VIEW'] || (!isset($arPageBlocks['ELEMENT'][$arParams['ELEMENT_TYPE_VIEW']]) && $arParams['ELEMENT_TYPE_VIEW'] !== 'FROM_MODULE')){
    		$arParams['ELEMENT_TYPE_VIEW'] = key($arPageBlocks['ELEMENT']);
    	}
    }

    public static function Add2OptionCustomComponentTemplatePageBlocks(&$arOption, $templateAbsPath){
		if($arOption && isset($arOption['LIST'])){
			if($arPageBlocks = self::GetComponentTemplatePageBlocks($templateAbsPath)){
				foreach($arPageBlocks['ELEMENTS'] as $page => $value){
					if(!isset($arOption['LIST'][$page])){
						$arOption['LIST'][$page] = array(
							'TITLE' => $value,
							'HIDE' => 'Y',
							'IS_CUSTOM' => 'Y',
						);
					}
				}
				if(!$arOption['DEFAULT'] && $arOption['LIST']){
					$arOption['DEFAULT'] = key($arOption['LIST']);
				}
			}
		}
    }

    public static function Add2OptionCustomComponentTemplatePageBlocksElement(&$arOption, $templateAbsPath, $field = 'ELEMENT'){
		if($arOption && isset($arOption[3][1])){
			if($arPageBlocks = self::GetComponentTemplatePageBlocks($templateAbsPath)){
				foreach($arPageBlocks[$field] as $page => $value){
					if(!isset($arOption[3][1][strToUpper($page)])){
						$arOption[3][1][$page] = $value;
					}
				}

				if(!$arOption[2] && $arOption[3][1]){
					$arOption[2] = key($arOption[3][1]);
				}
			}
		}
    }

	public static function IsCompositeEnabled(){
		if($arHTMLCacheOptions = self::GetCompositeOptions()){
			if(method_exists('CHTMLPagesCache', 'isOn')){
				if (CHTMLPagesCache::isOn()){
					if(isset($arHTMLCacheOptions['AUTO_COMPOSITE']) && $arHTMLCacheOptions['AUTO_COMPOSITE'] === 'Y'){
						return 'AUTO_COMPOSITE';
					}
					else{
						return 'COMPOSITE';
					}
				}
			}
			else{
				if($arHTMLCacheOptions['COMPOSITE'] === 'Y'){
					return 'COMPOSITE';
				}
			}
		}
	
		return false;
	}

	public static function EnableComposite($auto = false, $arHTMLCacheOptions = array()){
		if(class_exists('CHTMLPagesCache')){
			if(method_exists('CHTMLPagesCache', 'GetOptions')){
				$arHTMLCacheOptions = is_array($arHTMLCacheOptions) ? $arHTMLCacheOptions : array();
				$arHTMLCacheOptions = array_merge(CHTMLPagesCache::GetOptions(), $arHTMLCacheOptions);
	
				$arHTMLCacheOptions['COMPOSITE'] = isset($arHTMLCacheOptions['COMPOSITE']) ? $arHTMLCacheOptions['COMPOSITE'] : 'Y';
				$arHTMLCacheOptions['AUTO_UPDATE'] = isset($arHTMLCacheOptions['AUTO_UPDATE']) ? $arHTMLCacheOptions['AUTO_UPDATE'] : 'Y'; // standart mode
				$arHTMLCacheOptions['AUTO_UPDATE_TTL'] = isset($arHTMLCacheOptions['AUTO_UPDATE_TTL']) ? $arHTMLCacheOptions['AUTO_UPDATE_TTL'] : '0'; // no ttl delay
				$arHTMLCacheOptions['AUTO_COMPOSITE'] = ($auto ? 'Y' : 'N'); // auto composite mode
	
				CHTMLPagesCache::SetEnabled(true);
				CHTMLPagesCache::SetOptions($arHTMLCacheOptions);
				bx_accelerator_reset();
			}
		}
	}

	public static function GetCompositeOptions(){
		if(class_exists('CHTMLPagesCache')){
			if(method_exists('CHTMLPagesCache', 'GetOptions')){
				return CHTMLPagesCache::GetOptions();
			}
		}
	
		return array();
	}

	function __AdmSettingsSaveOption_EX($module_id, $arOption){
		if(!is_array($arOption)){
			return false;
		}

		$arControllerOption = CControllerClient::GetInstalledOptions($module_id);
		if(isset($arControllerOption[$arOption[0]])){
			return false;
		}

		$name = $arOption[0];
		$val = $_REQUEST[$name];
		$siteID = end(explode("_", $arOption[0]));
		$name = substr($name, 0, (strlen($name)-strlen($siteID)-1));

		if(array_key_exists(4, $arOption) && $arOption[4] == 'Y'){
			if($arOption[3][0] == 'checkbox'){
				$val = 'N';
			}
			else{
				return false;
			}
		}

		if($arOption[3][0] == "checkbox" && $val != "Y"){
			$val = "N";
		}
		elseif($arOption[3][0] == "multiselectbox" || $arOption[3][0] == "selectbox_price"){
			$val = @implode(",", $val);
		}
		elseif($arOption[3][0] == "file"){
			$val = $arValueDefault = serialize(array());
			if(
				isset($_REQUEST[$name.'_'.$siteID.'_del']) || 
				(isset($_FILES[$arOption[0]]) && strlen($_FILES[$arOption[0]]['tmp_name']['0'])) || 
				(isset($_REQUEST[$arOption[0]]) && $_REQUEST[$arOption[0]]['n0'])
			){
				$arValues = unserialize(COption::GetOptionString($module_id, $name, $arValueDefault, $siteID));
				$arValues = (array)$arValues;
				foreach($arValues as $fileID){
					CFile::Delete($fileID);
				}
			}
			if(
				isset($_FILES[$arOption[0]]) && (strlen($_FILES[$arOption[0]]['tmp_name']['n0']) || strlen($_FILES[$arOption[0]]['tmp_name']['0'])) ||
				(isset($_REQUEST[$arOption[0]]) && ($_REQUEST[$arOption[0]]['n0'] || $_REQUEST[$arOption[0]]))
				
			){
				$arValues = array();
				if (isset($_FILES[$arOption[0]])) {
					$absFilePath = (strlen($_FILES[$arOption[0]]['tmp_name']['n0']) ? $_FILES[$arOption[0]]['tmp_name']['n0'] : $_FILES[$arOption[0]]['tmp_name']['0']);
					$arOriginalName = (strlen($_FILES[$arOption[0]]['name']['n0']) ? $_FILES[$arOption[0]]['name']['n0'] : $_FILES[$arOption[0]]['name']['0']);
				} else {
					$fp = isset($_REQUEST[$arOption[0]]['n0']) ? $_REQUEST[$arOption[0]]['n0'] : $_REQUEST[$arOption[0]][0];
					
					$absFilePath = $_SERVER['DOCUMENT_ROOT'].htmlspecialcharsbx($fp);
					$arOriginalName = strstr(array_pop(explode('/', $fp)), '.', true);
				}
				if(file_exists($absFilePath)){
					$arFile = CFile::MakeFileArray($absFilePath);
					$arFile['name'] = $arOriginalName; // for original file extension

					if($bIsIco = strpos($arOriginalName, '.ico') !== false){
						$script_files = COption::GetOptionString("fileman", "~script_files", "php,php3,php4,php5,php6,phtml,pl,asp,aspx,cgi,dll,exe,ico,shtm,shtml,fcg,fcgi,fpl,asmx,pht,py,psp,var");
						$arScriptFiles = explode(',', $script_files);
						if(($p = array_search('ico', $arScriptFiles)) !== false){
							unset($arScriptFiles[$p]);
						}
						$tmp = implode(',', $arScriptFiles);
						COption::SetOptionString("fileman", "~script_files", $tmp);
					}

					if($fileID = CFile::SaveFile($arFile, self::moduleID)){
						$arValues[] = $fileID;
					}

					if($bIsIco){
						COption::SetOptionString("fileman", "~script_files", $script_files);
					}
				}
				$val = serialize($arValues);
			}

			if(!isset($_FILES[$arOption[0]]) || (!strlen($_FILES[$arOption[0]]['tmp_name']['n0']) && !strlen($_FILES[$arOption[0]]['tmp_name']['0']) && !isset($_REQUEST[$name.'_'.$siteID.'_del']))){
					if((!isset($_REQUEST[$arOption[0]]) && (!$_REQUEST[$arOption[0]]['n0'] || !$_REQUEST[$arOption[0]]))){
						return;
					}
			}
		}
		if($name === 'FAVICON_IMAGE'){
			self::CopyFaviconToSiteDir($val, $siteID); //copy favicon for search bots
		}

		if($name == 'YA_COUNTER_ID' && strlen($val)){
			$val = str_replace('yaCounter', '', $val);
		}

		if(strpos($name, 'CUSTOM_COLOR_THEME') !== false || strpos($name, 'CUSTOM_BGCOLOR_THEME') !== false){
			$val = str_replace('#', '', $val);
			$val = strlen($val) ? $val : $arOption[2];
		}

		if($name == 'CUSTOM_FONT')
		{
			$val = str_replace('<', '', $val);
			$val = str_replace('>', '', $val);

			$path = \Bitrix\Main\Application::getDocumentRoot().'/bitrix/components/aspro/theme.optimus/css/user_font_'.$siteID.'.css';
			$content = '';
			if($val)
			{
				$string = str_replace(array('link href=', '&display=swap'), '', $val);
				$stringLength = strlen($string);
				$startLetter = strpos($string, '=');
				$string = substr($string, $startLetter + 1, $stringLength);
				$endLetter = strpos($string, ':');
				$string = ($endLetter ? substr($string, 0, $endLetter) : $string);
				$string = str_replace('" rel="stylesheet"', '', $string);
				$endLetter = strpos($string, '&amp');
				$string = ($endLetter ? substr($string, 0, $endLetter) : $string);
				$string = trim($string, '"');
				$content = "body,h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6, .popup-window,body div.bx-yandex-map,.fancybox-title, ul.menu .child a, button.button, input.button, .button,#basket-root .basket-item-info-name, #basket-root .basket-item-info-name-link, #basket-root .basket-items-list-header-filter-item, #basket-root .basket-item-property-value, #basket-root .basket-item-property-custom-value, #basket-root .basket-item-property-name, #basket-root .basket-item-property-custom-name, #basket-root .basket-item-price-current-text, #basket-root .basket-item-price-title, #basket-root .basket-item-amount-field-description, #basket-root .basket-coupon-block-field-description, #basket-root .basket-coupon-alert, #basket-root .basket-coupon-alert .close-link, #basket-root .basket-checkout-block-total-title, #basket-root .basket-checkout-block-total-description, #basket-root .basket-coupon-block-total-price-current, #basket-root .basket-coupon-block-total-price-difference, #basket-root .basket-coupon-block-total-price-old, #basket-root .basket-item-price-old-text, #basket-root .basket-item-price-difference, #basket-root .basket-item-property-scu-text .basket-item-scu-item-inner, #basket-root .basket-item-amount-filed, #basket-root .basket-item-block-amount.disabled .basket-item-amount-filed:hover, body .bx-soa-section-title, body #bx-soa-order div[class*=bx-sls] .form-control.dropdown-block .bx-ui-sls-container input, body .personal_wrapper .orders_wrapper .sale-order-title, .personal_wrapper .orders_wrapper .sale-order-list-container .sale-order-list-accomplished-title, .personal_wrapper .orders_wrapper .sale-order-list-container .sale-order-list-title, .personal_wrapper .orders_wrapper .sale-order-detail-general-item, .personal_wrapper .orders_wrapper .sale-order-list-payment-title, .personal_wrapper .orders_wrapper .sale-order-list-shipment-title, .personal_wrapper .orders_wrapper .row.col-md-12.col-sm-12 > a, .sale-order-list-status-restricted, .sale-order-list-status-alert, .sale-order-list-status-success, .sale-order-list-shipment-status-block, .sale-order-detail-about-order-title-element, .sale-order-detail-payment-options-title-element, .sale-order-detail-payment-options-shipment-composition-title-element, .sale-order-detail-payment-options-order-content-title-element, .sale-order-detail-general-item, .personal_wrapper .orders_wrapper .sale-order-list-button, .personal_wrapper .orders_wrapper .sale-order-detail-about-order-inner-container-repeat > a, .sale-order-detail-payment-options-methods-button-element, .sale-order-detail-payment-options-methods-button-element-new-window, .sale-order-detail-payment-options-methods-info-title-status-alert, .sale-order-detail-payment-options-methods-info-title-status-restricted, .sale-order-detail-payment-options-methods-info-title-status-success, .sale-order-detail-payment-options-info-order-number, .sale-order-detail-payment-options-info-total-price, .personal_wrapper .orders_wrapper .sale-order-detail-about-order-inner-container-name-detail, .sale-order-detail-about-order-inner-container-status-detail, .sale-order-detail-about-order-inner-container-price-detail, .personal_wrapper .sale-order-detail-payment-options-methods-info-title, .personal_wrapper .sale-order-detail-payment-options-methods-shipment-list-item-title, .personal_wrapper .sale-order-payment-change-payment-title, .personal_wrapper .sale-order-detail-total-payment-list-left-item, .personal_wrapper .sale-order-detail-total-payment-list-right-item, .sale-order-payment-change-status-alert, .sale-order-payment-change-status-restricted, .sale-order-payment-change-status-success, .personal_wrapper .orders_wrapper .sale-order-list-inner-row > div >a, .personal_wrapper .orders_wrapper .sale-order-list-change-payment, body .sale-order-detail-payment-options-methods-info-change-link, *{font-family: '".str_replace('+', ' ', $string)."', sans-serif;}";
			}
			\Bitrix\Main\IO\File::putFileContents($path, $content);
		}

		COption::SetOptionString($module_id, $name, $val, $arOption[1], $siteID);
	}

	static function CopyFaviconToSiteDir($arValue, $siteID = ''){
		if(($siteID)){
			$arValue=unserialize($arValue);
			if($arValue[0]){
				$imageSrc = $_SERVER['DOCUMENT_ROOT'].CFile::GetPath($arValue[0]);
			}
			else{
				if($arTemplate = self::GetSiteTemplate($siteID)){
					$imageSrc = str_replace('//', '/', $arTemplate['PATH'].'/images/favicon.ico');
				}
			}
			$arSite = CSite::GetByID($siteID)->Fetch();


			$arFavExtFiles = array('ico', 'png', 'gif', 'bmp', 'jpg', 'svg');
			foreach( $arFavExtFiles as $favExt){
				$imageDest = $arSite['ABS_DOC_ROOT'].'/'.$arSite['DIR'].'/favicon.'.$favExt;
				if(file_exists($imageDest)){
					@unlink($imageDest);
				}
			}
			
			
			if(file_exists($imageSrc)){
				$file_ext = pathinfo($imageSrc, PATHINFO_EXTENSION);
				$fav_ext = $file_ext ? $file_ext : 'ico';
				@copy($imageSrc, $arSite['ABS_DOC_ROOT'].'/'.$arSite['DIR'].'/favicon.'.$fav_ext);
			}else{
				@copy($arSite['ABS_DOC_ROOT'].'/'.$arSite['DIR'].'/include/favicon.ico', $arSite['ABS_DOC_ROOT'].'/'.$arSite['DIR'].'/favicon.ico');
			}
		}
	}

	static function GetSiteTemplate($siteID = ''){
		$arTemplate = array();

		if(strlen($siteID)){
			$dbRes = CSite::GetTemplateList($siteID);
			while($arTemplate = $dbRes->Fetch()){
				if(!strlen($arTemplate['CONDITION'])){
					if(file_exists(($arTemplate['PATH'] = $_SERVER['DOCUMENT_ROOT'].'/bitrix/templates/'.$arTemplate['TEMPLATE']))){
						break;
					}
					elseif(file_exists(($arTemplate['PATH'] = $_SERVER['DOCUMENT_ROOT'].'/local/templates/'.$arTemplate['TEMPLATE']))){
						break;
					}
				}
			}
		}

		return $arTemplate;
	}

	function __AdmSettingsDrawRow_EX($module_id, $Option, $siteID, $siteDir){
		$arControllerOption = CControllerClient::GetInstalledOptions($module_id);
		if(!is_array($Option)):?><tr class="heading"><td colspan="2"><?=$Option?></td></tr><?
		elseif(isset($Option["note"])):
			$name  = substr($Option[0], 0, (strlen($Option[0]) - strlen($siteID) - 1));
			if($name == 'GOALS_NOTE'){
				$FORMS_GOALS_LIST = '';
				if(CModule::IncludeModule('form')){
					if($siteID){
						if($arForms = COptimusCache::CForm_GetList($by = array('by' => 's_id', 'CACHE' => array('TAG' => 'forms')), $order = 'asc', array('SITE' => $siteID, 'SITE_EXACT_MATCH' => 'Y'), $is_filtered)
						){
							foreach($arForms as $arForm){
								$FORMS_GOALS_LIST .= $arForm['NAME'].' - <i>goal_webform_success_'.$arForm['ID'].'</i><br />';
							}
						}
					}
				}

				$Option['note'] = str_replace('#FORMS_GOALS_LIST#', $FORMS_GOALS_LIST, $Option['note']);
			}
		?>
			<tr data-optioncode="<?=$name?>">
				<td colspan="2" align="center">
					<?echo BeginNote('align="center"');?>
					<?=$Option["note"]?>
					<?echo EndNote();?>
				</td>
			</tr>
		<?
		else:
			$name  = substr($Option[0], 0, (strlen($Option[0])-strlen($siteID)-1));
			$val = COption::GetOptionString($module_id, $name, $Option[2], $siteID);
			$type = $Option[3];
			$disabled = array_key_exists(4, $Option) && $Option[4] == 'Y' ? ' disabled' : '';
			$sup_text = array_key_exists(5, $Option) ? $Option[5] : '';
			$style = "";
			if($name == "TOP_SECTION_DESCRIPTION_POSITION" || $name == "BOTTOM_SECTION_DESCRIPTION_POSITION")
			{
				$type_description = \Bitrix\Main\Config\Option::get(self::moduleID, "SHOW_SECTION_DESCRIPTION", "BOTTOM", $siteID );
				if($type_description != "BOTH")
					$style = "style='display:none;'";
			}
		?>
			<tr <?=$style;?> data-optioncode="<?=$name?>">
				<td<?if($type[0]=="multiselectbox" || $type[0]=="textarea" || $type[0]=="statictext" || $type[0]=="statichtml") echo ' class="adm-detail-valign-top"'?> width="50%"><?
					if($type[0]=="checkbox") echo "<label for='".htmlspecialcharsbx($Option[0])."'>".$Option[1]."</label>";
					else echo $Option[1];
					if (strlen($sup_text) > 0) { ?><span class="required"><sup><?=$sup_text?></sup></span><? }
				?></td>
				<td width="50%"><?
				if($type[0]=="checkbox"): ?><input type="checkbox" <?if(isset($arControllerOption[$Option[0]]))echo ' disabled title="'.GetMessage("MAIN_ADMIN_SET_CONTROLLER_ALT").'"';?> id="<?echo htmlspecialcharsbx($Option[0])?>" name="<?echo htmlspecialcharsbx($Option[0])?>" value="Y"<?if($val=="Y")echo" checked";?><?=$disabled?><?if($type[2]<>'') echo " ".$type[2]?>><?
				elseif($type[0]=="text" || $type[0]=="password"): ?><input type="<?echo $type[0]?>"<?if(isset($arControllerOption[$Option[0]]))echo ' disabled title="'.GetMessage("MAIN_ADMIN_SET_CONTROLLER_ALT").'"';?> size="<?echo $type[1]?>" maxlength="255" value="<?echo htmlspecialcharsbx($val)?>" name="<?echo htmlspecialcharsbx($Option[0])?>"<?=$disabled?><?=($type[0]=="password"? ' autocomplete="off"':'')?>><?
				elseif($type[0]=="selectbox"):
					$arr = $type[1];
					if(!is_array($arr))
						$arr = array();
					$arr_keys = array_keys($arr);
					?><select name="<?echo htmlspecialcharsbx($Option[0])?>" <?if(isset($arControllerOption[$Option[0]]))echo ' disabled title="'.GetMessage("MAIN_ADMIN_SET_CONTROLLER_ALT").'"';?> <?=$disabled?>><?
						$count = count($arr_keys);
						for($j=0; $j<$count; $j++): ?><option value="<?echo $arr_keys[$j]?>"<?if($val==$arr_keys[$j])echo" selected"?>><?echo htmlspecialcharsbx($arr[$arr_keys[$j]])?></option><? endfor;
						?></select>
				<?elseif($type[0]=="selectbox_iblock"):

					\Bitrix\Main\Loader::includeModule('iblock');
					$rsIBlock=CIBlock::GetList(array("SORT"=>"ASC", "ID"=>"DESC"), array("LID"=>$siteID));
					$arIBlocks=array();
					while($arIBlock=$rsIBlock->Fetch()){
						$arIBlocks[$arIBlock["ID"]]["NAME"]="(".$arIBlock["ID"].") ".$arIBlock["NAME"]." [".$arIBlock["CODE"]."]";
						$arIBlocks[$arIBlock["ID"]]["CODE"]=$arIBlock["CODE"];
					}
					$arr_keys = array_keys($arIBlocks);
					?>
					<select name="<?echo htmlspecialcharsbx($Option[0])?>" <?if(isset($arControllerOption[$Option[0]]))echo ' disabled title="'.GetMessage("MAIN_ADMIN_SET_CONTROLLER_ALT").'"';?> <?=$disabled?>>
						<?if($arIBlocks){
							foreach($arIBlocks as $key => $arValue) {
								$selected="";
								if(!$val && $arValue["CODE"]=="aspro_optimus_catalog"){
									$selected="selected";
								}elseif($val && $val==$key){
									$selected="selected";
								}?>
								<option value="<?=$key;?>" <?=$selected;?>><?=htmlspecialcharsbx($arValue["NAME"]);?></option>
							<?}
						}else{?>
							<option value="">-</option>
						<?}?>
					</select><?
				elseif($type[0]=="selectbox_price"):

					\Bitrix\Main\Loader::includeModule('catalog');
					$arPrices = array();
					$rsPrice = CCatalogGroup::GetList(array("SORT" => "ASC"), array());
					while($arPrice = $rsPrice->GetNext())
					{
						$name = ($arPrice["NAME_LANG"] ? $arPrice["NAME_LANG"] : $arPrice["NAME"]);
						$arPrices[$arPrice["ID"]]["NAME"] = "(".$arPrice["ID"].") ".$name." [".$arPrice["XML_ID"]."]";
					}
					$arr_keys = array_keys($arPrices);
					$arr_val = explode(",",$val);
					?>
					<select name="<?echo htmlspecialcharsbx($Option[0])?>[]" multiple size="6" <?if(isset($arControllerOption[$Option[0]]))echo ' disabled title="'.GetMessage("MAIN_ADMIN_SET_CONTROLLER_ALT").'"';?> <?=$disabled?>>
						<?if($arPrices){
							foreach($arPrices as $key => $arValue) {
								$selected="";
								if($val && (in_array($key, $arr_val)))
									$selected="selected";
								?>
								<option value="<?=$key;?>" <?=$selected;?>><?=htmlspecialcharsbx($arValue["NAME"]);?></option>
							<?}
						}else{?>
							<option value="">-</option>
						<?}?>
					</select><?
				elseif($type[0]=="multiselectbox"):
					$arr = $type[1];
					if(!is_array($arr)) $arr = array();
					$arr_keys = array_keys($arr);
					$arr_val = explode(",",$val);
					?><select size="5" <?if(isset($arControllerOption[$Option[0]]))echo ' disabled title="'.GetMessage("MAIN_ADMIN_SET_CONTROLLER_ALT").'"';?> multiple name="<?echo htmlspecialcharsbx($Option[0])?>[]"<?=$disabled?>><?
						$count = count($arr_keys);
						for($j=0; $j<$count; $j++): ?><option value="<?echo $arr_keys[$j]?>"<?if(in_array($arr_keys[$j],$arr_val)) echo " selected"?>><?echo htmlspecialcharsbx($arr[$arr_keys[$j]])?></option><? endfor;
					?></select><?
				elseif($type[0]=="includefile"):
					if(!is_array($type[1]['INCLUDEFILE'])){
						$type[1]['INCLUDEFILE'] = array($type[1]['INCLUDEFILE']);
					}
					foreach($type[1]['INCLUDEFILE'] as $includefile){
						$includefile = str_replace('//', '/', str_replace('#SITE_DIR#', $siteDir.'/', $includefile));
						if(strpos($includefile, '#') === false){
							$template = (isset($type[1]['TEMPLATE']) && strlen($type[1]['TEMPLATE']) ? $type[1]['TEMPLATE'] : '');
							$href = (!strlen($includefile) ? "javascript:;" : "javascript: new BX.CAdminDialog({'content_url':'/bitrix/admin/public_file_edit.php?site=".$siteID."&bxpublic=Y&from=includefile&noeditor=Y&templateID=".$arTab['TEMPLATE']['ID']."&path=".$includefile."&lang=".LANGUAGE_ID."&template=".$template."&subdialog=Y&siteTemplateId=".$arTab['TEMPLATE']['ID']."','width':'1009','height':'503'}).Show();");
							?><a class="adm-btn" href="<?=$href?>" name="<?=htmlspecialcharsbx($name)."_".$siteID?>" title="<?=GetMessage('OPTIONS_EDIT_BUTTON_TITLE')?>"><?=GetMessage('OPTIONS_EDIT_BUTTON_TITLE')?></a>&nbsp;<?
						}
					}
				elseif($type[0]=="textarea"):?><textarea <?if(isset($arControllerOption[$Option[0]]))echo ' disabled title="'.GetMessage("MAIN_ADMIN_SET_CONTROLLER_ALT").'"';?> rows="<?echo $type[1]?>" cols="<?echo $type[2]?>" name="<?echo htmlspecialcharsbx($Option[0])?>"<?=$disabled?>><?echo htmlspecialcharsbx($val)?></textarea><?
				elseif($type[0]=='file'):
					$val = unserialize($val);
					$Option['MULTIPLE'] = 'N';
					if(strpos($Option[0], 'LOGO_IMAGE') !== false) {
						$arOption['WIDTH'] = 163;
						$arOption['HEIGHT'] = 36;
					}
					elseif(strpos($Option[0], 'FAVICON_IMAGE') !== false) {
						$arOption['WIDTH'] = 16;
						$arOption['HEIGHT'] = 16;
					}
					elseif(strpos($Option[0], 'APPLE_TOUCH_ICON_IMAGE') !== false) {
						$arOption['WIDTH'] = 180;
						$arOption['HEIGHT'] = 180;
					}
					self::__ShowFilePropertyField($Option[0], $Option, $val);
				elseif($type[0]=="statictext"): echo htmlspecialcharsbx($val);
				elseif($type[0]=="statichtml"): echo $val;
				endif;
				?></td>
			</tr>
		<?
		endif;
	}

	function __AdmSettingsDrawCustomRow($html){
		echo '<tr><td colspan="2">'.$html.'</td></tr>';
	}

	protected function __ShowFilePropertyField($name, $arOption, $values){
		global $bCopy, $historyId;

		if(!is_array($values)){
			$values = array($values);
		}

		if($bCopy || empty($values)){
			$values = array('n0' => 0);
		}

		$optionWidth = $arOption['WIDTH'] ? $arOption['WIDTH'] : 200;
		$optionHeight = $arOption['HEIGHT'] ? $arOption['HEIGHT'] : 100;

		if($arOption['MULTIPLE'] == 'N'){
			foreach($values as $key => $val){
				if(is_array($val)){
					$file_id = $val['VALUE'];
				}
				else{
					$file_id = $val;
				}
				if($historyId > 0){
					echo CFileInput::Show($name.'['.$key.']', $file_id,
						array(
							'IMAGE' => $arOption['IMAGE'],
							'PATH' => 'Y',
							'FILE_SIZE' => 'Y',
							'DIMENSIONS' => 'Y',
							'IMAGE_POPUP' => 'Y',
							'MAX_SIZE' => array(
								'W' => $optionWidth,
								'H' => $optionHeight,
							),
						)
					);
				}
				else{
					echo CFileInput::Show($name.'['.$key.']', $file_id,
						array(
							'IMAGE' => $arOption['IMAGE'],
							'PATH' => 'Y',
							'FILE_SIZE' => 'Y',
							'DIMENSIONS' => 'Y',
							'IMAGE_POPUP' => 'Y',
							'MAX_SIZE' => array(
							'W' => $optionWidth,
							'H' => $optionHeight,
							),
						),
						array(
							'upload' => true,
							'medialib' => true,
							'file_dialog' => true,
							'cloud' => true,
							'del' => true,
							'description' => $arOption['WITH_DESCRIPTION'] == 'Y',
						)
					);
				}
				break;
			}
		}
		else{
			$inputName = array();
			foreach($values as $key => $val){
				if(is_array($val)){
					$inputName[$name.'['.$key.']'] = $val['VALUE'];
				}
				else{
					$inputName[$name.'['.$key.']'] = $val;
				}
			}
			if($historyId > 0){
				echo CFileInput::ShowMultiple($inputName, $name.'[n#IND#]',
					array(
						'IMAGE' => $arOption['IMAGE'],
						'PATH' => 'Y',
						'FILE_SIZE' => 'Y',
						'DIMENSIONS' => 'Y',
						'IMAGE_POPUP' => 'Y',
						'MAX_SIZE' => array(
							'W' => $optionWidth,
							'H' => $optionHeight,
						),
					),
				false);
			}
			else{
				echo CFileInput::ShowMultiple($inputName, $name.'[n#IND#]',
					array(
						'IMAGE' => $arOption['IMAGE'],
						'PATH' => 'Y',
						'FILE_SIZE' => 'Y',
						'DIMENSIONS' => 'Y',
						'IMAGE_POPUP' => 'Y',
						'MAX_SIZE' => array(
							'W' => $optionWidth,
							'H' => $optionHeight,
						),
					),
				false,
					array(
						'upload' => true,
						'medialib' => true,
						'file_dialog' => true,
						'cloud' => true,
						'del' => true,
						'description' => $arOption['WITH_DESCRIPTION'] == 'Y',
					)
				);
			}
		}
	}

	static function InsertCounters(&$html){
		$bIndexBot = (isset($_SERVER['HTTP_ACCEPT_LANGUAGE']) && strpos($_SERVER['HTTP_USER_AGENT'], 'Lighthouse') !== false);
		if(defined("ADMIN_SECTION") || $_SERVER["HTTP_X_REQUESTED_WITH"] == "XMLHttpRequest" || strpos($_SERVER['REQUEST_URI'], 'bitrix/') !== false || $bIndexBot || !defined("ASPRO_TEMPLATE_LOADED")){
			return;
		}

		define("LOAD_COUNTERS", true);
		global $APPLICATION;
		if(defined("LOAD_COUNTERS")  && (strpos($APPLICATION->GetCurPage(),'personal')===false)){
			$counter = $yandex_counter = $google_counter = '';

			$useYACounter = \Bitrix\Main\Config\Option::get(self::moduleID, "USE_YA_COUNTER", 'N', SITE_ID);
			if($useYACounter == 'Y'){
				$yandex_counter = \Bitrix\Main\Config\Option::get(self::moduleID, "YANDEX_COUNTER", false, SITE_ID);
			}
			if($yandex_counter){
				$counter .= $yandex_counter;
			}

			$google_counter = \Bitrix\Main\Config\Option::get(self::moduleID, "GOOGLE_COUNTER", false, SITE_ID);
			if( $google_counter && $google_ecomerce=="Y" ){
				$counter1 .=$google_counter;
				$html = str_replace( '<body id="main">', '<body id="main">'.$counter1, $html );
			}
			if($google_counter){
				$counter .= $google_counter;
			}

			if(strlen($counter)){
				$arParts = explode('</body>', $html);
				if(count($arParts) > 1){
					$arParts[0] .= $counter;
					$html = implode('</body>', $arParts);
				}
			}
		}
	}

	function clearBasketCacheHandler($orderID, $arFields, $arParams = array()){
		COptimusCache::ClearCacheByTag('sale_basket');
		unset($_SESSION['ASPRO_BASKET_COUNTERS'][SITE_ID]);
		if(isset($arFields) && $arFields)
		{
			if(isset($arFields["ID"]) && $arFields["ID"])
			{
				\Bitrix\Main\Loader::includeModule("sale");
				global $USER;
				$USER_ID = ($USER_ID = self::GetUserID()) ? $USER_ID : 0;
				$arUser = $arUser = COptimusCache::CUser_GetList(array("SORT" => "ASC", "CACHE" => array("MULTI" => "N", "TAG" => COptimusCache::GetUserCacheTag($USER_ID))), array("ID" => $USER_ID), array("FIELDS" => array("ID", "PERSONAL_PHONE")));
				if(!$arUser["PERSONAL_PHONE"])
				{
					$rsOrder = CSaleOrderPropsValue::GetList(array(), array("ORDER_ID" => $arFields["ID"]));
					$arOrderProps = array();
					while($item = $rsOrder->Fetch())
					{
						$arOrderProps[$item["CODE"]] = $item;
					}
					if(isset($arOrderProps["PHONE"]) && $arOrderProps["PHONE"] && (isset($arOrderProps["PHONE"]["VALUE"]) && $arOrderProps["PHONE"]["VALUE"]))
					{
						$user = new CUser;
						$fields = Array(
							"PERSONAL_PHONE" => $arOrderProps["PHONE"]["VALUE"],
						);
						$user->Update($arUser["ID"], $fields);
					}

				}
			}
		}
	}

	function OnBeforeUserUpdateHandler(&$arFields){
		$bTmpUser = false;

		$bAdminSection = (defined('ADMIN_SECTION') && ADMIN_SECTION === true);

		if(strlen($arFields["NAME"]))
			$arFields["NAME"] = trim($arFields["NAME"]);

		$siteID = SITE_ID;

		if($bAdminSection)
	    {
	    	// include CMainPage
	        require_once($_SERVER['DOCUMENT_ROOT']."/bitrix/modules/main/include/mainpage.php");
	        // get site_id by host
	        $siteID = \CMainPage::GetSiteByHost();
	        if(!$siteID)
	            $siteID = "s1";

			$sChangeLogin = COption::GetOptionString(OPTIMUS_MODULE_ID, 'LOGIN_EQUAL_EMAIL', 'Y', $siteID);
        }
		else
		{
			$sChangeLogin = COption::GetOptionString(OPTIMUS_MODULE_ID, 'LOGIN_EQUAL_EMAIL', 'Y', $siteID);
		}

		if(strlen($arFields["NAME"]))
			$arFields["NAME"] = trim($arFields["NAME"]);
		if(strlen($arFields["NAME"]) && !strlen($arFields["LAST_NAME"]) && !strlen($arFields["SECOND_NAME"])){
			$arName = explode(' ', $arFields["NAME"]);

			if($arName){
				$arFields["NAME"] = "";
				$arFields["SECOND_NAME"] = "";
				foreach($arName as $i => $name){
					if(!$i){
						$arFields["LAST_NAME"] = $name;
					}
					else{
						if(!strlen($arFields["NAME"])){
							$arFields["NAME"] = $name;
						}
						elseif(!strlen($arFields["SECOND_NAME"])){
							$arFields["SECOND_NAME"] = $name;
						}
					}
				}
			}
		}
		if($_REQUEST["confirmorder"]=="Y"  && !strlen($arFields["SECOND_NAME"]) && $_REQUEST["ORDER_PROP_1"]){
			$arNames = explode(' ', $_REQUEST["ORDER_PROP_1"]);
			if($arNames[2]){
				$arFields["SECOND_NAME"]=$arNames[2];
			}
		}

		if(isset($_REQUEST["soa-action"]) && $_REQUEST["soa-action"] == "saveOrderAjax") // set correct phone in user field
		{
			$arPhoneProp = CSaleOrderProps::GetList(
				array('SORT' => 'ASC'),
				array(
						'PERSON_TYPE_ID' => $_REQUEST['PERSON_TYPE'],
						'IS_PHONE' => 'Y',
					),
				false,
				false,
				array()
			)->fetch();
			if($arPhoneProp)
			{
				if($_REQUEST['ORDER_PROP_'.$arPhoneProp['ID']])
				{
					$arFields["PERSONAL_PHONE"] = $_REQUEST['ORDER_PROP_'.$arPhoneProp['ID']];
				}
			}
		}

		if(strlen($arFields["EMAIL"]))
		{
			if($sChangeLogin != "N")
			{
				$bEmailError = false;

				if(\Bitrix\Main\Config\Option::get('main', 'new_user_email_uniq_check', 'N') == 'Y')
				{
					$rsUser = CUser::GetList($by = "ID", $order = "ASC", array("=EMAIL" => $arFields["EMAIL"], "!ID" => $arFields["ID"]));
					if(!$bEmailError = intval($rsUser->SelectedRowsCount()) > 0)
					{
						$rsUser = CUser::GetList($by = "ID", $order = "ASC", array("LOGIN_EQUAL" => $arFields["EMAIL"], "!ID" => $arFields["ID"]));
						$bEmailError = intval($rsUser->SelectedRowsCount()) > 0;
					}
				}

				if($bEmailError){
					global $APPLICATION;
					$APPLICATION->throwException(GetMessage("EMAIL_IS_ALREADY_EXISTS", array("#EMAIL#" => $arFields["EMAIL"])));
					return false;
				}
				else{
					// !admin
					if (!isset($GLOBALS["USER"]) || !is_object($GLOBALS["USER"])){
						$bTmpUser = True;
						$GLOBALS["USER"] = new \CUser;
					}

					if($bAdminSection)
					{
						if(isset($arFields['ID']) && $arFields['ID'])
						{
							if(!in_array(1, CUser::GetUserGroup($arFields['ID'])))
								$arFields['LOGIN'] = $arFields['EMAIL'];
						}
						elseif(isset($arFields['GROUP_ID']) && $arFields['GROUP_ID'])
						{
							$arUserGroups = array();
							$arTmpGroups = (array)$arFields['GROUP_ID'];
							foreach($arTmpGroups as $arGroup)
							{
								if(is_array($arGroup))
									$arUserGroups[] = $arGroup['GROUP_ID'];
								else
									$arUserGroups[] = $arGroup;
							}

							if(count(array_intersect($arUserGroups, array(1)))<=0)
								$arFields['LOGIN'] = $arFields['EMAIL'];
						}
						else
							$arFields['LOGIN'] = $arFields['EMAIL'];
					}
					else
					{
						if(!$GLOBALS['USER']->IsAdmin())
							$arFields["LOGIN"] = $arFields["EMAIL"];
					}
				}
			}
			else
			{
				if(!$arFields["LOGIN"] || $arFields["LOGIN"] == 1)
				{
					$newLogin = $arFields['EMAIL'];
					$pos = strpos($newLogin, '@');
					if ($pos !== false)
						$newLogin = substr($newLogin, 0, $pos);

					if (strlen($newLogin) > 47)
						$newLogin = substr($newLogin, 0, 47);

					if (strlen($newLogin) < 3)
						$newLogin .= '_';

					if (strlen($newLogin) < 3)
						$newLogin .= '_';
					$arFields["LOGIN"] = $newLogin;
				}
			}
		}

		if ($bTmpUser)
			unset($GLOBALS["USER"]);

		return $arFields;
	}

	function GetYearsItems($iblock_id){
		$arYears=array();
		$rsItems=CIBlockElement::GetList(array(), array("IBLOCK_ID" => $iblock_id, "ACTIVE" => "Y", "GLOBAL_ACTIVE" => "Y"), false, false, array("ID", "DATE_ACTIVE_FROM"));
		while($arItem=$rsItems->Fetch()){
			if($arItem["DATE_ACTIVE_FROM"]){
				$date = explode(' ', $arItem["DATE_ACTIVE_FROM"]);
				$date = $date[0];
				$date = explode('.', $date);
				$arYears[$date[2]] = $date[2];
			}
		}
		return $arYears;
	}

	function removeDirectory($dir){
		if($objs = glob($dir."/*")){
			foreach($objs as $obj){
				if(is_dir($obj)){
					self::removeDirectory($obj);
				}
				else{
					if(!unlink($obj)){
						if(chmod($obj, 0777)){
							unlink($obj);
						}
					}
				}
			}
		}
		if(!rmdir($dir)){
			if(chmod($dir, 0777)){
				rmdir($dir);
			}
		}
	}

    function inputClean($input, $sql = false){
       /* $input = htmlentities($input, ENT_QUOTES, LANG_CHARSET);
        if(get_magic_quotes_gpc ())
        {
            $input = stripslashes ($input);
        }
        if ($sql)
        {
            $input = mysql_real_escape_string ($input);
        }
        $input = strip_tags($input);
        $input=str_replace ("\n"," ", $input);
        $input=str_replace ("\r","", $input); */
        return $input;
    }

    static function getBasketCounters(){
    	global $USER;
    	$USER_ID = ($USER_ID = self::GetUserID()) ? $USER_ID : 0;
    	$arResult = false;

    	if(isset($_SESSION['ASPRO_BASKET_COUNTERS'][SITE_ID])){
    		if(!is_array($_SESSION['ASPRO_BASKET_COUNTERS'][SITE_ID]) || (is_array($_SESSION['ASPRO_BASKET_COUNTERS'][SITE_ID]) && count($_SESSION['ASPRO_BASKET_COUNTERS'][SITE_ID]) && !isset($_SESSION['ASPRO_BASKET_COUNTERS'][SITE_ID][$USER_ID]))){
    			unset($_SESSION['ASPRO_BASKET_COUNTERS'][SITE_ID]);
    		}
    		else{
		    	$arResult = $_SESSION['ASPRO_BASKET_COUNTERS'][SITE_ID][$USER_ID];
    		}
    	}

    	if(!$arResult || !is_array($arResult)){
    		// set default value
    		$arResult = array('READY' => array('COUNT' => 0, 'TITLE' => '', 'HREF' => SITE_DIR.'basket/'), 'DELAY' => array('COUNT' => 0, 'TITLE' => '', 'HREF' => SITE_DIR.'basket/'), 'COMPARE' => array('COUNT' => 0, 'TITLE' => GetMessage('COMPARE_BLOCK'), 'HREF' => SITE_DIR.'catalog/compare.php'), 'PERSONAL' => array('ID' => $USER_ID, 'SRC' => '', 'TITLE' => GetMessage("USER_AUTH"), 'HREF' => SITE_DIR.'auth/'), 'DEFAULT' => true);

    		// get user avatar
	    	if($isAuthorized = ($USER->isAuthorized() ? true : false)){
				$arResult['PERSONAL']['TITLE'] = GetMessage("USER_CABINET");

	    		$arUser = COptimusCache::CUser_GetList(array("SORT" => "ASC", "CACHE" => array("MULTI" => "N", "TAG" => COptimusCache::GetUserCacheTag($USER_ID))), array("ID" => $USER_ID), array("FIELDS" => array("ID", "PERSONAL_PHOTO")));
				if($arUser["PERSONAL_PHOTO"]){
					$arPhoto = CFile::ResizeImageGet($arUser["PERSONAL_PHOTO"], array("width" => 50, "height" => 50), BX_RESIZE_IMAGE_EXACT, true);
					$arResult['PERSONAL']['SRC'] = $arPhoto['src'];
				}
	    	}
    	}

		$_SESSION['ASPRO_BASKET_COUNTERS'][SITE_ID] = array($USER_ID => $arResult);

    	return $arResult;
    }

    static function clearFormatPrice($price){
    	$strPrice = '';
    	if($price)
    	{
    		$arPrice = array();
	    	preg_match('/<span class=\'price_value\'>(.+?)<\/span>/is', $price, $arVals);
			if($arVals[1])
				$arPrice[] = $arVals[1];
			preg_match('/<span class=\'price_currency\'>(.+?)<\/span>/is', $price, $arVals);

			if($arVals[1])
				$arPrice[] = $arVals[1];
			if($arPrice)
				$strPrice = implode('', $arPrice);
    	}
    	return $strPrice;
    }

    static function updateBasketCounters($arValue){
    	global $USER;
    	$USER_ID = ($USER_ID = self::GetUserID()) ? $USER_ID : 0;

    	$arResult = self::getBasketCounters();
    	if($arValue && is_array($arValue)){
    		$arResult = array_replace_recursive($arResult, $arValue);
    	}
    	$arResult['DEFAULT'] = false;
    	$_SESSION['ASPRO_BASKET_COUNTERS'][SITE_ID] = array($USER_ID => $arResult);
    	return $arResult;
    }

    static function clearBasketCounters(){
    	unset($_SESSION['ASPRO_BASKET_COUNTERS'][SITE_ID]);
	}
	
	public static function GetUserID(){
		static $userID;
		if($userID === NULL)
		{
			global $USER;
			$userID = $USER->GetID();
			$userID = ($userID > 0 ? $userID : 0);
		}
		return $userID;
	}

	function correctInstall(){
		if(COption::GetOptionString(self::moduleID, "WIZARD_DEMO_INSTALLED") == "Y"){
			if(CModule::IncludeModule("main")){
				require_once($_SERVER["DOCUMENT_ROOT"].BX_ROOT."/modules/main/classes/general/wizard.php");
				@set_time_limit(0);
				if(!CWizardUtil::DeleteWizard(self::wizardID)){if(!DeleteDirFilesEx($_SERVER["DOCUMENT_ROOT"]."/bitrix/wizards/".self::partnerName."/".self::solutionName."/")){self::removeDirectory($_SERVER["DOCUMENT_ROOT"]."/bitrix/wizards/".self::partnerName."/".self::solutionName."/");}}
				UnRegisterModuleDependences("main", "OnBeforeProlog", self::moduleID, get_class(), "correctInstall");
				COption::SetOptionString(self::moduleID, "WIZARD_DEMO_INSTALLED", "N");
			}
		}
	}

	function newAction($action = "unknown"){
		$socket = fsockopen('bi.aspro.ru', 80, $errno, $errstr, 10);
		if($socket){
			if(CModule::IncludeModule("main")){
				global $APPLICATION;
				require_once($_SERVER["DOCUMENT_ROOT"]."/bitrix/modules/main/classes/general/update_client.php");
				$errorMessage = "";
				$serverIP = ($_SERVER["HTTP_X_REAL_IP"] ? $_SERVER["HTTP_X_REAL_IP"] : $_SERVER["SERVER_ADDR"]);
				$arUpdateList = CUpdateClient::GetUpdatesList($errorMessage, "ru", "Y");
				if(array_key_exists("CLIENT", $arUpdateList) && $arUpdateList["CLIENT"][0]["@"]["LICENSE"]){
					$edition = $arUpdateList["CLIENT"][0]["@"]["LICENSE"];
				}
				else{
					$edition = "UNKNOWN";
				}
				$data = json_encode(
					array(
						"client" => "aspro",
						"install_date" => date("Y-m-d H:i:s"),
						"solution_code" => self::moduleID,
						"ip" => $serverIP,
						"http_host" => $_SERVER["HTTP_HOST"],
						"bitrix_version" => SM_VERSION,
						"bitrix_edition" => $APPLICATION->ConvertCharset($edition, SITE_CHARSET, "utf-8"),
						"bitrix_key_hash" => md5(CUpdateClient::GetLicenseKey()),
						"site_name" => $APPLICATION->ConvertCharset(COption::GetOptionString("main", "site_name"), SITE_CHARSET, "utf-8"),
						"site_url" => $APPLICATION->ConvertCharset(COption::GetOptionString("main", "server_name"), SITE_CHARSET, "utf-8"),
						"email_default" => $APPLICATION->ConvertCharset(COption::GetOptionString("main", "email_from"), SITE_CHARSET, "utf-8"),
						"action" => $action,
					)
				);
				fwrite($socket, "POST /rest/bitrix/installs HTTP/1.1\r\n");
				fwrite($socket, "Host: bi.aspro.ru\r\n");
				fwrite($socket, "Content-type: application/x-www-form-urlencoded\r\n");
				fwrite($socket, "Content-length:".strlen($data)."\r\n");
				fwrite($socket, "Accept:*/*\r\n");
				fwrite($socket, "User-agent:Bitrix Installer\r\n");
				fwrite($socket, "Connection:Close\r\n");
				fwrite($socket, "\r\n");
				fwrite($socket, "$data\r\n");
				fwrite($socket, "\r\n");
				$answer = '';
				while(!feof($socket)){
					$answer.= fgets($socket, 4096);
				}
				fclose($socket);
			}
		}
	}

	public static function AddMeta($arParams = array()){
		self::$arMetaParams = array_merge((array)self::$arMetaParams, (array)$arParams);
	}

	public static function SetMeta(){
		global $APPLICATION, $arSite, $TEMPLATE_OPTIONS;

		$PageH1 = $APPLICATION->GetTitle();
		$PageMetaTitleBrowser = $APPLICATION->GetPageProperty('title');
		$DirMetaTitleBrowser = $APPLICATION->GetDirProperty('title');
		$PageMetaDescription = $APPLICATION->GetPageProperty('description');
		$DirMetaDescription = $APPLICATION->GetDirProperty('description');

		// set title
		if(!CSite::inDir(SITE_DIR.'index.php')){
			if(!strlen($PageMetaTitleBrowser)){
				if(!strlen($DirMetaTitleBrowser)){
					$PageMetaTitleBrowser = $PageH1.((strlen($PageH1) && strlen($arSite['SITE_NAME'])) ? ' - ' : '' ).$arSite['SITE_NAME'];
					// $APPLICATION->SetPageProperty('title', $PageMetaTitleBrowser);
				}
			}
		}
		else{
			if(!strlen($PageMetaTitleBrowser)){
				if(!strlen($DirMetaTitleBrowser)){
					$PageMetaTitleBrowser = $arSite['SITE_NAME'].((strlen($arSite['SITE_NAME']) && strlen($PageH1)) ? ' - ' : '' ).$PageH1;
					// $APPLICATION->SetPageProperty('title', $PageMetaTitleBrowser);
				}
			}
		}
		$addr = (CMain::IsHTTPS() ? 'https' : 'http').'://'.$_SERVER['HTTP_HOST'];
		// check Open Graph required meta properties
		if(!strlen(self::$arMetaParams['og:title'])){
			self::$arMetaParams['og:title'] = $PageMetaTitleBrowser;
		}
		if(!strlen(self::$arMetaParams['og:type'])){
			self::$arMetaParams['og:type'] = 'website';
		}
		if(!strlen(self::$arMetaParams['og:image'])){
			$logo = $TEMPLATE_OPTIONS['LOGO_IMAGE']['CURRENT_IMG'];
			if($logo)
				self::$arMetaParams['og:image'] = $logo; // site logo
			else
				self::$arMetaParams['og:image'] = SITE_DIR.'include/logo.png'; // site logo
		}
		if(!strlen(self::$arMetaParams['og:url'])){
			self::$arMetaParams['og:url'] = $_SERVER['REQUEST_URI'];
		}
		if(!strlen(self::$arMetaParams['og:description'])){
			self::$arMetaParams['og:description'] = (strlen($PageMetaDescription) ? $PageMetaDescription : $DirMetaDescription);
		}

		if(self::$arMetaParams['og:description'])
		{
			$obParser = new CTextParser;
			self::$arMetaParams['og:description'] = $obParser->html_cut(self::$arMetaParams['og:description'], 300);
		}

		foreach(self::$arMetaParams as $metaName => $metaValue){
			if(strlen($metaValue = strip_tags($metaValue))){
				$metaValue = str_replace('//', '/', $metaValue);
				if($metaName === 'og:image' || $metaName === 'og:url')
					$metaValue = $addr.$metaValue;
				$APPLICATION->AddHeadString('<meta property="'.$metaName.'" content="'.$metaValue.'" />', true);
				if($metaName === 'og:image'){
					$APPLICATION->AddHeadString('<link rel="image_src" href="'.$metaValue.'"  />', true);
				}
			}
		}
	}


	function DoIBlockAfterSave($arg1, $arg2 = false){
		$ELEMENT_ID = false;
		$IBLOCK_ID = false;
		$OFFERS_IBLOCK_ID = false;
		$OFFERS_PROPERTY_ID = false;
		if (CModule::IncludeModule('currency'))
			$strDefaultCurrency = CCurrency::GetBaseCurrency();

		//Check for catalog event
		if(is_array($arg2) && $arg2["PRODUCT_ID"] > 0){
			//Get iblock element
			$rsPriceElement = CIBlockElement::GetList(
				array(),
				array(
					"ID" => $arg2["PRODUCT_ID"],
				),
				false,
				false,
				array("ID", "IBLOCK_ID")
			);
			if($arPriceElement = $rsPriceElement->Fetch()){
				$arCatalog = CCatalog::GetByID($arPriceElement["IBLOCK_ID"]);
				if(is_array($arCatalog)){
					//Check if it is offers iblock
					if($arCatalog["OFFERS"] == "Y"){
						//Find product element
						$rsElement = CIBlockElement::GetProperty(
							$arPriceElement["IBLOCK_ID"],
							$arPriceElement["ID"],
							"sort",
							"asc",
							array("ID" => $arCatalog["SKU_PROPERTY_ID"])
						);
						$arElement = $rsElement->Fetch();
						if($arElement && $arElement["VALUE"] > 0)
						{
							$ELEMENT_ID = $arElement["VALUE"];
							$IBLOCK_ID = $arCatalog["PRODUCT_IBLOCK_ID"];
							$OFFERS_IBLOCK_ID = $arCatalog["IBLOCK_ID"];
							$OFFERS_PROPERTY_ID = $arCatalog["SKU_PROPERTY_ID"];
						}
					}
					//or iblock which has offers
					elseif($arCatalog["OFFERS_IBLOCK_ID"] > 0){
						$ELEMENT_ID = $arPriceElement["ID"];
						$IBLOCK_ID = $arPriceElement["IBLOCK_ID"];
						$OFFERS_IBLOCK_ID = $arCatalog["OFFERS_IBLOCK_ID"];
						$OFFERS_PROPERTY_ID = $arCatalog["OFFERS_PROPERTY_ID"];
					}
					//or it's regular catalog
					else{
						$ELEMENT_ID = $arPriceElement["ID"];
						$IBLOCK_ID = $arPriceElement["IBLOCK_ID"];
						$OFFERS_IBLOCK_ID = false;
						$OFFERS_PROPERTY_ID = false;
					}
				}
			}
		}
		//Check for iblock event
		elseif(is_array($arg1) && $arg1["ID"] > 0 && $arg1["IBLOCK_ID"] > 0){
			//Check if iblock has offers
			$arOffers = CIBlockPriceTools::GetOffersIBlock($arg1["IBLOCK_ID"]);
			if(is_array($arOffers)){
				$ELEMENT_ID = $arg1["ID"];
				$IBLOCK_ID = $arg1["IBLOCK_ID"];
				$OFFERS_IBLOCK_ID = $arOffers["OFFERS_IBLOCK_ID"];
				$OFFERS_PROPERTY_ID = $arOffers["OFFERS_PROPERTY_ID"];
			}
		}

		if($ELEMENT_ID){
			static $arPropCache = array();
			static $arPropArray=array();

			if(!array_key_exists($IBLOCK_ID, $arPropCache)){
				//Check for MINIMAL_PRICE property
				$rsProperty = CIBlockProperty::GetByID("MINIMUM_PRICE", $IBLOCK_ID);
				$arProperty = $rsProperty->Fetch();
				if($arProperty){
					$arPropCache[$IBLOCK_ID] = $arProperty["ID"];
					$arPropArray["MINIMUM_PRICE"]=$arProperty["ID"];
				}else{
					$arPropCache[$IBLOCK_ID] = false;
				}
				$rsProperty = CIBlockProperty::GetByID("IN_STOCK", $IBLOCK_ID);
				$arProperty = $rsProperty->Fetch();
				if($arProperty){
					$arPropCache[$IBLOCK_ID] = $arProperty["ID"];
					$arPropArray["IN_STOCK"]=$arProperty["ID"];
				}else{
					if(!$arPropCache[$IBLOCK_ID])
						$arPropCache[$IBLOCK_ID] = false;
				}
			}

			if($arPropCache[$IBLOCK_ID]){
				//Compose elements filter
				if($OFFERS_IBLOCK_ID){
					$rsOffers = CIBlockElement::GetList(
						array(),
						array(
							"IBLOCK_ID" => $OFFERS_IBLOCK_ID,
							"PROPERTY_".$OFFERS_PROPERTY_ID => $ELEMENT_ID,
							"ACTIVE" => "Y"
						),
						false,
						false,
						array("ID")
					);
					while($arOffer = $rsOffers->Fetch())
						$arProductID[] = $arOffer["ID"];

					if (!is_array($arProductID))
						$arProductID = array($ELEMENT_ID);
				}
				else
					$arProductID = array($ELEMENT_ID);

				if($arPropArray["MINIMUM_PRICE"]){
					$minPrice = false;
					$maxPrice = false;
					//Get prices
					$rsPrices = CPrice::GetList(
						array(),
						array(
							"PRODUCT_ID" => $arProductID,
						)
					);
					while($arPrice = $rsPrices->Fetch()){
						if (CModule::IncludeModule('currency') && $strDefaultCurrency != $arPrice['CURRENCY'])
							$arPrice["PRICE"] = CCurrencyRates::ConvertCurrency($arPrice["PRICE"], $arPrice["CURRENCY"], $strDefaultCurrency);

						$PRICE = $arPrice["PRICE"];

						if($minPrice === false || $minPrice > $PRICE)
							$minPrice = $PRICE;

						if($maxPrice === false || $maxPrice < $PRICE)
							$maxPrice = $PRICE;
					}

					//Save found minimal price into property
					if($minPrice !== false){
						CIBlockElement::SetPropertyValuesEx(
							$ELEMENT_ID,
							$IBLOCK_ID,
							array(
								"MINIMUM_PRICE" => $minPrice,
								"MAXIMUM_PRICE" => $maxPrice,
							)
						);
					}
				}
				if($arPropArray["IN_STOCK"]){
					$quantity=0;
					$rsQuantity = CCatalogProduct::GetList(
				        array("QUANTITY" => "DESC"),
				        array("ID" => $arProductID),
				        false,
				        false,
				        array("QUANTITY")
				    );
					while($arQuantity = $rsQuantity->Fetch()){
						if($arQuantity["QUANTITY"]>0)
							$quantity+=$arQuantity["QUANTITY"];
					}

					$rsPropStock = CIBlockPropertyEnum::GetList(Array("DEF"=>"DESC", "SORT"=>"ASC"), Array("IBLOCK_ID"=>$IBLOCK_ID, "CODE"=>"IN_STOCK"));
					while($arPropStockArr=$rsPropStock->GetNext()){
						$idPropArr[]=$arPropStockArr["ID"];
					}



					if($quantity>0){


						CIBlockElement::SetPropertyValuesEx(
							$ELEMENT_ID,
							$IBLOCK_ID,
							array(
								"IN_STOCK" => $idPropArr[0],//$idProp,
							)
						);
					}else{
						CIBlockElement::SetPropertyValuesEx(
							$ELEMENT_ID,
							$IBLOCK_ID,
							array(
								"IN_STOCK" => ((is_array($idPropArr) && count($idPropArr)>1) ? $idPropArr[1] : "" ),
							)
						);
					}

					if(class_exists('\Bitrix\Iblock\PropertyIndex\Manager')){
						\Bitrix\Iblock\PropertyIndex\Manager::updateElementIndex($IBLOCK_ID, $ELEMENT_ID);
					}
				}
			}
		}
	}

	function setStockProduct($ID, $arFields){
		//Get iblock element
		$rsPriceElement = CIBlockElement::GetList(
			array(),
			array(
				"ID" => $ID,
			),
			false,
			false,
			array("ID", "IBLOCK_ID")
		);
		if($arPriceElement = $rsPriceElement->Fetch()){
			$arCatalog = CCatalog::GetByID($arPriceElement["IBLOCK_ID"]);
			if(is_array($arCatalog)){
				//Check if it is offers iblock
				if($arCatalog["OFFERS"] == "Y"){
					//Find product element
					$rsElement = CIBlockElement::GetProperty(
						$arPriceElement["IBLOCK_ID"],
						$arPriceElement["ID"],
						"sort",
						"asc",
						array("ID" => $arCatalog["SKU_PROPERTY_ID"])
					);
					$arElement = $rsElement->Fetch();
					if($arElement && $arElement["VALUE"] > 0)
					{
						$ELEMENT_ID = $arElement["VALUE"];
						$IBLOCK_ID = $arCatalog["PRODUCT_IBLOCK_ID"];
						$OFFERS_IBLOCK_ID = $arCatalog["IBLOCK_ID"];
						$OFFERS_PROPERTY_ID = $arCatalog["SKU_PROPERTY_ID"];
					}
				}
				//or iblock which has offers
				elseif($arCatalog["OFFERS_IBLOCK_ID"] > 0){
					$ELEMENT_ID = $arPriceElement["ID"];
					$IBLOCK_ID = $arPriceElement["IBLOCK_ID"];
					$OFFERS_IBLOCK_ID = $arCatalog["OFFERS_IBLOCK_ID"];
					$OFFERS_PROPERTY_ID = $arCatalog["OFFERS_PROPERTY_ID"];
				}
				//or it's regular catalog
				else{
					$ELEMENT_ID = $arPriceElement["ID"];
					$IBLOCK_ID = $arPriceElement["IBLOCK_ID"];
					$OFFERS_IBLOCK_ID = false;
					$OFFERS_PROPERTY_ID = false;
				}
			}
		}
		if($ELEMENT_ID){
			static $arPropCache = array();
			static $arPropArray=array();

			if(!array_key_exists($IBLOCK_ID, $arPropCache)){
				//Check for IN_STOCK property
				$rsProperty = CIBlockProperty::GetByID("IN_STOCK", $IBLOCK_ID);
				$arProperty = $rsProperty->Fetch();
				if($arProperty){
					$arPropCache[$IBLOCK_ID] = $arProperty["ID"];
					$arPropArray["IN_STOCK"]=$arProperty["ID"];
				}else{
					if(!$arPropCache[$IBLOCK_ID])
						$arPropCache[$IBLOCK_ID] = false;
				}
			}
			if($arPropCache[$IBLOCK_ID]){
				//Compose elements filter
				if($OFFERS_IBLOCK_ID){
					$rsOffers = CIBlockElement::GetList(
						array(),
						array(
							"IBLOCK_ID" => $OFFERS_IBLOCK_ID,
							"PROPERTY_".$OFFERS_PROPERTY_ID => $ELEMENT_ID,
							"ACTIVE" => "Y"
						),
						false,
						false,
						array("ID")
					);
					while($arOffer = $rsOffers->Fetch())
						$arProductID[] = $arOffer["ID"];

					if (!is_array($arProductID))
						$arProductID = array($ELEMENT_ID);
				}
				else
					$arProductID = array($ELEMENT_ID);
				if($arPropArray["IN_STOCK"]){
					$quantity=0;
					$rsQuantity = CCatalogProduct::GetList(
				        array("QUANTITY" => "DESC"),
				        array("ID" => $arProductID),
				        false,
				        false,
				        array("QUANTITY")
				    );
					while($arQuantity = $rsQuantity->Fetch()){
						if($arQuantity["QUANTITY"]>0)
							$quantity+=$arQuantity["QUANTITY"];
					}


					$rsPropStock = CIBlockPropertyEnum::GetList(Array("DEF"=>"DESC", "SORT"=>"ASC"), Array("IBLOCK_ID"=>$IBLOCK_ID, "CODE"=>"IN_STOCK"));
					while($arPropStockArr=$rsPropStock->GetNext()){
						$idPropArr[]=$arPropStockArr["ID"];
					}



					if($quantity>0){

						CIBlockElement::SetPropertyValuesEx(
							$ELEMENT_ID,
							$IBLOCK_ID,
							array(
								"IN_STOCK" => $idPropArr[0],//$idProp,
							)
						);
					}else{
						CIBlockElement::SetPropertyValuesEx(
							$ELEMENT_ID,
							$IBLOCK_ID,
							array(
								"IN_STOCK" => ((is_array($idPropArr) && count($idPropArr)>1) ? $idPropArr[1] : "" ),
							)
						);
					}


					/*if($quantity>0){
						$rsPropStock = CIBlockPropertyEnum::GetList(Array("DEF"=>"DESC", "SORT"=>"ASC"), Array("IBLOCK_ID"=>$IBLOCK_ID, "CODE"=>"IN_STOCK"));
						if($arPropStock=$rsPropStock->Fetch()){
							$idProp=$arPropStock["ID"];
						}

						CIBlockElement::SetPropertyValuesEx(
							$ELEMENT_ID,
							$IBLOCK_ID,
							array(
								"IN_STOCK" => $idProp,
							)
						);
					}else{
						CIBlockElement::SetPropertyValuesEx(
							$ELEMENT_ID,
							$IBLOCK_ID,
							array(
								"IN_STOCK" => "",
							)
						);
					}*/



					if(class_exists('\Bitrix\Iblock\PropertyIndex\Manager')){
						\Bitrix\Iblock\PropertyIndex\Manager::updateElementIndex($IBLOCK_ID, $ELEMENT_ID);
					}
				}
			}
		}
	}

	function getViewedProducts($userID=false, $siteID=false){
		global $TEMPLATE_OPTIONS, $STARTTIME;
		$arResult = array();
		$siteID = $siteID ? $siteID : SITE_ID;
		$localKey = 'OPTIMUS_VIEWED_ITEMS_'.$siteID;

		if($IsViewedTypeLocal = ($TEMPLATE_OPTIONS['VIEWED_TYPE']['CURRENT_VALUE'] === 'LOCAL')){
			$arViewed = (isset($_COOKIE[$localKey]) && strlen($_COOKIE[$localKey])) ? json_decode($_COOKIE[$localKey], true) : array();

			if($arViewed && is_array($arViewed)){
				$viewedDays = COption::GetOptionString("sale", "viewed_time", "5");
				$viewedCntMax = COption::GetOptionString("sale", "viewed_count", "10");
				$DIETIME = $STARTTIME - $viewedDays * 86400000;

				// delete old items
				foreach($arViewed as $ID => $arItem){
					if($arItem[0] < $DIETIME){
						unset($arViewed[$ID]);
						continue;
					}

					$arResult[$ID] = $arItem[0];
				}

				// sort by ACTIVE_FROM
				arsort($arResult);

				// make IDs array
				$arResult = array_keys($arResult);

				// only $viewedCntMax items
				$arResult = array_slice($arResult, 0, $viewedCntMax);
			}
		}
		else{
			\Bitrix\Main\Loader::includeModule('sale');
			\Bitrix\Main\Loader::includeModule('catalog');
			$userID = $userID ? $userID : (int)CSaleBasket::GetBasketUserID(false);

			$viewedIterator = \Bitrix\Catalog\CatalogViewedProductTable::GetList(array(
				'select' => array('PRODUCT_ID', 'ELEMENT_ID'),
				'filter' => array('=FUSER_ID' => $userID, '=SITE_ID' => $siteID),
				'order' => array('DATE_VISIT' => 'DESC'),
				'limit' => 8
			));
			while($viewedProduct = $viewedIterator->fetch()){
				$viewedProduct['ELEMENT_ID'] = (int)$viewedProduct['ELEMENT_ID'];
				$viewedProduct['PRODUCT_ID'] = (int)$viewedProduct['PRODUCT_ID'];
				$arResult[$viewedProduct['PRODUCT_ID']] = $viewedProduct['ELEMENT_ID'];
			}
		}

		return $arResult;
	}

	function setFooterTitle(){
		global $APPLICATION, $arSite;
		if(\Bitrix\Main\Config\Option::get("aspro.optimus", "HIDE_SITE_NAME_TITLE", "N")=="N"){
			if(!COptimus::IsMainPage()){
				if(strlen($APPLICATION->GetPageProperty('title')) > 1){
					$title = $APPLICATION->GetPageProperty('title');
				}
				else{
					$title = $APPLICATION->GetTitle();
				}
				$APPLICATION->SetPageProperty("title", $title.' - '.$arSite['SITE_NAME']);
			}
			else{
				if(strlen($APPLICATION->GetPageProperty('title')) > 1){
					$title =  $APPLICATION->GetPageProperty('title');
				}
				else{
					$title =  $APPLICATION->GetTitle();
				}
				if(!empty($title)){
					$APPLICATION->SetPageProperty("title", $title);
				}
				else{
					$APPLICATION->SetPageProperty("title", $arSite['SITE_NAME']);
				}
			}
		}

		self::SetMeta();
	}

	public static function bottomActions(){
        include_once(str_replace('//', '/', $_SERVER['DOCUMENT_ROOT'].'/'.SITE_DIR.'include/footer/bottom_footer.php'));
    }

	function getBasketItems($iblockID=0, $field="PRODUCT_ID"){
		$basket_items = $delay_items = $subscribe_items = $not_available_items = array();
		$arItems=array();
		$bUseSubscribeManager = ($arSubscribeList = self::getUserSubscribeList()) !== false;
		if(CModule::IncludeModule("sale")){
			$arBasketItems=array();
			$dbRes = CSaleBasket::GetList(array("NAME" => "ASC", "ID" => "ASC"), array("FUSER_ID" => CSaleBasket::GetBasketUserID(), "LID" => SITE_ID, "ORDER_ID" => "NULL"), false, false, array("ID", "PRODUCT_ID", "DELAY", "SUBSCRIBE", "CAN_BUY", "TYPE", "SET_PARENT_ID"));
			while($item = $dbRes->Fetch()){
				$arBasketItems[] = $item;
			}

			global $compare_items;
			if(!is_array($compare_items)){
				$compare_items = array();
				$iblockID=((isset($iblockID) && $iblockID) ? $iblockID : \Bitrix\Main\Config\Option::get(self::moduleID, "CATALOG_IBLOCK_ID", COptimusCache::$arIBlocks[SITE_ID]['aspro_optimus_catalog']['aspro_optimus_catalog'][0], SITE_ID ));
				if($iblockID && isset($_SESSION["CATALOG_COMPARE_LIST"][$iblockID]["ITEMS"])){
					$compare_items = array_keys($_SESSION["CATALOG_COMPARE_LIST"][$iblockID]["ITEMS"]);
				}
			}
			if($arBasketItems){
				foreach($arBasketItems as $arBasketItem){
					if(CSaleBasketHelper::isSetItem($arBasketItem)) // set item
						continue;
					if($arBasketItem["DELAY"]=="N" && $arBasketItem["CAN_BUY"] == "Y" && $arBasketItem["SUBSCRIBE"] == "N"){
						$basket_items[] = $arBasketItem[$field];
					}
					elseif($arBasketItem["DELAY"]=="Y" && $arBasketItem["CAN_BUY"] == "Y" && $arBasketItem["SUBSCRIBE"] == "N"){
						$delay_items[] = $arBasketItem[$field];
					}
					elseif($arBasketItem["SUBSCRIBE"]=="Y"){
						$subscribe_items[] = $arBasketItem[$field];
					}else{
						$not_available_items[] = $arBasketItem[$field];
					}
				}
			}
			$arItems["BASKET"]=array_combine($basket_items, $basket_items);
			$arItems["DELAY"]=array_combine($delay_items, $delay_items);
			$arItems["SUBSCRIBE"]=array_combine($subscribe_items, $subscribe_items);
			$arItems["NOT_AVAILABLE"]=array_combine($not_available_items, $not_available_items);
			$arItems["COMPARE"]=array_combine($compare_items, $compare_items);
		}

		if($bUseSubscribeManager && $arSubscribeList){
			foreach($arSubscribeList as $PRODUCT_ID => $arIDs){
				$arItems['SUBSCRIBE'][$PRODUCT_ID] = $PRODUCT_ID;
			}
		}

		return $arItems;
	}

	function getUserSubscribeList($userId = false){
		if(CModule::IncludeModule('catalog')){
			if(class_exists('\Bitrix\Catalog\Product\SubscribeManager')){
				global $USER, $DB;
				$userId = $userId ? intval($userId) : (($USER && is_object($USER) && $USER->isAuthorized()) ? $USER->getId() : false);

				$bSubscribeProducts = (isset($_SESSION['SUBSCRIBE_PRODUCT']['LIST_PRODUCT_ID']) && $_SESSION['SUBSCRIBE_PRODUCT']['LIST_PRODUCT_ID']);

				if($userId || $bSubscribeProducts)
				{
					$arSubscribeList = array();
					$subscribeManager = new \Bitrix\Catalog\Product\SubscribeManager;

					$filter = array(
						'USER_ID' => $userId,
						'=SITE_ID' => SITE_ID,
						array(
							'LOGIC' => 'OR',
							array('=DATE_TO' => false),
							array('>DATE_TO' => date($DB->dateFormatToPHP(\CLang::getDateFormat('FULL')), time()))
						),
					);

					$resultObject = \Bitrix\Catalog\SubscribeTable::getList(
						array(
							'select' => array(
								'ID',
								'ITEM_ID',
							),
							'filter' => $filter,
						)
					);

					while($arItem = $resultObject->fetch()){
						$arSubscribeList[$arItem['ITEM_ID']][] = $arItem['ID'];
					}
					if(!$userId && $bSubscribeProducts)
					{
						foreach($arSubscribeList as $key => $id)
						{
							if(!$_SESSION['SUBSCRIBE_PRODUCT']['LIST_PRODUCT_ID'][$key])
								unset($arSubscribeList[$key]);
						}
					}

					return $arSubscribeList;
				}
			}
		}

		return false;
	}

	function showFooterBasket(){
		Bitrix\Main\Page\Frame::getInstance()->startDynamicWithID("basketitems-block");

		$arItems=self::getBasketItems();

		if(CModule::IncludeModule("currency")){
			CJSCore::Init(array('currency'));
			$currencyFormat = CCurrencyLang::GetFormatDescription(CSaleLang::GetLangCurrency(SITE_ID));
		}
		?>
		<script type="text/javascript">
			<?if(is_array($currencyFormat)):?>
				function jsPriceFormat(_number){
					BX.Currency.setCurrencyFormat('<?=CSaleLang::GetLangCurrency(SITE_ID);?>', <? echo CUtil::PhpToJSObject($currencyFormat, false, true); ?>);
					return BX.Currency.currencyFormat(_number, '<?=CSaleLang::GetLangCurrency(SITE_ID);?>', true);
				}
			<?endif;?>
		</script>
		<script type="text/javascript">
			var arBasketAspro = <? echo CUtil::PhpToJSObject($arItems, false, true); ?>;
			$(document).ready(function(){
				<?if(is_array($arItems["BASKET"]) && !empty($arItems["BASKET"])):?>
					<?foreach( $arItems["BASKET"] as $key=>$item ){?>
						$('.to-cart[data-item=<?=$key?>]').hide();
						$('.counter_block[data-item=<?=$key?>]').hide();
						$('.in-cart[data-item=<?=$key?>]').show();
						$('.in-cart[data-item=<?=$key?>]').closest('.button_block').addClass('wide');
					<?}?>
				<?endif;?>
				<?if(is_array($arItems["DELAY"]) && !empty($arItems["DELAY"])):?>
					<?foreach( $arItems["DELAY"] as $key=>$item ){?>
						$('.wish_item.to[data-item=<?=$key?>]').hide();
						$('.wish_item.in[data-item=<?=$key?>]').show();
						if ($('.wish_item[data-item=<?=$key?>]').find(".value.added").length) {
							$('.wish_item[data-item=<?=$key?>]').addClass("added");
							$('.wish_item[data-item=<?=$key?>]').find(".value").hide();
							$('.wish_item[data-item=<?=$key?>]').find(".value.added").css('display','block');
						}
					<?}?>
				<?endif;?>
				<?if(is_array($arItems["SUBSCRIBE"]) && !empty($arItems["SUBSCRIBE"])):?>
					<?foreach( $arItems["SUBSCRIBE"] as $key=>$item ){?>
						$('.to-subscribe[data-item=<?=$key?>]').hide();
						$('.in-subscribe[data-item=<?=$key?>]').show();
					<?}?>
				<?endif;?>
				<?if(is_array($arItems["COMPARE"]) && !empty($arItems["COMPARE"])):?>
					<?foreach( $arItems["COMPARE"] as $key=>$item ){?>
						$('.compare_item.to[data-item=<?=$key?>]').hide();
						$('.compare_item.in[data-item=<?=$key?>]').show();
						if ($('.compare_item[data-item=<?=$key?>]').find(".value.added").length){
							$('.compare_item[data-item=<?=$key?>]').addClass("added");
							$('.compare_item[data-item=<?=$key?>]').find(".value").hide();
							$('.compare_item[data-item=<?=$key?>]').find(".value.added").css('display','block');
						}
					<?}?>
				<?endif;?>
			});
		</script>
		<?Bitrix\Main\Page\Frame::getInstance()->finishDynamicWithID("basketitems-block", "");
	}

	static function GetIBlockAllElementsFilter(&$arParams){
		$arFilter = array('IBLOCK_ID' => $arParams['IBLOCK_ID'], 'INCLUDE_SUBSECTIONS' => 'Y');
		if(isset($arParams['CHECK_DATES']) && $arParams['CHECK_DATES'] == 'Y'){
			$arFilter = array_merge($arFilter, array('ACTIVE' => 'Y', 'ACTIVE_DATE' => 'Y'));
		}
		if(isset($arParams['SHOW_DEACTIVATED']) && $arParams['SHOW_DEACTIVATED'] === 'N'){ // for catalog component
			$arFilter = array_merge($arFilter, array('ACTIVE' => 'Y'));
		}
		if(strlen($arParams['FILTER_NAME']) && (array)$GLOBALS[$arParams['FILTER_NAME']]){
			$arFilter = array_merge($arFilter, (array)$GLOBALS[$arParams['FILTER_NAME']]);
		}
		return $arFilter;
	}

	static function ShowTopDetailBanner($arResult, $arParams){
		$bg = ((isset($arResult['PROPERTIES']['BNR_TOP_BG']) && $arResult['PROPERTIES']['BNR_TOP_BG']['VALUE']) ? CFile::GetPath($arResult['PROPERTIES']['BNR_TOP_BG']['VALUE']) : SITE_TEMPLATE_PATH.'/images/top-bnr.jpg');
		$bShowBG = (isset($arResult['PROPERTIES']['BNR_TOP_IMG']) && $arResult['PROPERTIES']['BNR_TOP_IMG']['VALUE']);
		$title = ($arResult['IPROPERTY_VALUES'] && strlen($arResult['IPROPERTY_VALUES']['ELEMENT_PAGE_TITLE']) ? $arResult['IPROPERTY_VALUES']['ELEMENT_PAGE_TITLE'] : $arResult['NAME']);
		$text_color_style = ((isset($arResult['PROPERTIES']['CODE_TEXT']) && $arResult['PROPERTIES']['CODE_TEXT']['VALUE']) ? 'style="color:'.$arResult['PROPERTIES']['CODE_TEXT']['VALUE'].'"' : '');
		$bLanding = (isset($arResult['IS_LANDING']) && $arResult['IS_LANDING'] == 'Y');
		?>
		<div class="banners-content">
			<div class="maxwidth-banner" style="background: url(<?=$bg;?>) 50% 50% no-repeat;">
				<div class="row">
					<div class="maxwidth-theme">
						<div class="col-md-<?=($bShowBG ? 5 : 12);?> text animated delay06 duration08 item_block fadeInUp">
							<div class="inner">
								<h1 <?=$text_color_style;?>><?=$title?></h1>
								<div class="intro-text" <?=$text_color_style;?>>
									<?if($bLanding):?>
										<p><?=$arResult['PROPERTIES']['ANONS']['VALUE'];?></p>
									<?else:?>
										<?if($arResult['PREVIEW_TEXT_TYPE'] == 'text'):?>
											<p><?=$arResult['FIELDS']['PREVIEW_TEXT'];?></p>
										<?else:?>
											<?=$arResult['FIELDS']['PREVIEW_TEXT'];?>
										<?endif;?>
									<?endif;?>
								</div>
								<p>
									<?if($bLanding):?>
										<?if($arResult['PROPERTIES']['BUTTON_TEXT']['VALUE']):?>
											<span>
												<span class="button wide scroll_btn"><?=$arResult['PROPERTIES']['BUTTON_TEXT']['VALUE'];?></span>
											</span>
										<?endif;?>
									<?else:?>
										<?if($arResult['DISPLAY_PROPERTIES']['FORM_ORDER']['VALUE_XML_ID'] == 'YES'):?>
											<span>
												<span class="button wide animate-load" data-event="jqm" data-param-form_id="<?=($arParams["FORM_ID_ORDER_SERVISE"] ? $arParams["FORM_ID_ORDER_SERVISE"] : 'SERVICES');?>" data-name="order_services" data-autoload-service="<?=self::formatJsName($arResult['NAME']);?>" data-autoload-project="<?=self::formatJsName($arResult['NAME']);?>" data-autoload-product="<?=self::formatJsName($arResult['NAME']);?>"><span><?=(strlen($arParams['S_ORDER_SERVISE']) ? $arParams['S_ORDER_SERVISE'] : Loc::getMessage('S_ORDER_SERVISE'))?></span></span>
											</span>
										<?endif;?>

										<?if($arResult['DISPLAY_PROPERTIES']['FORM_QUESTION']['VALUE_XML_ID'] == 'YES'):?>
											<span>
												<span class="button wide grey animate-load" data-event="jqm" data-param-form_id="ASK" data-autoload-need_product="<?=self::formatJsName($arResult['NAME']);?>" data-name="question"><span><?=(strlen($arParams['S_ASK_QUESTION']) ? $arParams['S_ASK_QUESTION'] : Loc::getMessage('S_ASK_QUESTION'))?></span></span>
											</span>
										<?endif;?>
									<?endif;?>
								</p>
							</div>
						</div>
						<?if($bShowBG):?>
							<div class="col-md-7 hidden-xs hidden-sm img animated delay09 duration08 item_block fadeInUp">
								<div class="inner">
									<img src="<?=CFile::GetPath($arResult['PROPERTIES']['BNR_TOP_IMG']['VALUE']);?>" alt="<?=$title;?>" title="<?=$title;?>" draggable="false">
								</div>
							</div>
						<?endif;?>
					</div>
				</div>
			</div>
		</div>
	<?}

	static function utf8_substr_replace($original, $replacement, $position, $length){
		$startString = mb_substr($original, 0, $position, 'UTF-8');
		$endString = mb_substr($original, $position + $length, mb_strlen($original), 'UTF-8');

		$out = $startString.$replacement.$endString;

		return $out;
	}

	public static function formatJsName($name = ''){
		return htmlspecialcharsbx($name);
	}

	function prepareShopListArray($arShops){
		$arFormatShops=array();

		$arPlacemarks = array();

		if(is_array($arShops)){
			foreach($arShops as $i => $arShop){
				if(isset($arShop['IBLOCK_ID'])){
					$arShop['TITLE'] = ($arShop['FIELDS']['NAME'] ? $arShop['NAME'] : '');
					$imageID = (($arShop['FIELDS']['PREVIEW_PICTURE'] && $arShop["PREVIEW_PICTURE"]['ID']) ? $arShop["PREVIEW_PICTURE"]['ID'] : (($arShop['FIELD_CODE']['DETAIL_PICTURE'] && $arShop["DETAIL_PICTURE"]['ID']) ? $arShop["DETAIL_PICTURE"]['ID'] : false));
					$arShop['IMAGE'] = ($imageID ? CFile::ResizeImageGet($imageID, array('width' => 100, 'height' => 69), BX_RESIZE_IMAGE_EXACT) : '');
					$arShop['ADDRESS'] = $arShop['DISPLAY_PROPERTIES']['ADDRESS']['VALUE'];
					$arShop['ADDRESS'] = $arShop['TITLE'].((strlen($arShop['TITLE']) && strlen($arShop['ADDRESS'])) ? ', ' : '').$arShop['ADDRESS'];
					$arShop['PHONE'] = $arShop['DISPLAY_PROPERTIES']['PHONE']['VALUE'];
					$arShop['EMAIL'] = $arShop['DISPLAY_PROPERTIES']['EMAIL']['VALUE'];
					if($arShop['DISPLAY_PROPERTIES']['SCHEDULE']['VALUE']['TYPE'] == 'html'){
						$arShop['SCHEDULE'] = htmlspecialchars_decode($arShop['DISPLAY_PROPERTIES']['SCHEDULE']['~VALUE']['TEXT']);
					}
					else{
						$arShop['SCHEDULE'] = nl2br($arShop['DISPLAY_PROPERTIES']['SCHEDULE']['~VALUE']['TEXT']);
					}
					$arShop['URL'] = $arShop['DETAIL_PAGE_URL'];
					$arShop['METRO_PLACEMARK_HTML'] = '';
					if($arShop['METRO'] = $arShop['DISPLAY_PROPERTIES']['METRO']['VALUE']){
						if(!is_array($arShop['METRO'])){
							$arShop['METRO'] = array($arShop['METRO']);
						}
						foreach($arShop['METRO'] as $metro){
							$arShop['METRO_PLACEMARK_HTML'] .= '<div class="metro"><i></i>'.$metro.'</div>';
						}
					}
					$arShop['DESCRIPTION'] = $arShop['DETAIL_TEXT'];
					$arShop['GPS_S'] = false;
					$arShop['GPS_N'] = false;
					if($arStoreMap = explode(',', $arShop['DISPLAY_PROPERTIES']['MAP']['VALUE'])){
						$arShop['GPS_S'] = $arStoreMap[0];
						$arShop['GPS_N'] = $arStoreMap[1];
					}

					if($arShop['GPS_S'] && $arShop['GPS_N']){
						$mapLAT += $arShop['GPS_S'];
						$mapLON += $arShop['GPS_N'];
						$str_phones = '';
						if($arShop['PHONE'])
						{
							$str_phones .= '<div class="phone">';
							foreach($arShop['PHONE'] as $phone)
							{
								$str_phones .= '<br><a rel="nofollow" href="tel:'.str_replace(array(' ', ',', '-', '(', ')'), '', $phone).'">'.$phone.'</a>';
							}
							$str_phones .= '</div>';
						}
						$arPlacemarks[] = array(
							"ID" => $arShop["ID"],
							"LAT" => $arShop['GPS_S'],
							"LON" => $arShop['GPS_N'],
							"TEXT" => $arShop["TITLE"],
							"HTML" => '<div class="title">'.(strlen($arShop["URL"]) ? '<a href="'.$arShop["URL"].'">' : '').$arShop["ADDRESS"].(strlen($arShop["URL"]) ? '</a>' : '').'</div><div class="info-content">'.($arShop['METRO'] ? $arShop['METRO_PLACEMARK_HTML'] : '').(strlen($arShop['SCHEDULE']) ? '<div class="schedule">'.$arShop['SCHEDULE'].'</div>' : '').$str_phones.(strlen($arShop['EMAIL']) ? '<div class="email"><a rel="nofollow" href="mailto:'.$arShop['EMAIL'].'">'.$arShop['EMAIL'].'</a></div>' : '').'</div>'.(strlen($arShop['URL']) ? '<a rel="nofollow" class="button" href="'.$arShop["URL"].'"><span>'.GetMessage('DETAIL').'</span></a>' : '')
						);
					}
				}
				else{
					$str_phones = '';
					if($arShop['PHONE'])
					{
						$arShop['PHONE'] = explode(",", $arShop['PHONE']);
						$str_phones .= '<div class="phone">';
						foreach($arShop['PHONE'] as $phone)
						{
							$str_phones .= '<br><a rel="nofollow" href="tel:'.str_replace(array(' ', ',', '-', '(', ')'), '', $phone).'">'.$phone.'</a>';
						}
						$str_phones .= '</div>';
					}
					if($arShop['GPS_S'] && $arShop['GPS_N']){
						$mapLAT += $arShop['GPS_N'];
						$mapLON += $arShop['GPS_S'];
						$arPlacemarks[] = array(
							"ID" => $arShop["ID"],
							"LON" => $arShop['GPS_S'],
							"LAT" => $arShop['GPS_N'],
							"TEXT" => $arShop["TITLE"],
							"HTML" => '<div class="title">'.(strlen($arShop["URL"]) ? '<a href="'.$arShop["URL"].'">' : '').$arShop["ADDRESS"].(strlen($arShop["URL"]) ? '</a>' : '').'</div><div class="info-content">'.($arShop['METRO'] ? $arShop['METRO_PLACEMARK_HTML'] : '').(strlen($arShop['SCHEDULE']) ? '<div class="schedule">'.$arShop['SCHEDULE'].'</div>' : '').$str_phones.(strlen($arShop['EMAIL']) ? '<div class="email"><a rel="nofollow" href="mailto:'.$arShop['EMAIL'].'">'.$arShop['EMAIL'].'</a></div>' : '').'</div>'.(strlen($arShop['URL']) ? '<a rel="nofollow" class="button" href="'.$arShop["URL"].'"><span>'.GetMessage('DETAIL').'</span></a>' : '')
						);
					}
				}
				$arShops[$i] = $arShop;
			}
		}
		$arFormatShops["SHOPS"]=$arShops;
		$arFormatShops["PLACEMARKS"]=$arPlacemarks;
		$arFormatShops["POINTS"]=array(
			"LAT" => $mapLAT,
			"LON" => $mapLON,
		);

		return $arFormatShops;
	}

	function prepareShopDetailArray($arShop, $arParams){
		$mapLAT = $mapLON = 0;
		$arPlacemarks = array();
		$arPhotos = array();
		$arFormatShops=array();

		if(is_array($arShop)){
			if(isset($arShop['IBLOCK_ID'])){
				$arShop['LIST_URL'] = $arShop['LIST_PAGE_URL'];
				$arShop['TITLE'] = (in_array('NAME', $arParams['FIELD_CODE']) ? $arShop['NAME'] : '');
				$arShop['ADDRESS'] = $arShop['DISPLAY_PROPERTIES']['ADDRESS']['VALUE'];
				$arShop['ADDRESS'] = $arShop['TITLE'].((strlen($arShop['TITLE']) && strlen($arShop['ADDRESS'])) ? ', ' : '').$arShop['ADDRESS'];
				$arShop['PHONE'] = $arShop['DISPLAY_PROPERTIES']['PHONE']['VALUE'];
				$arShop['EMAIL'] = $arShop['DISPLAY_PROPERTIES']['EMAIL']['VALUE'];
				if($arShop['DISPLAY_PROPERTIES']['SCHEDULE']['VALUE']['TYPE'] == 'html'){
					$arShop['SCHEDULE'] = htmlspecialchars_decode($arShop['DISPLAY_PROPERTIES']['SCHEDULE']['~VALUE']['TEXT']);
				}
				else{
					$arShop['SCHEDULE'] = nl2br($arShop['DISPLAY_PROPERTIES']['SCHEDULE']['~VALUE']['TEXT']);
				}
				$arShop['URL'] = $arShop['DETAIL_PAGE_URL'];
				$arShop['METRO_PLACEMARK_HTML'] = '';
				if($arShop['METRO'] = $arShop['DISPLAY_PROPERTIES']['METRO']['VALUE']){
					if(!is_array($arShop['METRO'])){
						$arShop['METRO'] = array($arShop['METRO']);
					}
					foreach($arShop['METRO'] as $metro){
						$arShop['METRO_PLACEMARK_HTML'] .= '<div class="metro"><i></i>'.$metro.'</div>';
					}
				}
				$arShop['GPS_S'] = false;
				$arShop['GPS_N'] = false;
				if($arStoreMap = explode(',', $arShop['DISPLAY_PROPERTIES']['MAP']['VALUE'])){
					$arShop['GPS_S'] = $arStoreMap[0];
					$arShop['GPS_N'] = $arStoreMap[1];
				}

				if($arShop['GPS_S'] && $arShop['GPS_N']){
					$mapLAT += $arShop['GPS_S'];
					$mapLON += $arShop['GPS_N'];
					$str_phones = '';
					if($arShop['PHONE'])
					{
						$str_phones .= '<div class="phone">';
						foreach($arShop['PHONE'] as $phone)
						{
							$str_phones .= '<br><a rel="nofollow" href="tel:'.str_replace(array(' ', ',', '-', '(', ')'), '', $phone).'">'.$phone.'</a>';
						}
						$str_phones .= '</div>';
					}
					$arPlacemarks[] = array(
						"ID" => $arShop["ID"],
						"LAT" => $arShop['GPS_S'],
						"LON" => $arShop['GPS_N'],
						"TEXT" => $arShop["TITLE"],
						"HTML" => '<div class="title">'.(strlen($arShop["URL"]) ? '<a href="'.$arShop["URL"].'">' : '').$arShop["ADDRESS"].(strlen($arShop["URL"]) ? '</a>' : '').'</div><div class="info-content">'.($arShop['METRO'] ? $arShop['METRO_PLACEMARK_HTML'] : '').(strlen($arShop['SCHEDULE']) ? '<div class="schedule">'.$arShop['SCHEDULE'].'</div>' : '').$str_phones.(strlen($arShop['EMAIL']) ? '<div class="email"><a rel="nofollow" href="mailto:'.$arShop['EMAIL'].'">'.$arShop['EMAIL'].'</a></div>' : '').'</div>'.(strlen($arShop['URL']) ? '<a rel="nofollow" class="button" href="'.$arShop["URL"].'"><span>'.GetMessage('DETAIL').'</span></a>' : '')
					);
				}
			}
			else{
				$arShop["TITLE"] = htmlspecialchars_decode($arShop["TITLE"]);
				$arShop["ADDRESS"] = htmlspecialchars_decode($arShop["ADDRESS"]);
				$arShop["ADDRESS"] = (strlen($arShop["TITLE"]) ? $arShop["TITLE"].', ' : '').$arShop["ADDRESS"];
				$arShop["DESCRIPTION"] = htmlspecialchars_decode($arShop['DESCRIPTION']);
				$arShop['SCHEDULE'] = htmlspecialchars_decode($arShop['SCHEDULE']);

				$str_phones = '';
				if($arShop['PHONE'])
				{
					$arShop['PHONE'] = explode(",", $arShop['PHONE']);
					$str_phones .= '<div class="phone">';
					foreach($arShop['PHONE'] as $phone)
					{
						$str_phones .= '<br><a rel="nofollow" href="tel:'.str_replace(array(' ', ',', '-', '(', ')'), '', $phone).'">'.$phone.'</a>';
					}
					$str_phones .= '</div>';
				}
				if($arShop['GPS_S'] && $arShop['GPS_N']){
					$mapLAT += $arShop['GPS_N'];
					$mapLON += $arShop['GPS_S'];
					$arPlacemarks[] = array(
						"ID" => $arShop["ID"],
						"LON" => $arShop['GPS_S'],
						"LAT" => $arShop['GPS_N'],
						"TEXT" => $arShop["TITLE"],
						"HTML" => '<div class="title">'.(strlen($arShop["URL"]) ? '<a href="'.$arShop["URL"].'">' : '').$arShop["ADDRESS"].(strlen($arShop["URL"]) ? '</a>' : '').'</div><div class="info-content">'.($arShop['METRO'] ? $arShop['METRO_PLACEMARK_HTML'] : '').(strlen($arShop['SCHEDULE']) ? '<div class="schedule">'.$arShop['SCHEDULE'].'</div>' : '').$str_phones.(strlen($arShop['EMAIL']) ? '<div class="email"><a rel="nofollow" href="mailto:'.$arShop['EMAIL'].'">'.$arShop['EMAIL'].'</a></div>' : '').'</div>'.(strlen($arShop['URL']) ? '<a rel="nofollow" class="button" href="'.$arShop["URL"].'"><span>'.GetMessage('DETAIL').'</span></a>' : '')
					);
				}
			}
		}
		$arFormatShops["SHOP"]=$arShop;
		$arFormatShops["PLACEMARKS"]=$arPlacemarks;
		$arFormatShops["POINTS"]=array(
			"LAT" => $mapLAT,
			"LON" => $mapLON,
		);

		return $arFormatShops;

	}

	function drawShopsList($arShops, $arParams, $showMap="Y"){
		global $APPLICATION;
		$mapLAT = $mapLON = 0;
		$arPlacemarks = array();

		if(is_array($arShops)){
			foreach($arShops as $i => $arShop){
				if(isset($arShop['IBLOCK_ID'])){
					$arShop['TITLE'] = (in_array('NAME', $arParams['FIELD_CODE']) ? $arShop['NAME'] : '');

					$imageID = ((in_array('PREVIEW_PICTURE', $arParams['FIELD_CODE']) && $arShop["PREVIEW_PICTURE"]['ID']) ? $arShop["PREVIEW_PICTURE"]['ID'] : ((in_array('DETAIL_PICTURE', $arParams['FIELD_CODE']) && $arShop["DETAIL_PICTURE"]['ID']) ? $arShop["DETAIL_PICTURE"]['ID'] : false));
					$arShop['IMAGE'] = ($imageID ? CFile::ResizeImageGet($imageID, array('width' => 100, 'height' => 69), BX_RESIZE_IMAGE_EXACT) : '');
					$arShop['ADDRESS'] = $arShop['DISPLAY_PROPERTIES']['ADDRESS']['VALUE'];
					$arShop['ADDRESS'] = $arShop['TITLE'].((strlen($arShop['TITLE']) && strlen($arShop['ADDRESS'])) ? ', ' : '').$arShop['ADDRESS'];
					$arShop['PHONE'] =  $arShop['DISPLAY_PROPERTIES']['PHONE']['VALUE'];
					$arShop['EMAIL'] = $arShop['DISPLAY_PROPERTIES']['EMAIL']['VALUE'];

					if(strToLower($arShop['DISPLAY_PROPERTIES']['SCHEDULE']['VALUE']['TYPE']) == 'html'){
						$arShop['SCHEDULE'] = htmlspecialchars_decode($arShop['DISPLAY_PROPERTIES']['SCHEDULE']['~VALUE']['TEXT']);
					}
					else{
						$arShop['SCHEDULE'] = nl2br($arShop['DISPLAY_PROPERTIES']['SCHEDULE']['~VALUE']['TEXT']);
					}
					$arShop['URL'] = $arShop['DETAIL_PAGE_URL'];
					$arShop['METRO_PLACEMARK_HTML'] = '';
					if($arShop['METRO'] = $arShop['DISPLAY_PROPERTIES']['METRO']['VALUE']){
						if(!is_array($arShop['METRO'])){
							$arShop['METRO'] = array($arShop['METRO']);
						}
						foreach($arShop['METRO'] as $metro){
							$arShop['METRO_PLACEMARK_HTML'] .= '<div class="metro"><i></i>'.$metro.'</div>';
						}
					}
					$arShop['DESCRIPTION'] = $arShop['DETAIL_TEXT'];
					$arShop['GPS_S'] = false;
					$arShop['GPS_N'] = false;
					if($arStoreMap = explode(',', $arShop['DISPLAY_PROPERTIES']['MAP']['VALUE'])){
						$arShop['GPS_S'] = $arStoreMap[0];
						$arShop['GPS_N'] = $arStoreMap[1];
					}

					if($arShop['GPS_S'] && $arShop['GPS_N']){
						$mapLAT += $arShop['GPS_S'];
						$mapLON += $arShop['GPS_N'];
						$str_phones = '';
						if($arShop['PHONE'])
						{
							foreach($arShop['PHONE'] as $phone)
							{
								$str_phones .= '<div class="phone"><a rel="nofollow" href="tel:'.str_replace(array(' ', ',', '-', '(', ')'), '', $phone).'">'.$phone.'</a></div>';
							}
						}
						$arPlacemarks[] = array(
							"ID" => $arShop["ID"],
							"LAT" => $arShop['GPS_S'],
							"LON" => $arShop['GPS_N'],
							"TEXT" => $arShop["TITLE"],
							"HTML" => '<div class="title">'.(strlen($arShop["URL"]) ? '<a href="'.$arShop["URL"].'">' : '').$arShop["ADDRESS"].(strlen($arShop["URL"]) ? '</a>' : '').'</div><div class="info-content">'.($arShop['METRO'] ? $arShop['METRO_PLACEMARK_HTML'] : '').(strlen($arShop['SCHEDULE']) ? '<div class="schedule">'.$arShop['SCHEDULE'].'</div>' : '').$str_phones.(strlen($arShop['EMAIL']) ? '<div class="email"><a rel="nofollow" href="mailto:'.$arShop['EMAIL'].'">'.$arShop['EMAIL'].'</a></div>' : '').'</div>'.(strlen($arShop['URL']) ? '<a rel="nofollow" class="button" href="'.$arShop["URL"].'"><span>'.GetMessage('DETAIL').'</span></a>' : '')
						);
					}
				}
				else{
					$str_phones = '';
					if($arShop['PHONE'])
					{
						$arShop['PHONE'] = explode(",", $arShop['PHONE']);
						foreach($arShop['PHONE'] as $phone)
						{
							$str_phones .= '<div class="phone"><a rel="nofollow" href="tel:'.str_replace(array(' ', ',', '-', '(', ')'), '', $phone).'">'.$phone.'</a></div>';
						}
					}
					if($arShop['GPS_S'] && $arShop['GPS_N']){
						$mapLAT += $arShop['GPS_N'];
						$mapLON += $arShop['GPS_S'];
						$arPlacemarks[] = array(
							"ID" => $arShop["ID"],
							"LON" => $arShop['GPS_S'],
							"LAT" => $arShop['GPS_N'],
							"TEXT" => $arShop["TITLE"],
							"HTML" => '<div class="title">'.(strlen($arShop["URL"]) ? '<a href="'.$arShop["URL"].'">' : '').$arShop["ADDRESS"].(strlen($arShop["URL"]) ? '</a>' : '').'</div><div class="info-content">'.($arShop['METRO'] ? $arShop['METRO_PLACEMARK_HTML'] : '').(strlen($arShop['SCHEDULE']) ? '<div class="schedule">'.$arShop['SCHEDULE'].'</div>' : '').$str_phones.(strlen($arShop['EMAIL']) ? '<div class="email"><a rel="nofollow" href="mailto:'.$arShop['EMAIL'].'">'.$arShop['EMAIL'].'</a></div>' : '').'</div>'.(strlen($arShop['URL']) ? '<a rel="nofollow" class="button" href="'.$arShop["URL"].'"><span>'.GetMessage('DETAIL').'</span></a>' : '')
						);
					}
				}
				$arShops[$i] = $arShop;
			}
			?>
			<?if($arShops):?>
				<?if(abs($mapLAT) > 0 && abs($mapLON) > 0 && $showMap=="Y"):?>
					<?
						$arMapTypes = ['YANDEX', 'GOOGLE'];
						
						$mapLAT = floatval($mapLAT / count($arShops));
						$mapLON = floatval($mapLON / count($arShops));
						$sMapType = isset($arParams["MAP_TYPE_FROM_MODULE"]) && $arParams["MAP_TYPE_FROM_MODULE"] === "Y" 
							? $arMapTypes[\Bitrix\Main\Config\Option::get("aspro.optimus", "MAP_TYPE", "0", SITE_ID)]
							: $arMapTypes[$arParams["MAP_TYPE"]];

					?>
					<div class="contacts_map">
						<?if($sMapType === "GOOGLE"):?>
							<?$APPLICATION->IncludeComponent(
								"bitrix:map.google.view",
								"map",
								array(
									"INIT_MAP_TYPE" => "ROADMAP",
									"MAP_DATA" => serialize(array("google_lat" => $mapLAT, "google_lon" => $mapLON, "google_scale" => 15, "PLACEMARKS" => $arPlacemarks)),
									"MAP_WIDTH" => "100%",
									"MAP_HEIGHT" => "400",
									"CONTROLS" => array(
									),
									"OPTIONS" => array(
										0 => "ENABLE_DBLCLICK_ZOOM",
										1 => "ENABLE_DRAGGING",
									),
									"MAP_ID" => "",
									"ZOOM_BLOCK" => array(
										"POSITION" => "right center",
									),
									"API_KEY" => $arParams["GOOGLE_API_KEY"],
									"COMPOSITE_FRAME_MODE" => "A",
									"COMPOSITE_FRAME_TYPE" => "AUTO"
								),
								false, array("HIDE_ICONS" =>"Y")
							);?>
						<?else:?>
							<?$APPLICATION->IncludeComponent(
								"bitrix:map.yandex.view",
								"map",
								array(
									"INIT_MAP_TYPE" => "ROADMAP",
									"MAP_DATA" => serialize(array("yandex_lat" => $mapLAT, "yandex_lon" => $mapLON, "yandex_scale" => 4, "PLACEMARKS" => $arPlacemarks)),
									"MAP_WIDTH" => "100%",
									"MAP_HEIGHT" => "400",
									"CONTROLS" => array(
										0 => "ZOOM",
										1 => "SMALLZOOM",
										3 => "TYPECONTROL",
										4 => "SCALELINE",
									),
									"OPTIONS" => array(
										0 => "ENABLE_DBLCLICK_ZOOM",
										1 => "ENABLE_DRAGGING",
									),
									"MAP_ID" => "",
									"ZOOM_BLOCK" => array(
										"POSITION" => "right center",
									),
									"COMPONENT_TEMPLATE" => "map",
									"API_KEY" => $arParams["GOOGLE_API_KEY"],
									"COMPOSITE_FRAME_MODE" => "A",
									"COMPOSITE_FRAME_TYPE" => "AUTO"
								),
								false, array("HIDE_ICONS" =>"Y")
							);?>
						<?endif;?>
					</div>
				<?endif;?>
				<div class="wrapper_inner">
					<div class="shops list">
						<div class="items">
							<?foreach($arShops as $arShop):?>
								<div class="item <?=(strlen($arShop["IMAGE"]["src"]) ? '' : 'wi')?>" data-ID="<?=$arShop['ID']?>">
									<div class="image">
										<?if(strlen($arShop["IMAGE"]["src"])):?>
											<?if(strlen($arShop['URL'])):?>
												<a href="<?=$arShop['URL']?>"><img src="<?=$arShop["IMAGE"]["src"]?>" alt="<?=$arShop["ADDRESS"]?>" title="<?=$arShop["ADDRESS"]?>" /></a>
											<?else:?>
												<img src="<?=$arShop["IMAGE"]["src"]?>" alt="<?=$arShop["ADDRESS"]?>" title="<?=$arShop["ADDRESS"]?>" />
											<?endif;?>
										<?endif;?>
									</div>
									<div class="rubber">
										<div class="title_metro">
											<?if(strlen($arShop["ADDRESS"])):?>
												<?if(strlen($arShop['URL'])):?>
													<a href="<?=$arShop['URL']?>"><div class="title"><?=$arShop["ADDRESS"]?></div></a>
												<?else:?>
													<div class="title"><?=$arShop["ADDRESS"]?></div>
												<?endif;?>
											<?endif;?>
											<?if($arShop["METRO"]):?>
												<?foreach($arShop['METRO'] as $metro):?>
													<div class="metro"><i></i><?=$metro?></div>
												<?endforeach;?>
											<?endif;?>
										</div>
										<div class="schedule_phone_email">
											<div class="schedule"><?=$arShop["SCHEDULE"]?></div>
											<div class="phone_email">
												<?if($arShop["PHONE"]):?>
													<?foreach($arShop["PHONE"] as $phone):?>
														<div class="phone"><a rel="nofollow" href="tel:<?=str_replace(array(' ', ',', '-', '(', ')'), '', $phone);?>"><?=$phone;?></a></div>
													<?endforeach;?>
												<?endif;?>
												<?if(strlen($arShop["EMAIL"])):?>
													<div class="email"><a rel="nofollow" href="mailto:<?=$arShop["EMAIL"]?>"><?=$arShop["EMAIL"]?></a></div>
												<?endif;?>
											</div>
										</div>
									</div>
								</div>
							<?endforeach;?>
						</div>
					</div>
				</div>
				<div class="clearboth"></div>
			<?endif;?>
			<?
		}
		else{
			LocalRedirect(SITE_DIR.'contacts/');
		}
	}

	function drawShopDetail($arShop, $arParams, $showMap="Y"){
		global $APPLICATION;
		$mapLAT = $mapLON = 0;
		$arPlacemarks = array();
		$arPhotos = array();

		if(is_array($arShop)){
			if(isset($arShop['IBLOCK_ID'])){
				$arShop['LIST_URL'] = $arShop['LIST_PAGE_URL'];
				$arShop['TITLE'] = (in_array('NAME', $arParams['FIELD_CODE']) ? $arShop['NAME'] : '');
				$arShop['ADDRESS'] = $arShop['DISPLAY_PROPERTIES']['ADDRESS']['VALUE'];
				$arShop['ADDRESS'] = $arShop['TITLE'].((strlen($arShop['TITLE']) && strlen($arShop['ADDRESS'])) ? ', ' : '').$arShop['ADDRESS'];
				$arShop['PHONE'] = $arShop['DISPLAY_PROPERTIES']['PHONE']['VALUE'];
				$arShop['EMAIL'] = $arShop['DISPLAY_PROPERTIES']['EMAIL']['VALUE'];
				if(strToLower($arShop['DISPLAY_PROPERTIES']['SCHEDULE']['VALUE']['TYPE']) == 'html'){
					$arShop['SCHEDULE'] = htmlspecialchars_decode($arShop['DISPLAY_PROPERTIES']['SCHEDULE']['~VALUE']['TEXT']);
				}
				else{
					$arShop['SCHEDULE'] = nl2br($arShop['DISPLAY_PROPERTIES']['SCHEDULE']['~VALUE']['TEXT']);
				}
				$arShop['URL'] = $arShop['DETAIL_PAGE_URL'];
				$arShop['METRO_PLACEMARK_HTML'] = '';
				if($arShop['METRO'] = $arShop['DISPLAY_PROPERTIES']['METRO']['VALUE']){
					if(!is_array($arShop['METRO'])){
						$arShop['METRO'] = array($arShop['METRO']);
					}
					foreach($arShop['METRO'] as $metro){
						$arShop['METRO_PLACEMARK_HTML'] .= '<div class="metro"><i></i>'.$metro.'</div>';
					}
				}
				$arShop['DESCRIPTION'] = $arShop['DETAIL_TEXT'];
				$imageID = ((in_array('DETAIL_PICTURE', $arParams['FIELD_CODE']) && $arShop["DETAIL_PICTURE"]['ID']) ? $arShop["DETAIL_PICTURE"]['ID'] : false);
				if($imageID){
					$arShop['IMAGE'] = CFile::ResizeImageGet($imageID, array('width' => 210, 'height' => 143), BX_RESIZE_IMAGE_EXACT);
					$arPhotos[] = array(
						'ID' => $arShop["DETAIL_PICTURE"]['ID'],
						'ORIGINAL' => ($arShop["DETAIL_PICTURE"]['SRC'] ? $arShop["DETAIL_PICTURE"]['SRC'] : $arShop['IMAGE']),
						'PREVIEW' => $arShop['IMAGE'],
						'DESCRIPTION' => (strlen($arShop["DETAIL_PICTURE"]['DESCRIPTION']) ? $arShop["DETAIL_PICTURE"]['DESCRIPTION'] : $arShop['ADDRESS']),
					);
				}
				if(is_array($arShop['DISPLAY_PROPERTIES']['MORE_PHOTOS']['VALUE'])) {
					foreach($arShop['DISPLAY_PROPERTIES']['MORE_PHOTOS']['VALUE'] as $i => $photoID){
						$arPhotos[] = array(
							'ID' => $photoID,
							'ORIGINAL' => CFile::GetPath($photoID),
							'PREVIEW' => CFile::ResizeImageGet($photoID, array('width' => 210, 'height' => 143), BX_RESIZE_IMAGE_EXACT),
							'DESCRIPTION' => $arShop['DISPLAY_PROPERTIES']['MORE_PHOTOS']['DESCRIPTION'][$i],
						);
					}
				}

				$arShop['GPS_S'] = false;
				$arShop['GPS_N'] = false;
				if($arStoreMap = explode(',', $arShop['DISPLAY_PROPERTIES']['MAP']['VALUE'])){
					$arShop['GPS_S'] = $arStoreMap[0];
					$arShop['GPS_N'] = $arStoreMap[1];
				}

				if($arShop['GPS_S'] && $arShop['GPS_N']){
					$mapLAT += $arShop['GPS_S'];
					$mapLON += $arShop['GPS_N'];
					$str_phones = '';
					if($arShop['PHONE'])
					{
						foreach($arShop['PHONE'] as $phone)
						{
							$str_phones .= '<div class="phone"><a rel="nofollow" href="tel:'.str_replace(array(' ', ',', '-', '(', ')'), '', $phone).'">'.$phone.'</a></div>';
						}
					}
					$arPlacemarks[] = array(
						"ID" => $arShop["ID"],
						"LAT" => $arShop['GPS_S'],
						"LON" => $arShop['GPS_N'],
						"TEXT" => $arShop["TITLE"],
						"HTML" => '<div class="title">'.(strlen($arShop["URL"]) ? '<a href="'.$arShop["URL"].'">' : '').$arShop["ADDRESS"].(strlen($arShop["URL"]) ? '</a>' : '').'</div><div class="info-content">'.($arShop['METRO'] ? $arShop['METRO_PLACEMARK_HTML'] : '').(strlen($arShop['SCHEDULE']) ? '<div class="schedule">'.$arShop['SCHEDULE'].'</div>' : '').$str_phones.(strlen($arShop['EMAIL']) ? '<div class="email"><a rel="nofollow" href="mailto:'.$arShop['EMAIL'].'">'.$arShop['EMAIL'].'</a></div>' : '').'</div>'.(strlen($arShop['URL']) ? '<a rel="nofollow" class="button" href="'.$arShop["URL"].'"><span>'.GetMessage('DETAIL').'</span></a>' : '')
					);
				}
			}
			else{
				$arShop["TITLE"] = htmlspecialchars_decode($arShop["TITLE"]);
				$arShop["ADDRESS"] = htmlspecialchars_decode($arShop["ADDRESS"]);
				$arShop["ADDRESS"] = (strlen($arShop["TITLE"]) ? $arShop["TITLE"].', ' : '').$arShop["ADDRESS"];
				$arShop["DESCRIPTION"] = htmlspecialchars_decode($arShop['DESCRIPTION']);
				$arShop['SCHEDULE'] = htmlspecialchars_decode($arShop['SCHEDULE']);
				if($arShop["IMAGE_ID"]  && $arShop["IMAGE_ID"] != "null"){
					$arShop['IMAGE'] = CFile::ResizeImageGet($arShop["IMAGE_ID"], array('width' => 210, 'height' => 143), BX_RESIZE_IMAGE_EXACT);
					$arPhotos[] = array(
						'ID' => $arShop["PREVIEW_PICTURE"]['ID'],
						'ORIGINAL' => CFile::GetPath($arShop["IMAGE_ID"]),
						'PREVIEW' => $arShop['IMAGE'],
						'DESCRIPTION' => (strlen($arShop["PREVIEW_PICTURE"]['DESCRIPTION']) ? $arShop["PREVIEW_PICTURE"]['DESCRIPTION'] : $arShop["ADDRESS"]),
					);
				}
				if(is_array($arShop['MORE_PHOTOS'])) {
					foreach($arShop['MORE_PHOTOS'] as $photoID){
						$arPhotos[] = array(
							'ID' => $photoID,
							'ORIGINAL' => CFile::GetPath($photoID),
							'PREVIEW' => CFile::ResizeImageGet($photoID, array('width' => 210, 'height' => 143), BX_RESIZE_IMAGE_EXACT),
							'DESCRIPTION' => $arShop["ADDRESS"],
						);
					}
				}

				$str_phones = '';
				if($arShop['PHONE'])
				{
					$arShop['PHONE'] = explode(",", $arShop['PHONE']);
					foreach($arShop['PHONE'] as $phone)
					{
						$str_phones .= '<div class="phone"><a rel="nofollow" href="tel:'.str_replace(array(' ', ',', '-', '(', ')'), '', $phone).'">'.$phone.'</a></div>';
					}
				}
				if($arShop['GPS_S'] && $arShop['GPS_N']){
					$mapLAT += $arShop['GPS_N'];
					$mapLON += $arShop['GPS_S'];
					$arPlacemarks[] = array(
						"ID" => $arShop["ID"],
						"LON" => $arShop['GPS_S'],
						"LAT" => $arShop['GPS_N'],
						"TEXT" => $arShop["TITLE"],
						"HTML" => '<div class="title">'.(strlen($arShop["URL"]) ? '<a href="'.$arShop["URL"].'">' : '').$arShop["ADDRESS"].(strlen($arShop["URL"]) ? '</a>' : '').'</div><div class="info-content">'.($arShop['METRO'] ? $arShop['METRO_PLACEMARK_HTML'] : '').(strlen($arShop['SCHEDULE']) ? '<div class="schedule">'.$arShop['SCHEDULE'].'</div>' : '').$str_phones.(strlen($arShop['EMAIL']) ? '<div class="email"><a rel="nofollow" href="mailto:'.$arShop['EMAIL'].'">'.$arShop['EMAIL'].'</a></div>' : '').'</div>'.(strlen($arShop['URL']) ? '<a rel="nofollow" class="button" href="'.$arShop["URL"].'"><span>'.GetMessage('DETAIL').'</span></a>' : '')
					);
				}
			}
			?>
			<?if(abs($mapLAT) > 0 && abs($mapLON) > 0 && $showMap=="Y"):?>
				<? 
					$arMapTypes = ['YANDEX', 'GOOGLE'];
					$sMapType = isset($arParams["MAP_TYPE_FROM_MODULE"]) && $arParams["MAP_TYPE_FROM_MODULE"] === "Y" 
						? $arMapTypes[\Bitrix\Main\Config\Option::get("aspro.optimus", "MAP_TYPE", "0", SITE_ID)]
						: $arMapTypes[$arParams["MAP_TYPE"]];
				?>
				<div class="contacts_map">
					<?if($sMapType === "GOOGLE"):?>
						<?$APPLICATION->IncludeComponent(
							"bitrix:map.google.view",
							"map",
							array(
								"INIT_MAP_TYPE" => "ROADMAP",
								"MAP_DATA" => serialize(array("google_lat" => $mapLAT, "google_lon" => $mapLON, "google_scale" => 16, "PLACEMARKS" => $arPlacemarks)),
								"MAP_WIDTH" => "100%",
								"MAP_HEIGHT" => "400",
								"CONTROLS" => array(
								),
								"OPTIONS" => array(
									0 => "ENABLE_DBLCLICK_ZOOM",
									1 => "ENABLE_DRAGGING",
								),
								"MAP_ID" => "",
								"ZOOM_BLOCK" => array(
									"POSITION" => "right center",
								),
								"COMPONENT_TEMPLATE" => "map",
								"API_KEY" => $arParams["GOOGLE_API_KEY"],
								"COMPOSITE_FRAME_MODE" => "A",
								"COMPOSITE_FRAME_TYPE" => "AUTO"
							),
							false, array("HIDE_ICONS" =>"Y")
						);?>
					<?else:?>
						<?$APPLICATION->IncludeComponent(
							"bitrix:map.yandex.view",
							"",
							array(
								"INIT_MAP_TYPE" => "ROADMAP",
								"MAP_DATA" => serialize(array("yandex_lat" => $mapLAT, "yandex_lon" => $mapLON, "yandex_scale" => 17, "PLACEMARKS" => $arPlacemarks)),
								"MAP_WIDTH" => "100%",
								"MAP_HEIGHT" => "400",
								"CONTROLS" => array(
									0 => "ZOOM",
									1 => "SMALLZOOM",
									3 => "TYPECONTROL",
									4 => "SCALELINE",
								),
								"OPTIONS" => array(
									0 => "ENABLE_DBLCLICK_ZOOM",
									1 => "ENABLE_DRAGGING",
								),
								"MAP_ID" => "",
								"ZOOM_BLOCK" => array(
									"POSITION" => "right center",
								),
								"COMPONENT_TEMPLATE" => "map",
								"API_KEY" => $arParams["GOOGLE_API_KEY"],
								"COMPOSITE_FRAME_MODE" => "A",
								"COMPOSITE_FRAME_TYPE" => "AUTO"
							),
							false, array("HIDE_ICONS" =>"Y")
						);?>
					<?endif;?>
				</div>
			<?endif;?>
			<div class="wrapper_inner shop detail">
				<div class="contacts_left">
					<div class="store_description">
						<?if(strlen($arShop['ADDRESS'])):?>
							<div class="store_property">
								<div class="title"><?=GetMessage('ADDRESS')?></div>
								<div class="value"><?=$arShop['ADDRESS']?></div>
							</div>
						<?endif;?>
						<?if($arShop['METRO']):?>
							<div class="store_property metro">
								<div class="title"><?=GetMessage('METRO')?></div>
								<?foreach($arShop['METRO'] as $metro):?>
									<div class="value"><i></i><?=$metro?></div>
								<?endforeach;?>
							</div>
						<?endif;?>
						<?if($arShop['PHONE']):?>
							<div class="store_property">
								<div class="title"><?=GetMessage('PHONE')?></div>
								<div class="value">
									<?foreach($arShop["PHONE"] as $phone):?>
										<div class="phone"><a rel="nofollow" href="tel:<?=str_replace(array(' ', ',', '-', '(', ')'), '', $phone);?>"><?=$phone;?></a></div>
									<?endforeach;?>
								</div>
							</div>
						<?endif;?>
						<?if(strlen($arShop['EMAIL'])):?>
							<div class="store_property">
								<div class="title">Email</div>
								<div class="value"><a rel="nofollow" href="mailto:<?=$arShop['EMAIL']?>"><?=$arShop['EMAIL']?></a></div>
							</div>
						<?endif;?>
						<?if(strlen($arShop['SCHEDULE'])):?>
							<div class="store_property">
								<div class="title"><?=GetMessage('SCHEDULE')?></div>
								<div class="value"><?=$arShop['SCHEDULE']?></div>
							</div>
						<?endif;?>
					</div>
				</div>
				<div class="contacts_right">
					<?if($arShop['DESCRIPTION']):?>
						<blockquote><?=$arShop['DESCRIPTION']?></blockquote>
					<?endif;?>
					<?if($arPhotos):?>
						<!-- noindex-->
						<?foreach($arPhotos as $arPhoto):?>
							<a class="fancy" data-fancybox-group="item_slider" title="<?=$arPhoto['DESCRIPTION']?>" href="<?=$arPhoto['ORIGINAL']?>"><img title="<?=$arPhoto['DESCRIPTION']?>" alt="<?=$arPhoto['DESCRIPTION']?>" src="<?=$arPhoto['PREVIEW']['src']?>"></a>
						<?endforeach;?>
						<!-- /noindex-->
					<?endif;?>
				</div>
				<div class="clearboth"></div>
				<!-- noindex--><a rel="nofollow" href="<?=$arShop['LIST_URL']?>" class="back"><?=GetMessage('BACK_STORE_LIST')?></a><!-- /noindex-->
			</div>
			<div class="clearboth"></div>
			<?
		}
		else{
			LocalRedirect(SITE_DIR.'contacts/');
		}
	}

	public static function showIconSvg($options){
		$text ='';

		$class = ( isset($options['CLASS']) ? $options['CLASS'] : 'phone' );
		$path = ( isset($options['PATH']) ? $options['PATH'] : '' );
		$title = ( isset($options['TITLE']) ? $options['TITLE'] : '' );
		$class_icon = ( isset($options['CLASS_ICON']) ? $options['CLASS_ICON'] : '' );
		$show_wrapper = ( isset($options['SHOW_WRAPPER']) ? $options['SHOW_WRAPPER'] : true );
		$binline = ( isset($options['INLINE']) ? $options['INLINE'] : true );

		if(self::checkContentFile($path))
		{
			static $svg_call;
			$iSvgID = ++$svg_call;

			$content = File::getFileContents($_SERVER['DOCUMENT_ROOT'].$path);

			$pattern = '/(<svg[^\>]*?|<path[^\>]*?)(id\s*=[\'\"].*?[\'\"])/i';
			$content = preg_replace($pattern, '${1}', $content);

			$pattern = '/(<svg[^>]*?>[^\/]*?)<metadata>.*?<\/metadata>/is';
			$content = preg_replace($pattern, '${1}', $content);

			$pattern = '/>(\s+?)</i';
			$content = preg_replace($pattern, '><', $content);

			$pattern = '/<style>.*?<\//is';
			preg_match_all($pattern, $content, $matches);
			$need = str_replace(array(' ', PHP_EOL), '', $matches[0]);
			$content = str_replace($matches[0], $need, $content);

			$content = str_replace('markID', $iSvgID, $content);

			if($show_wrapper)
				$text = '<i class="svg '.($binline ? 'inline ' : '').$class_icon.' svg-inline-'.$class.'" aria-hidden="true" '.($title ? 'title="'.$title.'"' : '').'>';

				$text .= $content;

			if($show_wrapper)
				$text .= '</i>';
		}

		return $text;
	}

	public static function checkContentFile($path){
		if(File::isFileExists($_SERVER['DOCUMENT_ROOT'].$path))
			$content = File::getFileContents($_SERVER['DOCUMENT_ROOT'].$path);
		return (!empty($content));
	}

	public static function nlo($code, $attrs = ''){
		static $arAvailable, $isStarted, $arNlo;

		if(!isset($arAvailable)){
			$arAvailable = array(
				'menu-catalog' => $GLOBALS['TEMPLATE_OPTIONS']['NLO_MENU']['CURRENT_VALUE'] === 'Y',
			);

			$arNlo = array();
		}

		if($arAvailable[$code]){
			if(
				isset($_REQUEST['nlo']) &&
				$_REQUEST['nlo'] === $code
			){
				if(isset($isStarted)){
					die();
				}

				$isStarted = true;
				$GLOBALS['APPLICATION']->RestartBuffer();
				return true;
			}
			else{
				if($arNlo[$code]){
					if($code == 'menu-catalog'){
						echo '</li>';
					}else{
						echo '</div>';
					}
						
				}
				else{
					$arNlo[$code] = true;
					if($code == 'menu-catalog'){
						echo '<li '.(strlen($attrs) ? $attrs : '').' data-nlo="'.$code.'">';
					}else{
						echo '<div '.(strlen($attrs) ? $attrs : '').' data-nlo="'.$code.'">';
					}					
				}

				return false;
			}
		}

		return true;
	}

	public static function ShowBasketWithCompareLink($class_link='top-btn hover', $class_icon='', $show_price = false, $class_block='', $force_show = false, $bottom = false){?>
		<?global $APPLICATION, $arTheme, $arBasketPrices;

		$arCounters = self::getBasketCounters();
		static $basket_call;
		$type_svg = '';
		if($class_icon)
		{
			$tmp = explode(' ', $class_icon);
			$type_svg = '_'.$tmp[0];
		}


		$iCalledID = ++$basket_call;?>
		<?if(($arTheme['ORDER_BASKET_VIEW']['VALUE'] == 'NORMAL' || ($arTheme['ORDER_BASKET_VIEW']['VALUE'] == 'BOTTOM' && $bottom)) || $force_show):?>
			<?Bitrix\Main\Page\Frame::getInstance()->startDynamicWithID('header-basket-with-compare-block'.$iCalledID);?>
				<?if($arTheme['CATALOG_COMPARE']['VALUE'] != 'N'):?>
					<?
						$compare_items = "";
						ob_start();
						$APPLICATION->IncludeComponent("bitrix:main.include", ".default",
							array(
								"COMPONENT_TEMPLATE" => ".default",
								"PATH" => SITE_DIR."ajax/show_compare_preview_top.php",
								"AREA_FILE_SHOW" => "file",
								"AREA_FILE_SUFFIX" => "",
								"AREA_FILE_RECURSIVE" => "Y",
								"CLASS_LINK" => $class_link,
								"CLASS_ICON" => $class_icon,
								"FROM_MODULE" => "Y",
								"EDIT_TEMPLATE" => "standard.php",
							),
							false, array('HIDE_ICONS' => 'Y')
						);
						$compare_items = trim(ob_get_contents());
						ob_end_clean();
					?>
					<div class="basket-link compare<?= strpos($compare_items, 'count') === false ? ' no-items' : null; ?>">
						<?= $compare_items; ?>
					</div>
				<?endif;?>
				<?if(self::getShowBasket()):?>
					<!-- noindex -->
					<?if($class_block):?>
						<span class="<?=$class_block;?>">
					<?endif;?>
						<div class="basket-link delay<?= !$arBasketPrices['DELAY_COUNT'] ? ' no-items' : null; ?>">
							<div class="wraps_icon_block delay">
								<a rel="nofollow" 
									class="link"
									href="<?= $arCounters['DELAY']['HREF']; ?>#delayed" title="<?=$arBasketPrices['DELAY_SUMM_TITLE'];?>"
								></a>
								<span class="js-basket-block">
									<span class="title dark_link"><?=Loc::getMessage('JS_BASKET_DELAY_TITLE');?></span>
									<span class="count <?= $arBasketPrices['DELAY_COUNT'] === 0 ? 'hidden' : null; ?>">
										<span>
											<div class="items">
												<div class="text"><?= $arBasketPrices['DELAY_COUNT']; ?></div>
											</div>
										</span>
									</span>
								</span>
							</div>
						</div>
					<?if($class_block):?>
						</span>
					<?endif;?>
					<?if($class_block):?>
						<span class="<?=$class_block;?>">
					<?endif;?>
						<div class="basket-link basket<?= !$arBasketPrices['BASKET_COUNT'] ? ' no-items' : null; ?>" >
							<div class="wraps_icon_block basket">
								<a rel="nofollow" 
									class="link"
									href="<?= $arCounters['READY']['HREF']; ?>" 
									title="<?= $arBasketPrices['BASKET_SUMM_TITLE']; ?>"
								></a>
								<span class="js-basket-block">
									<?if($show_price):?>
										<span class="wrap">
									<?endif;?>
									<span class="title dark_link"><?=Loc::getMessage('JS_BASKET_TITLE');?><span class="count"><?=$arBasketPrices['BASKET_COUNT'];?></span></span>
									<?if($show_price):?>
										<span class="prices"><?=($arBasketPrices['BASKET_COUNT'] ? $arBasketPrices['BASKET_SUMM'] : $arBasketPrices['BASKET_SUMM_TITLE_SMALL'] )?></span>
										</span>
									<?endif;?>
									<span class="count <?= $arBasketPrices['BASKET_COUNT'] === 0 ? 'hidden' : null; ?>">
										<span>
											<div class="items">
												<div class="text"><?=$arBasketPrices['BASKET_COUNT'];?></div>
											</div>
										</span>
									</span>
								</span>
							</div>
						</div>
					<?if($class_block):?>
						</span>
					<?endif;?>
					<!-- /noindex -->
				<?endif;?>
			<?Bitrix\Main\Page\Frame::getInstance()->finishDynamicWithID('header-basket-with-compare-block'.$iCalledID, '');?>
		<?endif;?>
	<?}

	public static function GetCurrentSectionElementFilter(&$arVariables, &$arParams, $CurrentSectionID = false){
		$arFilter = array('IBLOCK_ID' => $arParams['IBLOCK_ID'], 'INCLUDE_SUBSECTIONS' => 'N');
		if($arParams['CHECK_DATES'] == 'Y'){
			$arFilter = array_merge($arFilter, array('ACTIVE' => 'Y', 'SECTION_GLOBAL_ACTIVE' => 'Y', 'ACTIVE_DATE' => 'Y'));
		}
		if(!$arFilter['SECTION_ID'] = ($CurrentSectionID !== false ? $CurrentSectionID : ($arVariables['SECTION_ID'] ? $arVariables['SECTION_ID'] : false))){
			unset($arFilter['SECTION_GLOBAL_ACTIVE']);
		}
		if(strlen($arParams['FILTER_NAME'])){
			$GLOBALS[$arParams['FILTER_NAME']] = (array)$GLOBALS[$arParams['FILTER_NAME']];
			foreach($arUnsetFilterFields = array('SECTION_ID', 'SECTION_CODE', 'SECTION_ACTIVE', 'SECTION_GLOBAL_ACTIVE') as $filterUnsetField){
				foreach($GLOBALS[$arParams['FILTER_NAME']] as $filterField => $filterValue){
					if(($p = strpos($filterUnsetField, $filterField)) !== false && $p < 2){
						unset($GLOBALS[$arParams['FILTER_NAME']][$filterField]);
					}
				}
			}
			if($GLOBALS[$arParams['FILTER_NAME']]){
				$arFilter = array_merge($arFilter, $GLOBALS[$arParams['FILTER_NAME']]);
			}
		}
		return $arFilter;
	}

	public static function GetCurrentSectionSubSectionFilter(&$arVariables, &$arParams, $CurrentSectionID = false){
		$arFilter = array('IBLOCK_ID' => $arParams['IBLOCK_ID']);
		if($arParams['CHECK_DATES'] == 'Y')
		{
			$arFilter = array_merge($arFilter, array('ACTIVE' => 'Y', 'GLOBAL_ACTIVE' => 'Y', 'ACTIVE_DATE' => 'Y'));
		}
		if(!$arFilter['SECTION_ID'] = ($CurrentSectionID !== false ? $CurrentSectionID : ($arVariables['SECTION_ID'] ? $arVariables['SECTION_ID'] : false)))
		{
			$arFilter['INCLUDE_SUBSECTIONS'] = 'N';array_merge($arFilter, array('INCLUDE_SUBSECTIONS' => 'N', 'DEPTH_LEVEL' => '1'));
			$arFilter['DEPTH_LEVEL'] = '1';
			unset($arFilter['GLOBAL_ACTIVE']);
		}
		return $arFilter;
	}

	public static function getFieldImageData(array &$arItem, array $arKeys, $entity = 'ELEMENT', $ipropertyKey = 'IPROPERTY_VALUES'){
		if (empty($arItem) || empty($arKeys))
            return;

        $entity = (string)$entity;
        $ipropertyKey = (string)$ipropertyKey;

        foreach ($arKeys as $fieldName)
        {
            if(!isset($arItem[$fieldName]) || (!isset($arItem['~'.$fieldName]) || !$arItem['~'.$fieldName]))
                continue;
            $imageData = false;
            $imageId = (int)$arItem['~'.$fieldName];
            if ($imageId > 0)
                $imageData = \CFile::getFileArray($imageId);
            unset($imageId);
            if (is_array($imageData))
            {
                if (isset($imageData['SAFE_SRC']))
                {
                    $imageData['UNSAFE_SRC'] = $imageData['SRC'];
                    $imageData['SRC'] = $imageData['SAFE_SRC'];
                }
                else
                {
                    $imageData['UNSAFE_SRC'] = $imageData['SRC'];
                    $imageData['SRC'] = \CHTTP::urnEncode($imageData['SRC'], 'UTF-8');
                }
                $imageData['ALT'] = '';
                $imageData['TITLE'] = '';

                if ($ipropertyKey != '' && isset($arItem[$ipropertyKey]) && is_array($arItem[$ipropertyKey]))
                {
                    $entityPrefix = $entity.'_'.$fieldName;
                    if (isset($arItem[$ipropertyKey][$entityPrefix.'_FILE_ALT']))
                        $imageData['ALT'] = $arItem[$ipropertyKey][$entityPrefix.'_FILE_ALT'];
                    if (isset($arItem[$ipropertyKey][$entityPrefix.'_FILE_TITLE']))
                        $imageData['TITLE'] = $arItem[$ipropertyKey][$entityPrefix.'_FILE_TITLE'];
                    unset($entityPrefix);
                }
                if ($imageData['ALT'] == '' && isset($arItem['NAME']))
                    $imageData['ALT'] = $arItem['NAME'];
                if ($imageData['TITLE'] == '' && isset($arItem['NAME']))
                    $imageData['TITLE'] = $arItem['NAME'];
            }
            $arItem[$fieldName] = $imageData;
            unset($imageData);
        }

        unset($fieldName);
	}

	public static function GetCurrentSectionFilter(&$arVariables, &$arParams){
		$arFilter = array('IBLOCK_ID' => $arParams['IBLOCK_ID']);
		if($arParams['CHECK_DATES'] == 'Y'){
			$arFilter = array_merge($arFilter, array('ACTIVE' => 'Y', 'GLOBAL_ACTIVE' => 'Y', 'ACTIVE_DATE' => 'Y'));
		}
		if($arVariables['SECTION_ID']){
			$arFilter['ID'] = $arVariables['SECTION_ID'];
		}
		if(strlen($arVariables['SECTION_CODE'])){
			$arFilter['CODE'] = $arVariables['SECTION_CODE'];
		}
		if(!$arVariables['SECTION_ID'] && !strlen($arFilter['CODE'])){
			$arFilter['ID'] = 0; // if section not found
		}
		return $arFilter;
	}
}
?>RTIBE