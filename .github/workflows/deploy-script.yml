name: Deploy Project by Syncing

on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install rsync on runner
        run: sudo apt-get update && sudo apt-get install -y rsync

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_PRIVATE }}

      - name: Sync Project to Server and Deploy
        run: |
          # Установить rsync на сервере, если он не установлен
          ssh -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.VPS_HOST }} "which rsync || (sudo apt-get update && sudo apt-get install -y rsync)"
          
          # Проверить существование директории проекта и создать, если не существует
          ssh -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.VPS_HOST }} "mkdir -p ${{ secrets.DEFAULT_PATH }}/${{ secrets.PROJECT_PATH }}"
          
          # Синхронизировать проект с использованием rsync
          rsync -avz --exclude='.git/' --exclude='*.tar.gz' ${{ github.workspace }}/ ${{ secrets.USERNAME }}@${{ secrets.VPS_HOST }}:${{ secrets.DEFAULT_PATH }}/${{ secrets.PROJECT_PATH }}
          
          # Выполнить команды для развертывания
          ssh -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.VPS_HOST }} << EOF
            cd ${{ secrets.DEFAULT_PATH }}/${{ secrets.PROJECT_PATH }}
            export MYSQL_HOST=${{ secrets.MYSQL_HOST }}
            export MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}
            export MYSQL_USER=${{ secrets.MYSQL_USER }}
            export MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
            export MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}
            export OUTPUT_PORT=${{ secrets.OUTPUT_PORT }}
            docker-compose down
            docker-compose build --no-cache
            docker-compose up -d
          EOF
