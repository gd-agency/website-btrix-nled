name: Deploy Project Conditionally

on:
  push:
    branches:
      - main # Или ваша ветка для деплоя

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_PRIVATE }}

      # Используйте SSH для проверки наличия директории и выберите метод деплоя непосредственно в команде SSH
      - name: Deploy Project Using Condition
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.VPS_HOST }} '
            if [ ! -d "${{ secrets.DEFAULT_PATH }}${{ secrets.PROJECT_PATH }}" ]; then
              mkdir -p "${{ secrets.DEFAULT_PATH }}${{ secrets.PROJECT_PATH }}";
              # Полное копирование, если директория не существовала
              tar -czf - . | ssh -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.VPS_HOST }} "tar -xzf - -C ${{ secrets.DEFAULT_PATH }}${{ secrets.PROJECT_PATH }}"
            else
              # Использование rsync, если директория существует
              rsync -avz --exclude='.git/' ./ ${{ secrets.USERNAME }}@${{ secrets.VPS_HOST }}:${{ secrets.DEFAULT_PATH }}${{ secrets.PROJECT_PATH }}
            fi
            # Перезапуск проекта
            cd ${{ secrets.DEFAULT_PATH }}${{ secrets.PROJECT_PATH }}
            echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" > .env
            echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
            echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
            echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
            echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
            echo "OUTPUT_PORT=${{ secrets.OUTPUT_PORT }}" >> .env
            docker-compose down
            docker-compose build --no-cache
            docker-compose up -d
          '
